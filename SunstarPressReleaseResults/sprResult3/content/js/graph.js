/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "maxY": 7983.0, "series": [{"data": [[0.0, 10.0], [0.1, 10.0], [0.2, 10.0], [0.3, 10.0], [0.4, 11.0], [0.5, 11.0], [0.6, 11.0], [0.7, 11.0], [0.8, 11.0], [0.9, 11.0], [1.0, 11.0], [1.1, 11.0], [1.2, 11.0], [1.3, 11.0], [1.4, 11.0], [1.5, 11.0], [1.6, 11.0], [1.7, 11.0], [1.8, 11.0], [1.9, 11.0], [2.0, 11.0], [2.1, 11.0], [2.2, 11.0], [2.3, 11.0], [2.4, 11.0], [2.5, 12.0], [2.6, 12.0], [2.7, 12.0], [2.8, 12.0], [2.9, 12.0], [3.0, 12.0], [3.1, 12.0], [3.2, 12.0], [3.3, 12.0], [3.4, 12.0], [3.5, 12.0], [3.6, 12.0], [3.7, 12.0], [3.8, 12.0], [3.9, 12.0], [4.0, 12.0], [4.1, 13.0], [4.2, 13.0], [4.3, 13.0], [4.4, 13.0], [4.5, 13.0], [4.6, 13.0], [4.7, 13.0], [4.8, 13.0], [4.9, 13.0], [5.0, 13.0], [5.1, 13.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 13.0], [5.6, 13.0], [5.7, 13.0], [5.8, 13.0], [5.9, 13.0], [6.0, 13.0], [6.1, 13.0], [6.2, 13.0], [6.3, 13.0], [6.4, 13.0], [6.5, 13.0], [6.6, 13.0], [6.7, 13.0], [6.8, 13.0], [6.9, 13.0], [7.0, 13.0], [7.1, 13.0], [7.2, 13.0], [7.3, 13.0], [7.4, 13.0], [7.5, 14.0], [7.6, 14.0], [7.7, 14.0], [7.8, 14.0], [7.9, 14.0], [8.0, 14.0], [8.1, 14.0], [8.2, 14.0], [8.3, 14.0], [8.4, 14.0], [8.5, 14.0], [8.6, 14.0], [8.7, 14.0], [8.8, 14.0], [8.9, 14.0], [9.0, 14.0], [9.1, 14.0], [9.2, 14.0], [9.3, 14.0], [9.4, 14.0], [9.5, 14.0], [9.6, 14.0], [9.7, 14.0], [9.8, 14.0], [9.9, 14.0], [10.0, 14.0], [10.1, 14.0], [10.2, 14.0], [10.3, 14.0], [10.4, 14.0], [10.5, 14.0], [10.6, 14.0], [10.7, 14.0], [10.8, 14.0], [10.9, 14.0], [11.0, 14.0], [11.1, 14.0], [11.2, 14.0], [11.3, 14.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 15.0], [13.1, 15.0], [13.2, 15.0], [13.3, 15.0], [13.4, 15.0], [13.5, 15.0], [13.6, 15.0], [13.7, 15.0], [13.8, 15.0], [13.9, 15.0], [14.0, 15.0], [14.1, 15.0], [14.2, 15.0], [14.3, 15.0], [14.4, 15.0], [14.5, 15.0], [14.6, 15.0], [14.7, 15.0], [14.8, 15.0], [14.9, 15.0], [15.0, 15.0], [15.1, 15.0], [15.2, 15.0], [15.3, 15.0], [15.4, 15.0], [15.5, 15.0], [15.6, 15.0], [15.7, 15.0], [15.8, 15.0], [15.9, 15.0], [16.0, 15.0], [16.1, 15.0], [16.2, 15.0], [16.3, 15.0], [16.4, 15.0], [16.5, 15.0], [16.6, 15.0], [16.7, 15.0], [16.8, 15.0], [16.9, 15.0], [17.0, 15.0], [17.1, 15.0], [17.2, 15.0], [17.3, 15.0], [17.4, 15.0], [17.5, 16.0], [17.6, 16.0], [17.7, 16.0], [17.8, 16.0], [17.9, 16.0], [18.0, 16.0], [18.1, 16.0], [18.2, 16.0], [18.3, 16.0], [18.4, 16.0], [18.5, 16.0], [18.6, 16.0], [18.7, 16.0], [18.8, 16.0], [18.9, 16.0], [19.0, 16.0], [19.1, 16.0], [19.2, 16.0], [19.3, 16.0], [19.4, 16.0], [19.5, 16.0], [19.6, 16.0], [19.7, 17.0], [19.8, 17.0], [19.9, 17.0], [20.0, 17.0], [20.1, 17.0], [20.2, 17.0], [20.3, 17.0], [20.4, 17.0], [20.5, 17.0], [20.6, 17.0], [20.7, 17.0], [20.8, 17.0], [20.9, 17.0], [21.0, 17.0], [21.1, 17.0], [21.2, 17.0], [21.3, 17.0], [21.4, 18.0], [21.5, 18.0], [21.6, 18.0], [21.7, 18.0], [21.8, 18.0], [21.9, 18.0], [22.0, 18.0], [22.1, 18.0], [22.2, 18.0], [22.3, 18.0], [22.4, 18.0], [22.5, 18.0], [22.6, 18.0], [22.7, 18.0], [22.8, 18.0], [22.9, 18.0], [23.0, 18.0], [23.1, 18.0], [23.2, 18.0], [23.3, 18.0], [23.4, 19.0], [23.5, 19.0], [23.6, 19.0], [23.7, 19.0], [23.8, 19.0], [23.9, 19.0], [24.0, 19.0], [24.1, 19.0], [24.2, 19.0], [24.3, 19.0], [24.4, 19.0], [24.5, 19.0], [24.6, 19.0], [24.7, 19.0], [24.8, 19.0], [24.9, 19.0], [25.0, 19.0], [25.1, 19.0], [25.2, 19.0], [25.3, 19.0], [25.4, 19.0], [25.5, 19.0], [25.6, 19.0], [25.7, 19.0], [25.8, 19.0], [25.9, 19.0], [26.0, 19.0], [26.1, 19.0], [26.2, 19.0], [26.3, 19.0], [26.4, 20.0], [26.5, 20.0], [26.6, 20.0], [26.7, 20.0], [26.8, 20.0], [26.9, 20.0], [27.0, 20.0], [27.1, 20.0], [27.2, 20.0], [27.3, 20.0], [27.4, 20.0], [27.5, 20.0], [27.6, 20.0], [27.7, 20.0], [27.8, 20.0], [27.9, 20.0], [28.0, 20.0], [28.1, 20.0], [28.2, 20.0], [28.3, 20.0], [28.4, 20.0], [28.5, 20.0], [28.6, 20.0], [28.7, 20.0], [28.8, 20.0], [28.9, 20.0], [29.0, 20.0], [29.1, 20.0], [29.2, 20.0], [29.3, 20.0], [29.4, 20.0], [29.5, 20.0], [29.6, 20.0], [29.7, 20.0], [29.8, 20.0], [29.9, 20.0], [30.0, 21.0], [30.1, 21.0], [30.2, 21.0], [30.3, 21.0], [30.4, 21.0], [30.5, 21.0], [30.6, 21.0], [30.7, 21.0], [30.8, 21.0], [30.9, 21.0], [31.0, 21.0], [31.1, 21.0], [31.2, 21.0], [31.3, 21.0], [31.4, 21.0], [31.5, 21.0], [31.6, 21.0], [31.7, 21.0], [31.8, 21.0], [31.9, 21.0], [32.0, 21.0], [32.1, 21.0], [32.2, 21.0], [32.3, 21.0], [32.4, 21.0], [32.5, 21.0], [32.6, 21.0], [32.7, 21.0], [32.8, 21.0], [32.9, 21.0], [33.0, 21.0], [33.1, 21.0], [33.2, 21.0], [33.3, 21.0], [33.4, 21.0], [33.5, 21.0], [33.6, 21.0], [33.7, 21.0], [33.8, 21.0], [33.9, 21.0], [34.0, 22.0], [34.1, 22.0], [34.2, 22.0], [34.3, 22.0], [34.4, 22.0], [34.5, 22.0], [34.6, 22.0], [34.7, 22.0], [34.8, 22.0], [34.9, 22.0], [35.0, 22.0], [35.1, 22.0], [35.2, 22.0], [35.3, 22.0], [35.4, 22.0], [35.5, 22.0], [35.6, 22.0], [35.7, 22.0], [35.8, 22.0], [35.9, 22.0], [36.0, 22.0], [36.1, 22.0], [36.2, 22.0], [36.3, 22.0], [36.4, 22.0], [36.5, 22.0], [36.6, 22.0], [36.7, 22.0], [36.8, 22.0], [36.9, 22.0], [37.0, 22.0], [37.1, 22.0], [37.2, 22.0], [37.3, 22.0], [37.4, 22.0], [37.5, 22.0], [37.6, 22.0], [37.7, 22.0], [37.8, 22.0], [37.9, 22.0], [38.0, 22.0], [38.1, 23.0], [38.2, 23.0], [38.3, 23.0], [38.4, 23.0], [38.5, 23.0], [38.6, 23.0], [38.7, 23.0], [38.8, 23.0], [38.9, 23.0], [39.0, 23.0], [39.1, 23.0], [39.2, 23.0], [39.3, 23.0], [39.4, 23.0], [39.5, 23.0], [39.6, 23.0], [39.7, 23.0], [39.8, 23.0], [39.9, 23.0], [40.0, 23.0], [40.1, 23.0], [40.2, 23.0], [40.3, 23.0], [40.4, 23.0], [40.5, 23.0], [40.6, 23.0], [40.7, 23.0], [40.8, 23.0], [40.9, 23.0], [41.0, 23.0], [41.1, 23.0], [41.2, 23.0], [41.3, 23.0], [41.4, 23.0], [41.5, 23.0], [41.6, 23.0], [41.7, 23.0], [41.8, 23.0], [41.9, 23.0], [42.0, 23.0], [42.1, 23.0], [42.2, 23.0], [42.3, 23.0], [42.4, 23.0], [42.5, 24.0], [42.6, 24.0], [42.7, 24.0], [42.8, 24.0], [42.9, 24.0], [43.0, 24.0], [43.1, 24.0], [43.2, 24.0], [43.3, 24.0], [43.4, 24.0], [43.5, 24.0], [43.6, 24.0], [43.7, 24.0], [43.8, 24.0], [43.9, 24.0], [44.0, 24.0], [44.1, 24.0], [44.2, 24.0], [44.3, 24.0], [44.4, 24.0], [44.5, 24.0], [44.6, 24.0], [44.7, 24.0], [44.8, 24.0], [44.9, 24.0], [45.0, 24.0], [45.1, 24.0], [45.2, 24.0], [45.3, 24.0], [45.4, 24.0], [45.5, 24.0], [45.6, 24.0], [45.7, 24.0], [45.8, 24.0], [45.9, 24.0], [46.0, 24.0], [46.1, 24.0], [46.2, 24.0], [46.3, 24.0], [46.4, 24.0], [46.5, 24.0], [46.6, 24.0], [46.7, 24.0], [46.8, 24.0], [46.9, 24.0], [47.0, 24.0], [47.1, 24.0], [47.2, 25.0], [47.3, 25.0], [47.4, 25.0], [47.5, 25.0], [47.6, 25.0], [47.7, 25.0], [47.8, 25.0], [47.9, 25.0], [48.0, 25.0], [48.1, 25.0], [48.2, 25.0], [48.3, 25.0], [48.4, 25.0], [48.5, 25.0], [48.6, 25.0], [48.7, 25.0], [48.8, 25.0], [48.9, 25.0], [49.0, 25.0], [49.1, 25.0], [49.2, 25.0], [49.3, 25.0], [49.4, 25.0], [49.5, 25.0], [49.6, 25.0], [49.7, 25.0], [49.8, 25.0], [49.9, 25.0], [50.0, 25.0], [50.1, 25.0], [50.2, 25.0], [50.3, 25.0], [50.4, 25.0], [50.5, 25.0], [50.6, 25.0], [50.7, 25.0], [50.8, 25.0], [50.9, 25.0], [51.0, 25.0], [51.1, 25.0], [51.2, 25.0], [51.3, 25.0], [51.4, 25.0], [51.5, 25.0], [51.6, 25.0], [51.7, 25.0], [51.8, 25.0], [51.9, 25.0], [52.0, 25.0], [52.1, 25.0], [52.2, 26.0], [52.3, 26.0], [52.4, 26.0], [52.5, 26.0], [52.6, 26.0], [52.7, 26.0], [52.8, 26.0], [52.9, 26.0], [53.0, 26.0], [53.1, 26.0], [53.2, 26.0], [53.3, 26.0], [53.4, 26.0], [53.5, 26.0], [53.6, 26.0], [53.7, 26.0], [53.8, 26.0], [53.9, 26.0], [54.0, 26.0], [54.1, 26.0], [54.2, 26.0], [54.3, 26.0], [54.4, 26.0], [54.5, 26.0], [54.6, 26.0], [54.7, 26.0], [54.8, 26.0], [54.9, 26.0], [55.0, 26.0], [55.1, 26.0], [55.2, 26.0], [55.3, 26.0], [55.4, 26.0], [55.5, 26.0], [55.6, 26.0], [55.7, 26.0], [55.8, 26.0], [55.9, 26.0], [56.0, 26.0], [56.1, 26.0], [56.2, 26.0], [56.3, 26.0], [56.4, 26.0], [56.5, 26.0], [56.6, 26.0], [56.7, 27.0], [56.8, 27.0], [56.9, 27.0], [57.0, 27.0], [57.1, 27.0], [57.2, 27.0], [57.3, 27.0], [57.4, 27.0], [57.5, 27.0], [57.6, 27.0], [57.7, 27.0], [57.8, 27.0], [57.9, 27.0], [58.0, 27.0], [58.1, 27.0], [58.2, 27.0], [58.3, 27.0], [58.4, 27.0], [58.5, 27.0], [58.6, 27.0], [58.7, 27.0], [58.8, 27.0], [58.9, 27.0], [59.0, 27.0], [59.1, 27.0], [59.2, 27.0], [59.3, 27.0], [59.4, 27.0], [59.5, 27.0], [59.6, 27.0], [59.7, 27.0], [59.8, 27.0], [59.9, 27.0], [60.0, 27.0], [60.1, 27.0], [60.2, 27.0], [60.3, 27.0], [60.4, 27.0], [60.5, 27.0], [60.6, 27.0], [60.7, 27.0], [60.8, 27.0], [60.9, 28.0], [61.0, 28.0], [61.1, 28.0], [61.2, 28.0], [61.3, 28.0], [61.4, 28.0], [61.5, 28.0], [61.6, 28.0], [61.7, 28.0], [61.8, 28.0], [61.9, 28.0], [62.0, 28.0], [62.1, 28.0], [62.2, 28.0], [62.3, 28.0], [62.4, 28.0], [62.5, 28.0], [62.6, 28.0], [62.7, 28.0], [62.8, 28.0], [62.9, 28.0], [63.0, 28.0], [63.1, 28.0], [63.2, 28.0], [63.3, 28.0], [63.4, 28.0], [63.5, 28.0], [63.6, 28.0], [63.7, 28.0], [63.8, 28.0], [63.9, 28.0], [64.0, 28.0], [64.1, 28.0], [64.2, 28.0], [64.3, 28.0], [64.4, 28.0], [64.5, 28.0], [64.6, 28.0], [64.7, 28.0], [64.8, 29.0], [64.9, 29.0], [65.0, 29.0], [65.1, 29.0], [65.2, 29.0], [65.3, 29.0], [65.4, 29.0], [65.5, 29.0], [65.6, 29.0], [65.7, 29.0], [65.8, 29.0], [65.9, 29.0], [66.0, 29.0], [66.1, 29.0], [66.2, 29.0], [66.3, 29.0], [66.4, 29.0], [66.5, 29.0], [66.6, 29.0], [66.7, 29.0], [66.8, 29.0], [66.9, 29.0], [67.0, 29.0], [67.1, 29.0], [67.2, 29.0], [67.3, 29.0], [67.4, 29.0], [67.5, 29.0], [67.6, 29.0], [67.7, 29.0], [67.8, 29.0], [67.9, 29.0], [68.0, 29.0], [68.1, 30.0], [68.2, 30.0], [68.3, 30.0], [68.4, 30.0], [68.5, 30.0], [68.6, 30.0], [68.7, 30.0], [68.8, 30.0], [68.9, 30.0], [69.0, 30.0], [69.1, 30.0], [69.2, 30.0], [69.3, 30.0], [69.4, 30.0], [69.5, 30.0], [69.6, 30.0], [69.7, 30.0], [69.8, 30.0], [69.9, 30.0], [70.0, 30.0], [70.1, 30.0], [70.2, 30.0], [70.3, 30.0], [70.4, 30.0], [70.5, 30.0], [70.6, 30.0], [70.7, 31.0], [70.8, 31.0], [70.9, 31.0], [71.0, 31.0], [71.1, 31.0], [71.2, 31.0], [71.3, 31.0], [71.4, 31.0], [71.5, 31.0], [71.6, 31.0], [71.7, 31.0], [71.8, 31.0], [71.9, 31.0], [72.0, 31.0], [72.1, 31.0], [72.2, 31.0], [72.3, 31.0], [72.4, 31.0], [72.5, 31.0], [72.6, 31.0], [72.7, 31.0], [72.8, 32.0], [72.9, 32.0], [73.0, 32.0], [73.1, 32.0], [73.2, 32.0], [73.3, 32.0], [73.4, 32.0], [73.5, 32.0], [73.6, 32.0], [73.7, 32.0], [73.8, 32.0], [73.9, 32.0], [74.0, 32.0], [74.1, 32.0], [74.2, 32.0], [74.3, 32.0], [74.4, 32.0], [74.5, 33.0], [74.6, 33.0], [74.7, 33.0], [74.8, 33.0], [74.9, 33.0], [75.0, 33.0], [75.1, 33.0], [75.2, 33.0], [75.3, 33.0], [75.4, 33.0], [75.5, 33.0], [75.6, 33.0], [75.7, 33.0], [75.8, 33.0], [75.9, 34.0], [76.0, 34.0], [76.1, 34.0], [76.2, 34.0], [76.3, 34.0], [76.4, 34.0], [76.5, 34.0], [76.6, 34.0], [76.7, 34.0], [76.8, 34.0], [76.9, 34.0], [77.0, 34.0], [77.1, 35.0], [77.2, 35.0], [77.3, 35.0], [77.4, 35.0], [77.5, 35.0], [77.6, 35.0], [77.7, 35.0], [77.8, 35.0], [77.9, 35.0], [78.0, 35.0], [78.1, 35.0], [78.2, 36.0], [78.3, 36.0], [78.4, 36.0], [78.5, 36.0], [78.6, 36.0], [78.7, 36.0], [78.8, 36.0], [78.9, 36.0], [79.0, 36.0], [79.1, 37.0], [79.2, 37.0], [79.3, 37.0], [79.4, 37.0], [79.5, 37.0], [79.6, 37.0], [79.7, 37.0], [79.8, 37.0], [79.9, 38.0], [80.0, 38.0], [80.1, 38.0], [80.2, 38.0], [80.3, 38.0], [80.4, 38.0], [80.5, 39.0], [80.6, 39.0], [80.7, 39.0], [80.8, 39.0], [80.9, 39.0], [81.0, 40.0], [81.1, 40.0], [81.2, 40.0], [81.3, 40.0], [81.4, 40.0], [81.5, 41.0], [81.6, 41.0], [81.7, 41.0], [81.8, 41.0], [81.9, 42.0], [82.0, 42.0], [82.1, 42.0], [82.2, 42.0], [82.3, 43.0], [82.4, 43.0], [82.5, 43.0], [82.6, 44.0], [82.7, 44.0], [82.8, 44.0], [82.9, 44.0], [83.0, 45.0], [83.1, 45.0], [83.2, 46.0], [83.3, 46.0], [83.4, 46.0], [83.5, 46.0], [83.6, 47.0], [83.7, 47.0], [83.8, 47.0], [83.9, 48.0], [84.0, 48.0], [84.1, 48.0], [84.2, 48.0], [84.3, 49.0], [84.4, 49.0], [84.5, 49.0], [84.6, 49.0], [84.7, 49.0], [84.8, 50.0], [84.9, 50.0], [85.0, 50.0], [85.1, 50.0], [85.2, 50.0], [85.3, 51.0], [85.4, 51.0], [85.5, 51.0], [85.6, 51.0], [85.7, 51.0], [85.8, 51.0], [85.9, 52.0], [86.0, 52.0], [86.1, 52.0], [86.2, 52.0], [86.3, 52.0], [86.4, 52.0], [86.5, 52.0], [86.6, 53.0], [86.7, 53.0], [86.8, 53.0], [86.9, 53.0], [87.0, 53.0], [87.1, 53.0], [87.2, 53.0], [87.3, 54.0], [87.4, 54.0], [87.5, 54.0], [87.6, 54.0], [87.7, 54.0], [87.8, 54.0], [87.9, 54.0], [88.0, 55.0], [88.1, 55.0], [88.2, 55.0], [88.3, 55.0], [88.4, 55.0], [88.5, 55.0], [88.6, 55.0], [88.7, 56.0], [88.8, 56.0], [88.9, 56.0], [89.0, 56.0], [89.1, 56.0], [89.2, 56.0], [89.3, 56.0], [89.4, 56.0], [89.5, 57.0], [89.6, 57.0], [89.7, 57.0], [89.8, 57.0], [89.9, 57.0], [90.0, 57.0], [90.1, 57.0], [90.2, 58.0], [90.3, 58.0], [90.4, 58.0], [90.5, 58.0], [90.6, 58.0], [90.7, 58.0], [90.8, 58.0], [90.9, 59.0], [91.0, 59.0], [91.1, 59.0], [91.2, 59.0], [91.3, 59.0], [91.4, 59.0], [91.5, 60.0], [91.6, 60.0], [91.7, 60.0], [91.8, 60.0], [91.9, 60.0], [92.0, 60.0], [92.1, 60.0], [92.2, 61.0], [92.3, 61.0], [92.4, 61.0], [92.5, 61.0], [92.6, 61.0], [92.7, 62.0], [92.8, 62.0], [92.9, 62.0], [93.0, 62.0], [93.1, 62.0], [93.2, 63.0], [93.3, 63.0], [93.4, 63.0], [93.5, 63.0], [93.6, 63.0], [93.7, 64.0], [93.8, 64.0], [93.9, 64.0], [94.0, 64.0], [94.1, 65.0], [94.2, 65.0], [94.3, 65.0], [94.4, 65.0], [94.5, 66.0], [94.6, 66.0], [94.7, 66.0], [94.8, 67.0], [94.9, 67.0], [95.0, 67.0], [95.1, 68.0], [95.2, 68.0], [95.3, 69.0], [95.4, 69.0], [95.5, 70.0], [95.6, 70.0], [95.7, 71.0], [95.8, 71.0], [95.9, 72.0], [96.0, 72.0], [96.1, 73.0], [96.2, 74.0], [96.3, 75.0], [96.4, 76.0], [96.5, 77.0], [96.6, 78.0], [96.7, 80.0], [96.8, 81.0], [96.9, 83.0], [97.0, 86.0], [97.1, 90.0], [97.2, 98.0], [97.3, 115.0], [97.4, 169.0], [97.5, 217.0], [97.6, 249.0], [97.7, 287.0], [97.8, 326.0], [97.9, 351.0], [98.0, 401.0], [98.1, 444.0], [98.2, 479.0], [98.3, 507.0], [98.4, 531.0], [98.5, 550.0], [98.6, 582.0], [98.7, 608.0], [98.8, 638.0], [98.9, 672.0], [99.0, 700.0], [99.1, 731.0], [99.2, 773.0], [99.3, 824.0], [99.4, 873.0], [99.5, 906.0], [99.6, 987.0], [99.7, 1059.0], [99.8, 1149.0], [99.9, 1335.0]], "isOverall": false, "label": "Press Release", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 75322.0, "series": [{"data": [[0.0, 75322.0], [600.0, 252.0], [700.0, 205.0], [800.0, 169.0], [900.0, 104.0], [1000.0, 100.0], [1100.0, 82.0], [1200.0, 24.0], [1300.0, 39.0], [1400.0, 12.0], [1500.0, 7.0], [100.0, 185.0], [1600.0, 11.0], [1700.0, 5.0], [200.0, 209.0], [4300.0, 2.0], [4600.0, 3.0], [4400.0, 2.0], [4800.0, 1.0], [300.0, 208.0], [4900.0, 1.0], [5000.0, 2.0], [5500.0, 1.0], [5400.0, 1.0], [5700.0, 2.0], [5900.0, 1.0], [400.0, 209.0], [7800.0, 1.0], [7900.0, 1.0], [500.0, 314.0]], "isOverall": false, "label": "Press Release", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 41.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 76137.0, "series": [{"data": [[0.0, 76137.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1297.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 41.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.62703359E12, "maxY": 1992.625, "series": [{"data": [[1.62703371E12, 7.991466252909229], [1.62703448E12, 2.984126984126984], [1.62703439E12, 4.595999999999994], [1.62703422E12, 4.0], [1.62703405E12, 8.833575581395356], [1.62703388E12, 13.0], [1.62703363E12, 1936.1219512195125], [1.6270344E12, 5.0], [1.62703431E12, 2.0], [1.62703414E12, 3.0], [1.62703397E12, 3.166898470097358], [1.6270338E12, 5.0], [1.62703432E12, 2.0], [1.62703449E12, 1.0], [1.62703423E12, 4.0], [1.62703406E12, 7.023569023569019], [1.62703389E12, 13.0], [1.62703372E12, 4.896353166986565], [1.62703441E12, 5.0], [1.62703424E12, 4.3919191919191904], [1.62703415E12, 3.105702364394991], [1.62703398E12, 4.718587746625133], [1.62703381E12, 6.238056013179566], [1.62703364E12, 1895.2894736842106], [1.62703403E12, 7.993995997331558], [1.62703386E12, 12.3929049531459], [1.62703369E12, 569.847575057737], [1.62703437E12, 4.0], [1.6270342E12, 8.180787191460963], [1.62703395E12, 3.0], [1.62703378E12, 3.181236673773988], [1.62703361E12, 1965.0952380952383], [1.62703446E12, 3.0], [1.62703429E12, 2.0], [1.62703412E12, 3.0], [1.62703387E12, 13.0], [1.6270337E12, 87.07967032967045], [1.62703438E12, 4.0], [1.62703421E12, 4.308666666666669], [1.62703404E12, 8.0], [1.62703379E12, 4.732590529247912], [1.62703447E12, 3.0], [1.6270343E12, 2.0], [1.62703413E12, 3.0], [1.62703396E12, 3.0], [1.62703435E12, 5.095735422106191], [1.62703418E12, 6.419889502762436], [1.62703401E12, 6.09472981987992], [1.62703384E12, 7.496296296296303], [1.62703375E12, 2.0], [1.62703427E12, 2.0], [1.6270341E12, 3.0], [1.62703393E12, 3.0], [1.62703376E12, 2.0], [1.62703367E12, 1306.1022099447514], [1.62703444E12, 4.599615014436964], [1.62703419E12, 9.76049382716049], [1.62703402E12, 7.0], [1.62703385E12, 9.939042089985476], [1.62703368E12, 951.9504132231415], [1.62703359E12, 1992.625], [1.62703436E12, 4.0], [1.62703411E12, 3.0], [1.62703394E12, 3.0], [1.62703377E12, 2.0], [1.6270336E12, 1980.0], [1.62703445E12, 3.0], [1.62703428E12, 2.0], [1.62703433E12, 2.99025069637883], [1.62703416E12, 4.0], [1.62703407E12, 7.0], [1.6270339E12, 9.742307692307687], [1.62703373E12, 3.686567164179106], [1.62703442E12, 5.389601620526672], [1.62703425E12, 4.169517884914467], [1.62703408E12, 3.013435700575817], [1.62703399E12, 5.316049382716043], [1.62703382E12, 8.802640722724092], [1.62703365E12, 1736.6219931271487], [1.62703434E12, 3.9245087900723896], [1.62703417E12, 4.603804797353178], [1.627034E12, 6.0], [1.62703391E12, 3.6963613550815557], [1.62703374E12, 2.9650092081031323], [1.62703443E12, 6.0], [1.62703426E12, 2.0], [1.62703409E12, 3.0], [1.62703392E12, 3.0], [1.62703383E12, 10.281363306744025], [1.62703366E12, 1531.8454545454547]], "isOverall": false, "label": "bzm - Concurrency Thread Group-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62703449E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 15.112298387096772, "minX": 1.0, "maxY": 5979.0, "series": [{"data": [[2.0, 15.112298387096772], [3.0, 21.701101798662847], [4.0, 19.972120223038257], [5.0, 22.736656002694044], [6.0, 30.95638969873667], [7.0, 31.64180374361885], [8.0, 36.26446865713891], [9.0, 40.43942133815549], [10.0, 61.58227848101264], [11.0, 56.902928870292946], [12.0, 54.30298973672461], [13.0, 60.527859778597694], [14.0, 38.31707317073171], [15.0, 240.0], [16.0, 30.0], [17.0, 378.33333333333337], [18.0, 352.0], [19.0, 28.0], [20.0, 199.4], [21.0, 172.33333333333331], [22.0, 156.0], [23.0, 93.80740740740735], [24.0, 633.0], [25.0, 436.0], [26.0, 434.0], [27.0, 433.0], [28.0, 632.0], [29.0, 626.0], [31.0, 619.0], [33.0, 435.0], [32.0, 437.0], [35.0, 415.0], [34.0, 414.0], [37.0, 411.0], [36.0, 600.0], [38.0, 594.0], [41.0, 633.0], [40.0, 605.0], [43.0, 392.0], [42.0, 603.0], [45.0, 619.0], [44.0, 602.0], [46.0, 600.0], [49.0, 622.0], [48.0, 397.0], [51.0, 620.0], [50.0, 623.0], [53.0, 381.0], [52.0, 618.0], [55.0, 1178.0], [54.0, 1223.0], [57.0, 1182.0], [56.0, 1216.0], [59.0, 1223.0], [58.0, 1180.0], [61.0, 1169.0], [60.0, 1195.0], [63.0, 1183.0], [62.0, 1184.0], [66.0, 1217.0], [65.0, 1182.0], [71.0, 1202.0], [70.0, 1217.0], [69.0, 1202.0], [68.0, 1174.0], [75.0, 575.0], [74.0, 543.0], [73.0, 856.0], [72.0, 1152.0], [79.0, 534.0], [78.0, 538.0], [77.0, 350.0], [76.0, 349.0], [83.0, 566.0], [82.0, 530.0], [81.0, 534.0], [80.0, 538.0], [87.0, 545.0], [86.0, 557.0], [85.0, 560.0], [84.0, 329.0], [91.0, 519.0], [90.0, 546.0], [89.0, 522.0], [88.0, 555.0], [95.0, 326.0], [94.0, 526.0], [93.0, 518.0], [92.0, 519.0], [99.0, 537.0], [98.0, 311.0], [97.0, 539.0], [96.0, 547.0], [103.0, 507.0], [102.0, 511.0], [101.0, 530.0], [100.0, 517.0], [107.0, 1083.0], [106.0, 522.0], [105.0, 507.0], [104.0, 514.0], [109.0, 1042.0], [108.0, 1079.0], [115.0, 1054.0], [114.0, 1069.0], [113.0, 1077.0], [112.0, 1028.0], [119.0, 1060.0], [118.0, 1052.0], [117.0, 1068.0], [116.0, 1032.0], [123.0, 1006.0], [122.0, 1037.0], [121.0, 1072.0], [120.0, 1048.0], [127.0, 1050.0], [126.0, 1033.0], [125.0, 1022.0], [124.0, 1058.0], [135.0, 1009.0], [134.0, 1058.0], [133.0, 1015.0], [132.0, 1056.0], [131.0, 1002.0], [130.0, 1046.0], [129.0, 1051.0], [128.0, 1033.0], [141.0, 867.0], [140.0, 1031.0], [139.0, 1039.0], [138.0, 990.0], [137.0, 1028.0], [136.0, 996.0], [167.0, 587.7692307692308], [175.0, 476.0], [174.0, 469.0], [173.0, 462.0], [172.0, 511.0], [171.0, 513.0], [170.0, 524.0], [169.0, 528.0], [168.0, 529.0], [183.0, 455.0], [178.0, 456.0], [177.0, 508.0], [176.0, 452.0], [191.0, 406.0], [190.0, 414.0], [189.0, 454.0], [188.0, 448.0], [187.0, 399.0], [186.0, 453.0], [185.0, 449.4], [184.0, 455.0], [199.0, 301.0], [198.0, 354.0], [197.0, 314.0], [196.0, 365.0], [195.0, 358.0], [194.0, 342.0], [193.0, 344.0], [192.0, 392.0], [207.0, 360.0], [206.0, 348.0], [204.0, 357.0], [203.0, 321.0], [202.0, 309.0], [201.0, 313.0], [200.0, 325.0], [215.0, 343.5], [213.0, 344.5], [211.0, 356.0], [210.0, 333.0], [209.0, 337.0], [208.0, 354.0], [223.0, 352.0], [222.0, 348.0], [219.0, 322.0], [218.0, 330.5], [216.0, 330.0], [231.0, 336.8571428571429], [229.0, 349.5], [227.0, 325.0], [226.0, 330.0], [239.0, 337.0], [238.0, 331.0], [237.0, 331.0], [236.0, 332.0], [235.0, 329.5], [233.0, 313.5], [247.0, 333.0], [246.0, 320.0], [245.0, 329.0], [244.0, 298.0], [243.0, 334.0], [242.0, 323.0], [241.0, 334.0], [240.0, 330.0], [255.0, 312.0], [254.0, 323.0], [253.0, 308.0], [251.0, 325.0], [250.0, 322.0], [249.0, 324.0], [248.0, 321.0], [259.0, 590.0], [271.0, 576.5], [269.0, 563.6666666666666], [267.0, 571.0], [266.0, 569.0], [264.0, 576.0], [261.0, 557.0], [260.0, 577.0], [258.0, 616.0], [257.0, 293.0], [256.0, 310.0], [286.0, 547.0], [287.0, 566.0], [285.0, 550.0], [284.0, 588.0], [283.0, 540.5], [281.0, 534.0], [280.0, 560.5], [278.0, 543.0], [275.0, 568.0], [273.0, 569.0], [272.0, 569.0], [276.0, 547.0], [302.0, 540.0], [303.0, 551.0], [301.0, 546.0], [300.0, 522.5], [298.0, 523.0], [297.0, 529.0], [296.0, 521.0], [295.0, 555.0], [289.0, 534.0], [288.0, 549.0], [291.0, 545.0], [290.0, 557.0], [294.0, 540.5], [292.0, 546.0], [317.0, 563.0], [318.0, 564.0], [316.0, 539.0], [307.0, 557.0], [306.0, 554.0], [305.0, 525.0], [304.0, 519.0], [315.0, 512.0], [314.0, 563.0], [313.0, 565.0], [312.0, 546.0], [311.0, 572.0], [310.0, 571.0], [309.0, 548.0], [308.0, 570.0], [334.0, 532.0], [335.0, 494.0], [333.0, 519.0], [332.0, 539.0], [331.0, 523.0], [330.0, 498.0], [329.0, 518.0], [328.0, 516.0], [327.0, 401.0], [321.0, 506.0], [320.0, 551.5], [323.0, 517.0], [322.0, 513.0], [326.0, 526.0], [325.0, 549.0], [350.0, 240.0], [351.0, 245.0], [349.0, 245.0], [348.0, 45.0], [347.0, 70.0], [346.0, 74.0], [345.0, 73.0], [344.0, 75.0], [343.0, 75.0], [337.0, 499.0], [336.0, 497.0], [339.0, 473.0], [338.0, 493.0], [342.0, 79.0], [341.0, 463.0], [340.0, 445.0], [366.0, 228.0], [367.0, 216.0], [365.0, 226.0], [364.0, 224.0], [363.0, 226.5], [361.0, 221.5], [360.0, 202.0], [359.0, 238.0], [352.0, 243.0], [355.0, 227.0], [354.0, 238.5], [357.0, 228.0], [356.0, 233.0], [382.0, 207.0], [383.0, 204.0], [381.0, 214.0], [380.0, 217.0], [379.0, 203.0], [378.0, 205.0], [377.0, 223.0], [376.0, 217.0], [375.0, 223.0], [369.0, 224.5], [371.0, 215.0], [370.0, 217.0], [374.0, 200.0], [373.0, 226.0], [372.0, 224.0], [398.0, 504.0], [399.0, 513.0], [397.0, 516.0], [387.0, 485.0], [386.0, 507.0], [385.0, 537.0], [384.0, 532.0], [395.0, 514.0], [394.0, 498.0], [393.0, 482.0], [392.0, 527.0], [391.0, 498.0], [390.0, 509.0], [389.0, 515.0], [414.0, 514.0], [415.0, 502.0], [413.0, 482.0], [412.0, 517.0], [411.0, 501.0], [410.0, 514.0], [409.0, 504.0], [403.0, 508.0], [401.0, 492.0], [419.0, 488.0], [430.0, 477.0], [429.0, 458.0], [426.0, 484.0], [425.0, 464.0], [424.0, 498.0], [423.0, 478.0], [421.0, 506.0], [420.0, 468.0], [418.0, 484.6], [417.0, 490.5], [416.0, 508.0], [446.0, 394.0], [447.0, 405.0], [445.0, 404.0], [444.0, 419.0], [443.0, 409.0], [442.0, 404.0], [441.0, 405.0], [440.0, 404.0], [439.0, 396.0], [433.0, 453.0], [432.0, 477.3333333333333], [435.0, 482.0], [434.0, 457.0], [438.0, 421.0], [437.0, 424.0], [436.0, 475.0], [456.0, 334.0], [463.0, 166.0], [451.0, 396.0], [450.0, 403.0], [449.0, 390.0], [448.0, 389.0], [459.0, 168.0], [458.0, 172.0], [457.0, 178.0], [455.0, 370.0], [454.0, 375.0], [453.0, 381.0], [452.0, 416.0], [478.0, 149.0], [479.0, 138.0], [477.0, 150.0], [476.0, 145.0], [475.0, 153.0], [474.0, 157.0], [473.0, 155.0], [472.0, 158.5], [471.0, 160.0], [467.0, 160.0], [465.0, 162.0], [470.0, 162.0], [468.0, 166.0], [494.0, 261.0], [495.0, 255.0], [493.0, 263.0], [492.0, 254.0], [491.0, 249.0], [490.0, 264.0], [489.0, 264.5], [487.0, 271.0], [481.0, 266.0], [480.0, 134.0], [483.0, 255.0], [482.0, 272.0], [486.0, 256.0], [485.0, 260.0], [484.0, 262.0], [510.0, 169.0], [511.0, 175.0], [509.0, 170.0], [508.0, 173.0], [507.0, 178.0], [506.0, 188.0], [505.0, 198.0], [504.0, 177.0], [503.0, 186.0], [497.0, 253.0], [496.0, 251.0], [499.0, 208.0], [498.0, 225.0], [502.0, 187.0], [500.0, 204.0], [538.0, 909.0], [540.0, 1590.0], [524.0, 962.0], [512.0, 185.0], [514.0, 187.0], [516.0, 940.0], [518.0, 916.0], [522.0, 885.0], [520.0, 920.0], [572.0, 872.0], [574.0, 931.0], [560.0, 867.0], [564.0, 896.0], [568.0, 901.0], [548.0, 906.0], [558.0, 899.5], [554.0, 896.0], [604.0, 889.0], [594.0, 1206.5], [592.0, 870.0], [596.0, 857.0], [606.0, 1654.0], [602.0, 1078.7000000000003], [600.0, 878.0], [590.0, 876.5], [576.0, 1747.0], [580.0, 899.5], [578.0, 856.0], [582.0, 1754.0], [588.0, 857.6666666666666], [586.0, 868.0], [598.0, 881.0], [636.0, 1365.0], [624.0, 849.0], [628.0, 795.5], [638.0, 1453.0], [634.0, 1327.0], [632.0, 1608.0], [608.0, 1711.0], [610.0, 820.0], [612.0, 866.0], [614.0, 869.0], [622.0, 788.0], [620.0, 1618.0], [618.0, 827.0], [616.0, 794.0], [630.0, 1586.5], [668.0, 1176.0], [670.0, 1181.0], [656.0, 1402.0], [658.0, 1352.0], [660.0, 1374.0], [666.0, 1164.0], [664.0, 1196.0], [646.0, 1470.0], [644.0, 1478.0], [642.0, 1507.0], [640.0, 1490.0], [654.0, 1393.0], [652.0, 1353.0], [650.0, 1353.0], [648.0, 1426.0], [662.0, 1232.0], [700.0, 1079.0], [688.0, 1095.0], [690.0, 1143.0], [702.0, 1114.0], [698.0, 1099.0], [696.0, 1120.0], [676.0, 1092.0], [672.0, 1176.0], [678.0, 1085.0], [686.0, 1165.0], [682.0, 1170.0], [680.0, 1118.0], [694.0, 1153.0], [732.0, 955.0], [720.0, 1084.3333333333333], [724.0, 1057.0], [734.0, 998.0], [730.0, 1106.0], [728.0, 1099.0], [718.0, 1101.0], [704.0, 1146.0], [706.0, 967.0], [708.0, 1070.0], [710.0, 1117.0], [714.0, 1131.0], [712.0, 1114.0], [726.0, 1128.0], [764.0, 773.0], [752.0, 1002.0], [754.0, 1012.0], [756.0, 797.0], [766.0, 732.0], [762.0, 764.0], [760.0, 830.0], [736.0, 965.0], [738.0, 995.0], [740.0, 1042.0], [742.0, 898.0], [750.0, 971.0], [748.0, 1025.0], [746.0, 989.0], [744.0, 1010.0], [758.0, 773.0], [792.0, 556.0], [784.0, 576.0], [786.0, 573.0], [794.0, 512.0], [768.0, 695.5], [770.0, 755.0], [772.0, 722.0], [774.0, 78.0], [780.0, 57.0], [778.0, 63.0], [776.0, 76.0], [790.0, 536.0], [788.0, 561.0], [828.0, 451.0], [816.0, 481.0], [818.0, 477.0], [820.0, 480.0], [830.0, 450.0], [826.0, 485.0], [824.0, 488.0], [804.0, 533.0], [814.0, 525.0], [812.0, 523.3333333333334], [810.0, 505.0], [808.0, 514.0], [822.0, 495.0], [860.0, 538.0], [862.0, 535.0], [848.0, 352.0], [850.0, 398.0], [858.0, 340.0], [832.0, 404.0], [834.0, 426.0], [836.0, 431.0], [838.0, 386.0], [846.0, 410.0], [844.0, 370.0], [842.0, 371.0], [840.0, 415.0], [852.0, 377.0], [890.0, 605.0], [894.0, 578.0], [880.0, 485.0], [882.0, 596.0], [884.0, 613.0], [892.0, 419.0], [870.0, 521.0], [868.0, 542.0], [866.0, 528.0], [864.0, 542.0], [878.0, 502.0], [876.0, 501.0], [874.0, 523.0], [872.0, 524.0], [924.0, 830.0], [912.0, 895.0], [914.0, 868.0], [916.0, 872.0], [926.0, 845.0], [922.0, 836.0], [920.0, 826.0], [896.0, 410.0], [898.0, 403.0], [900.0, 442.0], [902.0, 555.0], [910.0, 872.0], [908.0, 879.0], [906.0, 918.0], [904.0, 910.0], [918.0, 872.0], [956.0, 575.0], [944.0, 767.0], [946.0, 790.0], [958.0, 648.0], [954.0, 236.0], [952.0, 763.0], [928.0, 845.0], [930.0, 839.0], [932.0, 856.0], [934.0, 285.0], [942.0, 768.0], [940.0, 776.0], [938.0, 797.0], [936.0, 265.0], [950.0, 794.0], [988.0, 667.0], [976.0, 542.0], [978.0, 82.0], [980.0, 200.0], [990.0, 654.0], [986.0, 671.0], [984.0, 657.0], [960.0, 333.0], [962.0, 749.0], [964.0, 308.0], [966.0, 466.0], [974.0, 702.0], [972.0, 728.0], [970.0, 550.0], [968.0, 743.0], [982.0, 234.0], [1020.0, 339.0], [1022.0, 355.0], [1008.0, 335.0], [1010.0, 344.0], [1012.0, 321.0], [1016.0, 349.5], [998.0, 526.6], [996.0, 583.0], [994.0, 351.0], [992.0, 644.0], [1006.0, 354.0], [1004.0, 361.0], [1002.0, 352.0], [1000.0, 545.3999999999999], [1014.0, 363.0], [1076.0, 338.0], [1084.0, 337.0], [1064.0, 364.0], [1056.0, 157.0], [1060.0, 386.0], [1068.0, 363.0], [1072.0, 360.0], [1036.0, 288.0], [1032.0, 291.0], [1028.0, 279.0], [1024.0, 328.0], [1052.0, 237.0], [1048.0, 266.0], [1044.0, 266.0], [1140.0, 924.0], [1124.0, 882.0], [1120.0, 908.0], [1128.0, 920.0], [1132.0, 957.0], [1148.0, 889.5], [1136.0, 936.0], [1088.0, 338.0], [1092.0, 308.0], [1096.0, 312.0], [1100.0, 298.0], [1116.0, 906.0], [1112.0, 298.0], [1108.0, 301.0], [1104.0, 298.0], [1204.0, 873.0], [1212.0, 815.0], [1188.0, 873.0], [1192.0, 863.0], [1208.0, 808.5], [1200.0, 827.0], [1152.0, 886.0], [1160.0, 873.0], [1180.0, 868.0], [1176.0, 927.0], [1172.0, 899.1666666666666], [1168.0, 892.0], [1276.0, 234.0], [1248.0, 687.0], [1252.0, 738.0], [1256.0, 265.0], [1272.0, 239.0], [1268.0, 240.0], [1224.0, 770.0], [1228.0, 749.5], [1244.0, 703.0], [1240.0, 712.5], [1236.0, 752.0], [1232.0, 751.0], [1340.0, 710.0], [1288.0, 765.0], [1284.0, 5777.0], [1280.0, 211.0], [1324.0, 703.0], [1376.0, 623.0], [1380.0, 551.0], [1372.0, 632.0], [1368.0, 618.0], [1444.0, 673.0], [1464.0, 667.0], [1448.0, 691.0], [1452.0, 664.5], [1460.0, 659.0], [1456.0, 667.0], [1436.0, 746.0], [1428.0, 773.0], [1528.0, 664.3333333333334], [1504.0, 697.0], [1512.0, 709.0], [1516.0, 711.0], [1532.0, 655.0], [1524.0, 727.0], [1520.0, 711.0], [1484.0, 270.0], [1480.0, 284.0], [1476.0, 279.0], [1472.0, 626.0], [1500.0, 737.0], [1496.0, 177.0], [1488.0, 272.0], [1548.0, 658.0], [1576.0, 419.0], [1580.0, 405.5], [1584.0, 383.0], [1544.0, 652.0], [1540.0, 641.0], [1536.0, 685.0], [1564.0, 424.0], [1568.0, 426.0], [1572.0, 433.0], [1656.0, 735.0], [1660.0, 682.0], [1632.0, 684.0], [1636.0, 653.0], [1640.0, 812.0], [1644.0, 774.0], [1652.0, 612.0], [1628.0, 712.2], [1620.0, 623.0], [1616.0, 596.0], [1716.0, 1282.0], [1724.0, 1078.0], [1704.0, 1335.0], [1708.0, 1120.0], [1712.0, 1100.0], [1676.0, 390.0], [1668.0, 641.0], [1664.0, 651.0], [1680.0, 1387.0], [1784.0, 1180.0], [1780.0, 1149.0], [1788.0, 744.0], [1760.0, 1078.0], [1764.0, 1193.0], [1768.0, 959.5], [1776.0, 1217.0], [1728.0, 1074.0], [1740.0, 1038.0], [1756.0, 989.0], [1752.0, 1274.0], [1852.0, 456.0], [1824.0, 525.0], [1828.0, 500.0], [1836.0, 497.0], [1804.0, 827.0], [1800.0, 832.0], [1796.0, 987.0], [1792.0, 973.5], [1820.0, 628.0], [1816.0, 649.0], [1812.0, 711.0], [1808.0, 797.0], [1912.0, 69.0], [1916.0, 591.0], [1888.0, 269.0], [1892.0, 259.3333333333333], [1896.0, 232.0], [1900.0, 201.0], [1908.0, 85.0], [1904.0, 184.5], [1856.0, 440.0], [1860.0, 434.0], [1864.0, 427.0], [1868.0, 441.4], [1884.0, 287.0], [1880.0, 304.0], [1876.0, 291.0], [1872.0, 402.5], [1976.0, 114.0], [1972.0, 171.0], [1980.0, 107.0], [1952.0, 340.0], [1956.0, 232.0], [1960.0, 231.0], [1964.0, 212.0], [1928.0, 564.0], [1924.0, 590.0], [1920.0, 590.0], [1948.0, 459.0], [1944.0, 438.0], [1940.0, 482.0], [1988.0, 87.5], [2000.0, 4310.0], [1984.0, 94.0], [1992.0, 77.0], [1081.0, 319.0], [1085.0, 314.0], [1057.0, 157.0], [1061.0, 400.0], [1065.0, 382.0], [1069.0, 334.0], [1077.0, 341.0], [1073.0, 364.0], [1037.0, 290.0], [1025.0, 350.0], [1053.0, 232.0], [1049.0, 269.0], [1045.0, 263.0], [1041.0, 271.0], [1145.0, 879.0], [1121.0, 981.0], [1125.0, 934.0], [1149.0, 953.0], [1137.0, 930.0], [1089.0, 322.5], [1093.0, 324.0], [1117.0, 900.0], [1109.0, 313.0], [1105.0, 297.0], [1209.0, 835.0], [1185.0, 881.0], [1197.0, 874.0], [1213.0, 835.0], [1205.0, 886.0], [1201.0, 881.0], [1153.0, 881.0], [1157.0, 933.0], [1161.0, 841.0], [1181.0, 921.0], [1177.0, 898.0], [1173.0, 902.5], [1269.0, 239.0], [1249.0, 734.0], [1253.0, 280.0], [1273.0, 240.0], [1265.0, 257.0], [1221.0, 805.5], [1229.0, 745.0], [1237.0, 720.0], [1233.0, 751.0], [1285.0, 777.0], [1281.0, 211.5], [1377.0, 546.0], [1381.0, 5533.0], [1373.0, 595.0], [1365.0, 698.5], [1469.0, 644.5], [1441.0, 704.0], [1445.0, 703.0], [1449.0, 655.0], [1453.0, 691.0], [1465.0, 642.5], [1461.0, 680.0], [1457.0, 639.0], [1421.0, 821.0], [1437.0, 756.2000000000002], [1433.0, 757.5], [1533.0, 684.0], [1505.0, 722.0], [1513.0, 698.0], [1517.0, 723.0], [1529.0, 718.0], [1525.0, 713.0], [1521.0, 669.0], [1485.0, 270.0], [1481.0, 278.0], [1477.0, 294.0], [1501.0, 689.0], [1497.0, 174.0], [1493.0, 254.66666666666666], [1545.0, 651.0], [1549.0, 638.0], [1541.0, 694.0], [1537.0, 680.0], [1553.0, 621.0], [1569.0, 430.0], [1573.0, 446.0], [1581.0, 446.0], [1577.0, 421.0], [1657.0, 745.0], [1661.0, 584.0], [1633.0, 798.0], [1637.0, 533.0], [1641.0, 799.0], [1645.0, 748.0], [1653.0, 500.0], [1649.0, 772.0], [1629.0, 570.0], [1613.0, 593.0], [1625.0, 623.4285714285714], [1617.0, 833.0], [1721.0, 1287.0], [1709.0, 1112.0], [1713.0, 1311.0], [1677.0, 299.6666666666667], [1669.0, 609.0], [1665.0, 661.0], [1681.0, 1380.0], [1785.0, 1107.3333333333333], [1789.0, 999.0], [1761.0, 1092.5], [1765.0, 1228.0], [1769.0, 946.0], [1773.0, 1136.5], [1781.0, 930.0], [1777.0, 918.0], [1729.0, 1072.0], [1733.0, 1040.0], [1737.0, 1147.3333333333333], [1741.0, 1312.0], [1757.0, 1225.0], [1753.0, 1021.0], [1749.0, 1016.0], [1745.0, 1027.0], [1841.0, 496.0], [1805.0, 802.0], [1825.0, 504.0], [1853.0, 448.0], [1849.0, 493.0], [1845.0, 494.0], [1801.0, 814.0], [1797.0, 626.0], [1793.0, 968.0], [1821.0, 546.0], [1817.0, 627.0], [1813.0, 675.0], [1809.0, 544.0], [1913.0, 65.5], [1893.0, 227.0], [1897.0, 217.0], [1901.0, 208.0], [1917.0, 594.0], [1909.0, 79.0], [1905.0, 184.0], [1869.0, 444.0], [1885.0, 280.0], [1881.0, 297.0], [1877.0, 299.0], [1873.0, 365.0], [1977.0, 110.0], [1981.0, 105.0], [1953.0, 333.5], [1957.0, 237.0], [1961.0, 223.0], [1965.0, 215.0], [1973.0, 169.0], [1969.0, 184.0], [1925.0, 587.0], [1921.0, 613.0], [1949.0, 338.0], [1945.0, 501.0], [1937.0, 565.5], [1985.0, 97.0], [1997.0, 2382.0], [1993.0, 5764.0], [1989.0, 81.0], [541.0, 951.0], [539.0, 1794.0], [533.0, 921.0], [513.0, 182.0], [515.0, 185.0], [517.0, 920.0], [519.0, 927.0], [523.0, 1661.0], [521.0, 888.0], [573.0, 903.0], [575.0, 894.0], [561.0, 894.0], [563.0, 892.0], [571.0, 897.0], [569.0, 943.0], [551.0, 947.0], [559.0, 899.0], [567.0, 904.0], [565.0, 934.0], [607.0, 846.0], [595.0, 886.5], [605.0, 876.0], [603.0, 829.0], [601.0, 1686.0], [577.0, 898.0], [581.0, 912.0], [597.0, 842.0], [637.0, 1454.0], [639.0, 1489.0], [627.0, 852.0], [625.0, 816.0], [629.0, 773.0], [635.0, 1506.0], [633.0, 1526.0], [623.0, 1628.0], [609.0, 1639.0], [611.0, 824.0], [613.0, 809.0], [615.0, 838.0], [621.0, 826.0], [619.0, 807.0], [631.0, 771.0], [665.0, 1179.0], [671.0, 1162.0], [657.0, 1352.0], [659.0, 1305.0], [661.0, 1356.0], [667.0, 1179.0], [647.0, 1430.0], [645.0, 1406.0], [643.0, 1303.0], [641.0, 1447.0], [655.0, 1338.0], [653.0, 1367.0], [651.0, 1399.0], [649.0, 1408.0], [663.0, 1200.0], [699.0, 1104.0], [703.0, 984.0], [689.0, 1118.0], [701.0, 1154.0], [697.0, 1106.5], [687.0, 1091.5], [679.0, 1144.0], [685.0, 1129.0], [683.0, 1119.0], [681.0, 1116.0], [693.0, 1091.0], [733.0, 1049.0], [735.0, 1060.0], [723.0, 1049.5], [721.0, 1095.0], [725.0, 1136.0], [731.0, 1043.0], [729.0, 1140.0], [705.0, 1065.0], [707.0, 1029.0], [709.0, 1096.0], [711.0, 1109.0], [717.0, 1035.0], [715.0, 1072.0], [727.0, 1141.0], [765.0, 820.0], [767.0, 748.0], [753.0, 1014.0], [755.0, 989.0], [757.0, 804.0], [763.0, 795.0], [761.0, 791.0], [751.0, 1022.0], [737.0, 1004.0], [739.0, 989.0], [741.0, 1021.0], [743.0, 977.0], [749.0, 1012.0], [747.0, 1031.0], [745.0, 1041.0], [759.0, 791.0], [795.0, 512.0], [797.0, 534.0], [799.0, 550.5], [785.0, 574.0], [787.0, 573.0], [793.0, 570.0], [783.0, 536.0], [769.0, 777.0], [771.0, 695.0], [773.0, 87.0], [775.0, 79.0], [781.0, 56.0], [779.0, 59.0], [777.0, 74.0], [791.0, 517.0], [789.0, 558.0], [829.0, 402.0], [831.0, 405.0], [817.0, 512.0], [819.0, 469.0], [821.0, 497.0], [827.0, 445.0], [825.0, 438.0], [815.0, 497.0], [801.0, 521.5], [803.0, 523.5], [807.0, 533.5], [805.0, 517.0], [813.0, 497.0], [809.0, 561.0], [823.0, 476.0], [857.0, 542.0], [863.0, 537.0], [849.0, 347.0], [861.0, 537.0], [847.0, 381.0], [833.0, 393.0], [835.0, 393.0], [837.0, 419.0], [839.0, 409.0], [845.0, 392.0], [843.0, 361.0], [841.0, 362.0], [855.0, 536.0], [853.0, 398.0], [851.0, 338.0], [893.0, 474.0], [895.0, 577.0], [881.0, 418.0], [883.0, 612.0], [891.0, 456.0], [889.0, 599.5], [871.0, 518.0], [869.0, 525.0], [867.0, 529.0], [865.0, 531.0], [879.0, 506.0], [877.0, 517.0], [875.0, 518.0], [873.0, 515.0], [887.0, 589.0], [885.0, 592.0], [925.0, 859.0], [927.0, 862.0], [913.0, 886.0], [915.0, 461.0], [917.0, 448.0], [923.0, 542.0], [921.0, 568.0], [911.0, 904.0], [897.0, 403.0], [899.0, 399.0], [901.0, 560.0], [903.0, 509.0], [909.0, 864.0], [907.0, 798.0], [905.0, 811.0], [919.0, 868.0], [957.0, 455.0], [959.0, 675.0], [945.0, 608.0], [949.0, 773.5], [947.0, 796.0], [955.0, 306.0], [953.0, 746.0], [943.0, 771.0], [929.0, 715.0], [931.0, 855.0], [933.0, 235.0], [935.0, 276.0], [941.0, 325.0], [939.0, 777.0], [937.0, 251.0], [951.0, 731.0], [989.0, 655.0], [991.0, 645.0], [977.0, 154.0], [981.0, 662.0], [987.0, 667.0], [985.0, 487.0], [975.0, 702.0], [961.0, 684.0], [963.0, 310.0], [965.0, 562.0], [967.0, 740.0], [973.0, 718.0], [971.0, 707.0], [969.0, 724.0], [983.0, 490.0], [1019.0, 339.5], [1017.0, 339.0], [1023.0, 337.0], [1009.0, 356.0], [1011.0, 334.0], [1021.0, 353.0], [999.0, 654.6666666666666], [997.0, 603.0], [995.0, 616.0], [993.0, 644.0], [1007.0, 346.0], [1005.0, 375.0], [1003.0, 368.5], [1001.0, 384.0], [1013.0, 350.0], [1086.0, 317.0], [1058.0, 141.0], [1062.0, 371.0], [1066.0, 380.0], [1070.0, 332.0], [1074.0, 330.0], [1038.0, 286.0], [1030.0, 284.5], [1026.0, 317.0], [1054.0, 226.0], [1050.0, 258.0], [1046.0, 273.0], [1042.0, 281.0], [1142.0, 920.0], [1146.0, 897.0], [1122.0, 906.0], [1126.0, 909.5], [1130.0, 938.0], [1138.0, 917.0], [1090.0, 317.5], [1094.0, 315.0], [1098.0, 322.5], [1102.0, 316.0], [1118.0, 957.0], [1106.0, 297.0], [1214.0, 755.0], [1186.0, 846.5], [1190.0, 902.5], [1194.0, 830.0], [1210.0, 769.0], [1206.0, 853.0], [1202.0, 870.0], [1154.0, 888.0], [1158.0, 841.0], [1162.0, 933.0], [1178.0, 926.0], [1174.0, 880.5], [1274.0, 234.0], [1270.0, 246.0], [1250.0, 689.0], [1254.0, 262.0], [1278.0, 209.0], [1266.0, 263.0], [1218.0, 737.0], [1222.0, 808.0], [1226.0, 794.5], [1230.0, 746.0], [1246.0, 731.0], [1242.0, 726.3333333333334], [1234.0, 715.0], [1334.0, 697.0], [1330.0, 735.0], [1338.0, 698.0], [1286.0, 783.0], [1282.0, 47.0], [1326.0, 731.0], [1318.0, 742.0], [1378.0, 595.0], [1382.0, 5086.0], [1350.0, 755.0], [1354.0, 704.0], [1374.0, 619.0], [1370.0, 595.0], [1366.0, 709.0], [1470.0, 646.0], [1442.0, 678.0], [1450.0, 699.0], [1454.0, 675.0], [1466.0, 625.0], [1462.0, 679.0], [1458.0, 683.0], [1438.0, 723.9166666666666], [1434.0, 794.0], [1430.0, 780.0], [1426.0, 773.0], [1530.0, 697.0], [1534.0, 702.0], [1506.0, 719.0], [1514.0, 741.0], [1526.0, 702.5], [1522.0, 666.0], [1486.0, 280.0], [1478.0, 279.0], [1474.0, 638.5], [1502.0, 685.0], [1494.0, 244.0], [1490.0, 273.0], [1546.0, 672.0], [1550.0, 632.5], [1542.0, 690.0], [1538.0, 654.0], [1570.0, 424.0], [1574.0, 428.0], [1582.0, 433.0], [1578.0, 410.0], [1662.0, 720.0], [1634.0, 549.0], [1638.0, 815.0], [1642.0, 793.0], [1646.0, 794.0], [1658.0, 729.0], [1650.0, 638.0], [1610.0, 617.0], [1614.0, 609.0], [1626.0, 593.0], [1622.0, 589.0], [1714.0, 1307.0], [1706.0, 1121.0], [1710.0, 1337.0], [1718.0, 1190.5], [1678.0, 268.0], [1674.0, 405.0], [1670.0, 577.0], [1666.0, 620.0], [1682.0, 1379.0], [1790.0, 1029.0], [1762.0, 987.0], [1766.0, 1194.0], [1774.0, 967.0], [1786.0, 768.0], [1782.0, 1144.5], [1778.0, 1177.0], [1730.0, 1045.0], [1738.0, 1056.0], [1742.0, 1301.0], [1758.0, 1191.0], [1754.0, 1016.0], [1750.0, 1230.0], [1806.0, 751.0], [1826.0, 544.0], [1834.0, 504.5], [1830.0, 509.0], [1838.0, 508.0], [1842.0, 494.0], [1802.0, 814.0], [1798.0, 595.0], [1818.0, 620.0], [1814.0, 629.0], [1810.0, 792.0], [1910.0, 75.0], [1906.0, 160.0], [1890.0, 271.0], [1894.0, 239.0], [1898.0, 216.0], [1902.0, 187.0], [1918.0, 598.0], [1862.0, 462.0], [1866.0, 466.0], [1870.0, 412.0], [1886.0, 286.0], [1882.0, 274.0], [1878.0, 310.0], [1874.0, 324.0], [1982.0, 104.0], [1954.0, 334.0], [1958.0, 236.0], [1962.0, 220.0], [1966.0, 210.0], [1978.0, 108.0], [1974.0, 162.0], [1970.0, 174.5], [1934.0, 603.0], [1922.0, 595.0], [1950.0, 354.0], [1946.0, 446.0], [1942.0, 466.0], [1938.0, 495.0], [1986.0, 96.0], [1998.0, 4647.0], [1994.0, 4833.0], [1990.0, 92.0], [1083.0, 335.0], [1087.0, 339.0], [1059.0, 152.0], [1063.0, 387.0], [1067.0, 378.0], [1071.0, 340.0], [1079.0, 341.0], [1075.0, 361.0], [1039.0, 280.0], [1035.0, 288.5], [1031.0, 283.0], [1027.0, 352.0], [1055.0, 144.0], [1051.0, 230.0], [1047.0, 262.0], [1043.0, 265.0], [1139.0, 948.0], [1143.0, 899.0], [1151.0, 872.0], [1123.0, 892.0], [1131.0, 976.0], [1135.0, 914.5], [1119.0, 928.0], [1091.0, 318.0], [1095.0, 295.0], [1099.0, 293.0], [1103.0, 320.0], [1111.0, 283.0], [1107.0, 283.0], [1211.0, 785.0], [1215.0, 760.0], [1187.0, 914.0], [1195.0, 851.0], [1199.0, 829.5], [1207.0, 806.0], [1203.0, 827.0], [1183.0, 861.5], [1155.0, 895.0], [1159.0, 910.0], [1163.0, 850.0], [1179.0, 912.0], [1175.0, 923.0], [1171.0, 892.0], [1267.0, 255.0], [1275.0, 223.0], [1279.0, 221.0], [1251.0, 754.0], [1255.0, 268.0], [1271.0, 243.0], [1247.0, 765.0], [1219.0, 815.0], [1223.0, 830.0], [1231.0, 796.0], [1243.0, 760.0], [1239.0, 726.0], [1343.0, 692.0], [1283.0, 5979.0], [1315.0, 755.0], [1379.0, 582.0], [1383.0, 5090.0], [1375.0, 592.5], [1355.0, 694.0], [1371.0, 628.0], [1367.0, 662.0937500000002], [1363.0, 751.0], [1459.0, 672.0], [1467.0, 640.0], [1471.0, 672.0], [1447.0, 697.9999999999999], [1451.0, 709.0], [1455.0, 674.0], [1439.0, 705.0], [1435.0, 797.0], [1431.0, 809.0], [1427.0, 750.0], [1523.0, 722.0], [1531.0, 676.0], [1507.0, 729.0], [1519.0, 693.0], [1527.0, 695.0], [1487.0, 261.0], [1483.0, 275.5], [1479.0, 294.0], [1475.0, 301.0], [1503.0, 753.0], [1499.0, 755.0], [1495.0, 235.0], [1491.0, 260.0], [1547.0, 643.0], [1551.0, 635.0], [1543.0, 617.0], [1539.0, 691.0], [1567.0, 379.0], [1563.0, 512.2222222222222], [1571.0, 444.0], [1575.0, 426.0], [1583.0, 439.0], [1579.0, 401.5], [1659.0, 715.0], [1663.0, 701.0], [1635.0, 633.3333333333334], [1639.0, 764.0], [1643.0, 725.0], [1647.0, 783.0], [1655.0, 734.0], [1651.0, 572.5], [1627.0, 613.5454545454545], [1623.0, 621.0], [1619.0, 596.0], [1719.0, 1285.0], [1715.0, 1346.0], [1727.0, 1286.0], [1703.0, 1300.0], [1707.0, 1129.0], [1711.0, 1193.75], [1723.0, 1328.0], [1679.0, 1174.0], [1675.0, 396.0], [1671.0, 540.0], [1667.0, 631.0], [1687.0, 1344.0], [1683.0, 1360.0], [1787.0, 1032.0], [1791.0, 925.0], [1763.0, 1198.0], [1767.0, 1194.0], [1771.0, 1219.0], [1775.0, 1042.0], [1783.0, 1145.0], [1779.0, 1189.0], [1759.0, 1186.0], [1731.0, 1043.0], [1735.0, 887.0], [1743.0, 1049.0], [1755.0, 1012.0], [1751.0, 1030.0], [1747.0, 1306.0], [1843.0, 477.5], [1851.0, 494.0], [1855.0, 443.5], [1835.0, 531.0], [1839.0, 491.0], [1807.0, 802.0], [1803.0, 540.0], [1799.0, 801.0], [1795.0, 928.5], [1823.0, 506.0], [1819.0, 597.0], [1815.0, 634.0], [1811.0, 724.0], [1915.0, 598.0], [1919.0, 613.0], [1899.0, 207.0], [1903.0, 198.0], [1907.0, 95.0], [1887.0, 263.0], [1859.0, 452.0], [1863.0, 435.5], [1871.0, 436.0], [1879.0, 294.0], [1875.0, 299.5], [1979.0, 108.0], [1983.0, 100.0], [1955.0, 248.0], [1959.0, 224.0], [1963.0, 226.0], [1967.0, 197.0], [1975.0, 150.0], [1971.0, 174.0], [1935.0, 537.0], [1931.0, 568.3333333333334], [1927.0, 606.0], [1923.0, 601.0], [1951.0, 366.0], [1947.0, 499.0], [1939.0, 540.0], [1995.0, 115.0], [1999.0, 4910.0], [1991.0, 81.0], [1.0, 37.0]], "isOverall": false, "label": "Press Release", "isController": false}, {"data": [[32.130093578573366, 45.817179735398156]], "isOverall": false, "label": "Press Release-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 16.5, "minX": 1.62703359E12, "maxY": 7054800.0, "series": [{"data": [[1.62703371E12, 6062424.8], [1.62703448E12, 296301.6], [1.62703439E12, 7054800.0], [1.62703422E12, 7054650.0], [1.62703405E12, 6471603.2], [1.62703388E12, 6984252.0], [1.62703363E12, 192831.7], [1.6270344E12, 7050096.8], [1.62703431E12, 1044110.4], [1.62703414E12, 2210504.0], [1.62703397E12, 3381600.8], [1.6270338E12, 4519775.2], [1.62703432E12, 2210504.0], [1.62703449E12, 4703.2], [1.62703423E12, 7054650.0], [1.62703406E12, 6984252.0], [1.62703389E12, 6062424.8], [1.62703372E12, 4900734.4], [1.62703441E12, 7054800.0], [1.62703424E12, 6984103.5], [1.62703415E12, 3381600.8], [1.62703398E12, 4529181.6], [1.62703381E12, 5709684.8], [1.62703364E12, 178720.0], [1.62703403E12, 7050096.8], [1.62703386E12, 7026580.8], [1.62703369E12, 2036477.5], [1.62703437E12, 7045393.6], [1.6270342E12, 7049826.8], [1.62703395E12, 1039407.2], [1.62703378E12, 2205800.8], [1.62703361E12, 98769.4], [1.62703446E12, 2558540.8], [1.62703429E12, 1396820.7], [1.62703412E12, 380959.2], [1.62703387E12, 7040690.4], [1.6270337E12, 3423929.6], [1.62703438E12, 7050096.8], [1.62703421E12, 7054680.6], [1.62703404E12, 7050096.8], [1.62703379E12, 3376897.6], [1.62703447E12, 1401553.6], [1.6270343E12, 366848.1], [1.62703413E12, 1030000.8], [1.62703396E12, 2215207.2], [1.62703435E12, 5403976.8], [1.62703418E12, 6810233.6], [1.62703401E12, 7050096.8], [1.62703384E12, 6984252.0], [1.62703375E12, 1410960.0], [1.62703427E12, 3738964.5], [1.6270341E12, 2553837.6], [1.62703393E12, 1392147.2], [1.62703376E12, 376256.0], [1.62703367E12, 1702622.3], [1.62703444E12, 4886624.8], [1.62703419E12, 3809533.4], [1.62703402E12, 7035987.2], [1.62703385E12, 6481028.3], [1.62703368E12, 1707225.3], [1.62703359E12, 75261.5], [1.62703436E12, 6805530.4], [1.62703411E12, 1406256.8], [1.62703394E12, 348036.8], [1.62703377E12, 1058220.0], [1.6270336E12, 42330.6], [1.62703445E12, 3739044.0], [1.62703428E12, 2567892.6], [1.62703433E12, 3376905.6], [1.62703416E12, 4562104.0], [1.62703407E12, 6062424.8], [1.6270339E12, 4891328.0], [1.62703373E12, 3466258.4], [1.62703442E12, 6965439.2], [1.62703425E12, 6048186.6], [1.62703408E12, 4900734.4], [1.62703399E12, 5714388.0], [1.62703382E12, 6767904.8], [1.62703365E12, 1368604.0], [1.62703434E12, 4547994.4], [1.62703417E12, 5686168.8], [1.627034E12, 6800827.2], [1.62703391E12, 3748470.3], [1.62703374E12, 2553837.6], [1.62703443E12, 6067128.0], [1.62703426E12, 4891224.0], [1.62703409E12, 3724934.4], [1.62703392E12, 2567947.2], [1.62703383E12, 6485712.8], [1.62703366E12, 517341.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62703371E12, 21268.5], [1.62703448E12, 1039.5], [1.62703439E12, 24750.0], [1.62703422E12, 24750.0], [1.62703405E12, 22704.0], [1.62703388E12, 24502.5], [1.62703363E12, 676.5], [1.6270344E12, 24733.5], [1.62703431E12, 3663.0], [1.62703414E12, 7755.0], [1.62703397E12, 11863.5], [1.6270338E12, 15856.5], [1.62703432E12, 7755.0], [1.62703449E12, 16.5], [1.62703423E12, 24750.0], [1.62703406E12, 24502.5], [1.62703389E12, 21268.5], [1.62703372E12, 17193.0], [1.62703441E12, 24750.0], [1.62703424E12, 24502.5], [1.62703415E12, 11863.5], [1.62703398E12, 15889.5], [1.62703381E12, 20031.0], [1.62703364E12, 627.0], [1.62703403E12, 24733.5], [1.62703386E12, 24651.0], [1.62703369E12, 7144.5], [1.62703437E12, 24717.0], [1.6270342E12, 24733.5], [1.62703395E12, 3646.5], [1.62703378E12, 7738.5], [1.62703361E12, 346.5], [1.62703446E12, 8976.0], [1.62703429E12, 4900.5], [1.62703412E12, 1336.5], [1.62703387E12, 24700.5], [1.6270337E12, 12012.0], [1.62703438E12, 24733.5], [1.62703421E12, 24750.0], [1.62703404E12, 24733.5], [1.62703379E12, 11847.0], [1.62703447E12, 4917.0], [1.6270343E12, 1287.0], [1.62703413E12, 3613.5], [1.62703396E12, 7771.5], [1.62703435E12, 18958.5], [1.62703418E12, 23892.0], [1.62703401E12, 24733.5], [1.62703384E12, 24502.5], [1.62703375E12, 4950.0], [1.62703427E12, 13117.5], [1.6270341E12, 8959.5], [1.62703393E12, 4884.0], [1.62703376E12, 1320.0], [1.62703367E12, 5973.0], [1.62703444E12, 17143.5], [1.62703419E12, 13365.0], [1.62703402E12, 24684.0], [1.62703385E12, 22737.0], [1.62703368E12, 5989.5], [1.62703359E12, 264.0], [1.62703436E12, 23875.5], [1.62703411E12, 4933.5], [1.62703394E12, 1221.0], [1.62703377E12, 3712.5], [1.6270336E12, 148.5], [1.62703445E12, 13117.5], [1.62703428E12, 9009.0], [1.62703433E12, 11847.0], [1.62703416E12, 16005.0], [1.62703407E12, 21268.5], [1.6270339E12, 17160.0], [1.62703373E12, 12160.5], [1.62703442E12, 24436.5], [1.62703425E12, 21219.0], [1.62703408E12, 17193.0], [1.62703399E12, 20047.5], [1.62703382E12, 23743.5], [1.62703365E12, 4801.5], [1.62703434E12, 15955.5], [1.62703417E12, 19948.5], [1.627034E12, 23859.0], [1.62703391E12, 13150.5], [1.62703374E12, 8959.5], [1.62703443E12, 21285.0], [1.62703426E12, 17160.0], [1.62703409E12, 13068.0], [1.62703392E12, 9009.0], [1.62703383E12, 22753.5], [1.62703366E12, 1815.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62703449E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 12.067340067340075, "minX": 1.62703359E12, "maxY": 1877.625, "series": [{"data": [[1.62703371E12, 46.173778122575555], [1.62703448E12, 23.428571428571427], [1.62703439E12, 17.71399999999997], [1.62703422E12, 17.788666666666664], [1.62703405E12, 40.44113372093027], [1.62703388E12, 61.106397306397284], [1.62703363E12, 501.1707317073172], [1.6270344E12, 18.923949299533014], [1.62703431E12, 12.549549549549548], [1.62703414E12, 21.36170212765958], [1.62703397E12, 22.634214186369974], [1.6270338E12, 25.87929240374612], [1.62703432E12, 12.406382978723403], [1.62703449E12, 25.0], [1.62703423E12, 17.424666666666678], [1.62703406E12, 27.98518518518519], [1.62703389E12, 57.028704422032526], [1.62703372E12, 29.358925143953954], [1.62703441E12, 17.524000000000026], [1.62703424E12, 17.315151515151516], [1.62703415E12, 21.54102920723226], [1.62703398E12, 24.725856697819346], [1.62703381E12, 30.66639209225699], [1.62703364E12, 213.1052631578948], [1.62703403E12, 30.915943962641798], [1.62703386E12, 61.284471218206235], [1.62703369E12, 756.4434180138578], [1.62703437E12, 17.526702269692905], [1.6270342E12, 41.108072048031936], [1.62703395E12, 23.076923076923062], [1.62703378E12, 22.119402985074647], [1.62703361E12, 203.33333333333331], [1.62703446E12, 22.308823529411757], [1.62703429E12, 12.067340067340075], [1.62703412E12, 23.76543209876543], [1.62703387E12, 63.47094188376757], [1.6270337E12, 296.94368131868174], [1.62703438E12, 17.409606404269475], [1.62703421E12, 20.255999999999997], [1.62703404E12, 31.02134756504337], [1.62703379E12, 27.731197771587738], [1.62703447E12, 22.879194630872497], [1.6270343E12, 12.43589743589744], [1.62703413E12, 21.75799086757989], [1.62703396E12, 22.197452229299362], [1.62703435E12, 27.452567449956476], [1.62703418E12, 29.585635359116033], [1.62703401E12, 29.850567044696437], [1.62703384E12, 34.0195286195286], [1.62703375E12, 21.98333333333333], [1.62703427E12, 12.274213836477996], [1.6270341E12, 19.3609576427256], [1.62703393E12, 19.344594594594582], [1.62703376E12, 21.86250000000001], [1.62703367E12, 779.5193370165753], [1.62703444E12, 24.864292589027897], [1.62703419E12, 62.09135802469138], [1.62703402E12, 30.02540106951869], [1.62703385E12, 60.318577648766286], [1.62703368E12, 480.06611570247946], [1.62703359E12, 1877.625], [1.62703436E12, 18.315134761575692], [1.62703411E12, 19.769230769230763], [1.62703394E12, 24.675675675675677], [1.62703377E12, 21.662222222222216], [1.6270336E12, 105.55555555555556], [1.62703445E12, 23.13207547169814], [1.62703428E12, 12.584249084249082], [1.62703433E12, 19.44846796657378], [1.62703416E12, 23.288659793814475], [1.62703407E12, 24.031031807602808], [1.6270339E12, 53.54326923076924], [1.62703373E12, 30.259158751696013], [1.62703442E12, 27.23295070898043], [1.62703425E12, 15.121306376360787], [1.62703408E12, 20.98272552783109], [1.62703399E12, 26.501234567901275], [1.62703382E12, 34.47671994440581], [1.62703365E12, 813.5085910652922], [1.62703434E12, 21.490175801447762], [1.62703417E12, 24.577336641852778], [1.627034E12, 29.639695712309834], [1.62703391E12, 24.410288582183206], [1.62703374E12, 24.690607734806633], [1.62703443E12, 26.837984496124047], [1.62703426E12, 13.272115384615367], [1.62703409E12, 19.79671717171718], [1.62703392E12, 19.529304029304026], [1.62703383E12, 43.07396664249457], [1.62703366E12, 527.5909090909088]], "isOverall": false, "label": "Press Release", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62703449E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 11.83164983164983, "minX": 1.62703359E12, "maxY": 1814.0000000000002, "series": [{"data": [[1.62703371E12, 43.564003103180845], [1.62703448E12, 21.1904761904762], [1.62703439E12, 17.356666666666676], [1.62703422E12, 17.389999999999958], [1.62703405E12, 37.744912790697654], [1.62703388E12, 54.47474747474743], [1.62703363E12, 464.6829268292682], [1.6270344E12, 18.499666444296203], [1.62703431E12, 12.2972972972973], [1.62703414E12, 19.28085106382978], [1.62703397E12, 20.39499304589708], [1.6270338E12, 23.555671175858457], [1.62703432E12, 12.12340425531914], [1.62703449E12, 22.0], [1.62703423E12, 17.025999999999968], [1.62703406E12, 25.72188552188552], [1.62703389E12, 50.1660201706749], [1.62703372E12, 26.909788867562376], [1.62703441E12, 17.165333333333344], [1.62703424E12, 16.96228956228957], [1.62703415E12, 19.470097357440906], [1.62703398E12, 22.290758047767383], [1.62703381E12, 28.291598023064246], [1.62703364E12, 204.89473684210526], [1.62703403E12, 28.194796531020675], [1.62703386E12, 54.48728246318606], [1.62703369E12, 745.0785219399537], [1.62703437E12, 17.15487316421894], [1.6270342E12, 38.38959306204143], [1.62703395E12, 20.823529411764696], [1.62703378E12, 19.99360341151386], [1.62703361E12, 199.33333333333331], [1.62703446E12, 20.036764705882327], [1.62703429E12, 11.83164983164983], [1.62703412E12, 21.61728395061728], [1.62703387E12, 56.86305945223786], [1.6270337E12, 293.46840659340694], [1.62703438E12, 17.036691127418255], [1.62703421E12, 19.555333333333298], [1.62703404E12, 28.466977985323567], [1.62703379E12, 25.47214484679665], [1.62703447E12, 20.57718120805369], [1.6270343E12, 12.217948717948719], [1.62703413E12, 19.757990867579903], [1.62703396E12, 19.96390658174097], [1.62703435E12, 24.733681462140982], [1.62703418E12, 27.078038674033134], [1.62703401E12, 27.273515677118088], [1.62703384E12, 31.440404040404058], [1.62703375E12, 19.90666666666668], [1.62703427E12, 12.030188679245285], [1.6270341E12, 17.307550644567215], [1.62703393E12, 17.334459459459453], [1.62703376E12, 19.7875], [1.62703367E12, 767.8950276243093], [1.62703444E12, 22.4398460057748], [1.62703419E12, 57.92098765432097], [1.62703402E12, 27.411764705882398], [1.62703385E12, 53.76923076923067], [1.62703368E12, 470.6088154269973], [1.62703359E12, 1814.0000000000002], [1.62703436E12, 17.762266758811325], [1.62703411E12, 17.76254180602007], [1.62703394E12, 22.43243243243243], [1.62703377E12, 19.542222222222215], [1.6270336E12, 99.88888888888887], [1.62703445E12, 20.860377358490563], [1.62703428E12, 12.3095238095238], [1.62703433E12, 17.649025069637858], [1.62703416E12, 21.223711340206155], [1.62703407E12, 21.829325058184637], [1.6270339E12, 46.37307692307693], [1.62703373E12, 28.09905020352783], [1.62703442E12, 25.08170155300472], [1.62703425E12, 14.839813374805583], [1.62703408E12, 18.950095969289872], [1.62703399E12, 24.207407407407405], [1.62703382E12, 31.890896455872127], [1.62703365E12, 790.810996563574], [1.62703434E12, 19.234746639089987], [1.62703417E12, 22.40860215053769], [1.627034E12, 26.969571230982048], [1.62703391E12, 21.690087829360095], [1.62703374E12, 22.59116022099448], [1.62703443E12, 24.35658914728683], [1.62703426E12, 12.96538461538461], [1.62703409E12, 17.773989898989885], [1.62703392E12, 17.450549450549467], [1.62703383E12, 40.379260333574955], [1.62703366E12, 515.472727272727]], "isOverall": false, "label": "Press Release", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62703449E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 10.700336700336697, "minX": 1.62703359E12, "maxY": 761.3642611683848, "series": [{"data": [[1.62703371E12, 38.470907680372385], [1.62703448E12, 17.920634920634928], [1.62703439E12, 15.430000000000007], [1.62703422E12, 15.310666666666663], [1.62703405E12, 32.22311046511625], [1.62703388E12, 43.65185185185186], [1.62703363E12, 427.0487804878049], [1.6270344E12, 16.396264176117395], [1.62703431E12, 10.959459459459447], [1.62703414E12, 16.14255319148937], [1.62703397E12, 17.21974965229485], [1.6270338E12, 19.866805411030185], [1.62703432E12, 10.942553191489356], [1.62703449E12, 19.0], [1.62703423E12, 15.077333333333348], [1.62703406E12, 21.952861952861902], [1.62703389E12, 39.956555469356076], [1.62703372E12, 22.780230326295587], [1.62703441E12, 15.324666666666674], [1.62703424E12, 15.029629629629628], [1.62703415E12, 16.38525730180803], [1.62703398E12, 18.884735202492223], [1.62703381E12, 24.31301482701809], [1.62703364E12, 196.3421052631579], [1.62703403E12, 24.044696464309524], [1.62703386E12, 43.692101740294504], [1.62703369E12, 715.5496535796764], [1.62703437E12, 15.248998664886512], [1.6270342E12, 23.797198132088038], [1.62703395E12, 17.633484162895936], [1.62703378E12, 16.739872068230284], [1.62703361E12, 187.38095238095235], [1.62703446E12, 16.819852941176475], [1.62703429E12, 10.700336700336697], [1.62703412E12, 18.41975308641976], [1.62703387E12, 45.77889111556449], [1.6270337E12, 281.49725274725256], [1.62703438E12, 15.039359573048687], [1.62703421E12, 16.81200000000002], [1.62703404E12, 24.214809873248804], [1.62703379E12, 21.896935933147635], [1.62703447E12, 17.372483221476504], [1.6270343E12, 11.089743589743591], [1.62703413E12, 16.721461187214615], [1.62703396E12, 16.653927813163477], [1.62703435E12, 21.51958224543078], [1.62703418E12, 22.998618784530372], [1.62703401E12, 23.167444963308828], [1.62703384E12, 27.064646464646472], [1.62703375E12, 16.690000000000026], [1.62703427E12, 10.928301886792466], [1.6270341E12, 14.629834254143644], [1.62703393E12, 14.719594594594595], [1.62703376E12, 16.475], [1.62703367E12, 676.0497237569057], [1.62703444E12, 19.030798845043297], [1.62703419E12, 25.76543209876545], [1.62703402E12, 23.300133689839573], [1.62703385E12, 43.67198838896945], [1.62703368E12, 448.33333333333326], [1.62703359E12, 94.3125], [1.62703436E12, 15.647546648237741], [1.62703411E12, 15.140468227424757], [1.62703394E12, 19.040540540540533], [1.62703377E12, 16.333333333333325], [1.6270336E12, 92.0], [1.62703445E12, 17.695597484276732], [1.62703428E12, 11.170329670329675], [1.62703433E12, 15.009749303621179], [1.62703416E12, 17.832989690721654], [1.62703407E12, 18.57719162141195], [1.6270339E12, 36.775000000000006], [1.62703373E12, 24.679782903663508], [1.62703442E12, 21.394328156650896], [1.62703425E12, 13.453343701399692], [1.62703408E12, 16.176583493282163], [1.62703399E12, 20.435390946502082], [1.62703382E12, 27.42876997915221], [1.62703365E12, 761.3642611683848], [1.62703434E12, 16.324715615305085], [1.62703417E12, 18.932175351530205], [1.627034E12, 22.968879668049752], [1.62703391E12, 17.992471769134244], [1.62703374E12, 19.075506445672183], [1.62703443E12, 20.676744186046502], [1.62703426E12, 11.86153846153846], [1.62703409E12, 15.10101010101009], [1.62703392E12, 14.712454212454213], [1.62703383E12, 35.343002175489445], [1.62703366E12, 487.72727272727286]], "isOverall": false, "label": "Press Release", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62703449E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.62703359E12, "maxY": 7983.0, "series": [{"data": [[1.62703371E12, 101.0], [1.62703448E12, 30.0], [1.62703439E12, 88.0], [1.62703422E12, 153.0], [1.62703405E12, 730.0], [1.62703388E12, 162.0], [1.62703363E12, 613.0], [1.6270344E12, 111.0], [1.62703431E12, 44.0], [1.62703414E12, 47.0], [1.62703397E12, 51.0], [1.6270338E12, 79.0], [1.62703432E12, 74.0], [1.62703449E12, 25.0], [1.62703423E12, 133.0], [1.62703406E12, 62.0], [1.62703389E12, 324.0], [1.62703372E12, 76.0], [1.62703441E12, 56.0], [1.62703424E12, 106.0], [1.62703415E12, 43.0], [1.62703398E12, 100.0], [1.62703381E12, 107.0], [1.62703364E12, 310.0], [1.62703403E12, 86.0], [1.62703386E12, 236.0], [1.62703369E12, 1794.0], [1.62703437E12, 74.0], [1.6270342E12, 7983.0], [1.62703395E12, 41.0], [1.62703378E12, 63.0], [1.62703361E12, 248.0], [1.62703446E12, 48.0], [1.62703429E12, 40.0], [1.62703412E12, 61.0], [1.62703387E12, 175.0], [1.6270337E12, 1223.0], [1.62703438E12, 53.0], [1.62703421E12, 125.0], [1.62703404E12, 139.0], [1.62703379E12, 112.0], [1.62703447E12, 32.0], [1.6270343E12, 28.0], [1.62703413E12, 35.0], [1.62703396E12, 38.0], [1.62703435E12, 679.0], [1.62703418E12, 125.0], [1.62703401E12, 122.0], [1.62703384E12, 92.0], [1.62703375E12, 44.0], [1.62703427E12, 107.0], [1.6270341E12, 35.0], [1.62703393E12, 32.0], [1.62703376E12, 30.0], [1.62703367E12, 5979.0], [1.62703444E12, 74.0], [1.62703419E12, 5452.0], [1.62703402E12, 69.0], [1.62703385E12, 198.0], [1.62703368E12, 918.0], [1.62703359E12, 5764.0], [1.62703436E12, 87.0], [1.62703411E12, 29.0], [1.62703394E12, 40.0], [1.62703377E12, 96.0], [1.6270336E12, 114.0], [1.62703445E12, 58.0], [1.62703428E12, 368.0], [1.62703433E12, 410.0], [1.62703416E12, 72.0], [1.62703407E12, 61.0], [1.6270339E12, 85.0], [1.62703373E12, 113.0], [1.62703442E12, 67.0], [1.62703425E12, 109.0], [1.62703408E12, 41.0], [1.62703399E12, 62.0], [1.62703382E12, 113.0], [1.62703365E12, 1397.0], [1.62703434E12, 132.0], [1.62703417E12, 64.0], [1.627034E12, 117.0], [1.62703391E12, 137.0], [1.62703374E12, 99.0], [1.62703443E12, 55.0], [1.62703426E12, 118.0], [1.62703409E12, 36.0], [1.62703392E12, 29.0], [1.62703383E12, 634.0], [1.62703366E12, 755.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62703371E12, 22.0], [1.62703448E12, 20.0], [1.62703439E12, 10.0], [1.62703422E12, 11.0], [1.62703405E12, 21.0], [1.62703388E12, 47.0], [1.62703363E12, 313.0], [1.6270344E12, 11.0], [1.62703431E12, 10.0], [1.62703414E12, 14.0], [1.62703397E12, 19.0], [1.6270338E12, 20.0], [1.62703432E12, 10.0], [1.62703449E12, 25.0], [1.62703423E12, 11.0], [1.62703406E12, 14.0], [1.62703389E12, 46.0], [1.62703372E12, 21.0], [1.62703441E12, 10.0], [1.62703424E12, 11.0], [1.62703415E12, 14.0], [1.62703398E12, 20.0], [1.62703381E12, 20.0], [1.62703364E12, 65.0], [1.62703403E12, 22.0], [1.62703386E12, 47.0], [1.62703369E12, 56.0], [1.62703437E12, 11.0], [1.6270342E12, 22.0], [1.62703395E12, 20.0], [1.62703378E12, 14.0], [1.62703361E12, 150.0], [1.62703446E12, 19.0], [1.62703429E12, 10.0], [1.62703412E12, 13.0], [1.62703387E12, 47.0], [1.6270337E12, 22.0], [1.62703438E12, 11.0], [1.62703421E12, 11.0], [1.62703404E12, 22.0], [1.62703379E12, 14.0], [1.62703447E12, 20.0], [1.6270343E12, 10.0], [1.62703413E12, 14.0], [1.62703396E12, 20.0], [1.62703435E12, 13.0], [1.62703418E12, 16.0], [1.62703401E12, 22.0], [1.62703384E12, 21.0], [1.62703375E12, 14.0], [1.62703427E12, 10.0], [1.6270341E12, 12.0], [1.62703393E12, 12.0], [1.62703376E12, 14.0], [1.62703367E12, 47.0], [1.62703444E12, 20.0], [1.62703419E12, 22.0], [1.62703402E12, 21.0], [1.62703385E12, 22.0], [1.62703368E12, 82.0], [1.62703359E12, 77.0], [1.62703436E12, 11.0], [1.62703411E12, 12.0], [1.62703394E12, 17.0], [1.62703377E12, 14.0], [1.6270336E12, 94.0], [1.62703445E12, 20.0], [1.62703428E12, 10.0], [1.62703433E12, 10.0], [1.62703416E12, 14.0], [1.62703407E12, 13.0], [1.6270339E12, 44.0], [1.62703373E12, 14.0], [1.62703442E12, 11.0], [1.62703425E12, 10.0], [1.62703408E12, 12.0], [1.62703399E12, 20.0], [1.62703382E12, 21.0], [1.62703365E12, 263.0], [1.62703434E12, 12.0], [1.62703417E12, 14.0], [1.627034E12, 22.0], [1.62703391E12, 12.0], [1.62703374E12, 14.0], [1.62703443E12, 20.0], [1.62703426E12, 10.0], [1.62703409E12, 12.0], [1.62703392E12, 12.0], [1.62703383E12, 22.0], [1.62703366E12, 174.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62703371E12, 64.0], [1.62703448E12, 26.0], [1.62703439E12, 24.0], [1.62703422E12, 23.0], [1.62703405E12, 59.0], [1.62703388E12, 71.0], [1.62703363E12, 605.4], [1.6270344E12, 28.0], [1.62703431E12, 14.0], [1.62703414E12, 27.0], [1.62703397E12, 24.0], [1.6270338E12, 30.0], [1.62703432E12, 13.900000000000034], [1.62703449E12, 25.0], [1.62703423E12, 22.0], [1.62703406E12, 37.0], [1.62703389E12, 64.0], [1.62703372E12, 40.0], [1.62703441E12, 24.0], [1.62703424E12, 22.0], [1.62703415E12, 28.0], [1.62703398E12, 28.0], [1.62703381E12, 46.0], [1.62703364E12, 297.2], [1.62703403E12, 38.0], [1.62703386E12, 72.0], [1.62703369E12, 1352.6], [1.62703437E12, 23.0], [1.6270342E12, 37.0], [1.62703395E12, 26.0], [1.62703378E12, 28.0], [1.62703361E12, 236.8], [1.62703446E12, 24.0], [1.62703429E12, 14.0], [1.62703412E12, 30.799999999999997], [1.62703387E12, 76.0], [1.6270337E12, 620.2], [1.62703438E12, 23.0], [1.62703421E12, 30.0], [1.62703404E12, 39.0], [1.62703379E12, 40.0], [1.62703447E12, 26.0], [1.6270343E12, 15.0], [1.62703413E12, 28.0], [1.62703396E12, 24.0], [1.62703435E12, 35.0], [1.62703418E12, 37.0], [1.62703401E12, 37.0], [1.62703384E12, 47.40000000000009], [1.62703375E12, 28.0], [1.62703427E12, 14.0], [1.6270341E12, 26.0], [1.62703393E12, 25.0], [1.62703376E12, 27.0], [1.62703367E12, 908.0999999999999], [1.62703444E12, 28.0], [1.62703419E12, 47.0], [1.62703402E12, 38.0], [1.62703385E12, 75.0], [1.62703368E12, 755.0000000000002], [1.62703359E12, 5166.200000000001], [1.62703436E12, 26.0], [1.62703411E12, 25.0], [1.62703394E12, 29.0], [1.62703377E12, 27.0], [1.6270336E12, 114.0], [1.62703445E12, 25.0], [1.62703428E12, 13.0], [1.62703433E12, 26.0], [1.62703416E12, 30.0], [1.62703407E12, 31.0], [1.6270339E12, 59.0], [1.62703373E12, 52.200000000000045], [1.62703442E12, 35.0], [1.62703425E12, 19.0], [1.62703408E12, 28.0], [1.62703399E12, 31.0], [1.62703382E12, 50.0], [1.62703365E12, 1285.8], [1.62703434E12, 27.0], [1.62703417E12, 31.0], [1.627034E12, 36.0], [1.62703391E12, 50.200000000000045], [1.62703374E12, 33.0], [1.62703443E12, 32.0], [1.62703426E12, 15.0], [1.62703409E12, 26.0], [1.62703392E12, 25.0], [1.62703383E12, 61.0], [1.62703366E12, 719.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62703371E12, 86.0], [1.62703448E12, 30.0], [1.62703439E12, 39.99000000000001], [1.62703422E12, 38.99000000000001], [1.62703405E12, 209.23000000000002], [1.62703388E12, 91.1400000000001], [1.62703363E12, 613.0], [1.6270344E12, 48.0], [1.62703431E12, 39.62000000000006], [1.62703414E12, 32.87000000000006], [1.62703397E12, 34.0], [1.6270338E12, 53.379999999999995], [1.62703432E12, 41.16000000000008], [1.62703449E12, 25.0], [1.62703423E12, 37.0], [1.62703406E12, 50.0], [1.62703389E12, 78.09999999999991], [1.62703372E12, 61.84999999999968], [1.62703441E12, 40.0], [1.62703424E12, 42.0], [1.62703415E12, 33.0], [1.62703398E12, 40.0], [1.62703381E12, 70.84999999999991], [1.62703364E12, 310.0], [1.62703403E12, 57.0], [1.62703386E12, 89.0], [1.62703369E12, 1711.0], [1.62703437E12, 34.00999999999999], [1.6270342E12, 57.0], [1.62703395E12, 35.56], [1.62703378E12, 45.60000000000002], [1.62703361E12, 248.0], [1.62703446E12, 33.09999999999991], [1.62703429E12, 32.059999999999945], [1.62703412E12, 61.0], [1.62703387E12, 97.01999999999998], [1.6270337E12, 1200.2600000000002], [1.62703438E12, 36.0], [1.62703421E12, 46.0], [1.62703404E12, 60.0], [1.62703379E12, 81.80999999999995], [1.62703447E12, 32.0], [1.6270343E12, 28.0], [1.62703413E12, 31.80000000000001], [1.62703396E12, 34.27999999999997], [1.62703435E12, 129.0], [1.62703418E12, 56.0], [1.62703401E12, 52.0], [1.62703384E12, 76.1400000000001], [1.62703375E12, 34.0], [1.62703427E12, 29.039999999999964], [1.6270341E12, 29.0], [1.62703393E12, 29.029999999999973], [1.62703376E12, 30.0], [1.62703367E12, 5253.910000000002], [1.62703444E12, 41.0], [1.62703419E12, 137.35999999999967], [1.62703402E12, 54.0], [1.62703385E12, 98.0], [1.62703368E12, 898.2400000000001], [1.62703359E12, 5764.0], [1.62703436E12, 41.51999999999998], [1.62703411E12, 29.0], [1.62703394E12, 40.0], [1.62703377E12, 41.960000000000036], [1.6270336E12, 114.0], [1.62703445E12, 37.0], [1.62703428E12, 32.11999999999989], [1.62703433E12, 28.809999999999945], [1.62703416E12, 37.289999999999964], [1.62703407E12, 41.0], [1.6270339E12, 72.0], [1.62703373E12, 99.62], [1.62703442E12, 47.0], [1.62703425E12, 38.0], [1.62703408E12, 32.0], [1.62703399E12, 50.0], [1.62703382E12, 75.0], [1.62703365E12, 1380.56], [1.62703434E12, 34.0], [1.62703417E12, 41.0], [1.627034E12, 52.52999999999997], [1.62703391E12, 58.0], [1.62703374E12, 75.55999999999995], [1.62703443E12, 42.08999999999992], [1.62703426E12, 32.0], [1.62703409E12, 30.0], [1.62703392E12, 27.529999999999973], [1.62703383E12, 215.20000000000005], [1.62703366E12, 754.78]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62703371E12, 68.0], [1.62703448E12, 27.0], [1.62703439E12, 29.0], [1.62703422E12, 26.0], [1.62703405E12, 73.0], [1.62703388E12, 76.0], [1.62703363E12, 612.5], [1.6270344E12, 33.0], [1.62703431E12, 16.0], [1.62703414E12, 28.0], [1.62703397E12, 26.0], [1.6270338E12, 37.0], [1.62703432E12, 15.449999999999989], [1.62703449E12, 25.0], [1.62703423E12, 26.0], [1.62703406E12, 41.0], [1.62703389E12, 68.0], [1.62703372E12, 46.0], [1.62703441E12, 28.0], [1.62703424E12, 26.0], [1.62703415E12, 29.0], [1.62703398E12, 30.0], [1.62703381E12, 55.0], [1.62703364E12, 304.29999999999995], [1.62703403E12, 42.0], [1.62703386E12, 78.0], [1.62703369E12, 1512.6999999999991], [1.62703437E12, 26.0], [1.6270342E12, 42.0], [1.62703395E12, 27.0], [1.62703378E12, 32.0], [1.62703361E12, 246.89999999999998], [1.62703446E12, 25.0], [1.62703429E12, 15.0], [1.62703412E12, 32.89999999999999], [1.62703387E12, 83.0], [1.6270337E12, 1047.1], [1.62703438E12, 26.0], [1.62703421E12, 35.0], [1.62703404E12, 43.0], [1.62703379E12, 54.049999999999955], [1.62703447E12, 26.05000000000001], [1.6270343E12, 18.0], [1.62703413E12, 29.0], [1.62703396E12, 26.0], [1.62703435E12, 41.0], [1.62703418E12, 41.549999999999955], [1.62703401E12, 41.0], [1.62703384E12, 56.0], [1.62703375E12, 29.0], [1.62703427E12, 16.199999999999932], [1.6270341E12, 26.0], [1.62703393E12, 26.0], [1.62703376E12, 28.0], [1.62703367E12, 933.8499999999999], [1.62703444E12, 30.0], [1.62703419E12, 59.0], [1.62703402E12, 42.0], [1.62703385E12, 81.0], [1.62703368E12, 843.8000000000001], [1.62703359E12, 5764.0], [1.62703436E12, 30.0], [1.62703411E12, 26.0], [1.62703394E12, 35.25], [1.62703377E12, 28.0], [1.6270336E12, 114.0], [1.62703445E12, 27.0], [1.62703428E12, 15.0], [1.62703433E12, 27.0], [1.62703416E12, 31.0], [1.62703407E12, 33.0], [1.6270339E12, 62.0], [1.62703373E12, 76.10000000000002], [1.62703442E12, 37.0], [1.62703425E12, 22.0], [1.62703408E12, 29.0], [1.62703399E12, 34.0], [1.62703382E12, 58.0], [1.62703365E12, 1335.0], [1.62703434E12, 29.0], [1.62703417E12, 33.0], [1.627034E12, 41.0], [1.62703391E12, 53.09999999999991], [1.62703374E12, 43.0], [1.62703443E12, 34.0], [1.62703426E12, 16.949999999999932], [1.62703409E12, 27.0], [1.62703392E12, 26.0], [1.62703383E12, 69.0], [1.62703366E12, 727.9]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62703449E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 11.0, "minX": 1.0, "maxY": 4778.5, "series": [{"data": [[2.0, 4778.5], [3.0, 51.0], [4.0, 22.0], [5.0, 57.0], [6.0, 22.0], [7.0, 69.0], [8.0, 21.0], [9.0, 24.0], [10.0, 21.0], [11.0, 20.5], [12.0, 25.0], [13.0, 21.0], [14.0, 12.0], [15.0, 22.0], [16.0, 20.0], [17.0, 21.0], [18.0, 20.0], [19.0, 23.0], [20.0, 21.5], [21.0, 20.5], [22.0, 22.5], [23.0, 25.0], [24.0, 14.0], [25.0, 20.0], [26.0, 11.0], [27.0, 22.0], [28.0, 19.0], [29.0, 20.0], [30.0, 241.0], [31.0, 21.0], [32.0, 22.0], [33.0, 18.0], [35.0, 25.0], [34.0, 21.0], [36.0, 21.0], [37.0, 13.0], [39.0, 21.0], [38.0, 13.0], [41.0, 22.0], [43.0, 20.0], [42.0, 19.0], [45.0, 13.0], [44.0, 21.0], [46.0, 22.0], [49.0, 13.5], [48.0, 21.0], [51.0, 21.0], [50.0, 21.0], [53.0, 21.0], [52.0, 180.5], [55.0, 21.5], [54.0, 22.5], [56.0, 21.0], [57.0, 22.0], [58.0, 21.0], [59.0, 16.0], [61.0, 20.0], [62.0, 21.0], [63.0, 23.0], [64.0, 21.0], [67.0, 24.0], [65.0, 21.0], [66.0, 20.0], [70.0, 20.0], [69.0, 21.0], [68.0, 20.0], [71.0, 22.0], [72.0, 23.0], [73.0, 23.0], [74.0, 21.0], [75.0, 20.0], [76.0, 21.0], [78.0, 22.0], [79.0, 20.0], [77.0, 19.5], [83.0, 22.0], [81.0, 22.0], [82.0, 29.0], [80.0, 20.0], [84.0, 23.0], [86.0, 22.0], [87.0, 23.0], [85.0, 21.0], [91.0, 26.0], [90.0, 23.0], [88.0, 22.0], [89.0, 23.0], [95.0, 22.0], [92.0, 25.0], [94.0, 23.0], [93.0, 20.0], [96.0, 50.0], [99.0, 26.0], [98.0, 24.0], [97.0, 24.0], [103.0, 25.0], [101.0, 23.0], [100.0, 23.0], [102.0, 41.0], [107.0, 27.0], [106.0, 24.0], [105.0, 25.0], [104.0, 22.0], [110.0, 25.0], [111.0, 23.0], [109.0, 33.0], [108.0, 24.0], [115.0, 32.0], [114.0, 25.0], [113.0, 40.0], [112.0, 24.0], [116.0, 26.0], [119.0, 29.0], [118.0, 25.0], [117.0, 16.0], [121.0, 17.0], [122.0, 26.0], [123.0, 50.0], [120.0, 25.0], [126.0, 25.0], [127.0, 32.0], [124.0, 38.0], [125.0, 24.0], [134.0, 31.0], [130.0, 25.0], [128.0, 27.0], [135.0, 26.0], [132.0, 26.0], [131.0, 29.0], [133.0, 23.0], [129.0, 25.0], [140.0, 48.0], [139.0, 28.0], [136.0, 55.0], [143.0, 32.0], [137.0, 28.0], [138.0, 23.0], [142.0, 28.0], [141.0, 17.0], [145.0, 28.0], [148.0, 28.0], [149.0, 26.0], [144.0, 30.0], [150.0, 26.0], [147.0, 29.0], [151.0, 25.0], [146.0, 37.0], [154.0, 61.0], [153.0, 47.0], [152.0, 30.0], [157.0, 33.0], [171.0, 575.0], [202.0, 1043.0], [1.0, 24.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 202.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 11.0, "minX": 1.0, "maxY": 4604.5, "series": [{"data": [[2.0, 4604.5], [3.0, 49.0], [4.0, 19.0], [5.0, 55.0], [6.0, 20.0], [7.0, 63.0], [8.0, 19.0], [9.0, 21.5], [10.0, 19.0], [11.0, 18.5], [12.0, 22.5], [13.0, 19.0], [14.0, 11.5], [15.0, 20.0], [16.0, 18.0], [17.0, 19.0], [18.0, 18.0], [19.0, 21.0], [20.0, 19.0], [21.0, 18.5], [22.0, 20.5], [23.0, 22.0], [24.0, 13.5], [25.0, 18.0], [26.0, 11.0], [27.0, 19.0], [28.0, 17.0], [29.0, 18.0], [30.0, 237.5], [31.0, 19.0], [32.0, 20.0], [33.0, 16.0], [35.0, 22.0], [34.0, 19.0], [36.0, 19.0], [37.0, 13.0], [39.0, 19.0], [38.0, 13.0], [41.0, 19.0], [43.0, 17.0], [42.0, 17.0], [45.0, 13.0], [44.0, 19.0], [46.0, 20.0], [49.0, 13.0], [48.0, 19.0], [51.0, 19.0], [50.0, 19.0], [53.0, 18.0], [52.0, 178.5], [55.0, 19.0], [54.0, 21.0], [56.0, 19.0], [57.0, 20.0], [58.0, 19.0], [59.0, 15.0], [61.0, 18.0], [62.0, 19.0], [63.0, 21.0], [64.0, 19.0], [67.0, 22.0], [65.0, 19.0], [66.0, 18.0], [70.0, 18.0], [69.0, 19.0], [68.0, 17.0], [71.0, 20.0], [72.0, 21.0], [73.0, 21.0], [74.0, 19.0], [75.0, 18.0], [76.0, 19.0], [78.0, 20.0], [79.0, 18.0], [77.0, 18.0], [83.0, 20.0], [81.0, 20.0], [82.0, 26.0], [80.0, 18.0], [84.0, 21.0], [86.0, 20.0], [87.0, 21.0], [85.0, 19.0], [91.0, 23.0], [90.0, 21.0], [88.0, 20.0], [89.0, 20.0], [95.0, 20.0], [92.0, 23.0], [94.0, 21.0], [93.0, 18.0], [96.0, 44.0], [99.0, 22.0], [98.0, 22.0], [97.0, 21.0], [103.0, 22.0], [101.0, 21.0], [100.0, 21.0], [102.0, 38.0], [107.0, 24.0], [106.0, 21.0], [105.0, 22.0], [104.0, 20.0], [110.0, 23.0], [111.0, 20.0], [109.0, 30.0], [108.0, 21.0], [115.0, 29.0], [114.0, 23.0], [113.0, 35.5], [112.0, 22.0], [116.0, 24.0], [119.0, 26.0], [118.0, 23.0], [117.0, 16.0], [121.0, 16.0], [122.0, 23.0], [123.0, 44.0], [120.0, 23.0], [126.0, 23.0], [127.0, 27.0], [124.0, 35.0], [125.0, 22.0], [134.0, 28.0], [130.0, 22.5], [128.0, 24.0], [135.0, 23.0], [132.0, 24.0], [131.0, 25.0], [133.0, 21.0], [129.0, 23.0], [140.0, 42.0], [139.0, 25.0], [136.0, 50.0], [143.0, 30.0], [137.0, 25.0], [138.0, 21.0], [142.0, 25.0], [141.0, 17.0], [145.0, 25.0], [148.0, 26.0], [149.0, 24.0], [144.0, 28.0], [150.0, 23.0], [147.0, 27.0], [151.0, 23.0], [146.0, 35.5], [154.0, 56.0], [153.0, 44.0], [152.0, 28.0], [157.0, 30.0], [171.0, 574.0], [202.0, 946.0], [1.0, 22.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 202.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.62703358E12, "maxY": 150.0, "series": [{"data": [[1.62703371E12, 128.8], [1.62703448E12, 6.4], [1.62703439E12, 149.8], [1.62703422E12, 150.0], [1.62703405E12, 137.5], [1.62703388E12, 148.5], [1.62703363E12, 4.1], [1.6270344E12, 150.0], [1.62703431E12, 22.2], [1.62703414E12, 47.0], [1.62703397E12, 71.9], [1.6270338E12, 96.4], [1.62703432E12, 47.1], [1.62703423E12, 150.0], [1.62703406E12, 148.3], [1.62703389E12, 128.6], [1.62703372E12, 103.9], [1.62703441E12, 149.9], [1.62703424E12, 148.3], [1.62703415E12, 72.0], [1.62703398E12, 96.5], [1.62703381E12, 121.4], [1.62703364E12, 3.8], [1.62703403E12, 149.9], [1.62703386E12, 149.5], [1.62703369E12, 43.3], [1.62703437E12, 149.9], [1.6270342E12, 149.9], [1.62703395E12, 22.2], [1.62703378E12, 47.0], [1.62703361E12, 2.1], [1.62703446E12, 54.4], [1.62703429E12, 29.6], [1.62703412E12, 8.0], [1.62703387E12, 149.7], [1.6270337E12, 73.5], [1.62703438E12, 150.0], [1.62703421E12, 149.8], [1.62703404E12, 150.0], [1.62703379E12, 71.7], [1.62703447E12, 29.7], [1.6270343E12, 7.8], [1.62703413E12, 22.0], [1.62703396E12, 47.2], [1.62703435E12, 115.0], [1.62703418E12, 144.8], [1.62703401E12, 149.8], [1.62703384E12, 148.4], [1.62703375E12, 30.0], [1.62703358E12, 0.6], [1.62703427E12, 79.4], [1.6270341E12, 54.4], [1.62703393E12, 29.5], [1.62703376E12, 8.0], [1.62703367E12, 26.6], [1.62703444E12, 103.8], [1.62703419E12, 81.2], [1.62703402E12, 149.6], [1.62703385E12, 138.3], [1.62703368E12, 36.3], [1.62703359E12, 1.0], [1.62703436E12, 144.6], [1.62703411E12, 29.8], [1.62703394E12, 7.4], [1.62703377E12, 22.5], [1.6270336E12, 0.9], [1.62703445E12, 79.4], [1.62703428E12, 54.7], [1.62703433E12, 71.9], [1.62703416E12, 97.0], [1.62703407E12, 128.9], [1.6270339E12, 104.0], [1.62703373E12, 73.5], [1.62703442E12, 148.3], [1.62703425E12, 128.7], [1.62703408E12, 104.1], [1.62703399E12, 121.5], [1.62703382E12, 143.9], [1.62703365E12, 29.1], [1.62703434E12, 96.7], [1.62703417E12, 121.0], [1.627034E12, 144.7], [1.62703391E12, 79.2], [1.62703374E12, 54.3], [1.62703443E12, 128.9], [1.62703426E12, 103.9], [1.62703409E12, 79.2], [1.62703392E12, 54.6], [1.62703383E12, 137.9], [1.62703366E12, 20.6]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62703448E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62703359E12, "maxY": 150.0, "series": [{"data": [[1.62703371E12, 128.9], [1.62703448E12, 6.3], [1.62703439E12, 150.0], [1.62703422E12, 150.0], [1.62703405E12, 137.6], [1.62703388E12, 148.5], [1.62703363E12, 4.1], [1.6270344E12, 149.9], [1.62703431E12, 22.2], [1.62703414E12, 47.0], [1.62703397E12, 71.9], [1.6270338E12, 96.1], [1.62703432E12, 47.0], [1.62703449E12, 0.1], [1.62703423E12, 150.0], [1.62703406E12, 148.5], [1.62703389E12, 128.9], [1.62703372E12, 104.2], [1.62703441E12, 150.0], [1.62703424E12, 148.5], [1.62703415E12, 71.9], [1.62703398E12, 96.3], [1.62703381E12, 121.4], [1.62703364E12, 3.8], [1.62703403E12, 149.9], [1.62703386E12, 149.4], [1.62703369E12, 43.3], [1.62703437E12, 149.8], [1.6270342E12, 149.9], [1.62703395E12, 22.1], [1.62703378E12, 46.9], [1.62703361E12, 2.1], [1.62703446E12, 54.4], [1.62703429E12, 29.7], [1.62703412E12, 8.1], [1.62703387E12, 149.7], [1.6270337E12, 72.8], [1.62703438E12, 149.9], [1.62703421E12, 150.0], [1.62703404E12, 149.9], [1.62703379E12, 71.8], [1.62703447E12, 29.8], [1.6270343E12, 7.8], [1.62703413E12, 21.9], [1.62703396E12, 47.1], [1.62703435E12, 114.9], [1.62703418E12, 144.8], [1.62703401E12, 149.9], [1.62703384E12, 148.5], [1.62703375E12, 30.0], [1.62703427E12, 79.5], [1.6270341E12, 54.3], [1.62703393E12, 29.6], [1.62703376E12, 8.0], [1.62703367E12, 36.2], [1.62703444E12, 103.9], [1.62703419E12, 81.0], [1.62703402E12, 149.6], [1.62703385E12, 137.8], [1.62703368E12, 36.3], [1.62703359E12, 1.6], [1.62703436E12, 144.7], [1.62703411E12, 29.9], [1.62703394E12, 7.4], [1.62703377E12, 22.5], [1.6270336E12, 0.9], [1.62703445E12, 79.5], [1.62703428E12, 54.6], [1.62703433E12, 71.8], [1.62703416E12, 97.0], [1.62703407E12, 128.9], [1.6270339E12, 104.0], [1.62703373E12, 73.7], [1.62703442E12, 148.1], [1.62703425E12, 128.6], [1.62703408E12, 104.2], [1.62703399E12, 121.5], [1.62703382E12, 143.9], [1.62703365E12, 29.1], [1.62703434E12, 96.7], [1.62703417E12, 120.9], [1.627034E12, 144.6], [1.62703391E12, 79.7], [1.62703374E12, 54.3], [1.62703443E12, 129.0], [1.62703426E12, 104.0], [1.62703409E12, 79.2], [1.62703392E12, 54.6], [1.62703383E12, 137.9], [1.62703366E12, 11.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62703449E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62703359E12, "maxY": 150.0, "series": [{"data": [[1.62703371E12, 128.9], [1.62703448E12, 6.3], [1.62703439E12, 150.0], [1.62703422E12, 150.0], [1.62703405E12, 137.6], [1.62703388E12, 148.5], [1.62703363E12, 4.1], [1.6270344E12, 149.9], [1.62703431E12, 22.2], [1.62703414E12, 47.0], [1.62703397E12, 71.9], [1.6270338E12, 96.1], [1.62703432E12, 47.0], [1.62703449E12, 0.1], [1.62703423E12, 150.0], [1.62703406E12, 148.5], [1.62703389E12, 128.9], [1.62703372E12, 104.2], [1.62703441E12, 150.0], [1.62703424E12, 148.5], [1.62703415E12, 71.9], [1.62703398E12, 96.3], [1.62703381E12, 121.4], [1.62703364E12, 3.8], [1.62703403E12, 149.9], [1.62703386E12, 149.4], [1.62703369E12, 43.3], [1.62703437E12, 149.8], [1.6270342E12, 149.9], [1.62703395E12, 22.1], [1.62703378E12, 46.9], [1.62703361E12, 2.1], [1.62703446E12, 54.4], [1.62703429E12, 29.7], [1.62703412E12, 8.1], [1.62703387E12, 149.7], [1.6270337E12, 72.8], [1.62703438E12, 149.9], [1.62703421E12, 150.0], [1.62703404E12, 149.9], [1.62703379E12, 71.8], [1.62703447E12, 29.8], [1.6270343E12, 7.8], [1.62703413E12, 21.9], [1.62703396E12, 47.1], [1.62703435E12, 114.9], [1.62703418E12, 144.8], [1.62703401E12, 149.9], [1.62703384E12, 148.5], [1.62703375E12, 30.0], [1.62703427E12, 79.5], [1.6270341E12, 54.3], [1.62703393E12, 29.6], [1.62703376E12, 8.0], [1.62703367E12, 36.2], [1.62703444E12, 103.9], [1.62703419E12, 81.0], [1.62703402E12, 149.6], [1.62703385E12, 137.8], [1.62703368E12, 36.3], [1.62703359E12, 1.6], [1.62703436E12, 144.7], [1.62703411E12, 29.9], [1.62703394E12, 7.4], [1.62703377E12, 22.5], [1.6270336E12, 0.9], [1.62703445E12, 79.5], [1.62703428E12, 54.6], [1.62703433E12, 71.8], [1.62703416E12, 97.0], [1.62703407E12, 128.9], [1.6270339E12, 104.0], [1.62703373E12, 73.7], [1.62703442E12, 148.1], [1.62703425E12, 128.6], [1.62703408E12, 104.2], [1.62703399E12, 121.5], [1.62703382E12, 143.9], [1.62703365E12, 29.1], [1.62703434E12, 96.7], [1.62703417E12, 120.9], [1.627034E12, 144.6], [1.62703391E12, 79.7], [1.62703374E12, 54.3], [1.62703443E12, 129.0], [1.62703426E12, 104.0], [1.62703409E12, 79.2], [1.62703392E12, 54.6], [1.62703383E12, 137.9], [1.62703366E12, 11.0]], "isOverall": false, "label": "Press Release-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62703449E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62703359E12, "maxY": 150.0, "series": [{"data": [[1.62703371E12, 128.9], [1.62703448E12, 6.3], [1.62703439E12, 150.0], [1.62703422E12, 150.0], [1.62703405E12, 137.6], [1.62703388E12, 148.5], [1.62703363E12, 4.1], [1.6270344E12, 149.9], [1.62703431E12, 22.2], [1.62703414E12, 47.0], [1.62703397E12, 71.9], [1.6270338E12, 96.1], [1.62703432E12, 47.0], [1.62703449E12, 0.1], [1.62703423E12, 150.0], [1.62703406E12, 148.5], [1.62703389E12, 128.9], [1.62703372E12, 104.2], [1.62703441E12, 150.0], [1.62703424E12, 148.5], [1.62703415E12, 71.9], [1.62703398E12, 96.3], [1.62703381E12, 121.4], [1.62703364E12, 3.8], [1.62703403E12, 149.9], [1.62703386E12, 149.4], [1.62703369E12, 43.3], [1.62703437E12, 149.8], [1.6270342E12, 149.9], [1.62703395E12, 22.1], [1.62703378E12, 46.9], [1.62703361E12, 2.1], [1.62703446E12, 54.4], [1.62703429E12, 29.7], [1.62703412E12, 8.1], [1.62703387E12, 149.7], [1.6270337E12, 72.8], [1.62703438E12, 149.9], [1.62703421E12, 150.0], [1.62703404E12, 149.9], [1.62703379E12, 71.8], [1.62703447E12, 29.8], [1.6270343E12, 7.8], [1.62703413E12, 21.9], [1.62703396E12, 47.1], [1.62703435E12, 114.9], [1.62703418E12, 144.8], [1.62703401E12, 149.9], [1.62703384E12, 148.5], [1.62703375E12, 30.0], [1.62703427E12, 79.5], [1.6270341E12, 54.3], [1.62703393E12, 29.6], [1.62703376E12, 8.0], [1.62703367E12, 36.2], [1.62703444E12, 103.9], [1.62703419E12, 81.0], [1.62703402E12, 149.6], [1.62703385E12, 137.8], [1.62703368E12, 36.3], [1.62703359E12, 1.6], [1.62703436E12, 144.7], [1.62703411E12, 29.9], [1.62703394E12, 7.4], [1.62703377E12, 22.5], [1.6270336E12, 0.9], [1.62703445E12, 79.5], [1.62703428E12, 54.6], [1.62703433E12, 71.8], [1.62703416E12, 97.0], [1.62703407E12, 128.9], [1.6270339E12, 104.0], [1.62703373E12, 73.7], [1.62703442E12, 148.1], [1.62703425E12, 128.6], [1.62703408E12, 104.2], [1.62703399E12, 121.5], [1.62703382E12, 143.9], [1.62703365E12, 29.1], [1.62703434E12, 96.7], [1.62703417E12, 120.9], [1.627034E12, 144.6], [1.62703391E12, 79.7], [1.62703374E12, 54.3], [1.62703443E12, 129.0], [1.62703426E12, 104.0], [1.62703409E12, 79.2], [1.62703392E12, 54.6], [1.62703383E12, 137.9], [1.62703366E12, 11.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62703449E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

