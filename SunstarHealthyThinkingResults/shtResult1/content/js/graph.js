/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "maxY": 7094.0, "series": [{"data": [[0.0, 10.0], [0.1, 10.0], [0.2, 10.0], [0.3, 10.0], [0.4, 10.0], [0.5, 11.0], [0.6, 11.0], [0.7, 11.0], [0.8, 11.0], [0.9, 11.0], [1.0, 11.0], [1.1, 11.0], [1.2, 11.0], [1.3, 11.0], [1.4, 11.0], [1.5, 11.0], [1.6, 11.0], [1.7, 11.0], [1.8, 11.0], [1.9, 11.0], [2.0, 11.0], [2.1, 11.0], [2.2, 11.0], [2.3, 12.0], [2.4, 12.0], [2.5, 12.0], [2.6, 12.0], [2.7, 12.0], [2.8, 12.0], [2.9, 12.0], [3.0, 12.0], [3.1, 12.0], [3.2, 12.0], [3.3, 12.0], [3.4, 12.0], [3.5, 12.0], [3.6, 12.0], [3.7, 12.0], [3.8, 12.0], [3.9, 12.0], [4.0, 12.0], [4.1, 12.0], [4.2, 12.0], [4.3, 12.0], [4.4, 12.0], [4.5, 12.0], [4.6, 12.0], [4.7, 12.0], [4.8, 13.0], [4.9, 13.0], [5.0, 13.0], [5.1, 13.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 13.0], [5.6, 13.0], [5.7, 13.0], [5.8, 13.0], [5.9, 13.0], [6.0, 13.0], [6.1, 13.0], [6.2, 13.0], [6.3, 13.0], [6.4, 13.0], [6.5, 13.0], [6.6, 13.0], [6.7, 13.0], [6.8, 13.0], [6.9, 13.0], [7.0, 13.0], [7.1, 13.0], [7.2, 13.0], [7.3, 13.0], [7.4, 13.0], [7.5, 13.0], [7.6, 13.0], [7.7, 13.0], [7.8, 13.0], [7.9, 13.0], [8.0, 13.0], [8.1, 13.0], [8.2, 13.0], [8.3, 13.0], [8.4, 13.0], [8.5, 13.0], [8.6, 13.0], [8.7, 13.0], [8.8, 13.0], [8.9, 13.0], [9.0, 13.0], [9.1, 13.0], [9.2, 13.0], [9.3, 13.0], [9.4, 13.0], [9.5, 13.0], [9.6, 13.0], [9.7, 13.0], [9.8, 13.0], [9.9, 13.0], [10.0, 13.0], [10.1, 13.0], [10.2, 13.0], [10.3, 13.0], [10.4, 13.0], [10.5, 13.0], [10.6, 13.0], [10.7, 14.0], [10.8, 14.0], [10.9, 14.0], [11.0, 14.0], [11.1, 14.0], [11.2, 14.0], [11.3, 14.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 14.0], [13.7, 14.0], [13.8, 14.0], [13.9, 14.0], [14.0, 14.0], [14.1, 14.0], [14.2, 14.0], [14.3, 14.0], [14.4, 14.0], [14.5, 14.0], [14.6, 14.0], [14.7, 14.0], [14.8, 14.0], [14.9, 14.0], [15.0, 14.0], [15.1, 14.0], [15.2, 14.0], [15.3, 14.0], [15.4, 14.0], [15.5, 14.0], [15.6, 14.0], [15.7, 14.0], [15.8, 14.0], [15.9, 14.0], [16.0, 14.0], [16.1, 14.0], [16.2, 14.0], [16.3, 14.0], [16.4, 14.0], [16.5, 14.0], [16.6, 14.0], [16.7, 14.0], [16.8, 14.0], [16.9, 14.0], [17.0, 14.0], [17.1, 14.0], [17.2, 14.0], [17.3, 14.0], [17.4, 14.0], [17.5, 14.0], [17.6, 14.0], [17.7, 14.0], [17.8, 14.0], [17.9, 14.0], [18.0, 14.0], [18.1, 14.0], [18.2, 14.0], [18.3, 14.0], [18.4, 14.0], [18.5, 14.0], [18.6, 14.0], [18.7, 14.0], [18.8, 14.0], [18.9, 14.0], [19.0, 14.0], [19.1, 14.0], [19.2, 15.0], [19.3, 15.0], [19.4, 15.0], [19.5, 15.0], [19.6, 15.0], [19.7, 15.0], [19.8, 15.0], [19.9, 15.0], [20.0, 15.0], [20.1, 15.0], [20.2, 15.0], [20.3, 15.0], [20.4, 15.0], [20.5, 15.0], [20.6, 15.0], [20.7, 15.0], [20.8, 15.0], [20.9, 15.0], [21.0, 15.0], [21.1, 15.0], [21.2, 15.0], [21.3, 15.0], [21.4, 15.0], [21.5, 15.0], [21.6, 15.0], [21.7, 15.0], [21.8, 15.0], [21.9, 15.0], [22.0, 15.0], [22.1, 15.0], [22.2, 15.0], [22.3, 15.0], [22.4, 15.0], [22.5, 15.0], [22.6, 15.0], [22.7, 15.0], [22.8, 15.0], [22.9, 15.0], [23.0, 15.0], [23.1, 15.0], [23.2, 15.0], [23.3, 15.0], [23.4, 15.0], [23.5, 15.0], [23.6, 15.0], [23.7, 15.0], [23.8, 15.0], [23.9, 15.0], [24.0, 15.0], [24.1, 15.0], [24.2, 15.0], [24.3, 15.0], [24.4, 15.0], [24.5, 16.0], [24.6, 16.0], [24.7, 16.0], [24.8, 16.0], [24.9, 16.0], [25.0, 16.0], [25.1, 16.0], [25.2, 16.0], [25.3, 16.0], [25.4, 16.0], [25.5, 16.0], [25.6, 16.0], [25.7, 16.0], [25.8, 16.0], [25.9, 16.0], [26.0, 16.0], [26.1, 16.0], [26.2, 16.0], [26.3, 16.0], [26.4, 16.0], [26.5, 16.0], [26.6, 16.0], [26.7, 16.0], [26.8, 16.0], [26.9, 16.0], [27.0, 16.0], [27.1, 16.0], [27.2, 16.0], [27.3, 16.0], [27.4, 16.0], [27.5, 17.0], [27.6, 17.0], [27.7, 17.0], [27.8, 17.0], [27.9, 17.0], [28.0, 17.0], [28.1, 17.0], [28.2, 17.0], [28.3, 17.0], [28.4, 17.0], [28.5, 17.0], [28.6, 17.0], [28.7, 17.0], [28.8, 17.0], [28.9, 17.0], [29.0, 17.0], [29.1, 17.0], [29.2, 17.0], [29.3, 17.0], [29.4, 17.0], [29.5, 17.0], [29.6, 17.0], [29.7, 17.0], [29.8, 18.0], [29.9, 18.0], [30.0, 18.0], [30.1, 18.0], [30.2, 18.0], [30.3, 18.0], [30.4, 18.0], [30.5, 18.0], [30.6, 18.0], [30.7, 18.0], [30.8, 18.0], [30.9, 18.0], [31.0, 18.0], [31.1, 18.0], [31.2, 18.0], [31.3, 18.0], [31.4, 18.0], [31.5, 18.0], [31.6, 18.0], [31.7, 18.0], [31.8, 18.0], [31.9, 18.0], [32.0, 18.0], [32.1, 18.0], [32.2, 18.0], [32.3, 19.0], [32.4, 19.0], [32.5, 19.0], [32.6, 19.0], [32.7, 19.0], [32.8, 19.0], [32.9, 19.0], [33.0, 19.0], [33.1, 19.0], [33.2, 19.0], [33.3, 19.0], [33.4, 19.0], [33.5, 19.0], [33.6, 19.0], [33.7, 19.0], [33.8, 19.0], [33.9, 19.0], [34.0, 19.0], [34.1, 19.0], [34.2, 19.0], [34.3, 19.0], [34.4, 19.0], [34.5, 19.0], [34.6, 19.0], [34.7, 19.0], [34.8, 19.0], [34.9, 19.0], [35.0, 20.0], [35.1, 20.0], [35.2, 20.0], [35.3, 20.0], [35.4, 20.0], [35.5, 20.0], [35.6, 20.0], [35.7, 20.0], [35.8, 20.0], [35.9, 20.0], [36.0, 20.0], [36.1, 20.0], [36.2, 20.0], [36.3, 20.0], [36.4, 20.0], [36.5, 20.0], [36.6, 20.0], [36.7, 20.0], [36.8, 20.0], [36.9, 20.0], [37.0, 20.0], [37.1, 20.0], [37.2, 20.0], [37.3, 20.0], [37.4, 20.0], [37.5, 20.0], [37.6, 20.0], [37.7, 20.0], [37.8, 20.0], [37.9, 20.0], [38.0, 20.0], [38.1, 20.0], [38.2, 20.0], [38.3, 20.0], [38.4, 20.0], [38.5, 20.0], [38.6, 21.0], [38.7, 21.0], [38.8, 21.0], [38.9, 21.0], [39.0, 21.0], [39.1, 21.0], [39.2, 21.0], [39.3, 21.0], [39.4, 21.0], [39.5, 21.0], [39.6, 21.0], [39.7, 21.0], [39.8, 21.0], [39.9, 21.0], [40.0, 21.0], [40.1, 21.0], [40.2, 21.0], [40.3, 21.0], [40.4, 21.0], [40.5, 21.0], [40.6, 21.0], [40.7, 21.0], [40.8, 21.0], [40.9, 21.0], [41.0, 21.0], [41.1, 21.0], [41.2, 21.0], [41.3, 21.0], [41.4, 21.0], [41.5, 21.0], [41.6, 21.0], [41.7, 21.0], [41.8, 21.0], [41.9, 21.0], [42.0, 21.0], [42.1, 21.0], [42.2, 21.0], [42.3, 21.0], [42.4, 21.0], [42.5, 21.0], [42.6, 21.0], [42.7, 21.0], [42.8, 21.0], [42.9, 21.0], [43.0, 21.0], [43.1, 21.0], [43.2, 21.0], [43.3, 21.0], [43.4, 21.0], [43.5, 21.0], [43.6, 21.0], [43.7, 21.0], [43.8, 21.0], [43.9, 21.0], [44.0, 21.0], [44.1, 21.0], [44.2, 21.0], [44.3, 21.0], [44.4, 21.0], [44.5, 21.0], [44.6, 21.0], [44.7, 21.0], [44.8, 22.0], [44.9, 22.0], [45.0, 22.0], [45.1, 22.0], [45.2, 22.0], [45.3, 22.0], [45.4, 22.0], [45.5, 22.0], [45.6, 22.0], [45.7, 22.0], [45.8, 22.0], [45.9, 22.0], [46.0, 22.0], [46.1, 22.0], [46.2, 22.0], [46.3, 22.0], [46.4, 22.0], [46.5, 22.0], [46.6, 22.0], [46.7, 22.0], [46.8, 22.0], [46.9, 22.0], [47.0, 22.0], [47.1, 22.0], [47.2, 22.0], [47.3, 22.0], [47.4, 22.0], [47.5, 22.0], [47.6, 22.0], [47.7, 22.0], [47.8, 22.0], [47.9, 22.0], [48.0, 22.0], [48.1, 22.0], [48.2, 22.0], [48.3, 22.0], [48.4, 22.0], [48.5, 22.0], [48.6, 22.0], [48.7, 22.0], [48.8, 22.0], [48.9, 22.0], [49.0, 22.0], [49.1, 22.0], [49.2, 22.0], [49.3, 22.0], [49.4, 22.0], [49.5, 22.0], [49.6, 22.0], [49.7, 22.0], [49.8, 22.0], [49.9, 22.0], [50.0, 22.0], [50.1, 22.0], [50.2, 22.0], [50.3, 22.0], [50.4, 22.0], [50.5, 22.0], [50.6, 22.0], [50.7, 22.0], [50.8, 22.0], [50.9, 22.0], [51.0, 22.0], [51.1, 22.0], [51.2, 22.0], [51.3, 22.0], [51.4, 22.0], [51.5, 22.0], [51.6, 22.0], [51.7, 22.0], [51.8, 22.0], [51.9, 22.0], [52.0, 22.0], [52.1, 23.0], [52.2, 23.0], [52.3, 23.0], [52.4, 23.0], [52.5, 23.0], [52.6, 23.0], [52.7, 23.0], [52.8, 23.0], [52.9, 23.0], [53.0, 23.0], [53.1, 23.0], [53.2, 23.0], [53.3, 23.0], [53.4, 23.0], [53.5, 23.0], [53.6, 23.0], [53.7, 23.0], [53.8, 23.0], [53.9, 23.0], [54.0, 23.0], [54.1, 23.0], [54.2, 23.0], [54.3, 23.0], [54.4, 23.0], [54.5, 23.0], [54.6, 23.0], [54.7, 23.0], [54.8, 23.0], [54.9, 23.0], [55.0, 23.0], [55.1, 23.0], [55.2, 23.0], [55.3, 23.0], [55.4, 23.0], [55.5, 23.0], [55.6, 23.0], [55.7, 23.0], [55.8, 23.0], [55.9, 23.0], [56.0, 23.0], [56.1, 23.0], [56.2, 23.0], [56.3, 23.0], [56.4, 23.0], [56.5, 23.0], [56.6, 23.0], [56.7, 23.0], [56.8, 23.0], [56.9, 23.0], [57.0, 23.0], [57.1, 23.0], [57.2, 23.0], [57.3, 23.0], [57.4, 23.0], [57.5, 23.0], [57.6, 23.0], [57.7, 23.0], [57.8, 23.0], [57.9, 23.0], [58.0, 23.0], [58.1, 23.0], [58.2, 23.0], [58.3, 23.0], [58.4, 23.0], [58.5, 23.0], [58.6, 24.0], [58.7, 24.0], [58.8, 24.0], [58.9, 24.0], [59.0, 24.0], [59.1, 24.0], [59.2, 24.0], [59.3, 24.0], [59.4, 24.0], [59.5, 24.0], [59.6, 24.0], [59.7, 24.0], [59.8, 24.0], [59.9, 24.0], [60.0, 24.0], [60.1, 24.0], [60.2, 24.0], [60.3, 24.0], [60.4, 24.0], [60.5, 24.0], [60.6, 24.0], [60.7, 24.0], [60.8, 24.0], [60.9, 24.0], [61.0, 24.0], [61.1, 24.0], [61.2, 24.0], [61.3, 24.0], [61.4, 24.0], [61.5, 24.0], [61.6, 24.0], [61.7, 24.0], [61.8, 24.0], [61.9, 24.0], [62.0, 24.0], [62.1, 24.0], [62.2, 24.0], [62.3, 24.0], [62.4, 24.0], [62.5, 24.0], [62.6, 24.0], [62.7, 24.0], [62.8, 24.0], [62.9, 24.0], [63.0, 24.0], [63.1, 24.0], [63.2, 24.0], [63.3, 24.0], [63.4, 24.0], [63.5, 24.0], [63.6, 24.0], [63.7, 24.0], [63.8, 24.0], [63.9, 24.0], [64.0, 24.0], [64.1, 25.0], [64.2, 25.0], [64.3, 25.0], [64.4, 25.0], [64.5, 25.0], [64.6, 25.0], [64.7, 25.0], [64.8, 25.0], [64.9, 25.0], [65.0, 25.0], [65.1, 25.0], [65.2, 25.0], [65.3, 25.0], [65.4, 25.0], [65.5, 25.0], [65.6, 25.0], [65.7, 25.0], [65.8, 25.0], [65.9, 25.0], [66.0, 25.0], [66.1, 25.0], [66.2, 25.0], [66.3, 25.0], [66.4, 25.0], [66.5, 25.0], [66.6, 25.0], [66.7, 25.0], [66.8, 25.0], [66.9, 25.0], [67.0, 25.0], [67.1, 25.0], [67.2, 25.0], [67.3, 25.0], [67.4, 25.0], [67.5, 25.0], [67.6, 25.0], [67.7, 25.0], [67.8, 25.0], [67.9, 25.0], [68.0, 25.0], [68.1, 25.0], [68.2, 25.0], [68.3, 25.0], [68.4, 25.0], [68.5, 25.0], [68.6, 25.0], [68.7, 26.0], [68.8, 26.0], [68.9, 26.0], [69.0, 26.0], [69.1, 26.0], [69.2, 26.0], [69.3, 26.0], [69.4, 26.0], [69.5, 26.0], [69.6, 26.0], [69.7, 26.0], [69.8, 26.0], [69.9, 26.0], [70.0, 26.0], [70.1, 26.0], [70.2, 26.0], [70.3, 26.0], [70.4, 26.0], [70.5, 26.0], [70.6, 26.0], [70.7, 26.0], [70.8, 26.0], [70.9, 26.0], [71.0, 26.0], [71.1, 26.0], [71.2, 26.0], [71.3, 26.0], [71.4, 26.0], [71.5, 26.0], [71.6, 26.0], [71.7, 26.0], [71.8, 26.0], [71.9, 26.0], [72.0, 26.0], [72.1, 26.0], [72.2, 26.0], [72.3, 26.0], [72.4, 26.0], [72.5, 26.0], [72.6, 27.0], [72.7, 27.0], [72.8, 27.0], [72.9, 27.0], [73.0, 27.0], [73.1, 27.0], [73.2, 27.0], [73.3, 27.0], [73.4, 27.0], [73.5, 27.0], [73.6, 27.0], [73.7, 27.0], [73.8, 27.0], [73.9, 27.0], [74.0, 27.0], [74.1, 27.0], [74.2, 27.0], [74.3, 27.0], [74.4, 27.0], [74.5, 27.0], [74.6, 27.0], [74.7, 27.0], [74.8, 27.0], [74.9, 27.0], [75.0, 27.0], [75.1, 27.0], [75.2, 27.0], [75.3, 27.0], [75.4, 27.0], [75.5, 27.0], [75.6, 27.0], [75.7, 27.0], [75.8, 27.0], [75.9, 27.0], [76.0, 27.0], [76.1, 27.0], [76.2, 28.0], [76.3, 28.0], [76.4, 28.0], [76.5, 28.0], [76.6, 28.0], [76.7, 28.0], [76.8, 28.0], [76.9, 28.0], [77.0, 28.0], [77.1, 28.0], [77.2, 28.0], [77.3, 28.0], [77.4, 28.0], [77.5, 28.0], [77.6, 28.0], [77.7, 28.0], [77.8, 28.0], [77.9, 28.0], [78.0, 28.0], [78.1, 28.0], [78.2, 28.0], [78.3, 28.0], [78.4, 28.0], [78.5, 28.0], [78.6, 28.0], [78.7, 28.0], [78.8, 28.0], [78.9, 28.0], [79.0, 28.0], [79.1, 28.0], [79.2, 28.0], [79.3, 28.0], [79.4, 28.0], [79.5, 29.0], [79.6, 29.0], [79.7, 29.0], [79.8, 29.0], [79.9, 29.0], [80.0, 29.0], [80.1, 29.0], [80.2, 29.0], [80.3, 29.0], [80.4, 29.0], [80.5, 29.0], [80.6, 29.0], [80.7, 29.0], [80.8, 29.0], [80.9, 29.0], [81.0, 29.0], [81.1, 29.0], [81.2, 29.0], [81.3, 29.0], [81.4, 29.0], [81.5, 29.0], [81.6, 29.0], [81.7, 29.0], [81.8, 29.0], [81.9, 29.0], [82.0, 29.0], [82.1, 29.0], [82.2, 29.0], [82.3, 30.0], [82.4, 30.0], [82.5, 30.0], [82.6, 30.0], [82.7, 30.0], [82.8, 30.0], [82.9, 30.0], [83.0, 30.0], [83.1, 30.0], [83.2, 30.0], [83.3, 30.0], [83.4, 30.0], [83.5, 30.0], [83.6, 30.0], [83.7, 30.0], [83.8, 30.0], [83.9, 30.0], [84.0, 30.0], [84.1, 30.0], [84.2, 30.0], [84.3, 30.0], [84.4, 31.0], [84.5, 31.0], [84.6, 31.0], [84.7, 31.0], [84.8, 31.0], [84.9, 31.0], [85.0, 31.0], [85.1, 31.0], [85.2, 31.0], [85.3, 31.0], [85.4, 31.0], [85.5, 31.0], [85.6, 31.0], [85.7, 31.0], [85.8, 31.0], [85.9, 31.0], [86.0, 32.0], [86.1, 32.0], [86.2, 32.0], [86.3, 32.0], [86.4, 32.0], [86.5, 32.0], [86.6, 32.0], [86.7, 32.0], [86.8, 32.0], [86.9, 32.0], [87.0, 32.0], [87.1, 32.0], [87.2, 32.0], [87.3, 33.0], [87.4, 33.0], [87.5, 33.0], [87.6, 33.0], [87.7, 33.0], [87.8, 33.0], [87.9, 33.0], [88.0, 33.0], [88.1, 33.0], [88.2, 33.0], [88.3, 33.0], [88.4, 34.0], [88.5, 34.0], [88.6, 34.0], [88.7, 34.0], [88.8, 34.0], [88.9, 34.0], [89.0, 34.0], [89.1, 34.0], [89.2, 34.0], [89.3, 35.0], [89.4, 35.0], [89.5, 35.0], [89.6, 35.0], [89.7, 35.0], [89.8, 35.0], [89.9, 35.0], [90.0, 36.0], [90.1, 36.0], [90.2, 36.0], [90.3, 36.0], [90.4, 36.0], [90.5, 36.0], [90.6, 36.0], [90.7, 37.0], [90.8, 37.0], [90.9, 37.0], [91.0, 37.0], [91.1, 37.0], [91.2, 38.0], [91.3, 38.0], [91.4, 38.0], [91.5, 38.0], [91.6, 39.0], [91.7, 39.0], [91.8, 39.0], [91.9, 39.0], [92.0, 40.0], [92.1, 40.0], [92.2, 40.0], [92.3, 41.0], [92.4, 41.0], [92.5, 41.0], [92.6, 42.0], [92.7, 42.0], [92.8, 43.0], [92.9, 43.0], [93.0, 43.0], [93.1, 44.0], [93.2, 44.0], [93.3, 45.0], [93.4, 45.0], [93.5, 46.0], [93.6, 46.0], [93.7, 47.0], [93.8, 47.0], [93.9, 48.0], [94.0, 49.0], [94.1, 49.0], [94.2, 50.0], [94.3, 50.0], [94.4, 51.0], [94.5, 52.0], [94.6, 52.0], [94.7, 53.0], [94.8, 54.0], [94.9, 55.0], [95.0, 55.0], [95.1, 56.0], [95.2, 57.0], [95.3, 58.0], [95.4, 59.0], [95.5, 59.0], [95.6, 60.0], [95.7, 61.0], [95.8, 62.0], [95.9, 63.0], [96.0, 64.0], [96.1, 65.0], [96.2, 67.0], [96.3, 68.0], [96.4, 69.0], [96.5, 70.0], [96.6, 72.0], [96.7, 74.0], [96.8, 75.0], [96.9, 77.0], [97.0, 80.0], [97.1, 83.0], [97.2, 88.0], [97.3, 98.0], [97.4, 117.0], [97.5, 168.0], [97.6, 211.0], [97.7, 241.0], [97.8, 267.0], [97.9, 298.0], [98.0, 339.0], [98.1, 375.0], [98.2, 408.0], [98.3, 440.0], [98.4, 468.0], [98.5, 496.0], [98.6, 531.0], [98.7, 564.0], [98.8, 590.0], [98.9, 627.0], [99.0, 663.0], [99.1, 718.0], [99.2, 763.0], [99.3, 798.0], [99.4, 831.0], [99.5, 874.0], [99.6, 915.0], [99.7, 969.0], [99.8, 1051.0], [99.9, 1182.0]], "isOverall": false, "label": "Healthy Thinking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 77719.0, "series": [{"data": [[0.0, 77719.0], [600.0, 197.0], [700.0, 192.0], [800.0, 209.0], [900.0, 132.0], [1000.0, 76.0], [1100.0, 76.0], [1200.0, 45.0], [1300.0, 1.0], [1400.0, 2.0], [1500.0, 2.0], [100.0, 204.0], [1600.0, 1.0], [200.0, 272.0], [4200.0, 1.0], [4500.0, 1.0], [4800.0, 1.0], [300.0, 223.0], [5000.0, 1.0], [5100.0, 2.0], [5500.0, 2.0], [6200.0, 1.0], [6500.0, 1.0], [400.0, 261.0], [7000.0, 1.0], [500.0, 246.0]], "isOverall": false, "label": "Healthy Thinking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 14.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 78681.0, "series": [{"data": [[0.0, 78681.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1174.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 14.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.9523809523809523, "minX": 1.6270298E12, "maxY": 1998.0, "series": [{"data": [[1.62703038E12, 3.675934803451581], [1.62703055E12, 3.2058080808080818], [1.62703021E12, 6.0], [1.62703004E12, 5.0], [1.62702987E12, 1738.8056426332275], [1.62703064E12, 3.9972375690607747], [1.6270303E12, 3.0], [1.62703047E12, 3.8802642444260917], [1.62703013E12, 3.0], [1.62702996E12, 2.409871244635192], [1.62703056E12, 4.670103092783505], [1.62703022E12, 6.0], [1.62703039E12, 3.517857142857144], [1.62703005E12, 5.0], [1.62702988E12, 1412.1972318339094], [1.62703048E12, 3.0], [1.62703065E12, 4.0], [1.62703014E12, 3.0], [1.62703031E12, 3.0], [1.62702997E12, 2.0], [1.6270298E12, 1998.0], [1.6270304E12, 4.0], [1.62703057E12, 4.914463452566097], [1.6270307E12, 1.9523809523809523], [1.62703036E12, 3.0], [1.62703053E12, 3.0], [1.62703019E12, 3.001262626262623], [1.62703002E12, 3.4281345565749266], [1.62702985E12, 1933.6666666666667], [1.62703062E12, 4.198132088058701], [1.62703028E12, 4.0], [1.62703045E12, 7.0], [1.62703011E12, 7.0], [1.62702994E12, 4.5868200836820066], [1.62703054E12, 3.0], [1.6270302E12, 5.0201342281879135], [1.62703037E12, 3.909090909090911], [1.62703003E12, 4.78351373855121], [1.62702986E12, 1902.4126984126983], [1.62703046E12, 7.0], [1.62703063E12, 4.203877005347588], [1.62703029E12, 2.7184145334434375], [1.62703012E12, 4.742236024844715], [1.62702995E12, 3.483286908077993], [1.62702991E12, 10.955345060893094], [1.62703068E12, 2.0], [1.62703034E12, 3.0], [1.62703051E12, 3.0], [1.62703017E12, 3.0], [1.62703E12, 2.742173112338861], [1.62702983E12, 1971.642857142857], [1.6270306E12, 3.0], [1.62703026E12, 5.577485380116957], [1.62703043E12, 6.595999999999994], [1.62703009E12, 6.094793057409878], [1.62702992E12, 11.483759502418799], [1.62703052E12, 3.0], [1.62703069E12, 2.0], [1.62703018E12, 3.2297794117647056], [1.62703035E12, 3.0], [1.62703001E12, 2.9937027707808554], [1.62702984E12, 1950.4482758620688], [1.62703044E12, 7.0], [1.62703061E12, 3.697333333333337], [1.62703027E12, 3.9027962716378113], [1.6270301E12, 7.0], [1.62702993E12, 6.9917763157894806], [1.62703023E12, 6.293529019346231], [1.62703006E12, 5.0], [1.62702989E12, 988.0671140939588], [1.62703066E12, 4.0], [1.62703032E12, 3.0], [1.62703049E12, 3.0], [1.62703015E12, 3.0], [1.62702998E12, 2.0], [1.62702981E12, 1990.0], [1.62703058E12, 5.399729912221476], [1.62703024E12, 5.95983662355343], [1.62703041E12, 4.816044260027659], [1.62703007E12, 5.0], [1.6270299E12, 270.97103004291813], [1.6270305E12, 3.0], [1.62703067E12, 2.0069735006973515], [1.62703016E12, 3.0], [1.62703033E12, 3.0], [1.62702999E12, 2.0], [1.62702982E12, 1981.0], [1.62703042E12, 6.0], [1.62703059E12, 5.406395736175881], [1.62703025E12, 5.793999999999998], [1.62703008E12, 5.295925183700738]], "isOverall": false, "label": "bzm - Concurrency Thread Group-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.6270307E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 19.674960712414755, "minX": 1.0, "maxY": 7094.0, "series": [{"data": [[2.0, 19.674960712414755], [3.0, 20.14237491152608], [4.0, 20.499198152543382], [5.0, 19.865494258411477], [6.0, 27.001397624039218], [7.0, 27.862725282129], [8.0, 33.06349206349207], [9.0, 53.09708737864076], [10.0, 67.35897435897435], [11.0, 66.94426229508197], [12.0, 57.93126491646777], [13.0, 938.0], [14.0, 802.0], [15.0, 972.0], [16.0, 471.0], [17.0, 932.0], [18.0, 799.0], [19.0, 476.0], [20.0, 468.0], [21.0, 572.0], [22.0, 927.0], [23.0, 928.0], [24.0, 956.0], [25.0, 469.0], [26.0, 792.0], [27.0, 925.0], [28.0, 924.0], [29.0, 1460.0], [30.0, 918.0], [31.0, 551.0], [33.0, 912.0], [32.0, 765.0], [35.0, 912.0], [34.0, 547.0], [37.0, 906.0], [36.0, 762.0], [39.0, 543.0], [38.0, 535.0], [41.0, 894.0], [40.0, 899.0], [43.0, 762.0], [42.0, 762.0], [45.0, 760.0], [44.0, 529.0], [47.0, 531.0], [46.0, 899.0], [49.0, 886.0], [48.0, 882.0], [51.0, 875.0], [50.0, 524.0], [53.0, 1404.0], [52.0, 886.0], [55.0, 897.0], [54.0, 874.0], [56.0, 417.0], [58.0, 882.0], [61.0, 514.0], [66.0, 876.0], [69.0, 512.0], [72.0, 736.0], [79.0, 731.0], [76.0, 866.0], [89.0, 504.0], [95.0, 875.0], [94.0, 926.0], [99.0, 874.0], [98.0, 708.0], [97.0, 741.0645161290322], [103.0, 474.0], [102.0, 856.0], [101.0, 865.0], [100.0, 861.0], [107.0, 844.0], [106.0, 848.0], [105.0, 848.0], [104.0, 466.0], [111.0, 792.0], [110.0, 660.0], [109.0, 435.0], [108.0, 350.0], [115.0, 779.0], [114.0, 779.0], [113.0, 799.0], [112.0, 330.0], [119.0, 784.0], [118.0, 765.0], [117.0, 787.0], [116.0, 830.0], [123.0, 796.0], [122.0, 780.0], [121.0, 764.0], [120.0, 776.0], [127.0, 747.0], [126.0, 761.0], [125.0, 761.0], [124.0, 790.0], [135.0, 1182.0], [134.0, 1188.0], [133.0, 327.0], [132.0, 567.0], [131.0, 587.0], [130.0, 735.0], [129.0, 813.0], [128.0, 819.0], [143.0, 1533.0], [142.0, 1014.0], [141.0, 1022.0], [140.0, 1029.0], [139.0, 1027.0], [138.0, 1040.0], [137.0, 1042.0], [136.0, 1639.0], [151.0, 974.0], [150.0, 988.0], [149.0, 987.0], [148.0, 984.0], [147.0, 993.0], [146.0, 989.0], [145.0, 1534.0], [144.0, 1005.0], [159.0, 726.0], [158.0, 1188.0], [157.0, 1210.0], [156.0, 1239.0], [155.0, 1234.0], [154.0, 1249.0], [153.0, 965.0], [152.0, 974.0], [167.0, 1192.0], [166.0, 689.0], [164.0, 1229.0], [163.0, 716.0], [162.0, 1234.0], [161.0, 1224.0], [160.0, 1234.0], [175.0, 1103.0], [174.0, 1107.0], [173.0, 1105.0], [172.0, 1137.0], [171.0, 1107.0], [170.0, 1106.0], [169.0, 1141.0], [168.0, 1120.0], [183.0, 528.0], [182.0, 1042.0], [181.0, 1053.0], [180.0, 1061.0], [179.0, 1109.0], [178.0, 854.5], [177.0, 1106.0], [176.0, 619.0], [191.0, 927.0], [190.0, 967.0], [189.0, 971.0], [188.0, 1011.0], [187.0, 971.0], [186.0, 1019.0], [185.0, 995.0], [184.0, 1008.0], [199.0, 422.0], [198.0, 939.0], [197.0, 941.0], [196.0, 441.0], [195.0, 951.0], [194.0, 939.0], [193.0, 947.0], [192.0, 920.0], [207.0, 886.0], [206.0, 932.0], [205.0, 913.0], [204.0, 889.0], [203.0, 901.0], [202.0, 941.0], [201.0, 915.0], [200.0, 917.0], [215.0, 394.0], [214.0, 918.0], [213.0, 387.0], [212.0, 392.0], [211.0, 898.0], [210.0, 392.0], [209.0, 921.0], [208.0, 906.0], [223.0, 863.0], [222.0, 371.0], [221.0, 862.0], [220.0, 897.0], [219.0, 878.0], [218.0, 902.0], [217.0, 915.0], [216.0, 880.0], [231.0, 340.0], [230.0, 876.0], [229.0, 858.0], [228.0, 823.0], [227.0, 866.0], [226.0, 870.0], [225.0, 865.0], [224.0, 361.0], [239.0, 823.0], [238.0, 820.0], [237.0, 841.0], [236.0, 849.0], [235.0, 789.0], [234.0, 821.0], [233.0, 848.0], [232.0, 857.0], [247.0, 803.0], [243.0, 830.0], [242.0, 792.0], [241.0, 821.0], [240.0, 790.0], [255.0, 797.0], [254.0, 780.0], [253.0, 766.0], [251.0, 779.0], [250.0, 309.0], [249.0, 804.0], [248.0, 809.0], [270.0, 429.0], [271.0, 425.0], [269.0, 564.0], [268.0, 701.0], [267.0, 680.0], [266.0, 766.0], [265.0, 779.0], [264.0, 653.0], [263.0, 761.0], [258.0, 808.0], [257.0, 803.0], [260.0, 667.0], [285.0, 827.0], [284.0, 205.0], [275.0, 265.0], [274.0, 308.0], [273.0, 427.0], [272.0, 442.0], [283.0, 257.0], [282.0, 248.0], [281.0, 209.0], [280.0, 219.0], [279.0, 266.0], [278.0, 238.0], [277.0, 215.0], [276.0, 227.0], [302.0, 772.0], [303.0, 792.0], [301.0, 771.0], [300.0, 771.0], [299.0, 810.0], [298.0, 807.0], [297.0, 761.0], [296.0, 820.0], [294.0, 825.0], [289.0, 813.0], [288.0, 797.0], [291.0, 800.0], [290.0, 763.0], [293.0, 803.0], [292.0, 824.5], [318.0, 790.0], [319.0, 785.0], [317.0, 790.5], [306.0, 817.0], [305.0, 817.0], [304.0, 780.0], [315.0, 785.5], [314.0, 804.0], [313.0, 812.0], [312.0, 765.0], [309.0, 785.0], [308.0, 806.5], [334.0, 610.0], [335.0, 645.0], [333.0, 680.0], [332.0, 623.0], [331.0, 636.0], [330.0, 610.0], [329.0, 614.0], [328.0, 730.5], [326.0, 753.0], [321.0, 770.0], [320.0, 798.0], [323.0, 784.0], [322.0, 784.5], [325.0, 721.0], [324.0, 763.0], [350.0, 596.0], [351.0, 567.0], [349.0, 638.0], [348.0, 594.0], [347.0, 577.0], [346.0, 618.0], [345.0, 606.5], [343.0, 582.0], [337.0, 615.0], [336.0, 652.0], [339.0, 596.0], [338.0, 586.0], [342.0, 615.0], [341.0, 586.0], [340.0, 610.0], [365.0, 577.0], [366.0, 610.0], [364.0, 611.0], [355.0, 576.0], [353.0, 553.0], [352.0, 595.0], [363.0, 585.0], [362.0, 571.0], [361.0, 551.0], [360.0, 558.0], [359.0, 547.0], [358.0, 571.0], [357.0, 575.0], [356.0, 576.0], [382.0, 432.0], [383.0, 430.0], [381.0, 417.0], [380.0, 427.0], [379.0, 418.0], [378.0, 428.0], [377.0, 453.0], [376.0, 474.0], [375.0, 481.0], [369.0, 541.0], [368.0, 535.0], [371.0, 487.0], [370.0, 482.0], [374.0, 518.0], [373.0, 499.0], [372.0, 484.0], [398.0, 314.0], [399.0, 352.0], [397.0, 363.0], [396.0, 355.0], [395.0, 356.0], [394.0, 391.0], [393.0, 370.0], [392.0, 399.0], [391.0, 403.0], [385.0, 361.0], [384.0, 395.0], [387.0, 350.0], [386.0, 373.0], [390.0, 390.0], [389.0, 366.0], [388.0, 389.0], [403.0, 515.0], [414.0, 512.0], [415.0, 516.5], [413.0, 512.0], [402.0, 362.0], [401.0, 346.0], [400.0, 370.0], [411.0, 526.0], [409.0, 543.5], [407.0, 514.0], [406.0, 513.0], [405.0, 543.0], [404.0, 526.0], [430.0, 483.0], [431.0, 489.0], [429.0, 500.5], [419.0, 516.0], [418.0, 529.0], [417.0, 533.0], [416.0, 525.0], [427.0, 474.0], [426.0, 472.0], [425.0, 498.0], [424.0, 475.0], [423.0, 520.0], [422.0, 504.0], [447.0, 496.0], [445.0, 490.0], [435.0, 519.0], [434.0, 497.0], [432.0, 469.0], [443.0, 503.0], [442.0, 490.0], [441.0, 511.0], [440.0, 507.0], [439.0, 488.0], [437.0, 518.0], [436.0, 493.0], [462.0, 492.0], [463.0, 486.0], [461.0, 457.0], [460.0, 450.0], [459.0, 468.0], [458.0, 495.0], [457.0, 484.0], [456.0, 448.0], [455.0, 474.0], [448.0, 466.0], [450.0, 472.0], [449.0, 469.0], [454.0, 505.0], [453.0, 459.0], [452.0, 477.5], [478.0, 429.0], [479.0, 444.0], [477.0, 425.0], [476.0, 481.0], [475.0, 454.0], [474.0, 433.0], [473.0, 438.0], [472.0, 458.0], [471.0, 431.0], [465.0, 452.0], [464.0, 490.0], [467.0, 462.0], [466.0, 448.0], [470.0, 446.0], [469.0, 445.0], [468.0, 450.0], [494.0, 502.0], [495.0, 727.0], [493.0, 735.0], [492.0, 729.0], [491.0, 751.0], [490.0, 734.0], [489.0, 488.0], [488.0, 731.0], [487.0, 505.0], [481.0, 429.0], [480.0, 428.0], [483.0, 364.0], [482.0, 423.0], [486.0, 511.0], [485.0, 510.0], [484.0, 523.0], [510.0, 478.0], [511.0, 476.0], [509.0, 466.0], [508.0, 732.0], [507.0, 709.0], [506.0, 463.0], [505.0, 727.0], [504.0, 718.5], [502.0, 723.0], [497.0, 762.0], [496.0, 479.0], [499.0, 734.0], [498.0, 721.0], [501.0, 726.0], [500.0, 717.0], [536.0, 400.0], [542.0, 552.0], [543.0, 429.0], [528.0, 662.0], [530.0, 422.0], [529.0, 437.0], [540.0, 419.0], [538.0, 434.0], [537.0, 402.0], [527.0, 670.0], [512.0, 475.0], [514.0, 462.0], [513.0, 724.0], [517.0, 452.5], [515.0, 447.0], [519.0, 684.0], [518.0, 707.0], [526.0, 680.0], [525.0, 693.0], [524.0, 447.0], [523.0, 437.0], [522.0, 593.0], [520.0, 436.0], [535.0, 435.0], [534.0, 434.0], [532.0, 435.0], [531.0, 671.0], [572.0, 893.5], [562.0, 615.0], [574.0, 1208.0], [575.0, 1170.0], [561.0, 637.0], [560.0, 619.0], [573.0, 1173.0], [569.0, 880.5], [551.0, 623.0], [550.0, 420.0], [549.0, 645.5], [548.0, 657.5], [546.0, 646.0], [545.0, 652.0], [544.0, 398.0], [559.0, 364.0], [558.0, 367.0], [557.0, 626.0], [556.0, 641.0], [555.0, 626.0], [554.0, 635.0], [553.0, 634.0], [552.0, 412.0], [567.0, 885.0], [565.0, 1042.0], [564.0, 569.0], [606.0, 1138.0], [607.0, 1188.0], [594.0, 1163.0], [593.0, 1152.0], [605.0, 1145.6666666666667], [603.0, 950.0], [602.0, 1000.0], [601.0, 1092.5], [591.0, 1069.3333333333333], [577.0, 1096.0], [576.0, 1209.0], [580.0, 1048.0], [579.0, 1185.0], [583.0, 1057.5], [581.0, 1177.5], [589.0, 1128.0], [588.0, 1156.0], [586.0, 1198.0], [585.0, 1203.0], [599.0, 1186.0], [598.0, 1066.0], [597.0, 1168.0], [596.0, 1197.5], [633.0, 509.0], [638.0, 575.0], [639.0, 411.0], [625.0, 735.0], [624.0, 941.0], [627.0, 807.0], [626.0, 655.0], [629.0, 818.0], [628.0, 579.0], [637.0, 380.0], [636.0, 531.0], [634.0, 672.0], [632.0, 778.0], [615.0, 1144.0], [614.0, 906.0], [613.0, 984.0], [612.0, 974.0], [611.0, 1164.0], [610.0, 1179.0], [609.0, 1158.0], [608.0, 1045.0], [623.0, 982.0], [622.0, 902.0], [621.0, 1146.0], [620.0, 1141.0], [619.0, 1159.0], [618.0, 1140.0], [617.0, 1060.0], [631.0, 782.0], [630.0, 817.0], [665.0, 302.5], [670.0, 309.0], [671.0, 304.0], [657.0, 560.0], [656.0, 557.0], [659.0, 551.0], [658.0, 551.0], [668.0, 306.0], [667.0, 317.0], [666.0, 324.0], [655.0, 551.0], [641.0, 569.0], [640.0, 443.0], [643.0, 552.0], [642.0, 574.0], [646.0, 527.0], [644.0, 503.0], [654.0, 497.0], [653.0, 523.5], [652.0, 545.0], [651.0, 551.5], [648.0, 475.0], [663.0, 322.0], [662.0, 527.0], [661.0, 531.0], [660.0, 548.0], [697.0, 257.0], [701.0, 255.0], [702.0, 240.0], [688.0, 268.0], [690.0, 275.0], [689.0, 259.0], [693.0, 251.0], [692.0, 250.0], [700.0, 249.0], [699.0, 246.5], [698.0, 261.0], [696.0, 247.0], [679.0, 311.0], [678.0, 299.0], [677.0, 293.0], [676.0, 304.0], [675.0, 311.0], [674.0, 318.0], [673.0, 307.0], [672.0, 296.0], [687.0, 262.0], [686.0, 262.0], [685.0, 275.0], [684.0, 284.0], [683.0, 282.0], [682.0, 276.0], [681.0, 271.0], [680.0, 303.0], [695.0, 264.0], [694.0, 250.0], [729.0, 162.0], [734.0, 163.0], [735.0, 170.0], [720.0, 209.0], [723.0, 190.0], [722.0, 204.0], [725.0, 176.0], [724.0, 186.0], [733.0, 174.0], [731.0, 161.0], [730.0, 165.0], [728.0, 183.0], [711.0, 213.0], [710.0, 219.0], [708.0, 215.0], [707.0, 216.0], [706.0, 234.5], [705.0, 235.0], [704.0, 250.0], [719.0, 211.0], [718.0, 196.0], [717.0, 215.0], [716.0, 216.5], [714.0, 209.0], [713.0, 218.0], [712.0, 222.0], [727.0, 169.0], [726.0, 173.0], [760.0, 487.0], [764.0, 369.0], [767.0, 576.0], [754.0, 604.0], [753.0, 368.5], [756.0, 372.0], [755.0, 615.0], [766.0, 584.0], [765.0, 354.0], [763.0, 371.0], [762.0, 610.0], [761.0, 370.0], [751.0, 374.0], [737.0, 167.5], [736.0, 168.0], [739.0, 389.0], [738.0, 157.0], [741.0, 388.0], [740.0, 395.0], [743.0, 379.0], [742.0, 388.0], [750.0, 366.0], [749.0, 382.0], [748.0, 380.0], [747.0, 388.0], [746.0, 626.0], [745.0, 373.0], [744.0, 376.0], [758.0, 361.0], [757.0, 373.0], [796.0, 453.0], [799.0, 425.0], [785.0, 198.0], [784.0, 475.0], [787.0, 202.0], [786.0, 477.0], [789.0, 206.0], [788.0, 193.0], [798.0, 447.0], [797.0, 440.0], [795.0, 457.0], [794.0, 436.0], [793.0, 186.0], [792.0, 441.0], [783.0, 229.0], [769.0, 566.0], [768.0, 564.0], [771.0, 309.0], [770.0, 294.0], [773.0, 300.0], [772.0, 576.0], [775.0, 233.0], [774.0, 504.0], [782.0, 212.0], [781.0, 489.0], [780.0, 215.0], [779.0, 477.0], [778.0, 227.0], [777.0, 218.0], [776.0, 223.0], [791.0, 200.0], [790.0, 468.0], [828.0, 680.0], [831.0, 692.0], [817.0, 232.0], [816.0, 230.0], [819.0, 173.0], [818.0, 223.0], [821.0, 70.0], [820.0, 78.0], [830.0, 663.0], [829.0, 717.0], [827.0, 696.0], [826.0, 719.0], [825.0, 672.0], [824.0, 716.0], [815.0, 211.0], [801.0, 453.0], [800.0, 452.0], [803.0, 436.0], [802.0, 448.0], [805.0, 415.0], [804.0, 420.0], [807.0, 227.0], [806.0, 410.0], [814.0, 240.0], [813.0, 217.0], [812.0, 218.0], [811.0, 231.0], [810.0, 226.0], [809.0, 221.0], [808.0, 239.0], [823.0, 713.0], [822.0, 49.0], [857.0, 630.0], [861.0, 654.0], [863.0, 630.0], [849.0, 650.0], [848.0, 661.0], [851.0, 652.0], [850.0, 616.0], [853.0, 651.0], [852.0, 613.0], [860.0, 627.0], [859.0, 643.0], [858.0, 625.0], [856.0, 632.0], [839.0, 677.0], [838.0, 671.0], [837.0, 648.0], [836.0, 656.0], [835.0, 700.0], [834.0, 688.0], [833.0, 695.0], [832.0, 701.0], [847.0, 674.0], [846.0, 675.0], [845.0, 662.0], [844.0, 636.0], [843.0, 654.0], [842.0, 672.0], [841.0, 693.0], [840.0, 657.0], [855.0, 616.0], [854.0, 656.0], [890.0, 575.0], [894.0, 598.0], [895.0, 563.0], [880.0, 566.0], [883.0, 569.0], [881.0, 587.0], [885.0, 589.0], [884.0, 561.0], [893.0, 556.0], [892.0, 560.0], [891.0, 577.0], [889.0, 587.0], [871.0, 586.0], [870.0, 623.0], [869.0, 640.0], [868.0, 638.0], [867.0, 603.0], [865.0, 609.0], [864.0, 634.5], [879.0, 578.0], [878.0, 571.0], [877.0, 576.0], [876.0, 632.5], [875.0, 582.0], [873.0, 633.0], [872.0, 604.0], [887.0, 606.0], [886.0, 603.0], [924.0, 242.0], [927.0, 247.0], [913.0, 257.0], [912.0, 251.0], [915.0, 259.0], [914.0, 265.0], [917.0, 247.0], [916.0, 269.0], [926.0, 225.0], [925.0, 249.0], [923.0, 239.0], [922.0, 254.0], [921.0, 251.0], [920.0, 259.0], [911.0, 262.0], [896.0, 585.0], [898.0, 528.0], [897.0, 578.0], [900.0, 284.0], [899.0, 265.0], [903.0, 275.0], [902.0, 273.0], [910.0, 274.0], [909.0, 280.0], [908.0, 274.0], [907.0, 275.0], [906.0, 262.0], [905.0, 273.0], [919.0, 248.0], [918.0, 248.0], [953.0, 340.0], [958.0, 233.0], [959.0, 368.0], [945.0, 469.0], [944.0, 261.0], [957.0, 270.0], [956.0, 278.0], [955.0, 425.0], [943.0, 456.0], [929.0, 231.0], [928.0, 238.0], [931.0, 211.0], [930.0, 223.0], [933.0, 221.0], [932.0, 232.0], [935.0, 205.0], [934.0, 230.0], [942.0, 284.0], [941.0, 242.0], [940.0, 317.0], [939.0, 197.0], [938.0, 207.0], [937.0, 226.0], [936.0, 204.0], [951.0, 425.5], [949.0, 331.0], [947.0, 453.0], [946.0, 303.0], [986.0, 280.5], [990.0, 376.0], [991.0, 390.0], [976.0, 325.0], [978.0, 405.0], [977.0, 361.0], [981.0, 241.0], [980.0, 240.0], [989.0, 376.0], [988.0, 378.0], [987.0, 299.0], [984.0, 389.0], [967.0, 385.0], [966.0, 385.0], [965.0, 425.0], [964.0, 428.0], [963.0, 421.0], [962.0, 427.0], [961.0, 430.0], [960.0, 250.0], [975.0, 255.0], [974.0, 256.0], [973.0, 624.0], [972.0, 416.0], [971.0, 418.0], [970.0, 428.0], [969.0, 383.0], [968.0, 267.0], [983.0, 391.5], [982.0, 385.0], [1017.0, 571.0], [1022.0, 551.0], [1023.0, 543.0], [1008.0, 563.0], [1011.0, 559.5], [1009.0, 554.0], [1013.0, 554.0], [1012.0, 570.0], [1020.0, 553.0], [1019.0, 545.0], [1018.0, 551.0], [1016.0, 702.0], [999.0, 190.0], [998.0, 187.0], [997.0, 145.0], [996.0, 274.0], [995.0, 529.0], [993.0, 382.0], [992.0, 469.0], [1006.0, 549.0], [1005.0, 575.0], [1004.0, 575.0], [1003.0, 549.0], [1002.0, 551.0], [1001.0, 567.0], [1000.0, 342.2325581395349], [1015.0, 548.0], [1014.0, 571.0], [1080.0, 466.0], [1076.0, 535.0], [1084.0, 447.0], [1058.0, 482.0], [1060.0, 493.0], [1062.0, 631.0], [1064.0, 615.0], [1066.0, 478.0], [1068.0, 474.0], [1070.0, 458.0], [1086.0, 432.0], [1082.0, 466.0], [1078.0, 453.0], [1074.0, 594.0], [1072.0, 458.0], [1024.0, 546.0], [1026.0, 544.0], [1030.0, 680.0], [1032.0, 599.5], [1034.0, 677.0], [1036.0, 516.0], [1038.0, 524.0], [1052.0, 635.0], [1050.0, 506.0], [1048.0, 637.0], [1046.0, 487.0], [1044.0, 646.5], [1042.0, 505.0], [1040.0, 649.0], [1148.0, 693.0], [1122.0, 761.3333333333334], [1124.0, 783.0], [1132.0, 769.0], [1134.0, 748.8888888888889], [1144.0, 666.0], [1142.0, 707.0], [1140.0, 708.0], [1138.0, 677.0], [1136.0, 733.0], [1118.0, 746.0], [1090.0, 363.0], [1088.0, 432.0], [1114.0, 810.5], [1154.0, 633.5], [1164.0, 622.0], [1202.0, 588.0], [1152.0, 678.0], [1158.0, 624.0], [1160.0, 629.0], [1162.0, 635.0], [1166.0, 636.0], [1180.0, 600.0], [1178.0, 632.0], [1176.0, 590.0], [1174.0, 618.0], [1172.0, 576.0], [1170.0, 570.0], [1186.0, 583.5], [1188.0, 566.5], [1198.0, 568.0], [1196.0, 555.0], [1194.0, 534.5], [1192.0, 525.0], [1276.0, 423.0], [1248.0, 583.5652173913044], [1252.0, 593.5], [1250.0, 675.0], [1254.0, 508.0], [1256.0, 653.0], [1258.0, 654.0], [1260.0, 479.0], [1262.0, 491.0], [1278.0, 594.0], [1274.0, 611.0], [1272.0, 446.0], [1268.0, 444.0], [1266.0, 449.0], [1264.0, 448.0], [1230.0, 526.0], [1226.0, 605.0], [1224.0, 554.0], [1246.0, 549.0], [1242.0, 702.0], [1238.0, 481.0], [1236.0, 545.0], [1334.0, 339.0], [1342.0, 366.0], [1312.0, 411.0], [1318.0, 407.5], [1322.0, 381.0], [1324.0, 374.0], [1326.0, 378.0], [1340.0, 127.0], [1336.0, 231.0], [1332.0, 361.0], [1330.0, 352.5], [1328.0, 378.0], [1284.0, 460.0], [1280.0, 528.0], [1288.0, 469.0], [1290.0, 451.0], [1310.0, 425.0], [1308.0, 437.5], [1304.0, 442.0], [1302.0, 455.0], [1298.0, 438.5], [1296.0, 478.0], [1404.0, 189.0], [1376.0, 265.0], [1378.0, 266.0], [1380.0, 260.0], [1382.0, 263.0], [1384.0, 241.0], [1386.0, 260.0], [1388.0, 98.0], [1390.0, 223.0], [1406.0, 186.0], [1402.0, 206.0], [1398.0, 212.0], [1396.0, 211.0], [1394.0, 212.0], [1392.0, 223.0], [1344.0, 390.0], [1346.0, 385.0], [1348.0, 367.5], [1350.0, 318.0], [1354.0, 298.0], [1352.0, 335.0], [1358.0, 329.0], [1374.0, 266.0], [1368.0, 278.0], [1366.0, 279.0], [1364.0, 319.0], [1456.0, 1010.0], [1446.0, 1044.0], [1444.0, 142.0], [1450.0, 951.0], [1448.0, 1031.0], [1452.0, 943.0], [1454.0, 986.0], [1468.0, 951.0], [1462.0, 964.0], [1422.0, 229.0], [1420.0, 227.0], [1418.0, 245.0], [1414.0, 159.0], [1412.0, 172.0], [1410.0, 170.0], [1408.0, 177.0], [1436.0, 179.0], [1434.0, 188.0], [1430.0, 210.0], [1428.0, 207.0], [1426.0, 215.0], [1508.0, 890.0], [1510.0, 924.0], [1534.0, 922.0], [1514.0, 887.0], [1516.0, 888.3333333333334], [1518.0, 919.0], [1532.0, 900.0], [1530.0, 892.0], [1526.0, 865.0], [1524.0, 948.0], [1520.0, 871.5], [1472.0, 962.0], [1502.0, 929.0], [1490.0, 956.0], [1544.0, 583.0], [1550.0, 204.0], [1548.0, 572.0], [1546.0, 640.5], [1542.0, 674.0], [1540.0, 829.0], [1538.0, 785.0], [1568.0, 1035.0], [1562.0, 881.0], [1556.0, 1035.0], [1554.0, 1057.0], [1552.0, 247.0], [1662.0, 816.0], [1632.0, 987.0], [1644.0, 715.0], [1646.0, 987.0], [1658.0, 746.6666666666666], [1656.0, 810.0], [1654.0, 816.0], [1648.0, 819.3333333333334], [1652.0, 805.6666666666666], [1610.0, 840.0], [1612.0, 792.0], [1614.0, 895.6666666666666], [1630.0, 818.0], [1628.0, 773.0], [1626.0, 1033.0], [1624.0, 992.0], [1622.0, 1035.0], [1618.0, 791.0], [1670.0, 763.0], [1690.0, 965.0], [1678.0, 156.0], [1674.0, 162.0], [1672.0, 626.0], [1668.0, 782.0], [1666.0, 810.0], [1664.0, 574.0], [1702.0, 1014.0], [1688.0, 86.5], [1684.0, 139.5], [1682.0, 158.0], [1680.0, 147.0], [1764.0, 1111.0], [1752.0, 922.0], [1750.0, 1261.0], [1748.0, 919.0], [1826.0, 398.0], [1830.0, 397.0], [1824.0, 846.0], [1828.0, 408.0], [1832.0, 372.0], [1834.0, 393.0], [1838.0, 387.0], [1848.0, 375.0], [1846.0, 375.0], [1842.0, 345.0], [1840.0, 381.5], [1806.0, 1175.75], [1822.0, 911.5], [1820.0, 937.5], [1814.0, 1030.0], [1812.0, 1054.0], [1810.0, 1003.0], [1808.0, 1032.0], [1914.0, 381.0], [1896.0, 266.0], [1890.0, 285.0], [1894.0, 305.0], [1898.0, 263.0], [1900.0, 260.0], [1902.0, 216.0], [1918.0, 360.0], [1916.0, 384.0], [1912.0, 376.0], [1910.0, 384.0], [1908.0, 412.0], [1906.0, 405.0], [1904.0, 119.0], [1870.0, 355.0], [1868.0, 296.75], [1866.0, 324.0], [1864.0, 310.0], [1862.0, 310.0], [1880.0, 307.0], [1876.0, 331.0], [1874.0, 311.0], [1872.0, 330.0], [1970.0, 150.0], [1958.0, 268.0], [1980.0, 111.0], [1956.0, 268.0], [1960.0, 238.0], [1962.0, 224.0], [1966.0, 161.5], [1982.0, 94.0], [1978.0, 113.0], [1924.0, 353.5], [1926.0, 327.0], [1928.0, 270.0], [1930.0, 242.0], [1934.0, 50.5], [1950.0, 274.0], [1948.0, 275.0], [1946.0, 268.0], [1944.0, 277.0], [1942.0, 302.0], [1940.0, 312.0], [1938.0, 335.0], [1936.0, 333.0], [1988.0, 71.0], [1996.0, 4823.0], [2000.0, 4232.0], [1984.0, 81.0], [1986.0, 78.0], [1998.0, 5541.0], [1994.0, 6524.0], [1992.0, 64.0], [1990.0, 54.0], [1085.0, 435.0], [1087.0, 447.0], [1057.0, 563.5], [1059.0, 487.0], [1061.0, 553.0], [1063.0, 629.0], [1065.0, 623.0], [1067.0, 472.0], [1069.0, 489.0], [1071.0, 601.0], [1083.0, 459.0], [1081.0, 467.0], [1079.0, 443.0], [1077.0, 517.0], [1075.0, 470.0], [1073.0, 457.0], [1055.0, 647.5], [1025.0, 643.0], [1027.0, 541.0], [1029.0, 548.0], [1031.0, 673.0], [1033.0, 660.0], [1035.0, 506.0], [1039.0, 522.0], [1053.0, 626.0], [1049.0, 637.0], [1047.0, 641.0], [1045.0, 646.0], [1041.0, 514.0], [1147.0, 689.0], [1151.0, 638.0], [1123.0, 771.4615384615385], [1131.0, 746.5], [1133.0, 749.25], [1149.0, 668.0], [1143.0, 718.0], [1141.0, 716.0], [1139.0, 715.0], [1089.0, 444.0], [1157.0, 640.0], [1189.0, 542.0], [1195.0, 516.0], [1183.0, 583.0], [1153.0, 686.0], [1155.0, 624.0], [1159.0, 600.0], [1161.0, 610.0], [1163.0, 646.1428571428571], [1165.0, 600.0], [1167.0, 578.0], [1181.0, 558.5], [1179.0, 599.6666666666666], [1177.0, 617.0], [1175.0, 583.0], [1173.0, 640.0], [1171.0, 622.0], [1169.0, 605.0], [1187.0, 576.0], [1197.0, 538.0], [1191.0, 545.0], [1273.0, 432.0], [1279.0, 568.0], [1249.0, 668.0], [1255.0, 497.0], [1257.0, 480.0], [1259.0, 479.0], [1261.0, 489.0], [1263.0, 479.0], [1277.0, 421.0], [1275.0, 424.0], [1271.0, 533.5], [1269.0, 450.0], [1267.0, 454.0], [1265.0, 640.0], [1231.0, 534.0], [1229.0, 570.0], [1227.0, 556.0], [1225.0, 545.0], [1223.0, 581.0], [1221.0, 573.0], [1245.0, 548.3333333333334], [1243.0, 555.0], [1241.0, 519.0], [1239.0, 522.0], [1237.0, 534.0], [1235.0, 559.0], [1233.0, 563.0], [1335.0, 280.0], [1339.0, 136.0], [1313.0, 441.0], [1321.0, 417.75], [1323.0, 396.0], [1325.0, 375.0], [1327.0, 379.0], [1341.0, 111.0], [1337.0, 154.0], [1333.0, 350.0], [1331.0, 358.0], [1329.0, 359.0], [1311.0, 419.0], [1285.0, 457.0], [1289.0, 471.0], [1295.0, 464.0], [1293.0, 442.0], [1309.0, 418.0], [1307.0, 442.0], [1305.0, 445.5], [1303.0, 449.0], [1301.0, 452.5], [1299.0, 462.0], [1403.0, 191.0], [1395.0, 209.0], [1407.0, 192.0], [1377.0, 257.0], [1379.0, 292.0], [1381.0, 256.0], [1383.0, 289.0], [1385.0, 258.0], [1387.0, 216.0], [1389.0, 217.0], [1405.0, 190.0], [1401.0, 210.0], [1399.0, 207.0], [1397.0, 203.0], [1375.0, 298.0], [1345.0, 398.0], [1347.0, 346.0], [1349.0, 341.0], [1351.0, 300.0], [1357.0, 301.0], [1355.0, 284.0], [1359.0, 298.0], [1373.0, 272.6666666666667], [1371.0, 255.5], [1369.0, 298.0], [1367.0, 301.0], [1365.0, 314.0], [1363.0, 281.0], [1361.0, 321.0], [1461.0, 928.0], [1457.0, 1034.0], [1465.0, 924.0], [1471.0, 925.0], [1443.0, 156.0], [1445.0, 1001.0], [1447.0, 1049.0], [1451.0, 1023.0], [1455.0, 965.0], [1467.0, 911.0], [1463.0, 1030.0], [1423.0, 220.0], [1421.0, 239.5], [1419.0, 242.0], [1417.0, 221.0], [1415.0, 168.0], [1413.0, 181.0], [1411.0, 182.0], [1409.0, 174.0], [1437.0, 181.0], [1435.0, 195.0], [1433.0, 191.0], [1431.0, 207.0], [1429.0, 210.0], [1427.0, 215.0], [1509.0, 887.0], [1531.0, 869.0], [1507.0, 901.0], [1505.0, 969.0], [1511.0, 952.0], [1513.0, 946.0], [1515.0, 869.0], [1517.0, 877.0], [1533.0, 859.5], [1529.0, 857.5], [1527.0, 839.0], [1525.0, 857.0], [1523.0, 881.0], [1521.0, 863.0], [1487.0, 900.0], [1481.0, 919.0], [1477.0, 962.0], [1547.0, 648.0], [1567.0, 1033.0], [1585.0, 1077.0], [1551.0, 252.0], [1549.0, 396.0], [1543.0, 619.0], [1541.0, 791.0], [1539.0, 823.0], [1537.0, 836.7741935483871], [1569.0, 830.0], [1557.0, 1038.0], [1555.0, 1055.0], [1553.0, 150.0], [1659.0, 817.0], [1655.0, 570.0], [1663.0, 702.0], [1635.0, 1000.0], [1641.0, 873.0], [1633.0, 754.0], [1645.0, 829.8], [1647.0, 690.0], [1661.0, 701.5], [1657.0, 852.0], [1653.0, 823.5263157894739], [1615.0, 1048.0], [1611.0, 788.0], [1605.0, 846.0], [1631.0, 717.0], [1629.0, 957.5], [1627.0, 799.0], [1623.0, 727.0], [1621.0, 988.0], [1619.0, 1013.0], [1617.0, 828.5], [1673.0, 158.0], [1713.0, 1031.0], [1679.0, 156.5], [1677.0, 164.5], [1671.0, 733.0], [1669.0, 817.0], [1667.0, 810.0], [1665.0, 812.0], [1705.0, 945.0], [1689.0, 968.0], [1687.0, 95.0], [1685.0, 91.0], [1683.0, 138.0], [1751.0, 911.0], [1729.0, 925.0], [1847.0, 332.0], [1855.0, 320.5], [1825.0, 802.0], [1827.0, 367.0], [1833.0, 381.0], [1837.0, 365.5], [1835.0, 390.0], [1839.0, 351.0], [1849.0, 345.0], [1845.0, 364.0], [1843.0, 376.0], [1841.0, 382.0], [1823.0, 908.5], [1807.0, 1063.3958333333335], [1821.0, 946.5], [1819.0, 962.0], [1813.0, 1045.0], [1811.0, 1030.5], [1809.0, 1017.0], [1911.0, 367.0], [1915.0, 378.0], [1919.0, 359.0], [1893.0, 295.0], [1891.0, 302.0], [1895.0, 276.1818181818182], [1897.0, 268.0], [1899.0, 241.0], [1901.0, 239.0], [1903.0, 154.0], [1907.0, 418.0], [1905.0, 129.0], [1871.0, 332.0], [1869.0, 353.0], [1867.0, 302.0], [1859.0, 342.0], [1879.0, 331.0], [1877.0, 310.0], [1875.0, 317.0], [1873.0, 351.0], [1979.0, 109.0], [1975.0, 145.0], [1983.0, 86.0], [1955.0, 263.0], [1953.0, 262.0], [1957.0, 267.5], [1959.0, 229.0], [1961.0, 227.0], [1963.0, 207.0], [1967.0, 151.5], [1981.0, 95.0], [1977.0, 122.5], [1973.0, 144.0], [1971.0, 153.0], [1969.0, 154.5], [1951.0, 279.0], [1921.0, 359.0], [1923.0, 366.0], [1925.0, 330.0], [1927.0, 286.0], [1929.0, 260.0], [1933.0, 55.0], [1931.0, 252.0], [1935.0, 337.0], [1949.0, 284.0], [1947.0, 269.0], [1945.0, 275.0], [1943.0, 312.0], [1941.0, 293.0], [1939.0, 324.0], [1937.0, 328.0], [1993.0, 59.0], [1985.0, 81.0], [1987.0, 75.0], [1989.0, 57.0], [1999.0, 4528.0], [1997.0, 6293.0], [1995.0, 43.0], [1991.0, 7094.0], [1.0, 56.08823529411764]], "isOverall": false, "label": "Healthy Thinking", "isController": false}, {"data": [[30.52170429077594, 38.809099901088494]], "isOverall": false, "label": "Healthy Thinking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 67.5, "minX": 1.6270298E12, "maxY": 6819080.0, "series": [{"data": [[1.62703038E12, 4735220.0], [1.62703055E12, 3595680.0], [1.62703021E12, 5847520.0], [1.62703004E12, 6741900.0], [1.62702987E12, 1448229.7], [1.62703064E12, 6573920.0], [1.6270303E12, 4394720.0], [1.62703047E12, 5497822.5], [1.62703013E12, 3273340.0], [1.62702996E12, 2115658.4], [1.62703056E12, 4403800.0], [1.62703022E12, 6741900.0], [1.62703039E12, 5847520.0], [1.62703005E12, 6800920.0], [1.62702988E12, 1312031.1], [1.62703048E12, 4390083.3], [1.62703065E12, 5525186.6], [1.62703014E12, 2129260.0], [1.62703031E12, 3268800.0], [1.62702997E12, 1026042.3], [1.6270298E12, 22706.5], [1.6270304E12, 6741900.0], [1.62703057E12, 5838440.0], [1.6270307E12, 95340.0], [1.62703036E12, 2469760.0], [1.62703053E12, 1343840.0], [1.62703019E12, 3595680.0], [1.62703002E12, 4453740.0], [1.62702985E12, 13619.7], [1.62703062E12, 6805460.0], [1.62703028E12, 6569380.0], [1.62703045E12, 6809850.0], [1.62703011E12, 5511560.0], [1.62702994E12, 4340240.0], [1.62703054E12, 2478840.0], [1.6270302E12, 4735220.0], [1.62703037E12, 3595680.0], [1.62703003E12, 5452540.0], [1.62702986E12, 286017.3], [1.62703046E12, 6564695.4], [1.62703063E12, 6791840.0], [1.62703029E12, 5497940.0], [1.62703012E12, 4385640.0], [1.62702995E12, 3259720.0], [1.62702991E12, 6710120.0], [1.62703068E12, 2142880.0], [1.62703034E12, 322340.0], [1.62703051E12, 1021481.6], [1.62703017E12, 1343840.0], [1.62703E12, 2465222.1], [1.62702983E12, 63560.9], [1.6270306E12, 6805460.0], [1.62703026E12, 6210720.0], [1.62703043E12, 6809850.0], [1.62703009E12, 6800920.0], [1.62702992E12, 6569380.0], [1.62703052E12, 354120.0], [1.62703069E12, 1021500.0], [1.62703018E12, 2469760.0], [1.62703035E12, 1334760.0], [1.62703001E12, 3604760.0], [1.62702984E12, 131659.4], [1.62703044E12, 6782610.6], [1.62703061E12, 6810000.0], [1.62703027E12, 6819080.0], [1.6270301E12, 6587540.0], [1.62702993E12, 5520640.0], [1.62703023E12, 6805460.0], [1.62703006E12, 6800920.0], [1.62702989E12, 2705780.4], [1.62703066E12, 4385640.0], [1.62703032E12, 2142880.0], [1.62703049E12, 3268728.0], [1.62703015E12, 1012420.0], [1.62702998E12, 354120.0], [1.62702981E12, 49941.0], [1.62703058E12, 6723740.0], [1.62703024E12, 6669260.0], [1.62703041E12, 3282351.6], [1.62703007E12, 6810000.0], [1.6270299E12, 4231198.0], [1.6270305E12, 2133753.0], [1.62703067E12, 3255180.0], [1.62703016E12, 331420.0], [1.62703033E12, 1003340.0], [1.62702999E12, 1357472.7], [1.62702982E12, 31780.0], [1.62703042E12, 6796140.7], [1.62703059E12, 6814543.8], [1.62703025E12, 6810000.0], [1.62703008E12, 6796380.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62703038E12, 23467.5], [1.62703055E12, 17820.0], [1.62703021E12, 28980.0], [1.62703004E12, 33412.5], [1.62702987E12, 7177.5], [1.62703064E12, 32580.0], [1.6270303E12, 21780.0], [1.62703047E12, 27247.5], [1.62703013E12, 16222.5], [1.62702996E12, 10485.0], [1.62703056E12, 21825.0], [1.62703022E12, 33412.5], [1.62703039E12, 28980.0], [1.62703005E12, 33705.0], [1.62702988E12, 6502.5], [1.62703048E12, 21757.5], [1.62703065E12, 27382.5], [1.62703014E12, 10552.5], [1.62703031E12, 16200.0], [1.62702997E12, 5085.0], [1.6270298E12, 112.5], [1.6270304E12, 33412.5], [1.62703057E12, 28935.0], [1.6270307E12, 472.5], [1.62703036E12, 12240.0], [1.62703053E12, 6660.0], [1.62703019E12, 17820.0], [1.62703002E12, 22072.5], [1.62702985E12, 67.5], [1.62703062E12, 33727.5], [1.62703028E12, 32557.5], [1.62703045E12, 33750.0], [1.62703011E12, 27315.0], [1.62702994E12, 21510.0], [1.62703054E12, 12285.0], [1.6270302E12, 23467.5], [1.62703037E12, 17820.0], [1.62703003E12, 27022.5], [1.62702986E12, 1417.5], [1.62703046E12, 32535.0], [1.62703063E12, 33660.0], [1.62703029E12, 27247.5], [1.62703012E12, 21735.0], [1.62702995E12, 16155.0], [1.62702991E12, 33255.0], [1.62703068E12, 10620.0], [1.62703034E12, 1597.5], [1.62703051E12, 5062.5], [1.62703017E12, 6660.0], [1.62703E12, 12217.5], [1.62702983E12, 315.0], [1.6270306E12, 33727.5], [1.62703026E12, 30780.0], [1.62703043E12, 33750.0], [1.62703009E12, 33705.0], [1.62702992E12, 32557.5], [1.62703052E12, 1755.0], [1.62703069E12, 5062.5], [1.62703018E12, 12240.0], [1.62703035E12, 6615.0], [1.62703001E12, 17865.0], [1.62702984E12, 652.5], [1.62703044E12, 33615.0], [1.62703061E12, 33750.0], [1.62703027E12, 33795.0], [1.6270301E12, 32647.5], [1.62702993E12, 27360.0], [1.62703023E12, 33727.5], [1.62703006E12, 33705.0], [1.62702989E12, 13410.0], [1.62703066E12, 21735.0], [1.62703032E12, 10620.0], [1.62703049E12, 16200.0], [1.62703015E12, 5017.5], [1.62702998E12, 1755.0], [1.62702981E12, 247.5], [1.62703058E12, 33322.5], [1.62703024E12, 33052.5], [1.62703041E12, 16267.5], [1.62703007E12, 33750.0], [1.6270299E12, 20970.0], [1.6270305E12, 10575.0], [1.62703067E12, 16132.5], [1.62703016E12, 1642.5], [1.62703033E12, 4972.5], [1.62702999E12, 6727.5], [1.62702982E12, 157.5], [1.62703042E12, 33682.5], [1.62703059E12, 33772.5], [1.62703025E12, 33750.0], [1.62703008E12, 33682.5]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.6270307E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 12.306045340050373, "minX": 1.6270298E12, "maxY": 5083.4, "series": [{"data": [[1.62703038E12, 21.14189837008629], [1.62703055E12, 19.934343434343447], [1.62703021E12, 26.538819875776383], [1.62703004E12, 17.31717171717173], [1.62702987E12, 819.0971786833858], [1.62703064E12, 16.51174033149173], [1.6270303E12, 23.604338842975196], [1.62703047E12, 23.177539223781974], [1.62703013E12, 22.644937586685167], [1.62702996E12, 27.84763948497854], [1.62703056E12, 24.86391752577319], [1.62703022E12, 28.344781144781127], [1.62703039E12, 14.476708074534168], [1.62703005E12, 16.448598130841155], [1.62702988E12, 517.5778546712801], [1.62703048E12, 23.638055842812854], [1.62703065E12, 17.372226787181607], [1.62703014E12, 19.611940298507456], [1.62703031E12, 22.60694444444443], [1.62702997E12, 20.25221238938054], [1.6270298E12, 5083.4], [1.6270304E12, 16.27474747474747], [1.62703057E12, 23.094867807153953], [1.6270307E12, 18.23809523809524], [1.62703036E12, 21.985294117647047], [1.62703053E12, 22.158783783783782], [1.62703019E12, 22.718434343434346], [1.62703002E12, 16.858307849133546], [1.62702985E12, 52.0], [1.62703062E12, 17.108072048031964], [1.62703028E12, 16.07809260539043], [1.62703045E12, 26.279333333333355], [1.62703011E12, 25.994233937397034], [1.62702994E12, 29.196652719665245], [1.62703054E12, 19.553113553113548], [1.6270302E12, 25.154362416107382], [1.62703037E12, 23.089646464646474], [1.62703003E12, 19.16486261448792], [1.62702986E12, 307.88888888888886], [1.62703046E12, 24.769709543568492], [1.62703063E12, 16.759358288770052], [1.62703029E12, 17.170933113129653], [1.62703012E12, 24.332298136645964], [1.62702995E12, 23.23119777158774], [1.62702991E12, 61.370094722598004], [1.62703068E12, 21.11440677966102], [1.62703034E12, 23.422535211267608], [1.62703051E12, 23.462222222222223], [1.62703017E12, 17.20945945945947], [1.62703E12, 13.03683241252303], [1.62702983E12, 144.07142857142856], [1.6270306E12, 16.76717811874582], [1.62703026E12, 28.080409356725138], [1.62703043E12, 25.511333333333354], [1.62703009E12, 28.458611481975957], [1.62702992E12, 54.238424326192096], [1.62703052E12, 23.15384615384616], [1.62703069E12, 21.17333333333334], [1.62703018E12, 22.220588235294105], [1.62703035E12, 22.71428571428571], [1.62703001E12, 12.306045340050373], [1.62702984E12, 277.96551724137925], [1.62703044E12, 26.113119143239604], [1.62703061E12, 16.745999999999988], [1.62703027E12, 16.868841544607193], [1.6270301E12, 27.968297725706414], [1.62702993E12, 37.35855263157896], [1.62703023E12, 28.33488992661774], [1.62703006E12, 16.506008010680898], [1.62702989E12, 480.91778523489944], [1.62703066E12, 23.167701863354043], [1.62703032E12, 22.411016949152543], [1.62703049E12, 22.54583333333333], [1.62703015E12, 15.300448430493283], [1.62702998E12, 21.34615384615385], [1.62702981E12, 1290.909090909091], [1.62703058E12, 26.021607022282193], [1.62703024E12, 27.5132743362832], [1.62703041E12, 50.62378976486861], [1.62703007E12, 16.104000000000003], [1.6270299E12, 529.2553648068671], [1.6270305E12, 22.04042553191488], [1.62703067E12, 21.476987447698733], [1.62703016E12, 13.438356164383563], [1.62703033E12, 24.158371040723985], [1.62702999E12, 18.006688963210703], [1.62702982E12, 98.42857142857143], [1.62703042E12, 26.04141616566466], [1.62703059E12, 23.632911392405067], [1.62703025E12, 27.504000000000023], [1.62703008E12, 20.499665998663957]], "isOverall": false, "label": "Healthy Thinking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.6270307E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 12.054156171284628, "minX": 1.6270298E12, "maxY": 4906.4, "series": [{"data": [[1.62703038E12, 19.2713326941515], [1.62703055E12, 17.91540404040404], [1.62703021E12, 24.17003105590063], [1.62703004E12, 16.973737373737364], [1.62702987E12, 802.573667711599], [1.62703064E12, 16.170580110497223], [1.6270303E12, 21.235537190082635], [1.62703047E12, 21.032204789430253], [1.62703013E12, 20.349514563106805], [1.62702996E12, 25.4077253218884], [1.62703056E12, 22.690721649484534], [1.62703022E12, 25.808754208754177], [1.62703039E12, 14.180900621118008], [1.62703005E12, 16.09546061415222], [1.62702988E12, 505.3529411764708], [1.62703048E12, 21.270941054808663], [1.62703065E12, 16.635168447000837], [1.62703014E12, 17.852878464818772], [1.62703031E12, 20.3527777777778], [1.62702997E12, 18.318584070796476], [1.6270298E12, 4906.4], [1.6270304E12, 15.91313131313132], [1.62703057E12, 20.90124416796265], [1.6270307E12, 16.714285714285715], [1.62703036E12, 19.738970588235272], [1.62703053E12, 19.898648648648642], [1.62703019E12, 20.50505050505053], [1.62703002E12, 16.510703363914377], [1.62702985E12, 48.333333333333336], [1.62703062E12, 16.75717144763176], [1.62703028E12, 15.743607463718046], [1.62703045E12, 24.084666666666642], [1.62703011E12, 23.578253706754516], [1.62702994E12, 26.765690376569037], [1.62703054E12, 17.467032967032978], [1.6270302E12, 22.723873441994268], [1.62703037E12, 20.80555555555555], [1.62703003E12, 18.78850957535386], [1.62702986E12, 299.5396825396825], [1.62703046E12, 22.623789764868555], [1.62703063E12, 16.416443850267346], [1.62703029E12, 16.289017341040456], [1.62703012E12, 21.891304347826047], [1.62702995E12, 20.970752089136496], [1.62702991E12, 58.76792963464132], [1.62703068E12, 19.046610169491494], [1.62703034E12, 21.211267605633804], [1.62703051E12, 21.160000000000004], [1.62703017E12, 16.16216216216216], [1.62703E12, 12.767955801104966], [1.62702983E12, 138.21428571428572], [1.6270306E12, 16.332221480987325], [1.62703026E12, 26.30921052631582], [1.62703043E12, 23.415999999999976], [1.62703009E12, 25.89853137516686], [1.62702992E12, 51.6682791983414], [1.62703052E12, 20.948717948717945], [1.62703069E12, 19.10666666666668], [1.62703018E12, 19.95404411764704], [1.62703035E12, 20.414965986394556], [1.62703001E12, 12.054156171284628], [1.62702984E12, 271.41379310344826], [1.62703044E12, 23.82597054886212], [1.62703061E12, 16.363333333333326], [1.62703027E12, 16.458055925432745], [1.6270301E12, 25.340454858718132], [1.62702993E12, 34.75986842105262], [1.62703023E12, 25.7911941294196], [1.62703006E12, 16.125500667556775], [1.62702989E12, 473.0402684563763], [1.62703066E12, 21.05072463768117], [1.62703032E12, 20.15042372881354], [1.62703049E12, 20.340277777777796], [1.62703015E12, 14.982062780269061], [1.62702998E12, 19.179487179487182], [1.62702981E12, 1273.6363636363633], [1.62703058E12, 23.827819041188363], [1.62703024E12, 25.22668481960515], [1.62703041E12, 48.43706777316732], [1.62703007E12, 15.764666666666654], [1.6270299E12, 522.3336909871247], [1.6270305E12, 19.812765957446814], [1.62703067E12, 19.433751743375165], [1.62703016E12, 13.232876712328766], [1.62703033E12, 21.900452488687787], [1.62702999E12, 16.69230769230768], [1.62702982E12, 96.14285714285715], [1.62703042E12, 23.7935871743487], [1.62703059E12, 21.938041305796137], [1.62703025E12, 25.267333333333326], [1.62703008E12, 19.379425517702096]], "isOverall": false, "label": "Healthy Thinking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.6270307E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 10.899244332493685, "minX": 1.6270298E12, "maxY": 770.614420062696, "series": [{"data": [[1.62703038E12, 16.484180249280925], [1.62703055E12, 15.142676767676788], [1.62703021E12, 20.419254658385082], [1.62703004E12, 15.263973063973056], [1.62702987E12, 770.614420062696], [1.62703064E12, 14.368093922651955], [1.6270303E12, 18.026859504132233], [1.62703047E12, 17.846407927332784], [1.62703013E12, 17.137309292649118], [1.62702996E12, 21.69527896995707], [1.62703056E12, 19.716494845360845], [1.62703022E12, 21.86531986531984], [1.62703039E12, 12.910714285714267], [1.62703005E12, 14.467957276368505], [1.62702988E12, 492.03114186851246], [1.62703048E12, 18.009307135470515], [1.62703065E12, 14.68036154478224], [1.62703014E12, 15.191897654584208], [1.62703031E12, 17.201388888888903], [1.62702997E12, 15.24778761061947], [1.6270298E12, 233.2], [1.6270304E12, 14.041750841750844], [1.62703057E12, 17.77449455676518], [1.6270307E12, 14.333333333333336], [1.62703036E12, 16.529411764705866], [1.62703053E12, 16.733108108108112], [1.62703019E12, 17.257575757575744], [1.62703002E12, 15.20489296636085], [1.62702985E12, 42.333333333333336], [1.62703062E12, 14.837224816544365], [1.62703028E12, 14.05183137525916], [1.62703045E12, 20.531333333333333], [1.62703011E12, 19.96457990115322], [1.62702994E12, 22.783472803347284], [1.62703054E12, 14.668498168498166], [1.6270302E12, 19.23585810162989], [1.62703037E12, 17.59848484848483], [1.62703003E12, 17.18984179850129], [1.62702986E12, 289.7301587301586], [1.62703046E12, 19.2883817427386], [1.62703063E12, 14.643716577540102], [1.62703029E12, 14.515276630883568], [1.62703012E12, 18.548654244306412], [1.62702995E12, 17.68802228412256], [1.62702991E12, 53.352503382949834], [1.62703068E12, 15.853813559322036], [1.62703034E12, 18.028169014084508], [1.62703051E12, 17.920000000000005], [1.62703017E12, 14.222972972972977], [1.62703E12, 11.613259668508285], [1.62702983E12, 130.71428571428572], [1.6270306E12, 14.614409606404264], [1.62703026E12, 22.753654970760238], [1.62703043E12, 19.898666666666706], [1.62703009E12, 22.08277703604807], [1.62702992E12, 46.25224602626122], [1.62703052E12, 17.910256410256412], [1.62703069E12, 15.875555555555552], [1.62703018E12, 16.81066176470587], [1.62703035E12, 17.255102040816322], [1.62703001E12, 10.899244332493685], [1.62702984E12, 258.2758620689655], [1.62703044E12, 20.3714859437751], [1.62703061E12, 14.477333333333322], [1.62703027E12, 14.71171770972037], [1.6270301E12, 21.538938662991004], [1.62702993E12, 30.193256578947352], [1.62703023E12, 21.889259506337563], [1.62703006E12, 14.449933244325765], [1.62702989E12, 460.04865771812024], [1.62703066E12, 17.65838509316771], [1.62703032E12, 16.959745762711872], [1.62703049E12, 17.106944444444427], [1.62703015E12, 13.816143497757839], [1.62702998E12, 16.02564102564103], [1.62702981E12, 56.0], [1.62703058E12, 20.227548953409848], [1.62703024E12, 21.410483321987726], [1.62703041E12, 17.568464730290465], [1.62703007E12, 14.168000000000003], [1.6270299E12, 504.33798283261774], [1.6270305E12, 16.61914893617022], [1.62703067E12, 16.30822873082286], [1.62703016E12, 12.02739726027397], [1.62703033E12, 18.479638009049786], [1.62702999E12, 13.812709030100343], [1.62702982E12, 90.42857142857143], [1.62703042E12, 20.275217100868375], [1.62703059E12, 18.770819453697577], [1.62703025E12, 21.33733333333336], [1.62703008E12, 17.002004008016005]], "isOverall": false, "label": "Healthy Thinking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.6270307E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.6270298E12, "maxY": 7094.0, "series": [{"data": [[1.62703038E12, 144.0], [1.62703055E12, 44.0], [1.62703021E12, 64.0], [1.62703004E12, 122.0], [1.62702987E12, 1306.0], [1.62703064E12, 176.0], [1.6270303E12, 74.0], [1.62703047E12, 59.0], [1.62703013E12, 49.0], [1.62702996E12, 100.0], [1.62703056E12, 599.0], [1.62703022E12, 118.0], [1.62703039E12, 50.0], [1.62703005E12, 108.0], [1.62702988E12, 1049.0], [1.62703048E12, 60.0], [1.62703065E12, 151.0], [1.62703014E12, 60.0], [1.62703031E12, 102.0], [1.62702997E12, 31.0], [1.6270298E12, 6293.0], [1.6270304E12, 79.0], [1.62703057E12, 51.0], [1.6270307E12, 26.0], [1.62703036E12, 49.0], [1.62703053E12, 58.0], [1.62703019E12, 47.0], [1.62703002E12, 594.0], [1.62702985E12, 55.0], [1.62703062E12, 128.0], [1.62703028E12, 97.0], [1.62703045E12, 66.0], [1.62703011E12, 64.0], [1.62702994E12, 93.0], [1.62703054E12, 41.0], [1.6270302E12, 138.0], [1.62703037E12, 79.0], [1.62703003E12, 578.0], [1.62702986E12, 418.0], [1.62703046E12, 62.0], [1.62703063E12, 123.0], [1.62703029E12, 144.0], [1.62703012E12, 175.0], [1.62702995E12, 59.0], [1.62702991E12, 124.0], [1.62703068E12, 48.0], [1.62703034E12, 30.0], [1.62703051E12, 41.0], [1.62703017E12, 33.0], [1.62703E12, 67.0], [1.62702983E12, 166.0], [1.6270306E12, 121.0], [1.62703026E12, 694.0], [1.62703043E12, 66.0], [1.62703009E12, 69.0], [1.62702992E12, 154.0], [1.62703052E12, 30.0], [1.62703069E12, 60.0], [1.62703018E12, 49.0], [1.62703035E12, 40.0], [1.62703001E12, 38.0], [1.62702984E12, 337.0], [1.62703044E12, 72.0], [1.62703061E12, 75.0], [1.62703027E12, 126.0], [1.6270301E12, 82.0], [1.62702993E12, 137.0], [1.62703023E12, 86.0], [1.62703006E12, 84.0], [1.62702989E12, 827.0], [1.62703066E12, 99.0], [1.62703032E12, 127.0], [1.62703049E12, 63.0], [1.62703015E12, 240.0], [1.62702998E12, 31.0], [1.62702981E12, 7094.0], [1.62703058E12, 53.0], [1.62703024E12, 71.0], [1.62703041E12, 5585.0], [1.62703007E12, 57.0], [1.6270299E12, 1639.0], [1.6270305E12, 41.0], [1.62703067E12, 39.0], [1.62703016E12, 24.0], [1.62703033E12, 94.0], [1.62702999E12, 82.0], [1.62702982E12, 113.0], [1.62703042E12, 61.0], [1.62703059E12, 58.0], [1.62703025E12, 62.0], [1.62703008E12, 93.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62703038E12, 10.0], [1.62703055E12, 12.0], [1.62703021E12, 20.0], [1.62703004E12, 11.0], [1.62702987E12, 85.0], [1.62703064E12, 10.0], [1.6270303E12, 20.0], [1.62703047E12, 13.0], [1.62703013E12, 19.0], [1.62702996E12, 14.0], [1.62703056E12, 13.0], [1.62703022E12, 21.0], [1.62703039E12, 10.0], [1.62703005E12, 10.0], [1.62702988E12, 98.0], [1.62703048E12, 20.0], [1.62703065E12, 10.0], [1.62703014E12, 10.0], [1.62703031E12, 19.0], [1.62702997E12, 13.0], [1.6270298E12, 4232.0], [1.6270304E12, 11.0], [1.62703057E12, 13.0], [1.6270307E12, 14.0], [1.62703036E12, 19.0], [1.62703053E12, 13.0], [1.62703019E12, 19.0], [1.62703002E12, 10.0], [1.62702985E12, 50.0], [1.62703062E12, 11.0], [1.62703028E12, 11.0], [1.62703045E12, 14.0], [1.62703011E12, 20.0], [1.62702994E12, 20.0], [1.62703054E12, 12.0], [1.6270302E12, 20.0], [1.62703037E12, 19.0], [1.62703003E12, 10.0], [1.62702986E12, 119.0], [1.62703046E12, 14.0], [1.62703063E12, 11.0], [1.62703029E12, 10.0], [1.62703012E12, 20.0], [1.62702995E12, 20.0], [1.62702991E12, 26.0], [1.62703068E12, 14.0], [1.62703034E12, 20.0], [1.62703051E12, 20.0], [1.62703017E12, 10.0], [1.62703E12, 10.0], [1.62702983E12, 117.0], [1.6270306E12, 11.0], [1.62703026E12, 11.0], [1.62703043E12, 14.0], [1.62703009E12, 21.0], [1.62702992E12, 21.0], [1.62703052E12, 20.0], [1.62703069E12, 13.0], [1.62703018E12, 20.0], [1.62703035E12, 19.0], [1.62703001E12, 10.0], [1.62702984E12, 207.0], [1.62703044E12, 14.0], [1.62703061E12, 10.0], [1.62703027E12, 11.0], [1.6270301E12, 21.0], [1.62702993E12, 21.0], [1.62703023E12, 16.0], [1.62703006E12, 11.0], [1.62702989E12, 49.0], [1.62703066E12, 14.0], [1.62703032E12, 20.0], [1.62703049E12, 20.0], [1.62703015E12, 10.0], [1.62702998E12, 14.0], [1.62702981E12, 43.0], [1.62703058E12, 13.0], [1.62703024E12, 15.0], [1.62703041E12, 11.0], [1.62703007E12, 10.0], [1.6270299E12, 22.0], [1.6270305E12, 20.0], [1.62703067E12, 13.0], [1.62703016E12, 10.0], [1.62703033E12, 19.0], [1.62702999E12, 10.0], [1.62702982E12, 81.0], [1.62703042E12, 13.0], [1.62703059E12, 11.0], [1.62703025E12, 16.0], [1.62703008E12, 10.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62703038E12, 27.0], [1.62703055E12, 26.0], [1.62703021E12, 31.0], [1.62703004E12, 25.0], [1.62702987E12, 1204.0], [1.62703064E12, 21.0], [1.6270303E12, 26.0], [1.62703047E12, 29.0], [1.62703013E12, 24.0], [1.62702996E12, 41.30000000000001], [1.62703056E12, 29.0], [1.62703022E12, 34.0], [1.62703039E12, 17.0], [1.62703005E12, 22.0], [1.62702988E12, 924.0], [1.62703048E12, 26.0], [1.62703065E12, 27.0], [1.62703014E12, 23.0], [1.62703031E12, 24.0], [1.62702997E12, 27.0], [1.6270298E12, 6293.0], [1.6270304E12, 20.0], [1.62703057E12, 30.0], [1.6270307E12, 25.400000000000002], [1.62703036E12, 23.0], [1.62703053E12, 26.0], [1.62703019E12, 24.0], [1.62703002E12, 23.0], [1.62702985E12, 55.0], [1.62703062E12, 22.0], [1.62703028E12, 20.0], [1.62703045E12, 35.0], [1.62703011E12, 30.0], [1.62702994E12, 42.0], [1.62703054E12, 25.0], [1.6270302E12, 28.0], [1.62703037E12, 25.0], [1.62703003E12, 27.0], [1.62702986E12, 381.6], [1.62703046E12, 32.0], [1.62703063E12, 22.0], [1.62703029E12, 25.0], [1.62703012E12, 27.0], [1.62702995E12, 25.0], [1.62702991E12, 80.0], [1.62703068E12, 27.0], [1.62703034E12, 27.0], [1.62703051E12, 26.0], [1.62703017E12, 23.0], [1.62703E12, 15.600000000000023], [1.62702983E12, 161.5], [1.6270306E12, 22.0], [1.62703026E12, 36.100000000000136], [1.62703043E12, 33.0], [1.62703009E12, 35.0], [1.62702992E12, 77.0], [1.62703052E12, 26.0], [1.62703069E12, 27.0], [1.62703018E12, 24.0], [1.62703035E12, 26.0], [1.62703001E12, 15.0], [1.62702984E12, 333.0], [1.62703044E12, 34.0], [1.62703061E12, 21.0], [1.62703027E12, 22.0], [1.6270301E12, 33.0], [1.62702993E12, 56.0], [1.62703023E12, 35.0], [1.62703006E12, 22.0], [1.62702989E12, 692.0], [1.62703066E12, 29.0], [1.62703032E12, 24.0], [1.62703049E12, 24.0], [1.62703015E12, 16.0], [1.62702998E12, 27.10000000000001], [1.62702981E12, 6980.0], [1.62703058E12, 33.0], [1.62703024E12, 35.0], [1.62703041E12, 31.0], [1.62703007E12, 21.0], [1.6270299E12, 994.4000000000001], [1.6270305E12, 24.0], [1.62703067E12, 28.0], [1.62703016E12, 16.0], [1.62703033E12, 26.0], [1.62702999E12, 27.0], [1.62702982E12, 113.0], [1.62703042E12, 34.0], [1.62703059E12, 33.0], [1.62703025E12, 35.0], [1.62703008E12, 31.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62703038E12, 36.11999999999989], [1.62703055E12, 29.0], [1.62703021E12, 46.2199999999998], [1.62703004E12, 48.1400000000001], [1.62702987E12, 1258.6000000000001], [1.62703064E12, 34.0], [1.6270303E12, 34.0], [1.62703047E12, 37.87999999999988], [1.62703013E12, 37.77999999999997], [1.62702996E12, 82.0], [1.62703056E12, 136.59999999999854], [1.62703022E12, 47.1400000000001], [1.62703039E12, 31.1099999999999], [1.62703005E12, 36.0], [1.62702988E12, 1035.0000000000002], [1.62703048E12, 40.0], [1.62703065E12, 40.0], [1.62703014E12, 34.60000000000002], [1.62703031E12, 35.36999999999989], [1.62702997E12, 30.45999999999998], [1.6270298E12, 6293.0], [1.6270304E12, 34.1400000000001], [1.62703057E12, 41.0], [1.6270307E12, 26.0], [1.62703036E12, 32.549999999999955], [1.62703053E12, 36.059999999999945], [1.62703019E12, 36.069999999999936], [1.62703002E12, 67.53999999999985], [1.62702985E12, 55.0], [1.62703062E12, 39.0], [1.62703028E12, 34.51999999999998], [1.62703045E12, 52.99000000000001], [1.62703011E12, 44.0], [1.62702994E12, 62.42999999999995], [1.62703054E12, 28.0], [1.6270302E12, 49.11999999999989], [1.62703037E12, 39.0], [1.62703003E12, 69.96000000000004], [1.62702986E12, 418.0], [1.62703046E12, 42.52999999999997], [1.62703063E12, 37.0], [1.62703029E12, 34.75999999999976], [1.62703012E12, 40.33000000000004], [1.62702995E12, 39.0], [1.62702991E12, 108.0], [1.62703068E12, 34.809999999999945], [1.62703034E12, 30.0], [1.62703051E12, 39.74000000000001], [1.62703017E12, 30.0], [1.62703E12, 38.559999999999945], [1.62702983E12, 166.0], [1.6270306E12, 37.0], [1.62703026E12, 101.71999999999935], [1.62703043E12, 44.99000000000001], [1.62703009E12, 47.0], [1.62702992E12, 106.51999999999998], [1.62703052E12, 30.0], [1.62703069E12, 36.66000000000008], [1.62703018E12, 36.549999999999955], [1.62703035E12, 31.200000000000045], [1.62703001E12, 27.049999999999955], [1.62702984E12, 337.0], [1.62703044E12, 48.049999999999955], [1.62703061E12, 35.0], [1.62703027E12, 39.940000000000055], [1.6270301E12, 46.0], [1.62702993E12, 81.65999999999985], [1.62703023E12, 52.0], [1.62703006E12, 40.00999999999999], [1.62702989E12, 801.06], [1.62703066E12, 41.0], [1.62703032E12, 35.539999999999964], [1.62703049E12, 34.789999999999964], [1.62703015E12, 77.15999999999963], [1.62702998E12, 31.0], [1.62702981E12, 7094.0], [1.62703058E12, 43.180000000000064], [1.62703024E12, 47.0], [1.62703041E12, 52.83999999999992], [1.62703007E12, 36.0], [1.6270299E12, 1234.0], [1.6270305E12, 31.58000000000004], [1.62703067E12, 31.82000000000005], [1.62703016E12, 24.0], [1.62703033E12, 51.02000000000001], [1.62702999E12, 53.0], [1.62702982E12, 113.0], [1.62703042E12, 45.0], [1.62703059E12, 43.0], [1.62703025E12, 48.0], [1.62703008E12, 45.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62703038E12, 28.0], [1.62703055E12, 27.0], [1.62703021E12, 34.0], [1.62703004E12, 32.0], [1.62702987E12, 1221.0], [1.62703064E12, 25.0], [1.6270303E12, 28.0], [1.62703047E12, 31.0], [1.62703013E12, 26.0], [1.62702996E12, 63.0], [1.62703056E12, 34.0], [1.62703022E12, 38.0], [1.62703039E12, 20.0], [1.62703005E12, 26.049999999999955], [1.62702988E12, 959.0], [1.62703048E12, 28.0], [1.62703065E12, 30.0], [1.62703014E12, 24.0], [1.62703031E12, 27.0], [1.62702997E12, 27.649999999999977], [1.6270298E12, 6293.0], [1.6270304E12, 23.0], [1.62703057E12, 32.0], [1.6270307E12, 26.0], [1.62703036E12, 25.0], [1.62703053E12, 27.0], [1.62703019E12, 26.0], [1.62703002E12, 33.0], [1.62702985E12, 55.0], [1.62703062E12, 26.0], [1.62703028E12, 24.0], [1.62703045E12, 37.0], [1.62703011E12, 33.0], [1.62702994E12, 47.0], [1.62703054E12, 26.0], [1.6270302E12, 33.0], [1.62703037E12, 27.0], [1.62703003E12, 34.0], [1.62702986E12, 400.79999999999995], [1.62703046E12, 35.0], [1.62703063E12, 26.0], [1.62703029E12, 26.0], [1.62703012E12, 29.0], [1.62702995E12, 29.0], [1.62702991E12, 87.0], [1.62703068E12, 28.0], [1.62703034E12, 28.39999999999999], [1.62703051E12, 26.69999999999999], [1.62703017E12, 25.149999999999977], [1.62703E12, 21.0], [1.62702983E12, 166.0], [1.6270306E12, 25.0], [1.62703026E12, 41.0], [1.62703043E12, 36.0], [1.62703009E12, 38.0], [1.62702992E12, 86.0], [1.62703052E12, 26.049999999999997], [1.62703069E12, 28.0], [1.62703018E12, 25.0], [1.62703035E12, 26.0], [1.62703001E12, 19.0], [1.62702984E12, 336.0], [1.62703044E12, 37.0], [1.62703061E12, 25.0], [1.62703027E12, 26.0], [1.6270301E12, 36.399999999999864], [1.62702993E12, 63.0], [1.62703023E12, 39.0], [1.62703006E12, 26.049999999999955], [1.62702989E12, 735.4999999999998], [1.62703066E12, 30.0], [1.62703032E12, 26.0], [1.62703049E12, 26.0], [1.62703015E12, 18.599999999999966], [1.62702998E12, 28.099999999999994], [1.62702981E12, 7094.0], [1.62703058E12, 36.0], [1.62703024E12, 38.0], [1.62703041E12, 34.0], [1.62703007E12, 26.0], [1.6270299E12, 1158.35], [1.6270305E12, 25.0], [1.62703067E12, 29.0], [1.62703016E12, 19.299999999999997], [1.62703033E12, 28.0], [1.62702999E12, 28.0], [1.62702982E12, 113.0], [1.62703042E12, 37.0], [1.62703059E12, 36.0], [1.62703025E12, 38.0], [1.62703008E12, 34.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.6270307E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 13.0, "minX": 1.0, "maxY": 837.0, "series": [{"data": [[2.0, 39.0], [3.0, 51.0], [4.0, 26.0], [5.0, 23.0], [6.0, 19.5], [7.0, 95.0], [8.0, 22.0], [9.0, 21.0], [10.0, 22.0], [11.0, 20.5], [12.0, 22.0], [13.0, 21.0], [14.0, 24.5], [15.0, 195.5], [16.0, 21.5], [17.0, 20.0], [18.0, 21.0], [19.0, 22.0], [20.0, 222.5], [21.0, 21.0], [22.0, 22.0], [23.0, 21.0], [24.0, 20.5], [26.0, 22.0], [27.0, 21.0], [28.0, 22.0], [29.0, 22.0], [30.0, 14.0], [31.0, 17.0], [32.0, 22.0], [33.0, 22.0], [34.0, 21.0], [35.0, 16.0], [37.0, 285.0], [36.0, 22.0], [39.0, 21.0], [38.0, 22.0], [41.0, 21.5], [40.0, 19.0], [43.0, 22.0], [42.0, 21.0], [44.0, 22.0], [45.0, 19.0], [46.0, 22.0], [47.0, 31.0], [48.0, 21.0], [49.0, 20.0], [50.0, 21.0], [51.0, 21.0], [52.0, 20.0], [53.0, 21.0], [55.0, 21.0], [54.0, 19.0], [56.0, 21.0], [58.0, 22.0], [59.0, 22.0], [61.0, 78.0], [60.0, 21.0], [63.0, 22.0], [65.0, 22.0], [64.0, 21.0], [66.0, 21.0], [67.0, 19.0], [68.0, 23.0], [71.0, 22.0], [69.0, 22.0], [70.0, 21.0], [74.0, 22.0], [73.0, 22.0], [75.0, 21.0], [76.0, 23.0], [78.0, 21.0], [79.0, 22.0], [77.0, 20.0], [83.0, 23.0], [80.0, 22.0], [81.0, 22.0], [82.0, 20.0], [84.0, 22.0], [86.0, 22.0], [85.0, 22.0], [87.0, 22.0], [90.0, 23.0], [89.0, 22.0], [88.0, 23.0], [91.0, 23.0], [93.0, 23.0], [92.0, 24.0], [94.0, 22.0], [95.0, 22.0], [98.0, 23.0], [96.0, 23.0], [99.0, 22.0], [97.0, 23.0], [101.0, 24.0], [103.0, 22.0], [100.0, 23.5], [102.0, 23.0], [105.0, 24.0], [107.0, 24.0], [106.0, 25.0], [104.0, 24.0], [110.0, 42.0], [111.0, 24.0], [108.0, 24.0], [115.0, 24.0], [113.0, 24.0], [112.0, 13.0], [114.0, 24.0], [119.0, 33.0], [118.0, 19.0], [116.0, 22.0], [117.0, 21.0], [121.0, 28.0], [122.0, 22.0], [120.0, 24.0], [123.0, 22.0], [127.0, 23.0], [126.0, 15.0], [125.0, 24.0], [124.0, 14.0], [128.0, 23.0], [135.0, 28.0], [129.0, 39.0], [130.0, 14.0], [132.0, 23.0], [131.0, 23.0], [134.0, 14.0], [133.0, 14.0], [142.0, 17.0], [141.0, 29.0], [139.0, 23.0], [143.0, 24.0], [138.0, 15.0], [136.0, 24.0], [137.0, 23.0], [140.0, 15.0], [150.0, 20.0], [146.0, 51.0], [149.0, 20.0], [147.0, 24.0], [148.0, 25.0], [145.0, 20.0], [151.0, 21.0], [144.0, 25.0], [152.0, 26.0], [153.0, 40.0], [154.0, 26.0], [162.0, 837.0], [178.0, 450.0], [1.0, 23.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 178.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 13.0, "minX": 1.0, "maxY": 835.5, "series": [{"data": [[2.0, 37.5], [3.0, 48.0], [4.0, 24.0], [5.0, 21.0], [6.0, 18.0], [7.0, 94.0], [8.0, 20.0], [9.0, 19.0], [10.0, 20.0], [11.0, 18.5], [12.0, 19.0], [13.0, 19.0], [14.0, 22.0], [15.0, 193.0], [16.0, 19.0], [17.0, 18.0], [18.0, 19.0], [19.0, 19.0], [20.0, 220.0], [21.0, 19.0], [22.0, 19.0], [23.0, 19.0], [24.0, 18.5], [26.0, 19.0], [27.0, 19.0], [28.0, 20.0], [29.0, 19.0], [30.0, 14.0], [31.0, 17.0], [32.0, 20.0], [33.0, 20.0], [34.0, 19.0], [35.0, 16.0], [37.0, 277.0], [36.0, 19.0], [39.0, 19.0], [38.0, 20.0], [41.0, 19.0], [40.0, 17.0], [43.0, 20.0], [42.0, 19.0], [44.0, 20.0], [45.0, 17.0], [46.0, 19.0], [47.0, 29.0], [48.0, 19.0], [49.0, 18.0], [50.0, 19.0], [51.0, 19.0], [52.0, 18.0], [53.0, 19.0], [55.0, 19.0], [54.0, 17.0], [56.0, 19.0], [58.0, 19.0], [59.0, 19.0], [61.0, 76.5], [60.0, 19.0], [63.0, 20.0], [65.0, 19.0], [64.0, 19.0], [66.0, 19.0], [67.0, 17.0], [68.0, 21.0], [71.0, 20.0], [69.0, 20.0], [70.0, 19.0], [74.0, 20.0], [73.0, 20.0], [75.0, 19.0], [76.0, 20.0], [78.0, 19.0], [79.0, 20.0], [77.0, 18.0], [83.0, 20.0], [80.0, 20.0], [81.0, 20.0], [82.0, 18.0], [84.0, 20.0], [86.0, 20.0], [85.0, 20.0], [87.0, 20.0], [90.0, 21.0], [89.0, 20.0], [88.0, 20.0], [91.0, 20.0], [93.0, 20.0], [92.0, 22.0], [94.0, 20.0], [95.0, 20.0], [98.0, 20.0], [96.0, 21.0], [99.0, 20.0], [97.0, 21.0], [101.0, 21.0], [103.0, 20.0], [100.0, 21.0], [102.0, 21.0], [105.0, 21.0], [107.0, 22.0], [106.0, 22.0], [104.0, 22.0], [110.0, 39.5], [111.0, 21.0], [108.0, 21.5], [115.0, 22.0], [113.0, 21.0], [112.0, 13.0], [114.0, 22.0], [119.0, 31.0], [118.0, 17.0], [116.0, 20.0], [117.0, 19.0], [121.0, 25.0], [122.0, 20.0], [120.0, 22.0], [123.0, 20.0], [127.0, 21.0], [126.0, 15.0], [125.0, 22.0], [124.0, 14.0], [128.0, 21.0], [135.0, 25.0], [129.0, 36.0], [130.0, 14.0], [132.0, 22.0], [131.0, 22.0], [134.0, 14.0], [133.0, 13.0], [142.0, 17.0], [141.0, 26.0], [139.0, 21.0], [143.0, 22.0], [138.0, 15.0], [136.0, 22.0], [137.0, 21.0], [140.0, 14.0], [150.0, 19.0], [146.0, 49.0], [149.0, 19.0], [147.0, 22.0], [148.0, 23.0], [145.0, 19.0], [151.0, 20.0], [144.0, 23.0], [152.0, 23.0], [153.0, 37.0], [154.0, 24.0], [162.0, 835.5], [178.0, 431.0], [1.0, 21.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 178.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.3, "minX": 1.6270298E12, "maxY": 150.0, "series": [{"data": [[1.62703038E12, 104.2], [1.62703055E12, 79.3], [1.62703021E12, 128.9], [1.62703004E12, 148.5], [1.62702987E12, 38.4], [1.62703064E12, 144.8], [1.6270303E12, 96.8], [1.62703047E12, 121.1], [1.62703013E12, 72.0], [1.62702996E12, 46.6], [1.62703056E12, 97.0], [1.62703022E12, 148.6], [1.62703039E12, 128.9], [1.62703005E12, 149.8], [1.62702988E12, 24.7], [1.62703048E12, 96.6], [1.62703065E12, 121.6], [1.62703014E12, 46.9], [1.62703031E12, 71.9], [1.62702997E12, 22.5], [1.6270298E12, 0.7], [1.6270304E12, 148.5], [1.62703057E12, 128.7], [1.6270307E12, 2.1], [1.62703036E12, 54.5], [1.62703053E12, 29.7], [1.62703019E12, 79.3], [1.62703002E12, 98.1], [1.62702985E12, 0.3], [1.62703062E12, 149.9], [1.62703028E12, 144.8], [1.62703045E12, 149.9], [1.62703011E12, 121.3], [1.62702994E12, 95.5], [1.62703054E12, 54.6], [1.6270302E12, 104.5], [1.62703037E12, 79.2], [1.62703003E12, 120.1], [1.62702986E12, 10.3], [1.62703046E12, 144.5], [1.62703063E12, 149.7], [1.62703029E12, 121.0], [1.62703012E12, 96.7], [1.62702995E12, 71.7], [1.62702991E12, 148.0], [1.62703068E12, 47.2], [1.62703034E12, 7.1], [1.62703051E12, 22.3], [1.62703017E12, 29.7], [1.62703E12, 54.4], [1.62702983E12, 1.4], [1.6270306E12, 150.0], [1.62703026E12, 136.9], [1.62703043E12, 149.9], [1.62703009E12, 149.9], [1.62702992E12, 144.4], [1.62703052E12, 7.8], [1.62703069E12, 22.4], [1.62703018E12, 54.4], [1.62703035E12, 29.5], [1.62703001E12, 79.4], [1.62702984E12, 2.9], [1.62703044E12, 149.6], [1.62703061E12, 149.9], [1.62703027E12, 149.9], [1.6270301E12, 144.9], [1.62702993E12, 121.3], [1.62703023E12, 149.8], [1.62703006E12, 150.0], [1.62702989E12, 53.3], [1.62703066E12, 96.5], [1.62703032E12, 47.2], [1.62703049E12, 71.9], [1.62703015E12, 22.1], [1.62702998E12, 7.9], [1.62702981E12, 0.9], [1.62703058E12, 148.3], [1.62703024E12, 146.9], [1.62703041E12, 72.4], [1.62703007E12, 149.8], [1.6270299E12, 93.9], [1.6270305E12, 47.1], [1.62703067E12, 71.7], [1.62703016E12, 7.3], [1.62703033E12, 22.0], [1.62702999E12, 29.9], [1.62702982E12, 0.7], [1.62703042E12, 149.8], [1.62703059E12, 149.8], [1.62703025E12, 149.9], [1.62703008E12, 149.9]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.6270307E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.3, "minX": 1.6270298E12, "maxY": 150.2, "series": [{"data": [[1.62703038E12, 104.3], [1.62703055E12, 79.2], [1.62703021E12, 128.8], [1.62703004E12, 148.5], [1.62702987E12, 31.9], [1.62703064E12, 144.8], [1.6270303E12, 96.8], [1.62703047E12, 121.1], [1.62703013E12, 72.1], [1.62702996E12, 46.6], [1.62703056E12, 97.0], [1.62703022E12, 148.5], [1.62703039E12, 128.8], [1.62703005E12, 149.8], [1.62702988E12, 28.9], [1.62703048E12, 96.7], [1.62703065E12, 121.7], [1.62703014E12, 46.9], [1.62703031E12, 72.0], [1.62702997E12, 22.6], [1.6270298E12, 0.5], [1.6270304E12, 148.5], [1.62703057E12, 128.6], [1.6270307E12, 2.1], [1.62703036E12, 54.4], [1.62703053E12, 29.6], [1.62703019E12, 79.2], [1.62703002E12, 98.1], [1.62702985E12, 0.3], [1.62703062E12, 149.9], [1.62703028E12, 144.7], [1.62703045E12, 150.0], [1.62703011E12, 121.4], [1.62702994E12, 95.6], [1.62703054E12, 54.6], [1.6270302E12, 104.3], [1.62703037E12, 79.2], [1.62703003E12, 120.1], [1.62702986E12, 6.3], [1.62703046E12, 144.6], [1.62703063E12, 149.6], [1.62703029E12, 121.1], [1.62703012E12, 96.6], [1.62702995E12, 71.8], [1.62702991E12, 147.8], [1.62703068E12, 47.2], [1.62703034E12, 7.1], [1.62703051E12, 22.5], [1.62703017E12, 29.6], [1.62703E12, 54.3], [1.62702983E12, 1.4], [1.6270306E12, 149.9], [1.62703026E12, 136.8], [1.62703043E12, 150.0], [1.62703009E12, 149.8], [1.62702992E12, 144.7], [1.62703052E12, 7.8], [1.62703069E12, 22.5], [1.62703018E12, 54.4], [1.62703035E12, 29.4], [1.62703001E12, 79.4], [1.62702984E12, 2.9], [1.62703044E12, 149.4], [1.62703061E12, 150.0], [1.62703027E12, 150.2], [1.6270301E12, 145.1], [1.62702993E12, 121.6], [1.62703023E12, 149.9], [1.62703006E12, 149.8], [1.62702989E12, 59.6], [1.62703066E12, 96.6], [1.62703032E12, 47.2], [1.62703049E12, 72.0], [1.62703015E12, 22.3], [1.62702998E12, 7.8], [1.62702981E12, 1.1], [1.62703058E12, 148.1], [1.62703024E12, 146.9], [1.62703041E12, 72.3], [1.62703007E12, 150.0], [1.6270299E12, 93.2], [1.6270305E12, 47.0], [1.62703067E12, 71.7], [1.62703016E12, 7.3], [1.62703033E12, 22.1], [1.62702999E12, 29.9], [1.62702982E12, 0.7], [1.62703042E12, 149.7], [1.62703059E12, 150.1], [1.62703025E12, 150.0], [1.62703008E12, 149.7]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.6270307E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.3, "minX": 1.6270298E12, "maxY": 150.2, "series": [{"data": [[1.62703038E12, 104.3], [1.62703055E12, 79.2], [1.62703021E12, 128.8], [1.62703004E12, 148.5], [1.62702987E12, 31.9], [1.62703064E12, 144.8], [1.6270303E12, 96.8], [1.62703047E12, 121.1], [1.62703013E12, 72.1], [1.62702996E12, 46.6], [1.62703056E12, 97.0], [1.62703022E12, 148.5], [1.62703039E12, 128.8], [1.62703005E12, 149.8], [1.62702988E12, 28.9], [1.62703048E12, 96.7], [1.62703065E12, 121.7], [1.62703014E12, 46.9], [1.62703031E12, 72.0], [1.62702997E12, 22.6], [1.6270298E12, 0.5], [1.6270304E12, 148.5], [1.62703057E12, 128.6], [1.6270307E12, 2.1], [1.62703036E12, 54.4], [1.62703053E12, 29.6], [1.62703019E12, 79.2], [1.62703002E12, 98.1], [1.62702985E12, 0.3], [1.62703062E12, 149.9], [1.62703028E12, 144.7], [1.62703045E12, 150.0], [1.62703011E12, 121.4], [1.62702994E12, 95.6], [1.62703054E12, 54.6], [1.6270302E12, 104.3], [1.62703037E12, 79.2], [1.62703003E12, 120.1], [1.62702986E12, 6.3], [1.62703046E12, 144.6], [1.62703063E12, 149.6], [1.62703029E12, 121.1], [1.62703012E12, 96.6], [1.62702995E12, 71.8], [1.62702991E12, 147.8], [1.62703068E12, 47.2], [1.62703034E12, 7.1], [1.62703051E12, 22.5], [1.62703017E12, 29.6], [1.62703E12, 54.3], [1.62702983E12, 1.4], [1.6270306E12, 149.9], [1.62703026E12, 136.8], [1.62703043E12, 150.0], [1.62703009E12, 149.8], [1.62702992E12, 144.7], [1.62703052E12, 7.8], [1.62703069E12, 22.5], [1.62703018E12, 54.4], [1.62703035E12, 29.4], [1.62703001E12, 79.4], [1.62702984E12, 2.9], [1.62703044E12, 149.4], [1.62703061E12, 150.0], [1.62703027E12, 150.2], [1.6270301E12, 145.1], [1.62702993E12, 121.6], [1.62703023E12, 149.9], [1.62703006E12, 149.8], [1.62702989E12, 59.6], [1.62703066E12, 96.6], [1.62703032E12, 47.2], [1.62703049E12, 72.0], [1.62703015E12, 22.3], [1.62702998E12, 7.8], [1.62702981E12, 1.1], [1.62703058E12, 148.1], [1.62703024E12, 146.9], [1.62703041E12, 72.3], [1.62703007E12, 150.0], [1.6270299E12, 93.2], [1.6270305E12, 47.0], [1.62703067E12, 71.7], [1.62703016E12, 7.3], [1.62703033E12, 22.1], [1.62702999E12, 29.9], [1.62702982E12, 0.7], [1.62703042E12, 149.7], [1.62703059E12, 150.1], [1.62703025E12, 150.0], [1.62703008E12, 149.7]], "isOverall": false, "label": "Healthy Thinking-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.6270307E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.3, "minX": 1.6270298E12, "maxY": 150.2, "series": [{"data": [[1.62703038E12, 104.3], [1.62703055E12, 79.2], [1.62703021E12, 128.8], [1.62703004E12, 148.5], [1.62702987E12, 31.9], [1.62703064E12, 144.8], [1.6270303E12, 96.8], [1.62703047E12, 121.1], [1.62703013E12, 72.1], [1.62702996E12, 46.6], [1.62703056E12, 97.0], [1.62703022E12, 148.5], [1.62703039E12, 128.8], [1.62703005E12, 149.8], [1.62702988E12, 28.9], [1.62703048E12, 96.7], [1.62703065E12, 121.7], [1.62703014E12, 46.9], [1.62703031E12, 72.0], [1.62702997E12, 22.6], [1.6270298E12, 0.5], [1.6270304E12, 148.5], [1.62703057E12, 128.6], [1.6270307E12, 2.1], [1.62703036E12, 54.4], [1.62703053E12, 29.6], [1.62703019E12, 79.2], [1.62703002E12, 98.1], [1.62702985E12, 0.3], [1.62703062E12, 149.9], [1.62703028E12, 144.7], [1.62703045E12, 150.0], [1.62703011E12, 121.4], [1.62702994E12, 95.6], [1.62703054E12, 54.6], [1.6270302E12, 104.3], [1.62703037E12, 79.2], [1.62703003E12, 120.1], [1.62702986E12, 6.3], [1.62703046E12, 144.6], [1.62703063E12, 149.6], [1.62703029E12, 121.1], [1.62703012E12, 96.6], [1.62702995E12, 71.8], [1.62702991E12, 147.8], [1.62703068E12, 47.2], [1.62703034E12, 7.1], [1.62703051E12, 22.5], [1.62703017E12, 29.6], [1.62703E12, 54.3], [1.62702983E12, 1.4], [1.6270306E12, 149.9], [1.62703026E12, 136.8], [1.62703043E12, 150.0], [1.62703009E12, 149.8], [1.62702992E12, 144.7], [1.62703052E12, 7.8], [1.62703069E12, 22.5], [1.62703018E12, 54.4], [1.62703035E12, 29.4], [1.62703001E12, 79.4], [1.62702984E12, 2.9], [1.62703044E12, 149.4], [1.62703061E12, 150.0], [1.62703027E12, 150.2], [1.6270301E12, 145.1], [1.62702993E12, 121.6], [1.62703023E12, 149.9], [1.62703006E12, 149.8], [1.62702989E12, 59.6], [1.62703066E12, 96.6], [1.62703032E12, 47.2], [1.62703049E12, 72.0], [1.62703015E12, 22.3], [1.62702998E12, 7.8], [1.62702981E12, 1.1], [1.62703058E12, 148.1], [1.62703024E12, 146.9], [1.62703041E12, 72.3], [1.62703007E12, 150.0], [1.6270299E12, 93.2], [1.6270305E12, 47.0], [1.62703067E12, 71.7], [1.62703016E12, 7.3], [1.62703033E12, 22.1], [1.62702999E12, 29.9], [1.62702982E12, 0.7], [1.62703042E12, 149.7], [1.62703059E12, 150.1], [1.62703025E12, 150.0], [1.62703008E12, 149.7]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.6270307E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

