/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 9.0, "minX": 0.0, "maxY": 13696.0, "series": [{"data": [[0.0, 9.0], [0.1, 10.0], [0.2, 10.0], [0.3, 10.0], [0.4, 10.0], [0.5, 10.0], [0.6, 10.0], [0.7, 10.0], [0.8, 10.0], [0.9, 10.0], [1.0, 10.0], [1.1, 10.0], [1.2, 10.0], [1.3, 10.0], [1.4, 10.0], [1.5, 10.0], [1.6, 10.0], [1.7, 11.0], [1.8, 11.0], [1.9, 11.0], [2.0, 11.0], [2.1, 11.0], [2.2, 11.0], [2.3, 11.0], [2.4, 11.0], [2.5, 11.0], [2.6, 11.0], [2.7, 11.0], [2.8, 11.0], [2.9, 11.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 11.0], [3.4, 11.0], [3.5, 11.0], [3.6, 11.0], [3.7, 11.0], [3.8, 11.0], [3.9, 11.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 11.0], [4.8, 11.0], [4.9, 11.0], [5.0, 11.0], [5.1, 11.0], [5.2, 11.0], [5.3, 11.0], [5.4, 11.0], [5.5, 11.0], [5.6, 11.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 11.0], [6.2, 11.0], [6.3, 12.0], [6.4, 12.0], [6.5, 12.0], [6.6, 12.0], [6.7, 12.0], [6.8, 12.0], [6.9, 12.0], [7.0, 12.0], [7.1, 12.0], [7.2, 12.0], [7.3, 12.0], [7.4, 12.0], [7.5, 12.0], [7.6, 12.0], [7.7, 12.0], [7.8, 12.0], [7.9, 12.0], [8.0, 12.0], [8.1, 12.0], [8.2, 12.0], [8.3, 12.0], [8.4, 12.0], [8.5, 12.0], [8.6, 12.0], [8.7, 12.0], [8.8, 12.0], [8.9, 12.0], [9.0, 13.0], [9.1, 13.0], [9.2, 13.0], [9.3, 13.0], [9.4, 13.0], [9.5, 13.0], [9.6, 13.0], [9.7, 13.0], [9.8, 13.0], [9.9, 13.0], [10.0, 13.0], [10.1, 13.0], [10.2, 13.0], [10.3, 13.0], [10.4, 13.0], [10.5, 13.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 14.0], [11.2, 14.0], [11.3, 14.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 15.0], [13.7, 15.0], [13.8, 15.0], [13.9, 15.0], [14.0, 15.0], [14.1, 15.0], [14.2, 15.0], [14.3, 15.0], [14.4, 15.0], [14.5, 15.0], [14.6, 15.0], [14.7, 15.0], [14.8, 15.0], [14.9, 15.0], [15.0, 15.0], [15.1, 15.0], [15.2, 15.0], [15.3, 15.0], [15.4, 15.0], [15.5, 16.0], [15.6, 16.0], [15.7, 16.0], [15.8, 16.0], [15.9, 16.0], [16.0, 16.0], [16.1, 16.0], [16.2, 16.0], [16.3, 16.0], [16.4, 16.0], [16.5, 16.0], [16.6, 16.0], [16.7, 16.0], [16.8, 16.0], [16.9, 17.0], [17.0, 17.0], [17.1, 17.0], [17.2, 17.0], [17.3, 17.0], [17.4, 17.0], [17.5, 17.0], [17.6, 17.0], [17.7, 17.0], [17.8, 17.0], [17.9, 17.0], [18.0, 17.0], [18.1, 17.0], [18.2, 17.0], [18.3, 17.0], [18.4, 17.0], [18.5, 18.0], [18.6, 18.0], [18.7, 18.0], [18.8, 18.0], [18.9, 18.0], [19.0, 18.0], [19.1, 18.0], [19.2, 18.0], [19.3, 18.0], [19.4, 18.0], [19.5, 18.0], [19.6, 18.0], [19.7, 18.0], [19.8, 18.0], [19.9, 18.0], [20.0, 19.0], [20.1, 19.0], [20.2, 19.0], [20.3, 19.0], [20.4, 19.0], [20.5, 19.0], [20.6, 19.0], [20.7, 19.0], [20.8, 19.0], [20.9, 19.0], [21.0, 19.0], [21.1, 19.0], [21.2, 19.0], [21.3, 19.0], [21.4, 19.0], [21.5, 19.0], [21.6, 19.0], [21.7, 19.0], [21.8, 20.0], [21.9, 20.0], [22.0, 20.0], [22.1, 20.0], [22.2, 20.0], [22.3, 20.0], [22.4, 20.0], [22.5, 20.0], [22.6, 20.0], [22.7, 20.0], [22.8, 20.0], [22.9, 20.0], [23.0, 20.0], [23.1, 20.0], [23.2, 20.0], [23.3, 20.0], [23.4, 20.0], [23.5, 20.0], [23.6, 20.0], [23.7, 20.0], [23.8, 20.0], [23.9, 20.0], [24.0, 20.0], [24.1, 20.0], [24.2, 20.0], [24.3, 20.0], [24.4, 21.0], [24.5, 21.0], [24.6, 21.0], [24.7, 21.0], [24.8, 21.0], [24.9, 21.0], [25.0, 21.0], [25.1, 21.0], [25.2, 21.0], [25.3, 21.0], [25.4, 21.0], [25.5, 21.0], [25.6, 21.0], [25.7, 21.0], [25.8, 21.0], [25.9, 21.0], [26.0, 21.0], [26.1, 21.0], [26.2, 21.0], [26.3, 21.0], [26.4, 21.0], [26.5, 21.0], [26.6, 21.0], [26.7, 21.0], [26.8, 21.0], [26.9, 21.0], [27.0, 21.0], [27.1, 21.0], [27.2, 21.0], [27.3, 21.0], [27.4, 21.0], [27.5, 21.0], [27.6, 21.0], [27.7, 21.0], [27.8, 21.0], [27.9, 21.0], [28.0, 21.0], [28.1, 21.0], [28.2, 21.0], [28.3, 21.0], [28.4, 21.0], [28.5, 21.0], [28.6, 21.0], [28.7, 21.0], [28.8, 21.0], [28.9, 21.0], [29.0, 21.0], [29.1, 21.0], [29.2, 21.0], [29.3, 21.0], [29.4, 21.0], [29.5, 21.0], [29.6, 22.0], [29.7, 22.0], [29.8, 22.0], [29.9, 22.0], [30.0, 22.0], [30.1, 22.0], [30.2, 22.0], [30.3, 22.0], [30.4, 22.0], [30.5, 22.0], [30.6, 22.0], [30.7, 22.0], [30.8, 22.0], [30.9, 22.0], [31.0, 22.0], [31.1, 22.0], [31.2, 22.0], [31.3, 22.0], [31.4, 22.0], [31.5, 22.0], [31.6, 22.0], [31.7, 22.0], [31.8, 22.0], [31.9, 22.0], [32.0, 22.0], [32.1, 22.0], [32.2, 22.0], [32.3, 22.0], [32.4, 22.0], [32.5, 22.0], [32.6, 22.0], [32.7, 22.0], [32.8, 22.0], [32.9, 22.0], [33.0, 22.0], [33.1, 22.0], [33.2, 22.0], [33.3, 22.0], [33.4, 22.0], [33.5, 22.0], [33.6, 22.0], [33.7, 22.0], [33.8, 22.0], [33.9, 22.0], [34.0, 22.0], [34.1, 22.0], [34.2, 22.0], [34.3, 22.0], [34.4, 22.0], [34.5, 22.0], [34.6, 22.0], [34.7, 22.0], [34.8, 22.0], [34.9, 22.0], [35.0, 22.0], [35.1, 22.0], [35.2, 22.0], [35.3, 22.0], [35.4, 22.0], [35.5, 22.0], [35.6, 22.0], [35.7, 22.0], [35.8, 22.0], [35.9, 22.0], [36.0, 22.0], [36.1, 22.0], [36.2, 22.0], [36.3, 22.0], [36.4, 22.0], [36.5, 23.0], [36.6, 23.0], [36.7, 23.0], [36.8, 23.0], [36.9, 23.0], [37.0, 23.0], [37.1, 23.0], [37.2, 23.0], [37.3, 23.0], [37.4, 23.0], [37.5, 23.0], [37.6, 23.0], [37.7, 23.0], [37.8, 23.0], [37.9, 23.0], [38.0, 23.0], [38.1, 23.0], [38.2, 23.0], [38.3, 23.0], [38.4, 23.0], [38.5, 23.0], [38.6, 23.0], [38.7, 23.0], [38.8, 23.0], [38.9, 23.0], [39.0, 23.0], [39.1, 23.0], [39.2, 23.0], [39.3, 23.0], [39.4, 23.0], [39.5, 23.0], [39.6, 23.0], [39.7, 23.0], [39.8, 23.0], [39.9, 23.0], [40.0, 23.0], [40.1, 23.0], [40.2, 23.0], [40.3, 23.0], [40.4, 23.0], [40.5, 23.0], [40.6, 23.0], [40.7, 23.0], [40.8, 23.0], [40.9, 23.0], [41.0, 23.0], [41.1, 23.0], [41.2, 23.0], [41.3, 23.0], [41.4, 23.0], [41.5, 23.0], [41.6, 23.0], [41.7, 23.0], [41.8, 23.0], [41.9, 23.0], [42.0, 23.0], [42.1, 23.0], [42.2, 23.0], [42.3, 23.0], [42.4, 23.0], [42.5, 23.0], [42.6, 23.0], [42.7, 23.0], [42.8, 23.0], [42.9, 23.0], [43.0, 23.0], [43.1, 23.0], [43.2, 23.0], [43.3, 23.0], [43.4, 23.0], [43.5, 23.0], [43.6, 23.0], [43.7, 24.0], [43.8, 24.0], [43.9, 24.0], [44.0, 24.0], [44.1, 24.0], [44.2, 24.0], [44.3, 24.0], [44.4, 24.0], [44.5, 24.0], [44.6, 24.0], [44.7, 24.0], [44.8, 24.0], [44.9, 24.0], [45.0, 24.0], [45.1, 24.0], [45.2, 24.0], [45.3, 24.0], [45.4, 24.0], [45.5, 24.0], [45.6, 24.0], [45.7, 24.0], [45.8, 24.0], [45.9, 24.0], [46.0, 24.0], [46.1, 24.0], [46.2, 24.0], [46.3, 24.0], [46.4, 24.0], [46.5, 24.0], [46.6, 24.0], [46.7, 24.0], [46.8, 24.0], [46.9, 24.0], [47.0, 24.0], [47.1, 24.0], [47.2, 24.0], [47.3, 24.0], [47.4, 24.0], [47.5, 24.0], [47.6, 24.0], [47.7, 24.0], [47.8, 24.0], [47.9, 24.0], [48.0, 24.0], [48.1, 24.0], [48.2, 24.0], [48.3, 24.0], [48.4, 24.0], [48.5, 24.0], [48.6, 24.0], [48.7, 24.0], [48.8, 24.0], [48.9, 24.0], [49.0, 24.0], [49.1, 24.0], [49.2, 24.0], [49.3, 24.0], [49.4, 24.0], [49.5, 24.0], [49.6, 24.0], [49.7, 24.0], [49.8, 24.0], [49.9, 24.0], [50.0, 24.0], [50.1, 24.0], [50.2, 24.0], [50.3, 24.0], [50.4, 24.0], [50.5, 24.0], [50.6, 24.0], [50.7, 24.0], [50.8, 24.0], [50.9, 24.0], [51.0, 25.0], [51.1, 25.0], [51.2, 25.0], [51.3, 25.0], [51.4, 25.0], [51.5, 25.0], [51.6, 25.0], [51.7, 25.0], [51.8, 25.0], [51.9, 25.0], [52.0, 25.0], [52.1, 25.0], [52.2, 25.0], [52.3, 25.0], [52.4, 25.0], [52.5, 25.0], [52.6, 25.0], [52.7, 25.0], [52.8, 25.0], [52.9, 25.0], [53.0, 25.0], [53.1, 25.0], [53.2, 25.0], [53.3, 25.0], [53.4, 25.0], [53.5, 25.0], [53.6, 25.0], [53.7, 25.0], [53.8, 25.0], [53.9, 25.0], [54.0, 25.0], [54.1, 25.0], [54.2, 25.0], [54.3, 25.0], [54.4, 25.0], [54.5, 25.0], [54.6, 25.0], [54.7, 25.0], [54.8, 25.0], [54.9, 25.0], [55.0, 25.0], [55.1, 25.0], [55.2, 25.0], [55.3, 25.0], [55.4, 25.0], [55.5, 25.0], [55.6, 25.0], [55.7, 25.0], [55.8, 25.0], [55.9, 25.0], [56.0, 25.0], [56.1, 25.0], [56.2, 25.0], [56.3, 25.0], [56.4, 25.0], [56.5, 25.0], [56.6, 25.0], [56.7, 25.0], [56.8, 25.0], [56.9, 25.0], [57.0, 25.0], [57.1, 26.0], [57.2, 26.0], [57.3, 26.0], [57.4, 26.0], [57.5, 26.0], [57.6, 26.0], [57.7, 26.0], [57.8, 26.0], [57.9, 26.0], [58.0, 26.0], [58.1, 26.0], [58.2, 26.0], [58.3, 26.0], [58.4, 26.0], [58.5, 26.0], [58.6, 26.0], [58.7, 26.0], [58.8, 26.0], [58.9, 26.0], [59.0, 26.0], [59.1, 26.0], [59.2, 26.0], [59.3, 26.0], [59.4, 26.0], [59.5, 26.0], [59.6, 26.0], [59.7, 26.0], [59.8, 26.0], [59.9, 26.0], [60.0, 26.0], [60.1, 26.0], [60.2, 26.0], [60.3, 26.0], [60.4, 26.0], [60.5, 26.0], [60.6, 26.0], [60.7, 26.0], [60.8, 26.0], [60.9, 26.0], [61.0, 26.0], [61.1, 26.0], [61.2, 26.0], [61.3, 26.0], [61.4, 26.0], [61.5, 26.0], [61.6, 26.0], [61.7, 26.0], [61.8, 26.0], [61.9, 26.0], [62.0, 26.0], [62.1, 26.0], [62.2, 26.0], [62.3, 26.0], [62.4, 26.0], [62.5, 27.0], [62.6, 27.0], [62.7, 27.0], [62.8, 27.0], [62.9, 27.0], [63.0, 27.0], [63.1, 27.0], [63.2, 27.0], [63.3, 27.0], [63.4, 27.0], [63.5, 27.0], [63.6, 27.0], [63.7, 27.0], [63.8, 27.0], [63.9, 27.0], [64.0, 27.0], [64.1, 27.0], [64.2, 27.0], [64.3, 27.0], [64.4, 27.0], [64.5, 27.0], [64.6, 27.0], [64.7, 27.0], [64.8, 27.0], [64.9, 27.0], [65.0, 27.0], [65.1, 27.0], [65.2, 27.0], [65.3, 27.0], [65.4, 27.0], [65.5, 27.0], [65.6, 27.0], [65.7, 27.0], [65.8, 27.0], [65.9, 27.0], [66.0, 27.0], [66.1, 27.0], [66.2, 27.0], [66.3, 27.0], [66.4, 27.0], [66.5, 27.0], [66.6, 27.0], [66.7, 27.0], [66.8, 27.0], [66.9, 27.0], [67.0, 27.0], [67.1, 27.0], [67.2, 27.0], [67.3, 27.0], [67.4, 27.0], [67.5, 28.0], [67.6, 28.0], [67.7, 28.0], [67.8, 28.0], [67.9, 28.0], [68.0, 28.0], [68.1, 28.0], [68.2, 28.0], [68.3, 28.0], [68.4, 28.0], [68.5, 28.0], [68.6, 28.0], [68.7, 28.0], [68.8, 28.0], [68.9, 28.0], [69.0, 28.0], [69.1, 28.0], [69.2, 28.0], [69.3, 28.0], [69.4, 28.0], [69.5, 28.0], [69.6, 28.0], [69.7, 28.0], [69.8, 28.0], [69.9, 28.0], [70.0, 28.0], [70.1, 28.0], [70.2, 28.0], [70.3, 28.0], [70.4, 28.0], [70.5, 28.0], [70.6, 28.0], [70.7, 28.0], [70.8, 28.0], [70.9, 28.0], [71.0, 28.0], [71.1, 28.0], [71.2, 28.0], [71.3, 28.0], [71.4, 28.0], [71.5, 28.0], [71.6, 28.0], [71.7, 28.0], [71.8, 28.0], [71.9, 28.0], [72.0, 28.0], [72.1, 28.0], [72.2, 28.0], [72.3, 28.0], [72.4, 28.0], [72.5, 28.0], [72.6, 28.0], [72.7, 29.0], [72.8, 29.0], [72.9, 29.0], [73.0, 29.0], [73.1, 29.0], [73.2, 29.0], [73.3, 29.0], [73.4, 29.0], [73.5, 29.0], [73.6, 29.0], [73.7, 29.0], [73.8, 29.0], [73.9, 29.0], [74.0, 29.0], [74.1, 29.0], [74.2, 29.0], [74.3, 29.0], [74.4, 29.0], [74.5, 29.0], [74.6, 29.0], [74.7, 29.0], [74.8, 29.0], [74.9, 29.0], [75.0, 29.0], [75.1, 29.0], [75.2, 29.0], [75.3, 29.0], [75.4, 29.0], [75.5, 29.0], [75.6, 29.0], [75.7, 29.0], [75.8, 29.0], [75.9, 29.0], [76.0, 29.0], [76.1, 29.0], [76.2, 29.0], [76.3, 29.0], [76.4, 29.0], [76.5, 29.0], [76.6, 29.0], [76.7, 29.0], [76.8, 29.0], [76.9, 30.0], [77.0, 30.0], [77.1, 30.0], [77.2, 30.0], [77.3, 30.0], [77.4, 30.0], [77.5, 30.0], [77.6, 30.0], [77.7, 30.0], [77.8, 30.0], [77.9, 30.0], [78.0, 30.0], [78.1, 30.0], [78.2, 30.0], [78.3, 30.0], [78.4, 30.0], [78.5, 30.0], [78.6, 30.0], [78.7, 30.0], [78.8, 30.0], [78.9, 30.0], [79.0, 30.0], [79.1, 30.0], [79.2, 30.0], [79.3, 30.0], [79.4, 30.0], [79.5, 30.0], [79.6, 30.0], [79.7, 30.0], [79.8, 30.0], [79.9, 30.0], [80.0, 30.0], [80.1, 30.0], [80.2, 30.0], [80.3, 31.0], [80.4, 31.0], [80.5, 31.0], [80.6, 31.0], [80.7, 31.0], [80.8, 31.0], [80.9, 31.0], [81.0, 31.0], [81.1, 31.0], [81.2, 31.0], [81.3, 31.0], [81.4, 31.0], [81.5, 31.0], [81.6, 31.0], [81.7, 31.0], [81.8, 31.0], [81.9, 31.0], [82.0, 31.0], [82.1, 31.0], [82.2, 31.0], [82.3, 31.0], [82.4, 31.0], [82.5, 31.0], [82.6, 31.0], [82.7, 31.0], [82.8, 31.0], [82.9, 31.0], [83.0, 31.0], [83.1, 32.0], [83.2, 32.0], [83.3, 32.0], [83.4, 32.0], [83.5, 32.0], [83.6, 32.0], [83.7, 32.0], [83.8, 32.0], [83.9, 32.0], [84.0, 32.0], [84.1, 32.0], [84.2, 32.0], [84.3, 32.0], [84.4, 32.0], [84.5, 32.0], [84.6, 32.0], [84.7, 32.0], [84.8, 32.0], [84.9, 32.0], [85.0, 32.0], [85.1, 32.0], [85.2, 32.0], [85.3, 33.0], [85.4, 33.0], [85.5, 33.0], [85.6, 33.0], [85.7, 33.0], [85.8, 33.0], [85.9, 33.0], [86.0, 33.0], [86.1, 33.0], [86.2, 33.0], [86.3, 33.0], [86.4, 33.0], [86.5, 33.0], [86.6, 33.0], [86.7, 33.0], [86.8, 33.0], [86.9, 33.0], [87.0, 33.0], [87.1, 34.0], [87.2, 34.0], [87.3, 34.0], [87.4, 34.0], [87.5, 34.0], [87.6, 34.0], [87.7, 34.0], [87.8, 34.0], [87.9, 34.0], [88.0, 34.0], [88.1, 34.0], [88.2, 34.0], [88.3, 34.0], [88.4, 34.0], [88.5, 34.0], [88.6, 35.0], [88.7, 35.0], [88.8, 35.0], [88.9, 35.0], [89.0, 35.0], [89.1, 35.0], [89.2, 35.0], [89.3, 35.0], [89.4, 35.0], [89.5, 35.0], [89.6, 35.0], [89.7, 35.0], [89.8, 35.0], [89.9, 36.0], [90.0, 36.0], [90.1, 36.0], [90.2, 36.0], [90.3, 36.0], [90.4, 36.0], [90.5, 36.0], [90.6, 36.0], [90.7, 36.0], [90.8, 36.0], [90.9, 37.0], [91.0, 37.0], [91.1, 37.0], [91.2, 37.0], [91.3, 37.0], [91.4, 37.0], [91.5, 37.0], [91.6, 37.0], [91.7, 37.0], [91.8, 38.0], [91.9, 38.0], [92.0, 38.0], [92.1, 38.0], [92.2, 38.0], [92.3, 38.0], [92.4, 39.0], [92.5, 39.0], [92.6, 39.0], [92.7, 39.0], [92.8, 39.0], [92.9, 39.0], [93.0, 40.0], [93.1, 40.0], [93.2, 40.0], [93.3, 40.0], [93.4, 41.0], [93.5, 41.0], [93.6, 41.0], [93.7, 42.0], [93.8, 42.0], [93.9, 42.0], [94.0, 43.0], [94.1, 43.0], [94.2, 43.0], [94.3, 44.0], [94.4, 44.0], [94.5, 44.0], [94.6, 45.0], [94.7, 45.0], [94.8, 46.0], [94.9, 46.0], [95.0, 47.0], [95.1, 47.0], [95.2, 48.0], [95.3, 48.0], [95.4, 49.0], [95.5, 49.0], [95.6, 50.0], [95.7, 51.0], [95.8, 51.0], [95.9, 52.0], [96.0, 53.0], [96.1, 54.0], [96.2, 55.0], [96.3, 57.0], [96.4, 58.0], [96.5, 60.0], [96.6, 62.0], [96.7, 63.0], [96.8, 65.0], [96.9, 68.0], [97.0, 72.0], [97.1, 78.0], [97.2, 91.0], [97.3, 152.0], [97.4, 224.0], [97.5, 255.0], [97.6, 292.0], [97.7, 347.0], [97.8, 424.0], [97.9, 452.0], [98.0, 473.0], [98.1, 502.0], [98.2, 536.0], [98.3, 573.0], [98.4, 621.0], [98.5, 667.0], [98.6, 704.0], [98.7, 742.0], [98.8, 793.0], [98.9, 834.0], [99.0, 875.0], [99.1, 922.0], [99.2, 961.0], [99.3, 991.0], [99.4, 1020.0], [99.5, 1079.0], [99.6, 1203.0], [99.7, 1269.0], [99.8, 1386.0], [99.9, 2105.0], [100.0, 13696.0]], "isOverall": false, "label": "Sunstar Home Japan", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 74491.0, "series": [{"data": [[0.0, 74491.0], [8200.0, 1.0], [600.0, 180.0], [11200.0, 1.0], [700.0, 173.0], [11300.0, 1.0], [11700.0, 1.0], [11600.0, 2.0], [800.0, 187.0], [13600.0, 1.0], [900.0, 207.0], [1000.0, 150.0], [1100.0, 62.0], [1200.0, 101.0], [1300.0, 60.0], [1400.0, 19.0], [1500.0, 8.0], [100.0, 98.0], [1600.0, 6.0], [1700.0, 10.0], [1800.0, 5.0], [1900.0, 5.0], [2000.0, 16.0], [2100.0, 5.0], [2200.0, 6.0], [2300.0, 8.0], [2400.0, 23.0], [2500.0, 2.0], [2600.0, 1.0], [2700.0, 4.0], [2800.0, 6.0], [2900.0, 2.0], [3100.0, 2.0], [200.0, 200.0], [4400.0, 2.0], [300.0, 117.0], [4900.0, 1.0], [5200.0, 1.0], [5500.0, 1.0], [400.0, 253.0], [6800.0, 1.0], [7500.0, 1.0], [7600.0, 1.0], [7700.0, 1.0], [7800.0, 1.0], [8000.0, 1.0], [500.0, 192.0]], "isOverall": false, "label": "Sunstar Home Japan", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 13600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 127.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 75159.0, "series": [{"data": [[0.0, 75159.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1331.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 127.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.62702781E12, "maxY": 1996.78125, "series": [{"data": [[1.62702817E12, 3.0], [1.627028E12, 2.9272030651341012], [1.62702834E12, 2.0], [1.62702851E12, 3.0], [1.62702868E12, 3.0], [1.62702791E12, 783.8552631578949], [1.62702808E12, 6.302139037433153], [1.62702825E12, 7.0], [1.62702842E12, 10.39632545931758], [1.62702859E12, 5.599731363331088], [1.62702799E12, 2.0], [1.62702782E12, 1985.0], [1.62702801E12, 3.220915032679737], [1.62702784E12, 1861.5058823529412], [1.62702818E12, 3.0], [1.62702835E12, 2.0], [1.62702852E12, 3.0], [1.62702869E12, 3.0], [1.62702809E12, 6.396793587174346], [1.62702792E12, 335.3704453441297], [1.62702826E12, 7.285331547220368], [1.62702843E12, 6.414993306559571], [1.6270286E12, 6.0], [1.62702783E12, 1962.488372093023], [1.62702832E12, 2.0], [1.62702849E12, 3.0], [1.62702866E12, 3.0], [1.62702789E12, 1476.8475336322867], [1.62702806E12, 7.0], [1.62702823E12, 6.590514362057441], [1.6270284E12, 6.0], [1.62702857E12, 3.49564528899446], [1.62702797E12, 2.0], [1.62702814E12, 3.0], [1.62702831E12, 4.759731543624163], [1.62702816E12, 3.0], [1.62702833E12, 2.0], [1.6270285E12, 3.0], [1.62702867E12, 3.0], [1.62702807E12, 7.0], [1.6270279E12, 1160.068965517242], [1.62702824E12, 7.0], [1.62702841E12, 6.594522378089503], [1.62702858E12, 5.608333333333332], [1.62702781E12, 1996.78125], [1.62702815E12, 3.0], [1.62702798E12, 2.0], [1.62702864E12, 6.0], [1.62702787E12, 1618.1694915254238], [1.62702804E12, 7.00884353741497], [1.62702821E12, 5.414556962025312], [1.62702838E12, 3.64186507936508], [1.62702855E12, 3.0], [1.62702795E12, 5.0], [1.62702812E12, 3.0], [1.62702829E12, 5.0], [1.62702846E12, 6.0], [1.62702863E12, 6.0], [1.62702848E12, 3.0], [1.62702865E12, 4.58407079646017], [1.62702805E12, 7.319763138415988], [1.62702788E12, 1575.769230769231], [1.62702822E12, 6.0], [1.62702839E12, 5.897233201581019], [1.62702856E12, 3.0], [1.62702813E12, 3.0], [1.62702796E12, 3.0783132530120487], [1.6270283E12, 5.0], [1.62702847E12, 4.281224818694604], [1.62702785E12, 1808.5833333333333], [1.62702819E12, 3.0], [1.62702802E12, 5.017769002961501], [1.62702836E12, 2.552123552123548], [1.62702853E12, 3.0], [1.6270287E12, 3.0], [1.62702793E12, 10.136006974716654], [1.6270281E12, 7.0], [1.62702827E12, 8.98664886515354], [1.62702844E12, 5.495320855614968], [1.62702861E12, 6.0], [1.62702803E12, 5.100799999999985], [1.62702786E12, 1727.1354838709674], [1.6270282E12, 4.3254670599803395], [1.62702837E12, 3.1066319895968797], [1.62702854E12, 3.0], [1.62702811E12, 4.714401294498384], [1.62702794E12, 6.825910931174089], [1.62702828E12, 9.023357664233574], [1.62702845E12, 6.0], [1.62702862E12, 6.0]], "isOverall": false, "label": "bzm - Concurrency Thread Group-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.6270287E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 16.80006118078924, "minX": 1.0, "maxY": 13696.0, "series": [{"data": [[2.0, 22.12448288830386], [3.0, 16.80006118078924], [4.0, 23.318508287292875], [5.0, 25.536619860591912], [6.0, 27.55015384615384], [7.0, 28.448644494130818], [8.0, 35.123882896764165], [9.0, 30.816393442622964], [10.0, 24.745614035087716], [11.0, 45.366906474820134], [12.0, 52.7428571428571], [13.0, 33.333333333333336], [14.0, 118.06250000000004], [15.0, 26.0], [16.0, 27.0], [17.0, 29.007692307692306], [19.0, 692.9], [20.0, 707.0], [21.0, 672.0], [22.0, 742.0], [23.0, 699.0], [24.0, 742.0], [25.0, 680.0], [26.0, 745.0], [27.0, 717.0], [28.0, 704.0], [29.0, 737.0], [30.0, 663.0], [32.0, 671.0], [35.0, 682.0], [38.0, 694.0], [43.0, 708.0], [45.0, 686.5882352941177], [47.0, 687.0], [46.0, 636.0], [48.0, 651.0], [51.0, 650.0], [50.0, 656.0], [53.0, 679.0], [52.0, 672.0], [55.0, 629.0], [54.0, 653.0], [57.0, 622.0], [56.0, 672.0], [59.0, 693.0], [58.0, 649.0], [61.0, 656.0], [63.0, 646.0], [67.0, 683.0], [66.0, 641.5], [65.0, 621.0], [64.0, 684.0], [70.0, 628.0], [69.0, 676.0], [68.0, 681.0], [75.0, 604.0], [74.0, 608.0], [73.0, 620.0], [79.0, 621.0], [77.0, 613.0], [76.0, 632.0], [83.0, 598.0], [82.0, 609.0], [81.0, 609.0], [80.0, 612.0], [87.0, 473.0], [86.0, 508.0], [85.0, 573.5], [84.0, 596.5], [91.0, 248.0], [90.0, 212.0], [89.0, 228.0], [88.0, 230.0], [95.0, 190.0], [94.0, 147.0], [93.0, 205.0], [92.0, 284.0], [99.0, 538.0], [98.0, 157.0], [97.0, 117.0], [96.0, 120.0], [102.0, 543.0], [101.0, 544.0], [100.0, 523.0], [115.0, 482.0], [119.0, 511.00000000000006], [121.0, 497.0], [120.0, 519.0], [126.0, 509.0], [125.0, 496.0], [124.0, 507.5], [135.0, 503.5], [134.0, 512.0], [133.0, 512.0], [131.0, 499.0], [130.0, 478.0], [129.0, 512.0], [128.0, 505.0], [143.0, 495.0], [142.0, 514.0], [141.0, 493.0], [140.0, 471.0], [139.0, 490.0], [138.0, 480.5], [137.0, 505.5], [151.0, 457.0], [150.0, 458.5], [148.0, 484.0], [147.0, 484.0], [145.0, 473.0], [144.0, 480.0], [159.0, 446.0], [158.0, 471.0], [157.0, 451.0], [156.0, 446.0], [155.0, 459.0], [154.0, 452.0], [153.0, 493.0], [152.0, 493.0], [167.0, 487.0], [166.0, 437.0], [165.0, 464.0], [164.0, 472.0], [163.0, 438.0], [162.0, 454.0], [161.0, 444.0], [160.0, 447.0], [175.0, 463.0], [174.0, 471.0], [173.0, 441.0], [172.0, 448.0], [171.0, 452.0], [170.0, 473.0], [169.0, 452.0], [168.0, 454.0], [183.0, 461.0], [182.0, 443.0], [179.0, 464.0], [178.0, 451.0], [177.0, 475.0], [176.0, 422.0], [191.0, 434.0], [190.0, 431.0], [189.0, 459.0], [188.0, 442.0], [187.0, 457.3333333333333], [185.0, 453.0], [199.0, 420.0], [198.0, 438.0], [197.0, 434.0], [196.0, 447.0], [195.0, 440.0], [194.0, 427.0], [193.0, 453.0], [192.0, 429.0], [207.0, 399.0], [206.0, 386.0], [205.0, 402.0], [204.0, 387.0], [203.0, 409.0], [202.0, 405.0], [200.0, 409.0], [215.0, 371.0], [214.0, 362.0], [213.0, 376.0], [212.0, 359.0], [211.0, 394.0], [210.0, 388.0], [209.0, 371.0], [208.0, 374.0], [223.0, 326.0], [222.0, 316.0], [221.0, 337.0], [220.0, 342.0], [219.0, 321.0], [218.0, 328.0], [217.0, 360.0], [216.0, 355.0], [230.0, 264.0], [229.0, 312.0], [228.0, 315.0], [227.0, 315.0], [226.0, 325.0], [225.0, 306.0], [224.0, 330.0], [239.0, 264.0], [238.0, 276.0], [237.0, 267.0], [236.0, 270.5], [235.0, 260.0], [234.0, 268.0], [232.0, 284.0], [247.0, 248.5], [245.0, 257.0], [244.0, 271.0], [242.0, 249.0], [241.0, 260.0], [240.0, 261.0], [255.0, 250.0], [254.0, 255.0], [253.0, 264.0], [252.0, 240.0], [251.0, 257.0], [250.0, 241.0], [249.0, 241.0], [248.0, 244.0], [270.0, 512.0], [271.0, 499.0], [269.0, 511.0], [268.0, 185.0], [267.0, 186.0], [266.0, 188.0], [265.0, 211.0], [264.0, 197.0], [263.0, 196.0], [257.0, 248.0], [256.0, 252.0], [259.0, 240.0], [258.0, 247.0], [262.0, 211.0], [261.0, 225.0], [260.0, 227.0], [286.0, 458.0], [287.0, 466.0], [285.0, 459.0], [284.0, 495.0], [283.0, 472.0], [282.0, 471.0], [281.0, 473.0], [280.0, 491.0], [279.0, 479.0], [273.0, 462.0], [272.0, 478.0], [275.0, 507.0], [274.0, 473.0], [278.0, 475.0], [277.0, 491.0], [276.0, 504.0], [302.0, 449.0], [303.0, 460.0], [301.0, 468.0], [300.0, 450.0], [298.0, 472.0], [297.0, 496.0], [296.0, 497.0], [295.0, 488.5], [289.0, 454.0], [288.0, 494.0], [291.0, 481.0], [290.0, 465.0], [294.0, 459.0], [293.0, 476.0], [318.0, 462.0], [319.0, 467.0], [317.0, 451.5], [307.0, 472.0], [305.0, 451.0], [304.0, 463.0], [315.0, 466.5], [313.0, 477.0], [312.0, 446.5], [311.0, 462.0], [310.0, 445.0], [309.0, 463.0], [308.0, 475.0], [334.0, 445.0], [335.0, 403.0], [332.0, 440.0], [323.0, 455.0], [322.0, 459.0], [321.0, 437.0], [320.0, 429.0], [331.0, 446.0], [330.0, 448.0], [329.0, 418.0], [328.0, 436.5], [326.0, 454.0], [325.0, 442.0], [324.0, 412.0], [348.0, 1011.0], [351.0, 997.0], [350.0, 1042.0], [349.0, 1088.0], [347.0, 1030.0], [342.0, 984.0], [340.0, 389.0], [339.0, 430.0], [338.0, 412.0], [337.0, 424.0], [336.0, 422.0], [364.0, 976.0], [367.0, 1026.0], [366.0, 1021.5], [365.0, 1009.0], [362.0, 1015.0], [359.0, 1006.0], [352.0, 982.0], [355.0, 983.0], [353.0, 983.0], [358.0, 1032.0], [357.0, 1000.0], [356.0, 1071.0], [382.0, 971.5], [383.0, 997.0], [380.0, 1000.0], [371.0, 1064.0], [370.0, 984.0], [369.0, 1010.5], [368.0, 1003.0], [378.0, 974.0], [377.0, 1032.0], [376.0, 973.0], [374.0, 980.0], [373.0, 985.0], [372.0, 1023.5], [397.0, 999.0], [398.0, 944.0], [396.0, 955.0], [395.0, 996.0], [393.0, 956.0], [392.0, 1014.3333333333334], [391.0, 1029.0], [388.0, 952.0], [387.0, 1008.5], [385.0, 970.0], [384.0, 1024.0], [414.0, 989.0], [415.0, 984.0], [413.0, 995.0], [412.0, 1011.0], [411.0, 957.0], [410.0, 1009.0], [409.0, 1017.0], [408.0, 982.0], [407.0, 997.5], [403.0, 980.0], [401.0, 1001.0], [405.0, 1025.0], [430.0, 964.0], [431.0, 941.0], [429.0, 939.0], [428.0, 954.0], [427.0, 945.0], [426.0, 1019.0], [425.0, 1002.0], [424.0, 982.0], [423.0, 990.0], [416.0, 1013.0], [419.0, 975.5], [417.0, 941.0], [422.0, 968.0], [421.0, 990.0], [420.0, 1002.0], [446.0, 872.0], [447.0, 865.0], [445.0, 872.0], [444.0, 879.0], [443.0, 853.0], [442.0, 864.0], [441.0, 821.0], [440.0, 893.0], [439.0, 885.0], [433.0, 922.0], [432.0, 850.0], [435.0, 938.0], [434.0, 905.0], [438.0, 856.0], [437.0, 883.0], [436.0, 914.0], [462.0, 675.0], [463.0, 622.0], [461.0, 584.0], [460.0, 598.0], [459.0, 621.0], [458.0, 607.0], [457.0, 626.0], [456.0, 655.0], [455.0, 608.0], [449.0, 766.0], [448.0, 782.0], [451.0, 853.0], [450.0, 821.0], [454.0, 773.0], [453.0, 800.0], [452.0, 872.0], [478.0, 520.0], [479.0, 459.0], [477.0, 523.0], [476.0, 540.0], [475.0, 593.0], [474.0, 599.0], [473.0, 603.0], [472.0, 613.0], [471.0, 618.0], [465.0, 564.0], [464.0, 604.0], [467.0, 639.0], [466.0, 573.0], [470.0, 621.0], [469.0, 555.0], [468.0, 580.0], [494.0, 216.0], [495.0, 216.0], [493.0, 218.0], [492.0, 170.0], [491.0, 119.0], [490.0, 132.0], [488.0, 339.0], [487.0, 435.0], [481.0, 414.0], [480.0, 457.0], [483.0, 389.0], [482.0, 378.0], [486.0, 399.0], [484.0, 435.0], [510.0, 165.0], [511.0, 164.0], [509.0, 166.0], [508.0, 162.0], [506.0, 185.0], [505.0, 186.0], [504.0, 93.0], [503.0, 202.0], [497.0, 179.0], [496.0, 216.0], [499.0, 160.0], [498.0, 204.0], [502.0, 162.0], [501.0, 164.0], [500.0, 158.0], [540.0, 460.0], [543.0, 462.0], [529.0, 558.0], [528.0, 513.0], [531.0, 541.0], [530.0, 545.0], [533.0, 539.0], [532.0, 513.0], [542.0, 456.0], [541.0, 477.0], [539.0, 510.0], [538.0, 497.0], [537.0, 510.0], [536.0, 513.0], [527.0, 545.5], [513.0, 152.0], [512.0, 162.0], [515.0, 125.0], [514.0, 134.0], [517.0, 566.0], [516.0, 63.0], [519.0, 527.0], [518.0, 542.0], [525.0, 537.0], [524.0, 565.0], [523.0, 537.0], [522.0, 549.5], [520.0, 564.0], [535.0, 536.0], [534.0, 536.0], [572.0, 243.0], [575.0, 135.0], [561.0, 367.0], [560.0, 457.0], [563.0, 291.0], [562.0, 314.0], [565.0, 284.0], [564.0, 278.0], [574.0, 217.0], [573.0, 240.0], [571.0, 234.0], [570.0, 228.0], [569.0, 228.0], [568.0, 245.0], [559.0, 447.0], [544.0, 453.0], [546.0, 463.0], [545.0, 466.0], [549.0, 436.0], [548.0, 440.0], [551.0, 450.0], [550.0, 450.0], [557.0, 442.0], [556.0, 439.0], [555.0, 469.0], [554.0, 446.0], [552.0, 438.0], [567.0, 250.0], [566.0, 230.0], [601.0, 267.0], [606.0, 230.0], [607.0, 232.0], [592.0, 266.0], [595.0, 281.0], [594.0, 269.5], [597.0, 89.0], [596.0, 270.0], [605.0, 239.0], [604.0, 259.0], [603.0, 244.0], [600.0, 259.0], [583.0, 292.0], [582.0, 309.0], [581.0, 122.0], [580.0, 125.0], [579.0, 139.0], [578.0, 133.0], [577.0, 146.0], [576.0, 142.0], [591.0, 288.0], [590.0, 292.0], [589.0, 284.0], [588.0, 297.5], [587.0, 310.0], [586.0, 305.0], [584.0, 289.0], [599.0, 256.0], [598.0, 254.0], [634.0, 296.5], [638.0, 298.0], [639.0, 296.5], [624.0, 315.0], [626.0, 296.0], [625.0, 296.0], [628.0, 318.0], [627.0, 321.0], [637.0, 291.0], [636.0, 310.0], [635.0, 301.0], [632.0, 290.0], [615.0, 219.0], [614.0, 237.0], [613.0, 231.0], [612.0, 228.0], [611.0, 219.0], [610.0, 227.0], [609.0, 220.0], [608.0, 235.0], [623.0, 320.0], [622.0, 317.0], [620.0, 196.0], [619.0, 224.0], [618.0, 227.0], [617.0, 228.0], [616.0, 232.0], [631.0, 298.5], [629.0, 305.0], [659.0, 270.0], [662.0, 1017.0], [661.0, 264.0], [660.0, 250.0], [658.0, 251.0], [657.0, 275.0], [656.0, 277.0], [646.0, 300.0], [645.0, 282.0], [644.0, 286.0], [643.0, 289.0], [641.0, 285.0], [655.0, 265.0], [654.0, 275.0], [653.0, 260.0], [652.0, 259.0], [651.0, 266.0], [650.0, 285.0], [649.0, 287.5], [648.0, 288.0], [703.0, 805.0], [694.0, 1062.0], [695.0, 1025.0], [729.0, 746.0], [734.0, 922.0], [735.0, 720.0], [733.0, 886.0], [731.0, 938.5], [730.0, 903.8437500000001], [719.0, 909.0], [704.0, 811.0], [706.0, 1021.0], [705.0, 1012.0], [709.0, 917.0], [708.0, 1021.0], [711.0, 1016.0], [710.0, 782.0], [717.0, 1012.0], [715.0, 988.0], [714.0, 985.0], [713.0, 1005.0], [712.0, 780.0], [727.0, 882.0], [725.0, 1013.0], [721.0, 1004.0], [720.0, 991.0], [765.0, 851.0], [756.0, 906.0], [766.0, 877.0], [752.0, 881.0], [755.0, 781.0], [753.0, 894.0], [764.0, 892.0], [763.0, 798.5], [761.0, 670.5], [743.0, 895.0], [741.0, 957.0], [740.0, 823.5], [739.0, 956.0], [738.0, 949.0], [737.0, 928.0], [736.0, 842.0], [751.0, 897.0], [750.0, 904.0], [749.0, 880.0], [748.0, 897.0], [747.0, 932.0], [746.0, 942.0], [745.0, 943.0], [744.0, 905.0], [759.0, 870.0], [758.0, 873.0], [757.0, 683.0], [793.0, 822.0], [797.0, 858.0], [799.0, 838.0], [785.0, 790.0], [784.0, 838.0], [787.0, 875.0], [786.0, 761.6666666666666], [789.0, 858.0], [788.0, 855.0], [796.0, 829.0], [795.0, 850.0], [794.0, 822.0], [792.0, 832.0], [774.0, 860.0], [771.0, 840.0], [770.0, 869.0], [769.0, 892.0], [768.0, 873.0], [783.0, 815.0], [782.0, 808.0], [781.0, 800.0], [780.0, 628.0], [779.0, 856.0], [778.0, 861.0], [777.0, 819.0], [776.0, 843.0], [791.0, 826.0], [790.0, 864.0], [825.0, 791.0], [829.0, 770.0], [830.0, 815.5], [817.0, 803.0], [816.0, 815.0], [819.0, 809.0], [818.0, 805.0], [821.0, 847.0], [820.0, 812.0], [828.0, 779.0], [827.0, 814.0], [826.0, 776.0], [824.0, 814.0], [806.0, 822.0], [805.0, 829.0], [804.0, 848.0], [803.0, 826.0], [802.0, 858.0], [801.0, 838.0], [815.0, 821.25], [813.0, 792.0], [812.0, 802.0], [811.0, 851.0], [809.0, 804.0], [823.0, 819.0], [822.0, 796.0], [860.0, 690.0], [863.0, 625.0], [849.0, 707.0], [848.0, 702.0], [851.0, 717.0], [850.0, 726.0], [853.0, 755.0], [852.0, 727.0], [862.0, 642.0], [861.0, 708.0], [859.0, 735.0], [858.0, 697.0], [857.0, 704.0], [856.0, 746.0], [847.0, 719.0], [832.0, 825.0], [835.0, 788.0], [834.0, 796.0], [837.0, 737.0], [836.0, 757.0], [839.0, 735.0], [838.0, 783.0], [846.0, 711.0], [845.0, 779.0], [844.0, 759.0], [843.0, 788.0], [842.0, 723.0], [841.0, 579.0], [840.0, 727.0], [855.0, 749.0], [854.0, 682.0], [871.0, 547.0], [883.0, 285.0], [892.0, 1324.0], [888.0, 1280.0], [870.0, 510.0], [869.0, 527.0], [868.0, 576.0], [867.0, 592.0], [866.0, 569.0], [865.0, 604.0], [864.0, 590.0], [879.0, 516.0], [878.0, 486.0], [877.0, 524.0], [876.0, 524.0], [875.0, 472.0], [874.0, 514.0], [873.0, 538.0], [872.0, 537.0], [887.0, 1446.0], [885.0, 327.0], [884.0, 346.0], [882.0, 472.0], [881.0, 495.0], [880.0, 491.0], [923.0, 1272.0], [919.0, 1262.0], [911.0, 1325.0], [909.0, 1301.0], [907.0, 1353.0], [956.0, 1223.0], [959.0, 1236.0], [944.0, 1282.5], [946.0, 1260.0], [945.0, 1356.0], [948.0, 1380.0], [947.0, 1321.0], [958.0, 1233.0], [957.0, 1420.0], [955.0, 1275.0], [954.0, 1286.0], [953.0, 1247.0], [952.0, 1333.0], [942.0, 1266.0], [932.0, 1295.0], [930.0, 1293.0], [935.0, 1395.0], [934.0, 1433.6666666666667], [941.0, 1247.0], [939.0, 1430.0], [938.0, 1368.0], [937.0, 1292.0], [936.0, 1305.0], [950.0, 1261.0], [949.0, 1236.0], [986.0, 1350.0], [990.0, 1242.0], [991.0, 3110.0], [977.0, 1204.0], [976.0, 1232.0], [979.0, 1243.0], [978.0, 1246.0], [989.0, 3146.0], [988.0, 1299.5], [987.0, 1228.0], [984.0, 1524.0], [967.0, 1215.0], [966.0, 1233.0], [965.0, 1246.0], [964.0, 1221.0], [963.0, 1417.0], [961.0, 1235.0], [960.0, 1408.0], [975.0, 1216.0], [974.0, 1409.0], [973.0, 1263.0], [972.0, 1239.5], [971.0, 1265.0], [970.0, 1355.0], [969.0, 1365.0], [968.0, 1422.0], [983.0, 1336.0], [981.0, 1329.0], [1020.0, 1161.0], [1023.0, 1209.0], [1008.0, 1411.0], [1010.0, 1102.0], [1009.0, 1305.0], [1012.0, 1086.0], [1011.0, 1112.0], [1022.0, 1036.0], [1021.0, 1007.0], [1019.0, 1030.0], [1018.0, 1018.0], [1017.0, 1015.0], [1016.0, 997.0], [1007.0, 1092.0], [992.0, 2358.0], [994.0, 2627.0], [993.0, 1160.0], [996.0, 1131.0], [995.0, 2511.0], [998.0, 1145.0], [997.0, 1132.0], [1006.0, 1260.0], [1005.0, 1198.0], [1004.0, 1127.0], [1003.0, 1241.0], [1002.0, 1086.0], [1001.0, 1283.5], [1000.0, 2210.0], [1015.0, 1040.0], [1014.0, 2526.0], [1080.0, 2385.0], [1076.0, 2041.0], [1084.0, 1765.0], [1058.0, 969.0], [1056.0, 1657.5], [1062.0, 2538.0], [1060.0, 1034.214285714285], [1066.0, 2469.2], [1068.0, 2000.0], [1070.0, 2486.0], [1086.0, 2008.0], [1082.0, 2463.0], [1078.0, 2016.0], [1074.0, 2487.0], [1072.0, 2053.0], [1024.0, 1062.0], [1026.0, 2494.0], [1028.0, 2019.0], [1030.0, 2911.0], [1032.0, 2497.0], [1034.0, 2270.0], [1038.0, 2106.0], [1036.0, 2439.0], [1052.0, 2074.0], [1050.0, 2154.0], [1048.0, 2424.0], [1046.0, 2451.0], [1044.0, 2051.0], [1042.0, 2442.0], [1040.0, 2662.0], [1140.0, 1386.0], [1128.0, 1746.0], [1142.0, 1545.0], [1120.0, 1097.0], [1122.0, 1046.0], [1124.0, 1137.0], [1126.0, 1206.5], [1130.0, 1796.0], [1132.0, 1782.0], [1138.0, 1656.0], [1136.0, 1663.0], [1102.0, 2411.0], [1100.0, 1753.0], [1098.0, 2421.0], [1096.0, 2394.0], [1092.0, 1738.0], [1090.0, 1690.0], [1088.0, 2459.0], [1118.0, 1779.0], [1116.0, 1791.0], [1114.0, 1837.0], [1112.0, 1993.0], [1110.0, 1052.0], [1108.0, 1738.0], [1106.0, 1942.0], [1104.0, 1967.0], [1134.0, 1680.0], [1206.0, 1077.5], [1190.0, 1330.0], [1212.0, 1285.0], [1184.0, 941.0], [1186.0, 1315.0], [1188.0, 1398.0], [1194.0, 782.0], [1192.0, 1307.0], [1196.0, 931.0], [1198.0, 1343.0], [1214.0, 1308.0], [1210.0, 977.6666666666666], [1204.0, 1338.0], [1202.0, 1122.0], [1200.0, 1358.0], [1166.0, 1409.0], [1164.0, 1386.0], [1160.0, 1399.0], [1158.0, 1415.0], [1156.0, 1410.0], [1152.0, 1481.0], [1182.0, 879.0], [1180.0, 1332.0], [1178.0, 1318.0], [1174.0, 1324.0], [1172.0, 1339.0], [1170.0, 1449.0], [1168.0, 1442.0], [1276.0, 655.0], [1256.0, 698.0], [1248.0, 749.0], [1250.0, 721.0], [1252.0, 1152.0], [1254.0, 1110.0], [1258.0, 1053.0], [1260.0, 1002.0], [1262.0, 1001.0], [1278.0, 645.0], [1274.0, 676.0], [1270.0, 685.0], [1268.0, 465.0], [1266.0, 849.0], [1264.0, 900.0], [1230.0, 1298.0], [1228.0, 896.0], [1226.0, 1115.0], [1224.0, 698.0], [1222.0, 1264.0], [1220.0, 1250.0], [1216.0, 1319.0], [1244.0, 1205.0], [1242.0, 1220.0], [1240.0, 1190.0], [1238.0, 827.0], [1236.0, 1258.0], [1234.0, 780.0], [1232.0, 666.0], [1336.0, 409.0], [1338.0, 357.5], [1314.0, 562.0], [1312.0, 551.0], [1316.0, 572.0], [1318.0, 496.0], [1320.0, 533.0], [1322.0, 513.0], [1326.0, 457.0], [1334.0, 468.0], [1332.0, 440.0], [1330.0, 455.0], [1328.0, 491.0], [1294.0, 628.0], [1292.0, 605.0], [1290.0, 633.5], [1288.0, 635.5], [1286.0, 644.0], [1284.0, 632.0], [1282.0, 647.0], [1310.0, 560.0], [1308.0, 610.0], [1306.0, 610.0], [1302.0, 625.0], [1300.0, 624.5], [1298.0, 627.0], [1296.0, 619.5], [1382.0, 1291.0], [1392.0, 1229.0], [1390.0, 1238.0], [1354.0, 1262.0], [1356.0, 1277.0], [1358.0, 1286.0], [1372.0, 1298.0], [1466.0, 1131.0], [1440.0, 1147.0], [1442.0, 1193.0], [1450.0, 1138.0], [1452.0, 1175.0], [1462.0, 1159.0], [1460.0, 1098.0], [1458.0, 1005.0], [1456.0, 1146.0], [1434.0, 1222.0], [1410.0, 1269.0], [1414.0, 1214.0], [1412.0, 1132.0], [1422.0, 1311.0], [1428.0, 1234.0], [1424.0, 976.0], [1486.0, 327.0], [1504.0, 702.0], [1508.0, 719.5], [1506.0, 681.0], [1510.0, 723.0], [1514.0, 694.0], [1532.0, 619.0], [1528.0, 610.0], [1524.0, 685.0], [1522.0, 707.0], [1484.0, 824.0], [1482.0, 953.0], [1480.0, 801.0], [1478.0, 904.0], [1476.0, 929.0], [1474.0, 983.0317460317459], [1472.0, 1100.5], [1502.0, 692.0], [1500.0, 742.0], [1498.0, 753.5], [1496.0, 725.0], [1494.0, 719.0], [1488.0, 374.0], [1596.0, 398.0], [1598.0, 389.0], [1568.0, 248.0], [1570.0, 248.0], [1574.0, 253.0], [1572.0, 234.0], [1578.0, 228.0], [1580.0, 211.0], [1582.0, 211.0], [1594.0, 580.0], [1592.0, 418.0], [1588.0, 411.0], [1586.0, 200.5], [1566.0, 253.0], [1538.0, 565.0], [1536.0, 532.0], [1540.0, 544.0], [1542.0, 570.0], [1544.0, 571.0], [1548.0, 502.0], [1550.0, 551.0], [1564.0, 254.0], [1560.0, 429.0], [1558.0, 418.0], [1556.0, 451.0], [1554.0, 460.0], [1552.0, 507.0], [1658.0, 281.0], [1632.0, 304.0], [1636.0, 455.0], [1638.0, 369.0], [1640.0, 350.0], [1642.0, 325.0], [1644.0, 312.0], [1646.0, 281.0], [1660.0, 268.0], [1656.0, 500.0], [1652.0, 566.0], [1650.0, 303.0], [1648.0, 308.5], [1602.0, 367.0], [1606.0, 354.0], [1610.0, 334.0], [1608.0, 359.0], [1612.0, 536.0], [1614.0, 335.5], [1630.0, 488.0], [1628.0, 315.0], [1626.0, 321.0], [1622.0, 522.0], [1620.0, 423.5], [1618.0, 518.0], [1616.0, 323.0], [1726.0, 563.3333333333334], [1698.0, 408.0], [1700.0, 619.0], [1704.0, 618.0], [1706.0, 620.0], [1718.0, 558.0], [1712.0, 602.0], [1664.0, 340.6666666666667], [1666.0, 543.0], [1668.0, 475.0], [1670.0, 406.5], [1674.0, 812.0], [1672.0, 448.0], [1676.0, 431.0], [1688.0, 734.0], [1686.0, 448.0], [1684.0, 910.0], [1682.0, 626.0], [1680.0, 1597.0], [1780.0, 732.0], [1790.0, 814.0], [1760.0, 962.0], [1762.0, 984.5], [1764.0, 959.0], [1766.0, 953.5], [1768.0, 951.0], [1770.0, 944.0], [1772.0, 918.0], [1778.0, 907.0], [1776.0, 895.0], [1740.0, 1165.0], [1738.0, 503.0], [1736.0, 468.0], [1734.0, 532.0], [1732.0, 531.5], [1730.0, 861.5], [1758.0, 1024.0], [1756.0, 1049.5], [1754.0, 1027.0], [1752.0, 1035.0], [1746.0, 1107.0], [1744.0, 1155.0], [1774.0, 904.0], [1842.0, 837.0], [1826.0, 922.0], [1832.0, 862.0], [1834.0, 801.0], [1836.0, 874.0], [1838.0, 857.6666666666666], [1854.0, 744.0], [1852.0, 766.0], [1848.0, 727.0], [1844.0, 778.0], [1840.0, 814.0], [1806.0, 363.0], [1802.0, 372.0], [1798.0, 650.0], [1796.0, 735.0], [1794.0, 786.0], [1822.0, 928.0], [1820.0, 947.0], [1812.0, 347.0], [1810.0, 328.0], [1808.0, 355.5], [1868.0, 722.5], [1896.0, 698.0], [1910.0, 867.0], [1870.0, 704.0], [1864.0, 710.0], [1862.0, 753.0], [1860.0, 800.0], [1858.0, 757.5], [1856.0, 743.0], [1886.0, 742.0], [1884.0, 714.0], [1882.0, 679.0], [1880.0, 721.0], [1878.0, 767.0], [1874.0, 758.0], [1872.0, 735.0], [1898.0, 601.0], [1894.0, 656.0], [1892.0, 703.0], [1890.0, 645.0], [1976.0, 880.0], [1980.0, 812.0], [1954.0, 494.0], [1982.0, 855.0], [1978.0, 843.0], [1974.0, 872.0], [1972.0, 868.0], [1970.0, 858.0], [1968.0, 991.0], [1928.0, 852.0], [1926.0, 1126.0], [1938.0, 698.0], [1992.0, 7509.0], [2000.0, 1034.3333333333328], [1984.0, 777.5], [1986.0, 11637.0], [1998.0, 156.0], [1996.0, 112.0], [1994.0, 3929.0], [1990.0, 11366.0], [1988.0, 11754.0], [1077.0, 2040.0], [1087.0, 1986.0], [1061.0, 900.2], [1063.0, 2165.0], [1067.0, 765.0], [1069.0, 2105.0], [1071.0, 2484.0], [1085.0, 2002.0], [1083.0, 2033.0], [1081.0, 2042.0], [1079.0, 2041.0], [1075.0, 1805.0], [1073.0, 2076.0], [1055.0, 1682.5], [1027.0, 2873.0], [1029.0, 1306.0], [1031.0, 2452.0], [1033.0, 2838.0], [1035.0, 2930.0], [1053.0, 1256.0], [1051.0, 2314.0], [1049.0, 2884.0], [1047.0, 2429.0], [1045.0, 2252.0], [1043.0, 2898.0], [1137.0, 914.0], [1151.0, 1539.0], [1121.0, 1814.0], [1123.0, 1040.0], [1125.0, 1848.0], [1127.0, 1398.0], [1129.0, 1112.0], [1131.0, 1773.0], [1133.0, 1110.0], [1141.0, 967.0], [1103.0, 1868.0], [1101.0, 2374.0], [1099.0, 2419.0], [1097.0, 2185.0], [1095.0, 1671.0], [1093.0, 2446.0], [1091.0, 2439.0], [1089.0, 2413.0], [1119.0, 1430.0], [1117.0, 1224.0], [1115.0, 1176.0], [1113.0, 1120.0], [1109.0, 2068.0], [1107.0, 2256.0], [1105.0, 2305.0], [1135.0, 1141.0], [1209.0, 1333.5], [1215.0, 1255.0], [1185.0, 1409.0], [1187.0, 879.0], [1189.0, 989.25], [1191.0, 1374.0], [1195.0, 748.0], [1197.0, 925.0], [1213.0, 1316.0], [1211.0, 894.0], [1205.0, 1320.0], [1203.0, 1393.0], [1167.0, 1401.0], [1165.0, 1357.0], [1161.0, 1398.0], [1159.0, 1383.0], [1157.0, 1381.0], [1155.0, 1215.5], [1179.0, 1338.0], [1173.0, 1425.0], [1171.0, 1139.0], [1169.0, 1349.0], [1277.0, 633.0], [1279.0, 662.0], [1249.0, 1225.0], [1251.0, 1182.0], [1253.0, 1102.0], [1255.0, 1122.0], [1257.0, 1094.0], [1259.0, 1036.0], [1261.0, 998.0], [1263.0, 955.0], [1271.0, 664.0], [1269.0, 437.0], [1267.0, 868.0], [1265.0, 890.0], [1231.0, 729.0], [1229.0, 881.0], [1227.0, 1274.0], [1223.0, 813.0], [1221.0, 1269.0], [1219.0, 1105.3333333333333], [1217.0, 1291.0], [1247.0, 1163.0], [1245.0, 1151.0], [1243.0, 1190.0], [1241.0, 1194.0], [1239.0, 1259.0], [1237.0, 961.0], [1235.0, 1310.0], [1233.0, 557.0], [1331.0, 467.0], [1319.0, 486.0], [1335.0, 430.0], [1315.0, 560.0], [1317.0, 534.0], [1321.0, 509.0], [1325.0, 459.0], [1323.0, 468.0], [1327.0, 474.0], [1337.0, 424.0], [1333.0, 440.0], [1329.0, 441.0], [1295.0, 610.0], [1293.0, 635.0], [1291.0, 643.0], [1289.0, 622.0], [1287.0, 652.0], [1285.0, 646.0], [1283.0, 627.0], [1281.0, 626.0], [1311.0, 540.0], [1309.0, 593.0], [1307.0, 595.0], [1305.0, 600.5], [1303.0, 578.0], [1301.0, 585.0], [1299.0, 617.0], [1297.0, 630.0], [1403.0, 1215.0], [1407.0, 1222.0], [1397.0, 1244.0], [1391.0, 1227.0], [1387.0, 1330.0], [1373.0, 1288.0], [1355.0, 1237.0], [1357.0, 1282.0], [1369.0, 1296.0], [1365.0, 1248.5], [1465.0, 1106.0], [1471.0, 1018.5], [1445.0, 1087.25], [1451.0, 987.0], [1455.0, 1093.0], [1469.0, 1102.0], [1463.0, 1067.0], [1461.0, 1099.0], [1459.0, 1101.0], [1457.0, 1116.0], [1409.0, 1321.0], [1411.0, 1240.0], [1415.0, 1213.0], [1421.0, 1257.0], [1429.0, 1235.0], [1427.0, 1212.5], [1425.0, 1234.0], [1521.0, 714.0], [1485.0, 538.0], [1529.0, 604.0], [1535.0, 567.5], [1505.0, 748.0], [1509.0, 702.0], [1513.0, 701.5], [1517.0, 718.0], [1515.0, 706.0], [1533.0, 547.0], [1527.0, 668.0], [1487.0, 336.0], [1483.0, 742.0], [1481.0, 873.0], [1479.0, 844.0], [1477.0, 903.0], [1475.0, 973.0], [1473.0, 953.3333333333334], [1503.0, 734.0], [1501.0, 714.0], [1499.0, 713.0], [1495.0, 739.5], [1493.0, 728.0], [1491.0, 718.0], [1489.0, 779.0], [1591.0, 499.5], [1575.0, 223.0], [1595.0, 598.0], [1569.0, 258.0], [1577.0, 239.0], [1579.0, 240.0], [1581.0, 228.0], [1583.0, 218.0], [1597.0, 391.0], [1593.0, 597.0], [1589.0, 418.0], [1587.0, 186.0], [1539.0, 524.0], [1541.0, 547.0], [1543.0, 508.0], [1547.0, 504.5], [1545.0, 530.0], [1549.0, 511.0], [1551.0, 501.0], [1563.0, 260.0], [1561.0, 369.5], [1559.0, 363.0], [1557.0, 491.0], [1555.0, 436.0], [1553.0, 545.0], [1657.0, 555.0], [1653.0, 282.0], [1639.0, 372.0], [1661.0, 537.0], [1633.0, 489.0], [1635.0, 482.5], [1637.0, 384.0], [1641.0, 329.0], [1643.0, 310.0], [1645.0, 286.0], [1659.0, 542.0], [1655.0, 282.0], [1651.0, 286.0], [1631.0, 499.0], [1601.0, 380.0], [1605.0, 450.0], [1603.0, 557.0], [1607.0, 478.0], [1611.0, 347.0], [1615.0, 335.0], [1629.0, 310.0], [1627.0, 506.0], [1625.0, 320.5], [1623.0, 519.0], [1621.0, 326.5], [1617.0, 327.0], [1723.0, 542.0], [1701.0, 592.0], [1727.0, 536.0], [1697.0, 593.0], [1699.0, 577.0], [1703.0, 619.5], [1705.0, 599.0], [1707.0, 583.0], [1711.0, 614.0], [1709.0, 620.0], [1725.0, 547.0], [1721.0, 572.0], [1717.0, 911.5], [1715.0, 568.5], [1713.0, 559.0], [1695.0, 422.0], [1665.0, 519.0], [1667.0, 847.0], [1671.0, 457.0], [1675.0, 752.5], [1679.0, 279.0], [1677.0, 405.0], [1693.0, 449.0], [1687.0, 728.0], [1685.0, 614.0], [1683.0, 823.0], [1681.0, 926.0], [1777.0, 894.0], [1767.0, 902.0], [1791.0, 801.0], [1761.0, 990.0], [1763.0, 980.0], [1765.0, 965.0], [1769.0, 926.0], [1771.0, 939.0], [1779.0, 899.0], [1743.0, 1094.0], [1741.0, 492.0], [1739.0, 1208.0], [1737.0, 497.0], [1735.0, 510.0], [1733.0, 1222.0], [1731.0, 1232.0], [1729.0, 1189.0], [1759.0, 1043.0], [1755.0, 1052.0], [1753.0, 1053.0], [1751.0, 1061.0], [1749.0, 1072.0], [1747.0, 1111.0], [1745.0, 1062.0], [1773.0, 877.0], [1855.0, 785.0], [1851.0, 733.5], [1831.0, 846.0], [1835.0, 871.0], [1837.0, 846.0], [1839.0, 868.0], [1849.0, 737.0], [1847.0, 762.0], [1841.0, 799.7], [1805.0, 364.0], [1803.0, 336.0], [1801.0, 547.1538461538462], [1799.0, 629.0], [1793.0, 774.0], [1813.0, 340.0], [1811.0, 302.0], [1809.0, 320.3333333333333], [1865.0, 742.0], [1891.0, 670.0], [1919.0, 882.0], [1869.0, 722.0], [1861.0, 704.5], [1859.0, 758.5], [1887.0, 710.0], [1885.0, 648.0], [1883.0, 663.0], [1881.0, 685.0], [1879.0, 700.0], [1877.0, 718.0], [1875.0, 713.0], [1873.0, 673.0], [1899.0, 569.0], [1897.0, 607.0], [1895.0, 636.0], [1889.0, 663.6666666666666], [1953.0, 827.0], [1983.0, 823.0], [1961.0, 629.1], [1959.0, 834.0], [1965.0, 743.0], [1963.0, 721.0], [1981.0, 827.0], [1979.0, 863.0], [1977.0, 844.0], [1975.0, 824.0], [1971.0, 894.0], [1969.0, 922.9333333333333], [1929.0, 838.0], [1925.0, 762.6666666666666], [1937.0, 510.0], [1995.0, 123.0], [1985.0, 13696.0], [1987.0, 11610.0], [1999.0, 155.0], [1991.0, 8296.0], [1989.0, 11226.0], [1.0, 20.244444444444444]], "isOverall": false, "label": "Sunstar Home Japan", "isController": false}, {"data": [[32.07465706044314, 47.13574010989777]], "isOverall": false, "label": "Sunstar Home Japan-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 12.9, "minX": 1.62702781E12, "maxY": 6978149.0, "series": [{"data": [[1.62702817E12, 1259906.1], [1.627028E12, 2426830.2], [1.62702834E12, 339384.3], [1.62702851E12, 1129707.0], [1.62702868E12, 2287357.2], [1.62702791E12, 1766650.4], [1.62702808E12, 6955082.7], [1.62702825E12, 6959702.7], [1.62702842E12, 3542481.5], [1.62702859E12, 6922516.7], [1.62702799E12, 1269217.8], [1.62702782E12, 4650.5], [1.62702801E12, 3556561.5], [1.62702784E12, 395167.4], [1.62702818E12, 2412882.9], [1.62702835E12, 1278502.5], [1.62702852E12, 330081.6], [1.62702869E12, 1134380.4], [1.62702809E12, 6959702.7], [1.62702792E12, 2296655.4], [1.62702826E12, 6941106.3], [1.62702843E12, 6945523.9], [1.6270286E12, 6969000.9], [1.62702783E12, 399823.0], [1.62702832E12, 2310602.7], [1.62702849E12, 3472803.0], [1.62702866E12, 4602609.0], [1.62702789E12, 1036727.0], [1.62702806E12, 6955053.6], [1.62702823E12, 6959702.7], [1.6270284E12, 6848124.3], [1.62702857E12, 5871813.3], [1.62702797E12, 1152976.8], [1.62702814E12, 2301304.5], [1.62702831E12, 3463579.5], [1.62702816E12, 302191.5], [1.62702833E12, 1152976.8], [1.6270285E12, 2305904.0], [1.62702867E12, 3463579.5], [1.62702807E12, 6969000.9], [1.6270279E12, 1752673.0], [1.62702824E12, 6973650.0], [1.62702841E12, 6959702.7], [1.62702858E12, 6136812.0], [1.62702781E12, 148778.4], [1.62702815E12, 1157625.9], [1.62702798E12, 339384.3], [1.62702864E12, 6801633.3], [1.62702787E12, 274291.0], [1.62702804E12, 6834177.0], [1.62702821E12, 5876462.4], [1.62702838E12, 4686292.8], [1.62702855E12, 3570508.8], [1.62702795E12, 3454281.3], [1.62702812E12, 4607258.1], [1.62702829E12, 5764884.0], [1.62702846E12, 6801487.0], [1.62702863E12, 6969000.9], [1.62702848E12, 4602510.0], [1.62702865E12, 5778831.3], [1.62702805E12, 6280934.1], [1.62702788E12, 120874.0], [1.62702822E12, 6857422.5], [1.62702839E12, 5881111.5], [1.62702856E12, 4709538.3], [1.62702813E12, 3472877.7], [1.62702796E12, 2315251.8], [1.6270283E12, 4597959.9], [1.62702847E12, 5769422.9], [1.62702785E12, 55788.0], [1.62702819E12, 3565859.7], [1.62702802E12, 4709538.3], [1.62702836E12, 2408233.8], [1.62702853E12, 1250607.9], [1.6270287E12, 144122.1], [1.62702793E12, 5332539.0], [1.6270281E12, 6801633.3], [1.62702827E12, 6964351.8], [1.62702844E12, 6954904.0], [1.62702861E12, 6964351.8], [1.62702803E12, 5811375.0], [1.62702786E12, 720595.7], [1.6270282E12, 4728134.7], [1.62702837E12, 3575157.9], [1.62702854E12, 2403584.7], [1.62702811E12, 5746287.6], [1.62702794E12, 4593310.8], [1.62702828E12, 6369267.0], [1.62702845E12, 6978149.0], [1.62702862E12, 6973650.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62702817E12, 3495.9], [1.627028E12, 6733.8], [1.62702834E12, 941.7], [1.62702851E12, 3134.7], [1.62702868E12, 6346.8], [1.62702791E12, 4902.0], [1.62702808E12, 19298.4], [1.62702825E12, 19311.3], [1.62702842E12, 9829.8], [1.62702859E12, 19208.1], [1.62702799E12, 3521.7], [1.62702782E12, 12.9], [1.62702801E12, 9868.5], [1.62702784E12, 1096.5], [1.62702818E12, 6695.1], [1.62702835E12, 3547.5], [1.62702852E12, 915.9], [1.62702869E12, 3147.6], [1.62702809E12, 19311.3], [1.62702792E12, 6372.6], [1.62702826E12, 19259.7], [1.62702843E12, 19272.6], [1.6270286E12, 19337.1], [1.62702783E12, 1109.4], [1.62702832E12, 6411.3], [1.62702849E12, 9636.3], [1.62702866E12, 12771.0], [1.62702789E12, 2876.7], [1.62702806E12, 19298.4], [1.62702823E12, 19311.3], [1.6270284E12, 19001.7], [1.62702857E12, 16292.7], [1.62702797E12, 3199.2], [1.62702814E12, 6385.5], [1.62702831E12, 9610.5], [1.62702816E12, 838.5], [1.62702833E12, 3199.2], [1.6270285E12, 6398.4], [1.62702867E12, 9610.5], [1.62702807E12, 19337.1], [1.6270279E12, 4863.3], [1.62702824E12, 19350.0], [1.62702841E12, 19311.3], [1.62702858E12, 17028.0], [1.62702781E12, 412.8], [1.62702815E12, 3212.1], [1.62702798E12, 941.7], [1.62702864E12, 18872.7], [1.62702787E12, 761.1], [1.62702804E12, 18963.0], [1.62702821E12, 16305.6], [1.62702838E12, 13003.2], [1.62702855E12, 9907.2], [1.62702795E12, 9584.7], [1.62702812E12, 12783.9], [1.62702829E12, 15996.0], [1.62702846E12, 18872.7], [1.62702863E12, 19337.1], [1.62702848E12, 12771.0], [1.62702865E12, 16034.7], [1.62702805E12, 17427.9], [1.62702788E12, 335.4], [1.62702822E12, 19027.5], [1.62702839E12, 16318.5], [1.62702856E12, 13067.7], [1.62702813E12, 9636.3], [1.62702796E12, 6424.2], [1.6270283E12, 12758.1], [1.62702847E12, 16008.9], [1.62702785E12, 154.8], [1.62702819E12, 9894.3], [1.62702802E12, 13067.7], [1.62702836E12, 6682.2], [1.62702853E12, 3470.1], [1.6270287E12, 399.9], [1.62702793E12, 14796.3], [1.6270281E12, 18872.7], [1.62702827E12, 19324.2], [1.62702844E12, 19298.4], [1.62702861E12, 19324.2], [1.62702803E12, 16125.0], [1.62702786E12, 1999.5], [1.6270282E12, 13119.3], [1.62702837E12, 9920.1], [1.62702854E12, 6669.3], [1.62702811E12, 15944.4], [1.62702794E12, 12745.2], [1.62702828E12, 17673.0], [1.62702845E12, 19362.9], [1.62702862E12, 19350.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.6270287E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 11.57852348993288, "minX": 1.62702781E12, "maxY": 13696.0, "series": [{"data": [[1.62702817E12, 23.01845018450187], [1.627028E12, 21.796934865900397], [1.62702834E12, 21.945205479452056], [1.62702851E12, 12.769547325102879], [1.62702868E12, 12.048780487804882], [1.62702791E12, 815.5289473684214], [1.62702808E12, 26.733288770053427], [1.62702825E12, 27.509686038744157], [1.62702842E12, 91.32545931758526], [1.62702859E12, 23.383478844862307], [1.62702799E12, 23.117216117216127], [1.62702782E12, 13696.0], [1.62702801E12, 22.377777777777787], [1.62702784E12, 755.1764705882355], [1.62702818E12, 22.699421965317896], [1.62702835E12, 22.029090909090915], [1.62702852E12, 14.084507042253525], [1.62702869E12, 12.885245901639347], [1.62702809E12, 27.285905143620536], [1.62702792E12, 534.1174089068817], [1.62702826E12, 27.535833891493688], [1.62702843E12, 28.147925033467242], [1.6270286E12, 27.605070046697794], [1.62702783E12, 806.5581395348837], [1.62702832E12, 21.967806841046265], [1.62702849E12, 11.714859437751], [1.62702866E12, 12.211111111111109], [1.62702789E12, 904.964125560538], [1.62702806E12, 26.629010695187162], [1.62702823E12, 27.643954575818228], [1.6270284E12, 28.32586558044806], [1.62702857E12, 13.935075217735541], [1.62702797E12, 23.040322580645164], [1.62702814E12, 21.941414141414167], [1.62702831E12, 23.385234899328857], [1.62702816E12, 24.230769230769223], [1.62702833E12, 22.112903225806452], [1.6270285E12, 11.995967741935493], [1.62702867E12, 11.57852348993288], [1.62702807E12, 24.99466310873917], [1.6270279E12, 1284.7400530503987], [1.62702824E12, 27.600666666666694], [1.62702841E12, 28.69071476285904], [1.62702858E12, 23.121969696969686], [1.62702781E12, 3142.9999999999995], [1.62702815E12, 22.690763052208847], [1.62702798E12, 22.72602739726027], [1.62702864E12, 27.34176349965818], [1.62702787E12, 408.35593220338984], [1.62702804E12, 27.73945578231285], [1.62702821E12, 25.889240506329113], [1.62702838E12, 24.796626984126963], [1.62702855E12, 12.26692708333333], [1.62702795E12, 25.286675639300135], [1.62702812E12, 22.588294651866793], [1.62702829E12, 25.43629032258067], [1.62702846E12, 27.11073137388929], [1.62702863E12, 27.501667778519018], [1.62702848E12, 11.818181818181811], [1.62702865E12, 18.61946902654866], [1.62702805E12, 34.46188008882315], [1.62702788E12, 229.8461538461538], [1.62702822E12, 27.54169491525422], [1.62702839E12, 25.947826086956532], [1.62702856E12, 12.47976307996051], [1.62702813E12, 21.559571619812573], [1.62702796E12, 22.50200803212851], [1.6270283E12, 24.18301314459051], [1.62702847E12, 18.599516518936333], [1.62702785E12, 337.6666666666667], [1.62702819E12, 22.99739243807041], [1.62702802E12, 28.396841066140166], [1.62702836E12, 22.187258687258705], [1.62702853E12, 13.46840148698885], [1.6270287E12, 13.58064516129032], [1.62702793E12, 86.65649520488232], [1.6270281E12, 27.26999316473004], [1.62702827E12, 28.54138851802402], [1.62702844E12, 27.14639037433155], [1.62702861E12, 27.78571428571429], [1.62702803E12, 27.8336], [1.62702786E12, 702.7096774193549], [1.6270282E12, 24.649950835791554], [1.62702837E12, 22.873862158647587], [1.62702854E12, 12.760154738878137], [1.62702811E12, 24.333333333333325], [1.62702794E12, 32.17914979757086], [1.62702828E12, 36.24087591240877], [1.62702845E12, 27.533644237175206], [1.62702862E12, 27.97733333333333]], "isOverall": false, "label": "Sunstar Home Japan", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.6270287E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 11.319463087248314, "minX": 1.62702781E12, "maxY": 13559.0, "series": [{"data": [[1.62702817E12, 20.76014760147602], [1.627028E12, 19.708812260536394], [1.62702834E12, 19.72602739726027], [1.62702851E12, 12.547325102880656], [1.62702868E12, 11.788617886178862], [1.62702791E12, 800.7947368421053], [1.62702808E12, 24.47393048128341], [1.62702825E12, 25.125584502338], [1.62702842E12, 82.11417322834646], [1.62702859E12, 21.79180658159836], [1.62702799E12, 21.02197802197803], [1.62702782E12, 13559.0], [1.62702801E12, 20.304575163398702], [1.62702784E12, 737.811764705883], [1.62702818E12, 20.464354527938326], [1.62702835E12, 19.79272727272728], [1.62702852E12, 13.732394366197182], [1.62702869E12, 12.635245901639346], [1.62702809E12, 24.9873079492318], [1.62702792E12, 532.4392712550607], [1.62702826E12, 25.320830542531827], [1.62702843E12, 25.615796519410996], [1.6270286E12, 25.23348899266181], [1.62702783E12, 794.0581395348835], [1.62702832E12, 19.716297786720315], [1.62702849E12, 11.452476572958496], [1.62702866E12, 11.953535353535353], [1.62702789E12, 875.1524663677129], [1.62702806E12, 24.366310160427833], [1.62702823E12, 25.26052104208421], [1.6270284E12, 25.717583163611675], [1.62702857E12, 13.66745843230403], [1.62702797E12, 20.762096774193544], [1.62702814E12, 19.713131313131324], [1.62702831E12, 21.093959731543613], [1.62702816E12, 22.000000000000007], [1.62702833E12, 19.866935483870954], [1.6270285E12, 11.719758064516125], [1.62702867E12, 11.319463087248314], [1.62702807E12, 22.749833222148112], [1.6270279E12, 1269.5649867373995], [1.62702824E12, 25.33333333333327], [1.62702841E12, 26.098196392785546], [1.62702858E12, 22.599242424242455], [1.62702781E12, 3078.15625], [1.62702815E12, 20.43775100401605], [1.62702798E12, 20.493150684931507], [1.62702864E12, 25.079289131920714], [1.62702787E12, 398.5593220338983], [1.62702804E12, 25.57891156462585], [1.62702821E12, 23.509493670886048], [1.62702838E12, 22.25992063492061], [1.62702855E12, 12.061197916666675], [1.62702795E12, 22.88021534320322], [1.62702812E12, 20.521695257315837], [1.62702829E12, 23.225806451612893], [1.62702846E12, 24.49760765550239], [1.62702863E12, 25.320213475650384], [1.62702848E12, 11.581818181818198], [1.62702865E12, 17.49959774738536], [1.62702805E12, 32.20725388601034], [1.62702788E12, 225.73076923076923], [1.62702822E12, 24.870508474576273], [1.62702839E12, 23.568379446640293], [1.62702856E12, 12.22606120434354], [1.62702813E12, 19.515394912985258], [1.62702796E12, 20.228915662650593], [1.6270283E12, 21.7593528816987], [1.62702847E12, 17.475423045930665], [1.62702785E12, 334.5833333333333], [1.62702819E12, 20.740547588005214], [1.62702802E12, 26.25863770977298], [1.62702836E12, 19.85907335907336], [1.62702853E12, 13.278810408921936], [1.6270287E12, 13.225806451612904], [1.62702793E12, 84.78639930252825], [1.6270281E12, 25.01230348598771], [1.62702827E12, 26.21695594125497], [1.62702844E12, 24.509358288770084], [1.62702861E12, 25.44192256341793], [1.62702803E12, 25.66719999999998], [1.62702786E12, 683.5032258064516], [1.6270282E12, 22.10717797443461], [1.62702837E12, 20.628088426527928], [1.62702854E12, 12.5183752417795], [1.62702811E12, 22.158576051779924], [1.62702794E12, 29.694331983805665], [1.62702828E12, 33.34160583941608], [1.62702845E12, 24.924050632911406], [1.62702862E12, 25.67133333333332]], "isOverall": false, "label": "Sunstar Home Japan", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.6270287E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 10.273825503355702, "minX": 1.62702781E12, "maxY": 1229.0106100795758, "series": [{"data": [[1.62702817E12, 17.52767527675276], [1.627028E12, 16.858237547892724], [1.62702834E12, 16.575342465753415], [1.62702851E12, 11.460905349794244], [1.62702868E12, 10.743902439024389], [1.62702791E12, 768.8447368421057], [1.62702808E12, 20.653074866310124], [1.62702825E12, 21.24916499666], [1.62702842E12, 26.746719160104995], [1.62702859E12, 18.574882471457368], [1.62702799E12, 17.84249084249085], [1.62702782E12, 25.0], [1.62702801E12, 17.366013071895424], [1.62702784E12, 707.741176470588], [1.62702818E12, 17.260115606936413], [1.62702835E12, 16.672727272727283], [1.62702852E12, 12.521126760563382], [1.62702869E12, 11.549180327868847], [1.62702809E12, 21.077488309953207], [1.62702792E12, 510.9089068825919], [1.62702826E12, 21.405894172806395], [1.62702843E12, 21.73025435073628], [1.6270286E12, 21.248832555036724], [1.62702783E12, 750.6744186046515], [1.62702832E12, 16.549295774647863], [1.62702849E12, 10.338688085676042], [1.62702866E12, 10.821212121212112], [1.62702789E12, 841.1793721973096], [1.62702806E12, 20.85561497326202], [1.62702823E12, 21.404141616566456], [1.6270284E12, 21.845892735913093], [1.62702857E12, 12.468725257323806], [1.62702797E12, 17.37096774193549], [1.62702814E12, 16.422222222222217], [1.62702831E12, 17.922147651006718], [1.62702816E12, 18.81538461538461], [1.62702833E12, 16.64112903225805], [1.6270285E12, 10.6491935483871], [1.62702867E12, 10.273825503355702], [1.62702807E12, 19.37424949966641], [1.6270279E12, 1229.0106100795758], [1.62702824E12, 21.400000000000006], [1.62702841E12, 22.14829659318637], [1.62702858E12, 20.659848484848506], [1.62702781E12, 242.40624999999997], [1.62702815E12, 17.236947791164667], [1.62702798E12, 17.13698630136987], [1.62702864E12, 21.090909090909076], [1.62702787E12, 382.05084745762724], [1.62702804E12, 22.071428571428584], [1.62702821E12, 19.7935126582279], [1.62702838E12, 18.765873015873048], [1.62702855E12, 10.919270833333334], [1.62702795E12, 19.4656796769852], [1.62702812E12, 17.157416750756823], [1.62702829E12, 19.5096774193548], [1.62702846E12, 20.734791524265237], [1.62702863E12, 21.32888592394929], [1.62702848E12, 10.45353535353535], [1.62702865E12, 15.312148028962168], [1.62702805E12, 28.340488527017072], [1.62702788E12, 216.73076923076923], [1.62702822E12, 21.142372881355914], [1.62702839E12, 19.884584980237143], [1.62702856E12, 11.07403751233959], [1.62702813E12, 16.2302543507363], [1.62702796E12, 17.01204819277108], [1.6270283E12, 18.426693629929215], [1.62702847E12, 15.060435132957284], [1.62702785E12, 326.33333333333337], [1.62702819E12, 17.530638852672762], [1.62702802E12, 22.89239881539977], [1.62702836E12, 16.708494208494198], [1.62702853E12, 12.13382899628252], [1.6270287E12, 12.129032258064514], [1.62702793E12, 79.43504795117695], [1.6270281E12, 21.03622693096378], [1.62702827E12, 22.093457943925227], [1.62702844E12, 20.800802139037454], [1.62702861E12, 21.408544726301756], [1.62702803E12, 22.17120000000002], [1.62702786E12, 657.9741935483869], [1.6270282E12, 18.717797443461162], [1.62702837E12, 17.30559167750328], [1.62702854E12, 11.40618955512573], [1.62702811E12, 18.678802588996746], [1.62702794E12, 25.395748987854248], [1.62702828E12, 28.711678832116736], [1.62702845E12, 21.125249833444343], [1.62702862E12, 21.611333333333327]], "isOverall": false, "label": "Sunstar Home Japan", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.6270287E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 9.0, "minX": 1.62702781E12, "maxY": 13696.0, "series": [{"data": [[1.62702817E12, 46.0], [1.627028E12, 72.0], [1.62702834E12, 28.0], [1.62702851E12, 35.0], [1.62702868E12, 34.0], [1.62702791E12, 3146.0], [1.62702808E12, 63.0], [1.62702825E12, 75.0], [1.62702842E12, 7823.0], [1.62702859E12, 104.0], [1.62702799E12, 123.0], [1.62702782E12, 13696.0], [1.62702801E12, 81.0], [1.62702784E12, 974.0], [1.62702818E12, 276.0], [1.62702835E12, 40.0], [1.62702852E12, 24.0], [1.62702869E12, 29.0], [1.62702809E12, 67.0], [1.62702792E12, 1088.0], [1.62702826E12, 89.0], [1.62702843E12, 113.0], [1.6270286E12, 57.0], [1.62702783E12, 1126.0], [1.62702832E12, 43.0], [1.62702849E12, 47.0], [1.62702866E12, 45.0], [1.62702789E12, 1330.0], [1.62702806E12, 74.0], [1.62702823E12, 178.0], [1.6270284E12, 76.0], [1.62702857E12, 62.0], [1.62702797E12, 57.0], [1.62702814E12, 88.0], [1.62702831E12, 58.0], [1.62702816E12, 51.0], [1.62702833E12, 52.0], [1.6270285E12, 34.0], [1.62702867E12, 41.0], [1.62702807E12, 64.0], [1.6270279E12, 2930.0], [1.62702824E12, 107.0], [1.62702841E12, 77.0], [1.62702858E12, 454.0], [1.62702781E12, 11754.0], [1.62702815E12, 40.0], [1.62702798E12, 44.0], [1.62702864E12, 239.0], [1.62702787E12, 604.0], [1.62702804E12, 79.0], [1.62702821E12, 67.0], [1.62702838E12, 74.0], [1.62702855E12, 105.0], [1.62702795E12, 168.0], [1.62702812E12, 105.0], [1.62702829E12, 255.0], [1.62702846E12, 89.0], [1.62702863E12, 92.0], [1.62702848E12, 42.0], [1.62702865E12, 184.0], [1.62702805E12, 773.0], [1.62702788E12, 262.0], [1.62702822E12, 92.0], [1.62702839E12, 93.0], [1.62702856E12, 220.0], [1.62702813E12, 171.0], [1.62702796E12, 82.0], [1.6270283E12, 83.0], [1.62702847E12, 94.0], [1.62702785E12, 407.0], [1.62702819E12, 114.0], [1.62702802E12, 122.0], [1.62702836E12, 66.0], [1.62702853E12, 133.0], [1.6270287E12, 24.0], [1.62702793E12, 745.0], [1.6270281E12, 119.0], [1.62702827E12, 95.0], [1.62702844E12, 64.0], [1.62702861E12, 84.0], [1.62702803E12, 72.0], [1.62702786E12, 1597.0], [1.6270282E12, 95.0], [1.62702837E12, 88.0], [1.62702854E12, 177.0], [1.62702811E12, 67.0], [1.62702794E12, 149.0], [1.62702828E12, 674.0], [1.62702845E12, 70.0], [1.62702862E12, 75.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62702817E12, 19.0], [1.627028E12, 12.0], [1.62702834E12, 20.0], [1.62702851E12, 10.0], [1.62702868E12, 10.0], [1.62702791E12, 89.0], [1.62702808E12, 14.0], [1.62702825E12, 15.0], [1.62702842E12, 20.0], [1.62702859E12, 11.0], [1.62702799E12, 12.0], [1.62702782E12, 13696.0], [1.62702801E12, 12.0], [1.62702784E12, 601.0], [1.62702818E12, 19.0], [1.62702835E12, 19.0], [1.62702852E12, 10.0], [1.62702869E12, 10.0], [1.62702809E12, 15.0], [1.62702792E12, 63.0], [1.62702826E12, 15.0], [1.62702843E12, 21.0], [1.6270286E12, 15.0], [1.62702783E12, 452.0], [1.62702832E12, 19.0], [1.62702849E12, 10.0], [1.62702866E12, 10.0], [1.62702789E12, 327.0], [1.62702806E12, 14.0], [1.62702823E12, 15.0], [1.6270284E12, 21.0], [1.62702857E12, 10.0], [1.62702797E12, 20.0], [1.62702814E12, 14.0], [1.62702831E12, 20.0], [1.62702816E12, 20.0], [1.62702833E12, 20.0], [1.6270285E12, 10.0], [1.62702867E12, 9.0], [1.62702807E12, 14.0], [1.6270279E12, 353.0], [1.62702824E12, 15.0], [1.62702841E12, 20.0], [1.62702858E12, 10.0], [1.62702781E12, 68.0], [1.62702815E12, 20.0], [1.62702798E12, 20.0], [1.62702864E12, 15.0], [1.62702787E12, 281.0], [1.62702804E12, 14.0], [1.62702821E12, 20.0], [1.62702838E12, 20.0], [1.62702855E12, 10.0], [1.62702795E12, 20.0], [1.62702812E12, 14.0], [1.62702829E12, 15.0], [1.62702846E12, 21.0], [1.62702863E12, 15.0], [1.62702848E12, 9.0], [1.62702865E12, 10.0], [1.62702805E12, 13.0], [1.62702788E12, 174.0], [1.62702822E12, 21.0], [1.62702839E12, 20.0], [1.62702856E12, 10.0], [1.62702813E12, 14.0], [1.62702796E12, 19.0], [1.6270283E12, 20.0], [1.62702847E12, 10.0], [1.62702785E12, 296.0], [1.62702819E12, 20.0], [1.62702802E12, 13.0], [1.62702836E12, 19.0], [1.62702853E12, 10.0], [1.6270287E12, 10.0], [1.62702793E12, 15.0], [1.6270281E12, 15.0], [1.62702827E12, 15.0], [1.62702844E12, 21.0], [1.62702861E12, 15.0], [1.62702803E12, 13.0], [1.62702786E12, 243.0], [1.6270282E12, 20.0], [1.62702837E12, 20.0], [1.62702854E12, 10.0], [1.62702811E12, 14.0], [1.62702794E12, 20.0], [1.62702828E12, 15.0], [1.62702845E12, 21.0], [1.62702862E12, 15.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62702817E12, 26.0], [1.627028E12, 27.69999999999999], [1.62702834E12, 23.0], [1.62702851E12, 15.0], [1.62702868E12, 15.0], [1.62702791E12, 1291.4], [1.62702808E12, 34.0], [1.62702825E12, 36.0], [1.62702842E12, 64.0], [1.62702859E12, 34.0], [1.62702799E12, 33.599999999999994], [1.62702782E12, 13696.0], [1.62702801E12, 30.0], [1.62702784E12, 868.4], [1.62702818E12, 24.0], [1.62702835E12, 23.400000000000006], [1.62702852E12, 16.0], [1.62702869E12, 15.0], [1.62702809E12, 35.0], [1.62702792E12, 990.0], [1.62702826E12, 36.0], [1.62702843E12, 33.5], [1.6270286E12, 35.0], [1.62702783E12, 989.6], [1.62702832E12, 24.0], [1.62702849E12, 14.0], [1.62702866E12, 14.0], [1.62702789E12, 1234.6], [1.62702806E12, 36.0], [1.62702823E12, 35.0], [1.6270284E12, 34.0], [1.62702857E12, 16.0], [1.62702797E12, 25.0], [1.62702814E12, 27.0], [1.62702831E12, 26.0], [1.62702816E12, 27.0], [1.62702833E12, 24.0], [1.6270285E12, 15.0], [1.62702867E12, 14.0], [1.62702807E12, 33.0], [1.6270279E12, 2386.7999999999997], [1.62702824E12, 36.0], [1.62702841E12, 35.0], [1.62702858E12, 35.0], [1.62702781E12, 11536.8], [1.62702815E12, 25.0], [1.62702798E12, 24.0], [1.62702864E12, 35.0], [1.62702787E12, 552.0], [1.62702804E12, 41.0], [1.62702821E12, 31.0], [1.62702838E12, 27.0], [1.62702855E12, 14.0], [1.62702795E12, 30.0], [1.62702812E12, 29.0], [1.62702829E12, 31.0], [1.62702846E12, 32.0], [1.62702863E12, 35.0], [1.62702848E12, 14.0], [1.62702865E12, 30.0], [1.62702805E12, 53.799999999999955], [1.62702788E12, 259.6], [1.62702822E12, 33.0], [1.62702839E12, 31.0], [1.62702856E12, 15.0], [1.62702813E12, 28.0], [1.62702796E12, 25.0], [1.6270283E12, 27.0], [1.62702847E12, 28.0], [1.62702785E12, 394.1], [1.62702819E12, 25.0], [1.62702802E12, 47.0], [1.62702836E12, 24.0], [1.62702853E12, 15.0], [1.6270287E12, 15.8], [1.62702793E12, 72.0], [1.6270281E12, 35.0], [1.62702827E12, 36.0], [1.62702844E12, 32.0], [1.62702861E12, 36.0], [1.62702803E12, 43.0], [1.62702786E12, 1069.6], [1.6270282E12, 27.0], [1.62702837E12, 25.0], [1.62702854E12, 15.0], [1.62702811E12, 31.0], [1.62702794E12, 48.0], [1.62702828E12, 55.0], [1.62702845E12, 33.0], [1.62702862E12, 36.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62702817E12, 36.559999999999945], [1.627028E12, 57.76999999999998], [1.62702834E12, 28.0], [1.62702851E12, 31.920000000000016], [1.62702868E12, 23.139999999999986], [1.62702791E12, 2533.04], [1.62702808E12, 43.0], [1.62702825E12, 47.01999999999998], [1.62702842E12, 1923.3000000000181], [1.62702859E12, 48.09999999999991], [1.62702799E12, 71.23999999999978], [1.62702782E12, 13696.0], [1.62702801E12, 53.020000000000095], [1.62702784E12, 974.0], [1.62702818E12, 40.99999999999977], [1.62702835E12, 34.440000000000055], [1.62702852E12, 24.0], [1.62702869E12, 25.55000000000001], [1.62702809E12, 47.0], [1.62702792E12, 1057.25], [1.62702826E12, 48.11999999999989], [1.62702843E12, 48.0], [1.6270286E12, 48.0], [1.62702783E12, 1126.0], [1.62702832E12, 37.0], [1.62702849E12, 24.519999999999982], [1.62702866E12, 27.0], [1.62702789E12, 1318.6], [1.62702806E12, 54.0], [1.62702823E12, 48.0], [1.6270284E12, 50.0], [1.62702857E12, 30.3599999999999], [1.62702797E12, 51.0], [1.62702814E12, 38.08000000000004], [1.62702831E12, 35.0], [1.62702816E12, 51.0], [1.62702833E12, 35.52999999999997], [1.6270285E12, 22.0], [1.62702867E12, 22.539999999999964], [1.62702807E12, 44.0], [1.6270279E12, 2887.0799999999995], [1.62702824E12, 52.99000000000001], [1.62702841E12, 50.0], [1.62702858E12, 207.15999999999985], [1.62702781E12, 11754.0], [1.62702815E12, 32.0], [1.62702798E12, 44.0], [1.62702864E12, 48.0], [1.62702787E12, 604.0], [1.62702804E12, 60.289999999999964], [1.62702821E12, 45.34999999999991], [1.62702838E12, 42.0], [1.62702855E12, 39.16999999999962], [1.62702795E12, 50.11999999999989], [1.62702812E12, 35.08000000000004], [1.62702829E12, 39.0], [1.62702846E12, 45.3599999999999], [1.62702863E12, 46.0], [1.62702848E12, 29.090000000000032], [1.62702865E12, 38.0], [1.62702805E12, 139.48000000000002], [1.62702788E12, 262.0], [1.62702822E12, 47.24000000000001], [1.62702839E12, 42.0], [1.62702856E12, 25.860000000000014], [1.62702813E12, 36.11999999999989], [1.62702796E12, 35.00999999999999], [1.6270283E12, 39.10000000000002], [1.62702847E12, 48.57999999999993], [1.62702785E12, 407.0], [1.62702819E12, 39.319999999999936], [1.62702802E12, 80.86000000000001], [1.62702836E12, 35.809999999999945], [1.62702853E12, 26.200000000000045], [1.6270287E12, 24.0], [1.62702793E12, 704.52], [1.6270281E12, 47.3599999999999], [1.62702827E12, 64.00999999999999], [1.62702844E12, 44.02999999999997], [1.62702861E12, 48.0], [1.62702803E12, 60.0], [1.62702786E12, 1412.7599999999993], [1.6270282E12, 50.0], [1.62702837E12, 47.299999999999955], [1.62702854E12, 37.74000000000035], [1.62702811E12, 40.62999999999988], [1.62702794E12, 103.11000000000001], [1.62702828E12, 228.15999999999985], [1.62702845E12, 48.0], [1.62702862E12, 48.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62702817E12, 27.0], [1.627028E12, 33.849999999999966], [1.62702834E12, 25.599999999999994], [1.62702851E12, 16.0], [1.62702868E12, 15.0], [1.62702791E12, 1367.85], [1.62702808E12, 37.0], [1.62702825E12, 39.0], [1.62702842E12, 78.0], [1.62702859E12, 37.0], [1.62702799E12, 45.0], [1.62702782E12, 13696.0], [1.62702801E12, 37.0], [1.62702784E12, 906.2000000000002], [1.62702818E12, 25.0], [1.62702835E12, 25.0], [1.62702852E12, 19.39999999999999], [1.62702869E12, 16.0], [1.62702809E12, 39.0], [1.62702792E12, 1017.0], [1.62702826E12, 39.0], [1.62702843E12, 37.0], [1.6270286E12, 39.0], [1.62702783E12, 1001.5999999999999], [1.62702832E12, 26.0], [1.62702849E12, 15.0], [1.62702866E12, 16.0], [1.62702789E12, 1269.0], [1.62702806E12, 43.0], [1.62702823E12, 38.0], [1.6270284E12, 37.299999999999955], [1.62702857E12, 19.0], [1.62702797E12, 34.0], [1.62702814E12, 28.0], [1.62702831E12, 27.0], [1.62702816E12, 29.699999999999996], [1.62702833E12, 25.0], [1.6270285E12, 15.0], [1.62702867E12, 14.0], [1.62702807E12, 35.0], [1.6270279E12, 2484.2], [1.62702824E12, 39.0], [1.62702841E12, 38.0], [1.62702858E12, 40.0], [1.62702781E12, 11677.949999999999], [1.62702815E12, 26.0], [1.62702798E12, 30.89999999999999], [1.62702864E12, 38.0], [1.62702787E12, 597.0], [1.62702804E12, 49.0], [1.62702821E12, 32.0], [1.62702838E12, 30.0], [1.62702855E12, 15.0], [1.62702795E12, 35.0], [1.62702812E12, 30.0], [1.62702829E12, 33.0], [1.62702846E12, 35.0], [1.62702863E12, 38.0], [1.62702848E12, 15.0], [1.62702865E12, 32.0], [1.62702805E12, 67.0], [1.62702788E12, 261.65], [1.62702822E12, 36.0], [1.62702839E12, 33.0], [1.62702856E12, 16.0], [1.62702813E12, 29.0], [1.62702796E12, 27.0], [1.6270283E12, 30.0], [1.62702847E12, 31.0], [1.62702785E12, 407.0], [1.62702819E12, 27.0], [1.62702802E12, 58.0], [1.62702836E12, 25.0], [1.62702853E12, 16.0], [1.6270287E12, 19.79999999999999], [1.62702793E12, 652.1999999999998], [1.6270281E12, 38.0], [1.62702827E12, 42.0], [1.62702844E12, 35.0], [1.62702861E12, 39.0], [1.62702803E12, 50.0], [1.62702786E12, 1167.6], [1.6270282E12, 30.0], [1.62702837E12, 27.0], [1.62702854E12, 15.099999999999966], [1.62702811E12, 33.0], [1.62702794E12, 56.0], [1.62702828E12, 65.0], [1.62702845E12, 36.0], [1.62702862E12, 39.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.6270287E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 11.0, "minX": 1.0, "maxY": 11296.0, "series": [{"data": [[2.0, 11296.0], [3.0, 21.0], [4.0, 21.0], [5.0, 24.0], [6.0, 18.0], [7.0, 21.0], [8.0, 22.0], [9.0, 20.5], [10.0, 24.0], [11.0, 15.0], [12.0, 22.0], [13.0, 22.0], [14.0, 233.0], [15.0, 19.5], [16.0, 21.5], [17.0, 14.0], [18.0, 21.5], [19.0, 22.0], [21.0, 21.0], [22.0, 21.0], [23.0, 20.0], [24.0, 22.0], [25.0, 22.0], [26.0, 21.0], [27.0, 19.5], [28.0, 18.0], [29.0, 22.0], [30.0, 13.0], [31.0, 21.0], [33.0, 18.5], [32.0, 15.0], [34.0, 22.0], [35.0, 14.0], [36.0, 21.0], [37.0, 14.0], [39.0, 21.0], [38.0, 19.5], [40.0, 22.5], [41.0, 22.0], [42.0, 1236.0], [43.0, 22.0], [44.0, 21.0], [45.0, 12.0], [46.0, 22.0], [47.0, 11.0], [48.0, 21.0], [49.0, 21.0], [50.0, 21.0], [51.0, 20.0], [53.0, 21.0], [52.0, 19.0], [55.0, 21.0], [54.0, 22.0], [57.0, 21.0], [56.0, 19.0], [59.0, 22.0], [58.0, 21.0], [61.0, 22.0], [60.0, 16.0], [63.0, 22.0], [62.0, 36.5], [65.0, 21.0], [66.0, 20.0], [67.0, 22.0], [64.0, 14.0], [70.0, 22.0], [69.0, 25.0], [68.0, 19.0], [71.0, 12.0], [72.0, 38.0], [75.0, 22.0], [74.0, 22.0], [73.0, 14.0], [76.0, 21.0], [78.0, 13.0], [79.0, 22.0], [83.0, 22.0], [80.0, 22.0], [82.0, 22.0], [81.0, 12.0], [86.0, 23.0], [85.0, 23.0], [87.0, 14.0], [84.0, 23.0], [89.0, 482.0], [88.0, 22.0], [91.0, 22.0], [90.0, 11.0], [94.0, 29.0], [95.0, 22.0], [92.0, 20.0], [93.0, 20.0], [99.0, 159.0], [98.0, 23.0], [97.0, 15.0], [96.0, 21.0], [102.0, 21.0], [103.0, 24.0], [101.0, 15.0], [100.0, 22.0], [105.0, 23.0], [107.0, 21.0], [106.0, 22.0], [108.0, 28.0], [111.0, 24.0], [109.0, 21.0], [110.0, 24.0], [114.0, 24.0], [112.0, 25.0], [115.0, 25.0], [113.0, 22.0], [117.0, 24.0], [118.0, 24.0], [119.0, 14.0], [116.0, 24.0], [120.0, 23.0], [122.0, 16.0], [123.0, 25.0], [121.0, 24.0], [125.0, 29.0], [124.0, 28.0], [127.0, 23.0], [126.0, 18.0], [128.0, 26.0], [131.0, 16.0], [132.0, 25.0], [135.0, 25.0], [133.0, 25.0], [129.0, 24.0], [130.0, 25.0], [134.0, 25.0], [136.0, 24.0], [143.0, 27.0], [141.0, 26.0], [142.0, 26.0], [137.0, 24.0], [140.0, 26.0], [139.0, 15.0], [138.0, 25.0], [151.0, 27.0], [148.0, 28.0], [144.0, 23.0], [149.0, 27.0], [145.0, 27.0], [150.0, 27.0], [147.0, 27.0], [152.0, 27.0], [158.0, 29.0], [153.0, 27.0], [157.0, 29.0], [154.0, 15.0], [1.0, 22.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 158.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 11.0, "minX": 1.0, "maxY": 11195.5, "series": [{"data": [[2.0, 11195.5], [3.0, 19.0], [4.0, 19.0], [5.0, 22.0], [6.0, 17.0], [7.0, 19.0], [8.0, 19.0], [9.0, 19.5], [10.0, 22.0], [11.0, 15.0], [12.0, 19.5], [13.0, 19.0], [14.0, 222.5], [15.0, 18.0], [16.0, 19.0], [17.0, 14.0], [18.0, 19.0], [19.0, 20.0], [21.0, 19.0], [22.0, 19.0], [23.0, 18.0], [24.0, 20.0], [25.0, 20.0], [26.0, 19.0], [27.0, 18.0], [28.0, 17.0], [29.0, 19.0], [30.0, 13.0], [31.0, 19.0], [33.0, 17.0], [32.0, 14.0], [34.0, 19.0], [35.0, 14.0], [36.0, 19.0], [37.0, 14.0], [39.0, 19.0], [38.0, 17.0], [40.0, 20.0], [41.0, 19.0], [42.0, 1203.0], [43.0, 19.0], [44.0, 19.0], [45.0, 12.0], [46.0, 19.0], [47.0, 11.0], [48.0, 19.0], [49.0, 18.0], [50.0, 19.0], [51.0, 18.0], [53.0, 19.0], [52.0, 17.0], [55.0, 19.0], [54.0, 19.0], [57.0, 19.0], [56.0, 17.0], [59.0, 19.0], [58.0, 19.0], [61.0, 20.0], [60.0, 15.0], [63.0, 20.0], [62.0, 34.0], [65.0, 19.0], [66.0, 18.0], [67.0, 20.0], [64.0, 14.0], [70.0, 20.0], [69.0, 22.0], [68.0, 17.0], [71.0, 12.0], [72.0, 37.5], [75.0, 19.0], [74.0, 20.0], [73.0, 14.0], [76.0, 18.0], [78.0, 12.5], [79.0, 19.0], [83.0, 19.0], [80.0, 20.0], [82.0, 20.0], [81.0, 12.0], [86.0, 20.0], [85.0, 20.0], [87.0, 13.0], [84.0, 20.0], [89.0, 481.0], [88.0, 20.0], [91.0, 20.0], [90.0, 11.0], [94.0, 26.0], [95.0, 19.0], [92.0, 18.5], [93.0, 18.0], [99.0, 158.5], [98.0, 20.0], [97.0, 15.0], [96.0, 19.0], [102.0, 19.0], [103.0, 22.0], [101.0, 14.0], [100.0, 20.0], [105.0, 20.0], [107.0, 19.0], [106.0, 20.0], [108.0, 25.0], [111.0, 22.0], [109.0, 19.0], [110.0, 22.0], [114.0, 22.0], [112.0, 23.0], [115.0, 23.0], [113.0, 20.0], [117.0, 22.0], [118.0, 22.0], [119.0, 13.0], [116.0, 21.5], [120.0, 20.0], [122.0, 16.0], [123.0, 23.0], [121.0, 22.0], [125.0, 27.0], [124.0, 26.5], [127.0, 21.0], [126.0, 17.0], [128.0, 23.0], [131.0, 15.0], [132.0, 23.0], [135.0, 22.0], [133.0, 23.0], [129.0, 22.0], [130.0, 23.0], [134.0, 23.0], [136.0, 22.0], [143.0, 24.0], [141.0, 24.0], [142.0, 23.0], [137.0, 22.0], [140.0, 24.0], [139.0, 15.0], [138.0, 23.0], [151.0, 24.0], [148.0, 25.0], [144.0, 21.5], [149.0, 24.0], [145.0, 24.0], [150.0, 24.0], [147.0, 24.0], [152.0, 24.0], [158.0, 26.0], [153.0, 24.0], [157.0, 27.0], [154.0, 14.5], [1.0, 20.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 158.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.1, "minX": 1.6270278E12, "maxY": 150.0, "series": [{"data": [[1.62702817E12, 27.1], [1.627028E12, 52.2], [1.62702834E12, 7.3], [1.62702851E12, 24.4], [1.62702868E12, 49.4], [1.62702791E12, 30.4], [1.62702808E12, 149.5], [1.62702825E12, 149.7], [1.62702842E12, 76.2], [1.62702859E12, 149.0], [1.62702799E12, 27.4], [1.62702801E12, 76.7], [1.62702818E12, 52.0], [1.62702835E12, 27.5], [1.62702852E12, 7.0], [1.62702869E12, 24.2], [1.62702809E12, 149.9], [1.62702792E12, 58.1], [1.62702826E12, 149.7], [1.62702843E12, 149.3], [1.6270286E12, 149.9], [1.62702783E12, 17.1], [1.62702832E12, 49.7], [1.62702849E12, 74.5], [1.62702866E12, 99.0], [1.62702789E12, 22.3], [1.62702806E12, 149.8], [1.62702823E12, 149.8], [1.6270284E12, 147.5], [1.62702857E12, 126.4], [1.62702797E12, 24.8], [1.6270278E12, 1.1], [1.62702814E12, 49.7], [1.62702831E12, 74.4], [1.62702816E12, 6.5], [1.62702833E12, 24.8], [1.6270285E12, 49.6], [1.62702867E12, 74.4], [1.62702807E12, 149.9], [1.6270279E12, 45.3], [1.62702824E12, 149.9], [1.62702841E12, 149.5], [1.62702858E12, 131.9], [1.62702781E12, 2.2], [1.62702815E12, 24.7], [1.62702798E12, 7.2], [1.62702864E12, 146.3], [1.62702787E12, 5.9], [1.62702804E12, 146.8], [1.62702821E12, 126.5], [1.62702838E12, 101.1], [1.62702855E12, 76.9], [1.62702795E12, 74.3], [1.62702812E12, 99.1], [1.62702829E12, 123.9], [1.62702846E12, 146.3], [1.62702863E12, 149.9], [1.62702848E12, 99.0], [1.62702865E12, 124.0], [1.62702805E12, 134.9], [1.62702788E12, 2.6], [1.62702822E12, 147.5], [1.62702839E12, 126.5], [1.62702856E12, 101.4], [1.62702813E12, 74.5], [1.62702796E12, 49.7], [1.6270283E12, 98.8], [1.62702847E12, 123.9], [1.62702785E12, 8.1], [1.62702819E12, 76.8], [1.62702802E12, 101.3], [1.62702836E12, 51.8], [1.62702853E12, 26.9], [1.6270287E12, 3.1], [1.62702793E12, 106.4], [1.6270281E12, 146.1], [1.62702827E12, 149.5], [1.62702844E12, 149.8], [1.62702861E12, 149.9], [1.62702803E12, 125.3], [1.62702786E12, 8.6], [1.6270282E12, 101.8], [1.62702837E12, 76.9], [1.62702854E12, 51.7], [1.62702811E12, 123.5], [1.62702794E12, 98.6], [1.62702828E12, 136.9], [1.62702845E12, 150.0], [1.62702862E12, 150.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.6270287E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62702781E12, "maxY": 150.1, "series": [{"data": [[1.62702817E12, 27.1], [1.627028E12, 52.2], [1.62702834E12, 7.3], [1.62702851E12, 24.3], [1.62702868E12, 49.2], [1.62702791E12, 38.0], [1.62702808E12, 149.6], [1.62702825E12, 149.7], [1.62702842E12, 76.2], [1.62702859E12, 148.9], [1.62702799E12, 27.3], [1.62702782E12, 0.1], [1.62702801E12, 76.5], [1.62702784E12, 8.5], [1.62702818E12, 51.9], [1.62702835E12, 27.5], [1.62702852E12, 7.1], [1.62702869E12, 24.4], [1.62702809E12, 149.7], [1.62702792E12, 49.4], [1.62702826E12, 149.3], [1.62702843E12, 149.4], [1.6270286E12, 149.9], [1.62702783E12, 8.6], [1.62702832E12, 49.7], [1.62702849E12, 74.7], [1.62702866E12, 99.0], [1.62702789E12, 22.3], [1.62702806E12, 149.6], [1.62702823E12, 149.7], [1.6270284E12, 147.3], [1.62702857E12, 126.3], [1.62702797E12, 24.8], [1.62702814E12, 49.5], [1.62702831E12, 74.5], [1.62702816E12, 6.5], [1.62702833E12, 24.8], [1.6270285E12, 49.6], [1.62702867E12, 74.5], [1.62702807E12, 149.9], [1.6270279E12, 37.7], [1.62702824E12, 150.0], [1.62702841E12, 149.7], [1.62702858E12, 132.0], [1.62702781E12, 3.2], [1.62702815E12, 24.9], [1.62702798E12, 7.3], [1.62702864E12, 146.3], [1.62702787E12, 5.9], [1.62702804E12, 147.0], [1.62702821E12, 126.4], [1.62702838E12, 100.8], [1.62702855E12, 76.8], [1.62702795E12, 74.3], [1.62702812E12, 99.1], [1.62702829E12, 124.0], [1.62702846E12, 146.3], [1.62702863E12, 149.9], [1.62702848E12, 99.0], [1.62702865E12, 124.3], [1.62702805E12, 135.1], [1.62702788E12, 2.6], [1.62702822E12, 147.5], [1.62702839E12, 126.5], [1.62702856E12, 101.3], [1.62702813E12, 74.7], [1.62702796E12, 49.8], [1.6270283E12, 98.9], [1.62702847E12, 124.1], [1.62702785E12, 1.2], [1.62702819E12, 76.7], [1.62702802E12, 101.3], [1.62702836E12, 51.8], [1.62702853E12, 26.9], [1.6270287E12, 3.1], [1.62702793E12, 114.7], [1.6270281E12, 146.3], [1.62702827E12, 149.8], [1.62702844E12, 149.6], [1.62702861E12, 149.8], [1.62702803E12, 125.0], [1.62702786E12, 15.5], [1.6270282E12, 101.7], [1.62702837E12, 76.9], [1.62702854E12, 51.7], [1.62702811E12, 123.6], [1.62702794E12, 98.8], [1.62702828E12, 137.0], [1.62702845E12, 150.1], [1.62702862E12, 150.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.6270287E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62702781E12, "maxY": 150.1, "series": [{"data": [[1.62702817E12, 27.1], [1.627028E12, 52.2], [1.62702834E12, 7.3], [1.62702851E12, 24.3], [1.62702868E12, 49.2], [1.62702791E12, 38.0], [1.62702808E12, 149.6], [1.62702825E12, 149.7], [1.62702842E12, 76.2], [1.62702859E12, 148.9], [1.62702799E12, 27.3], [1.62702782E12, 0.1], [1.62702801E12, 76.5], [1.62702784E12, 8.5], [1.62702818E12, 51.9], [1.62702835E12, 27.5], [1.62702852E12, 7.1], [1.62702869E12, 24.4], [1.62702809E12, 149.7], [1.62702792E12, 49.4], [1.62702826E12, 149.3], [1.62702843E12, 149.4], [1.6270286E12, 149.9], [1.62702783E12, 8.6], [1.62702832E12, 49.7], [1.62702849E12, 74.7], [1.62702866E12, 99.0], [1.62702789E12, 22.3], [1.62702806E12, 149.6], [1.62702823E12, 149.7], [1.6270284E12, 147.3], [1.62702857E12, 126.3], [1.62702797E12, 24.8], [1.62702814E12, 49.5], [1.62702831E12, 74.5], [1.62702816E12, 6.5], [1.62702833E12, 24.8], [1.6270285E12, 49.6], [1.62702867E12, 74.5], [1.62702807E12, 149.9], [1.6270279E12, 37.7], [1.62702824E12, 150.0], [1.62702841E12, 149.7], [1.62702858E12, 132.0], [1.62702781E12, 3.2], [1.62702815E12, 24.9], [1.62702798E12, 7.3], [1.62702864E12, 146.3], [1.62702787E12, 5.9], [1.62702804E12, 147.0], [1.62702821E12, 126.4], [1.62702838E12, 100.8], [1.62702855E12, 76.8], [1.62702795E12, 74.3], [1.62702812E12, 99.1], [1.62702829E12, 124.0], [1.62702846E12, 146.3], [1.62702863E12, 149.9], [1.62702848E12, 99.0], [1.62702865E12, 124.3], [1.62702805E12, 135.1], [1.62702788E12, 2.6], [1.62702822E12, 147.5], [1.62702839E12, 126.5], [1.62702856E12, 101.3], [1.62702813E12, 74.7], [1.62702796E12, 49.8], [1.6270283E12, 98.9], [1.62702847E12, 124.1], [1.62702785E12, 1.2], [1.62702819E12, 76.7], [1.62702802E12, 101.3], [1.62702836E12, 51.8], [1.62702853E12, 26.9], [1.6270287E12, 3.1], [1.62702793E12, 114.7], [1.6270281E12, 146.3], [1.62702827E12, 149.8], [1.62702844E12, 149.6], [1.62702861E12, 149.8], [1.62702803E12, 125.0], [1.62702786E12, 15.5], [1.6270282E12, 101.7], [1.62702837E12, 76.9], [1.62702854E12, 51.7], [1.62702811E12, 123.6], [1.62702794E12, 98.8], [1.62702828E12, 137.0], [1.62702845E12, 150.1], [1.62702862E12, 150.0]], "isOverall": false, "label": "Sunstar Home Japan-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.6270287E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62702781E12, "maxY": 150.1, "series": [{"data": [[1.62702817E12, 27.1], [1.627028E12, 52.2], [1.62702834E12, 7.3], [1.62702851E12, 24.3], [1.62702868E12, 49.2], [1.62702791E12, 38.0], [1.62702808E12, 149.6], [1.62702825E12, 149.7], [1.62702842E12, 76.2], [1.62702859E12, 148.9], [1.62702799E12, 27.3], [1.62702782E12, 0.1], [1.62702801E12, 76.5], [1.62702784E12, 8.5], [1.62702818E12, 51.9], [1.62702835E12, 27.5], [1.62702852E12, 7.1], [1.62702869E12, 24.4], [1.62702809E12, 149.7], [1.62702792E12, 49.4], [1.62702826E12, 149.3], [1.62702843E12, 149.4], [1.6270286E12, 149.9], [1.62702783E12, 8.6], [1.62702832E12, 49.7], [1.62702849E12, 74.7], [1.62702866E12, 99.0], [1.62702789E12, 22.3], [1.62702806E12, 149.6], [1.62702823E12, 149.7], [1.6270284E12, 147.3], [1.62702857E12, 126.3], [1.62702797E12, 24.8], [1.62702814E12, 49.5], [1.62702831E12, 74.5], [1.62702816E12, 6.5], [1.62702833E12, 24.8], [1.6270285E12, 49.6], [1.62702867E12, 74.5], [1.62702807E12, 149.9], [1.6270279E12, 37.7], [1.62702824E12, 150.0], [1.62702841E12, 149.7], [1.62702858E12, 132.0], [1.62702781E12, 3.2], [1.62702815E12, 24.9], [1.62702798E12, 7.3], [1.62702864E12, 146.3], [1.62702787E12, 5.9], [1.62702804E12, 147.0], [1.62702821E12, 126.4], [1.62702838E12, 100.8], [1.62702855E12, 76.8], [1.62702795E12, 74.3], [1.62702812E12, 99.1], [1.62702829E12, 124.0], [1.62702846E12, 146.3], [1.62702863E12, 149.9], [1.62702848E12, 99.0], [1.62702865E12, 124.3], [1.62702805E12, 135.1], [1.62702788E12, 2.6], [1.62702822E12, 147.5], [1.62702839E12, 126.5], [1.62702856E12, 101.3], [1.62702813E12, 74.7], [1.62702796E12, 49.8], [1.6270283E12, 98.9], [1.62702847E12, 124.1], [1.62702785E12, 1.2], [1.62702819E12, 76.7], [1.62702802E12, 101.3], [1.62702836E12, 51.8], [1.62702853E12, 26.9], [1.6270287E12, 3.1], [1.62702793E12, 114.7], [1.6270281E12, 146.3], [1.62702827E12, 149.8], [1.62702844E12, 149.6], [1.62702861E12, 149.8], [1.62702803E12, 125.0], [1.62702786E12, 15.5], [1.6270282E12, 101.7], [1.62702837E12, 76.9], [1.62702854E12, 51.7], [1.62702811E12, 123.6], [1.62702794E12, 98.8], [1.62702828E12, 137.0], [1.62702845E12, 150.1], [1.62702862E12, 150.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.6270287E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

