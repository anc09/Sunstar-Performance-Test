/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 14.0, "minX": 0.0, "maxY": 17935.0, "series": [{"data": [[0.0, 14.0], [0.1, 14.0], [0.2, 15.0], [0.3, 15.0], [0.4, 16.0], [0.5, 16.0], [0.6, 16.0], [0.7, 16.0], [0.8, 16.0], [0.9, 17.0], [1.0, 17.0], [1.1, 17.0], [1.2, 17.0], [1.3, 17.0], [1.4, 17.0], [1.5, 17.0], [1.6, 18.0], [1.7, 18.0], [1.8, 18.0], [1.9, 18.0], [2.0, 18.0], [2.1, 18.0], [2.2, 18.0], [2.3, 18.0], [2.4, 19.0], [2.5, 19.0], [2.6, 19.0], [2.7, 19.0], [2.8, 19.0], [2.9, 19.0], [3.0, 19.0], [3.1, 19.0], [3.2, 20.0], [3.3, 20.0], [3.4, 20.0], [3.5, 20.0], [3.6, 20.0], [3.7, 20.0], [3.8, 20.0], [3.9, 20.0], [4.0, 21.0], [4.1, 21.0], [4.2, 21.0], [4.3, 21.0], [4.4, 21.0], [4.5, 21.0], [4.6, 21.0], [4.7, 21.0], [4.8, 21.0], [4.9, 21.0], [5.0, 21.0], [5.1, 22.0], [5.2, 22.0], [5.3, 22.0], [5.4, 22.0], [5.5, 22.0], [5.6, 22.0], [5.7, 22.0], [5.8, 22.0], [5.9, 22.0], [6.0, 22.0], [6.1, 22.0], [6.2, 22.0], [6.3, 22.0], [6.4, 22.0], [6.5, 23.0], [6.6, 23.0], [6.7, 23.0], [6.8, 23.0], [6.9, 23.0], [7.0, 23.0], [7.1, 23.0], [7.2, 23.0], [7.3, 23.0], [7.4, 23.0], [7.5, 23.0], [7.6, 23.0], [7.7, 23.0], [7.8, 23.0], [7.9, 23.0], [8.0, 23.0], [8.1, 23.0], [8.2, 23.0], [8.3, 23.0], [8.4, 24.0], [8.5, 24.0], [8.6, 24.0], [8.7, 24.0], [8.8, 24.0], [8.9, 24.0], [9.0, 24.0], [9.1, 24.0], [9.2, 24.0], [9.3, 24.0], [9.4, 24.0], [9.5, 24.0], [9.6, 24.0], [9.7, 24.0], [9.8, 24.0], [9.9, 24.0], [10.0, 24.0], [10.1, 24.0], [10.2, 24.0], [10.3, 24.0], [10.4, 24.0], [10.5, 25.0], [10.6, 25.0], [10.7, 25.0], [10.8, 25.0], [10.9, 25.0], [11.0, 25.0], [11.1, 25.0], [11.2, 25.0], [11.3, 25.0], [11.4, 25.0], [11.5, 25.0], [11.6, 25.0], [11.7, 25.0], [11.8, 25.0], [11.9, 25.0], [12.0, 25.0], [12.1, 25.0], [12.2, 25.0], [12.3, 25.0], [12.4, 25.0], [12.5, 26.0], [12.6, 26.0], [12.7, 26.0], [12.8, 26.0], [12.9, 26.0], [13.0, 26.0], [13.1, 26.0], [13.2, 26.0], [13.3, 26.0], [13.4, 26.0], [13.5, 26.0], [13.6, 26.0], [13.7, 26.0], [13.8, 26.0], [13.9, 26.0], [14.0, 26.0], [14.1, 26.0], [14.2, 26.0], [14.3, 26.0], [14.4, 27.0], [14.5, 27.0], [14.6, 27.0], [14.7, 27.0], [14.8, 27.0], [14.9, 27.0], [15.0, 27.0], [15.1, 27.0], [15.2, 27.0], [15.3, 27.0], [15.4, 27.0], [15.5, 27.0], [15.6, 27.0], [15.7, 27.0], [15.8, 27.0], [15.9, 27.0], [16.0, 27.0], [16.1, 27.0], [16.2, 28.0], [16.3, 28.0], [16.4, 28.0], [16.5, 28.0], [16.6, 28.0], [16.7, 28.0], [16.8, 28.0], [16.9, 28.0], [17.0, 28.0], [17.1, 28.0], [17.2, 28.0], [17.3, 28.0], [17.4, 28.0], [17.5, 28.0], [17.6, 28.0], [17.7, 28.0], [17.8, 28.0], [17.9, 28.0], [18.0, 28.0], [18.1, 28.0], [18.2, 29.0], [18.3, 29.0], [18.4, 29.0], [18.5, 29.0], [18.6, 29.0], [18.7, 29.0], [18.8, 29.0], [18.9, 29.0], [19.0, 29.0], [19.1, 29.0], [19.2, 29.0], [19.3, 29.0], [19.4, 29.0], [19.5, 29.0], [19.6, 29.0], [19.7, 29.0], [19.8, 29.0], [19.9, 29.0], [20.0, 29.0], [20.1, 30.0], [20.2, 30.0], [20.3, 30.0], [20.4, 30.0], [20.5, 30.0], [20.6, 30.0], [20.7, 30.0], [20.8, 30.0], [20.9, 30.0], [21.0, 30.0], [21.1, 30.0], [21.2, 30.0], [21.3, 30.0], [21.4, 30.0], [21.5, 30.0], [21.6, 31.0], [21.7, 31.0], [21.8, 31.0], [21.9, 31.0], [22.0, 31.0], [22.1, 31.0], [22.2, 31.0], [22.3, 31.0], [22.4, 31.0], [22.5, 31.0], [22.6, 31.0], [22.7, 31.0], [22.8, 31.0], [22.9, 32.0], [23.0, 32.0], [23.1, 32.0], [23.2, 32.0], [23.3, 32.0], [23.4, 32.0], [23.5, 32.0], [23.6, 32.0], [23.7, 32.0], [23.8, 32.0], [23.9, 33.0], [24.0, 33.0], [24.1, 33.0], [24.2, 33.0], [24.3, 33.0], [24.4, 33.0], [24.5, 33.0], [24.6, 33.0], [24.7, 33.0], [24.8, 34.0], [24.9, 34.0], [25.0, 34.0], [25.1, 34.0], [25.2, 34.0], [25.3, 34.0], [25.4, 34.0], [25.5, 35.0], [25.6, 35.0], [25.7, 35.0], [25.8, 35.0], [25.9, 35.0], [26.0, 35.0], [26.1, 36.0], [26.2, 36.0], [26.3, 36.0], [26.4, 36.0], [26.5, 36.0], [26.6, 37.0], [26.7, 37.0], [26.8, 37.0], [26.9, 38.0], [27.0, 38.0], [27.1, 38.0], [27.2, 39.0], [27.3, 39.0], [27.4, 40.0], [27.5, 40.0], [27.6, 41.0], [27.7, 41.0], [27.8, 42.0], [27.9, 43.0], [28.0, 44.0], [28.1, 44.0], [28.2, 45.0], [28.3, 45.0], [28.4, 45.0], [28.5, 45.0], [28.6, 45.0], [28.7, 46.0], [28.8, 46.0], [28.9, 46.0], [29.0, 46.0], [29.1, 46.0], [29.2, 46.0], [29.3, 46.0], [29.4, 46.0], [29.5, 46.0], [29.6, 46.0], [29.7, 46.0], [29.8, 46.0], [29.9, 47.0], [30.0, 47.0], [30.1, 47.0], [30.2, 47.0], [30.3, 47.0], [30.4, 47.0], [30.5, 47.0], [30.6, 47.0], [30.7, 47.0], [30.8, 47.0], [30.9, 47.0], [31.0, 47.0], [31.1, 47.0], [31.2, 47.0], [31.3, 47.0], [31.4, 47.0], [31.5, 48.0], [31.6, 48.0], [31.7, 48.0], [31.8, 48.0], [31.9, 48.0], [32.0, 48.0], [32.1, 48.0], [32.2, 48.0], [32.3, 48.0], [32.4, 48.0], [32.5, 48.0], [32.6, 48.0], [32.7, 48.0], [32.8, 48.0], [32.9, 48.0], [33.0, 48.0], [33.1, 48.0], [33.2, 48.0], [33.3, 48.0], [33.4, 48.0], [33.5, 48.0], [33.6, 48.0], [33.7, 49.0], [33.8, 49.0], [33.9, 49.0], [34.0, 49.0], [34.1, 49.0], [34.2, 49.0], [34.3, 49.0], [34.4, 49.0], [34.5, 49.0], [34.6, 49.0], [34.7, 49.0], [34.8, 49.0], [34.9, 49.0], [35.0, 49.0], [35.1, 49.0], [35.2, 49.0], [35.3, 49.0], [35.4, 49.0], [35.5, 49.0], [35.6, 49.0], [35.7, 49.0], [35.8, 49.0], [35.9, 49.0], [36.0, 49.0], [36.1, 49.0], [36.2, 49.0], [36.3, 49.0], [36.4, 49.0], [36.5, 49.0], [36.6, 49.0], [36.7, 49.0], [36.8, 49.0], [36.9, 49.0], [37.0, 50.0], [37.1, 50.0], [37.2, 50.0], [37.3, 50.0], [37.4, 50.0], [37.5, 50.0], [37.6, 50.0], [37.7, 50.0], [37.8, 50.0], [37.9, 50.0], [38.0, 50.0], [38.1, 50.0], [38.2, 50.0], [38.3, 50.0], [38.4, 50.0], [38.5, 50.0], [38.6, 50.0], [38.7, 50.0], [38.8, 50.0], [38.9, 50.0], [39.0, 50.0], [39.1, 50.0], [39.2, 50.0], [39.3, 50.0], [39.4, 50.0], [39.5, 50.0], [39.6, 50.0], [39.7, 50.0], [39.8, 50.0], [39.9, 50.0], [40.0, 50.0], [40.1, 50.0], [40.2, 50.0], [40.3, 50.0], [40.4, 50.0], [40.5, 50.0], [40.6, 50.0], [40.7, 51.0], [40.8, 51.0], [40.9, 51.0], [41.0, 51.0], [41.1, 51.0], [41.2, 51.0], [41.3, 51.0], [41.4, 51.0], [41.5, 51.0], [41.6, 51.0], [41.7, 51.0], [41.8, 51.0], [41.9, 51.0], [42.0, 51.0], [42.1, 51.0], [42.2, 51.0], [42.3, 51.0], [42.4, 51.0], [42.5, 51.0], [42.6, 51.0], [42.7, 51.0], [42.8, 51.0], [42.9, 51.0], [43.0, 51.0], [43.1, 51.0], [43.2, 51.0], [43.3, 51.0], [43.4, 51.0], [43.5, 51.0], [43.6, 51.0], [43.7, 51.0], [43.8, 51.0], [43.9, 51.0], [44.0, 51.0], [44.1, 51.0], [44.2, 51.0], [44.3, 51.0], [44.4, 51.0], [44.5, 51.0], [44.6, 51.0], [44.7, 51.0], [44.8, 51.0], [44.9, 51.0], [45.0, 52.0], [45.1, 52.0], [45.2, 52.0], [45.3, 52.0], [45.4, 52.0], [45.5, 52.0], [45.6, 52.0], [45.7, 52.0], [45.8, 52.0], [45.9, 52.0], [46.0, 52.0], [46.1, 52.0], [46.2, 52.0], [46.3, 52.0], [46.4, 52.0], [46.5, 52.0], [46.6, 52.0], [46.7, 52.0], [46.8, 52.0], [46.9, 52.0], [47.0, 52.0], [47.1, 52.0], [47.2, 52.0], [47.3, 52.0], [47.4, 52.0], [47.5, 52.0], [47.6, 52.0], [47.7, 52.0], [47.8, 52.0], [47.9, 52.0], [48.0, 52.0], [48.1, 52.0], [48.2, 52.0], [48.3, 52.0], [48.4, 52.0], [48.5, 52.0], [48.6, 52.0], [48.7, 52.0], [48.8, 52.0], [48.9, 52.0], [49.0, 52.0], [49.1, 52.0], [49.2, 52.0], [49.3, 52.0], [49.4, 52.0], [49.5, 52.0], [49.6, 52.0], [49.7, 53.0], [49.8, 53.0], [49.9, 53.0], [50.0, 53.0], [50.1, 53.0], [50.2, 53.0], [50.3, 53.0], [50.4, 53.0], [50.5, 53.0], [50.6, 53.0], [50.7, 53.0], [50.8, 53.0], [50.9, 53.0], [51.0, 53.0], [51.1, 53.0], [51.2, 53.0], [51.3, 53.0], [51.4, 53.0], [51.5, 53.0], [51.6, 53.0], [51.7, 53.0], [51.8, 53.0], [51.9, 53.0], [52.0, 53.0], [52.1, 53.0], [52.2, 53.0], [52.3, 53.0], [52.4, 53.0], [52.5, 53.0], [52.6, 53.0], [52.7, 53.0], [52.8, 53.0], [52.9, 53.0], [53.0, 53.0], [53.1, 53.0], [53.2, 53.0], [53.3, 53.0], [53.4, 53.0], [53.5, 53.0], [53.6, 53.0], [53.7, 53.0], [53.8, 53.0], [53.9, 53.0], [54.0, 53.0], [54.1, 53.0], [54.2, 53.0], [54.3, 53.0], [54.4, 54.0], [54.5, 54.0], [54.6, 54.0], [54.7, 54.0], [54.8, 54.0], [54.9, 54.0], [55.0, 54.0], [55.1, 54.0], [55.2, 54.0], [55.3, 54.0], [55.4, 54.0], [55.5, 54.0], [55.6, 54.0], [55.7, 54.0], [55.8, 54.0], [55.9, 54.0], [56.0, 54.0], [56.1, 54.0], [56.2, 54.0], [56.3, 54.0], [56.4, 54.0], [56.5, 54.0], [56.6, 54.0], [56.7, 54.0], [56.8, 54.0], [56.9, 54.0], [57.0, 54.0], [57.1, 54.0], [57.2, 54.0], [57.3, 54.0], [57.4, 54.0], [57.5, 54.0], [57.6, 54.0], [57.7, 54.0], [57.8, 54.0], [57.9, 54.0], [58.0, 54.0], [58.1, 54.0], [58.2, 54.0], [58.3, 54.0], [58.4, 54.0], [58.5, 54.0], [58.6, 55.0], [58.7, 55.0], [58.8, 55.0], [58.9, 55.0], [59.0, 55.0], [59.1, 55.0], [59.2, 55.0], [59.3, 55.0], [59.4, 55.0], [59.5, 55.0], [59.6, 55.0], [59.7, 55.0], [59.8, 55.0], [59.9, 55.0], [60.0, 55.0], [60.1, 55.0], [60.2, 55.0], [60.3, 55.0], [60.4, 55.0], [60.5, 55.0], [60.6, 55.0], [60.7, 55.0], [60.8, 55.0], [60.9, 55.0], [61.0, 55.0], [61.1, 55.0], [61.2, 55.0], [61.3, 55.0], [61.4, 55.0], [61.5, 55.0], [61.6, 55.0], [61.7, 55.0], [61.8, 55.0], [61.9, 55.0], [62.0, 55.0], [62.1, 55.0], [62.2, 55.0], [62.3, 55.0], [62.4, 55.0], [62.5, 55.0], [62.6, 56.0], [62.7, 56.0], [62.8, 56.0], [62.9, 56.0], [63.0, 56.0], [63.1, 56.0], [63.2, 56.0], [63.3, 56.0], [63.4, 56.0], [63.5, 56.0], [63.6, 56.0], [63.7, 56.0], [63.8, 56.0], [63.9, 56.0], [64.0, 56.0], [64.1, 56.0], [64.2, 56.0], [64.3, 56.0], [64.4, 56.0], [64.5, 56.0], [64.6, 56.0], [64.7, 56.0], [64.8, 56.0], [64.9, 56.0], [65.0, 56.0], [65.1, 56.0], [65.2, 56.0], [65.3, 56.0], [65.4, 56.0], [65.5, 56.0], [65.6, 56.0], [65.7, 56.0], [65.8, 56.0], [65.9, 56.0], [66.0, 56.0], [66.1, 56.0], [66.2, 56.0], [66.3, 57.0], [66.4, 57.0], [66.5, 57.0], [66.6, 57.0], [66.7, 57.0], [66.8, 57.0], [66.9, 57.0], [67.0, 57.0], [67.1, 57.0], [67.2, 57.0], [67.3, 57.0], [67.4, 57.0], [67.5, 57.0], [67.6, 57.0], [67.7, 57.0], [67.8, 57.0], [67.9, 57.0], [68.0, 57.0], [68.1, 57.0], [68.2, 57.0], [68.3, 57.0], [68.4, 57.0], [68.5, 57.0], [68.6, 57.0], [68.7, 57.0], [68.8, 57.0], [68.9, 57.0], [69.0, 57.0], [69.1, 57.0], [69.2, 57.0], [69.3, 57.0], [69.4, 57.0], [69.5, 57.0], [69.6, 58.0], [69.7, 58.0], [69.8, 58.0], [69.9, 58.0], [70.0, 58.0], [70.1, 58.0], [70.2, 58.0], [70.3, 58.0], [70.4, 58.0], [70.5, 58.0], [70.6, 58.0], [70.7, 58.0], [70.8, 58.0], [70.9, 58.0], [71.0, 58.0], [71.1, 58.0], [71.2, 58.0], [71.3, 58.0], [71.4, 58.0], [71.5, 58.0], [71.6, 58.0], [71.7, 58.0], [71.8, 58.0], [71.9, 58.0], [72.0, 58.0], [72.1, 58.0], [72.2, 58.0], [72.3, 58.0], [72.4, 58.0], [72.5, 59.0], [72.6, 59.0], [72.7, 59.0], [72.8, 59.0], [72.9, 59.0], [73.0, 59.0], [73.1, 59.0], [73.2, 59.0], [73.3, 59.0], [73.4, 59.0], [73.5, 59.0], [73.6, 59.0], [73.7, 59.0], [73.8, 59.0], [73.9, 59.0], [74.0, 59.0], [74.1, 59.0], [74.2, 59.0], [74.3, 59.0], [74.4, 59.0], [74.5, 59.0], [74.6, 59.0], [74.7, 59.0], [74.8, 59.0], [74.9, 59.0], [75.0, 59.0], [75.1, 59.0], [75.2, 60.0], [75.3, 60.0], [75.4, 60.0], [75.5, 60.0], [75.6, 60.0], [75.7, 60.0], [75.8, 60.0], [75.9, 60.0], [76.0, 60.0], [76.1, 60.0], [76.2, 60.0], [76.3, 60.0], [76.4, 60.0], [76.5, 60.0], [76.6, 60.0], [76.7, 60.0], [76.8, 60.0], [76.9, 60.0], [77.0, 60.0], [77.1, 60.0], [77.2, 60.0], [77.3, 60.0], [77.4, 60.0], [77.5, 60.0], [77.6, 61.0], [77.7, 61.0], [77.8, 61.0], [77.9, 61.0], [78.0, 61.0], [78.1, 61.0], [78.2, 61.0], [78.3, 61.0], [78.4, 61.0], [78.5, 61.0], [78.6, 61.0], [78.7, 61.0], [78.8, 61.0], [78.9, 61.0], [79.0, 61.0], [79.1, 61.0], [79.2, 61.0], [79.3, 61.0], [79.4, 61.0], [79.5, 61.0], [79.6, 61.0], [79.7, 62.0], [79.8, 62.0], [79.9, 62.0], [80.0, 62.0], [80.1, 62.0], [80.2, 62.0], [80.3, 62.0], [80.4, 62.0], [80.5, 62.0], [80.6, 62.0], [80.7, 62.0], [80.8, 62.0], [80.9, 62.0], [81.0, 62.0], [81.1, 62.0], [81.2, 62.0], [81.3, 63.0], [81.4, 63.0], [81.5, 63.0], [81.6, 63.0], [81.7, 63.0], [81.8, 63.0], [81.9, 63.0], [82.0, 63.0], [82.1, 63.0], [82.2, 63.0], [82.3, 63.0], [82.4, 63.0], [82.5, 63.0], [82.6, 63.0], [82.7, 63.0], [82.8, 64.0], [82.9, 64.0], [83.0, 64.0], [83.1, 64.0], [83.2, 64.0], [83.3, 64.0], [83.4, 64.0], [83.5, 64.0], [83.6, 64.0], [83.7, 64.0], [83.8, 64.0], [83.9, 64.0], [84.0, 64.0], [84.1, 65.0], [84.2, 65.0], [84.3, 65.0], [84.4, 65.0], [84.5, 65.0], [84.6, 65.0], [84.7, 65.0], [84.8, 65.0], [84.9, 65.0], [85.0, 65.0], [85.1, 65.0], [85.2, 66.0], [85.3, 66.0], [85.4, 66.0], [85.5, 66.0], [85.6, 66.0], [85.7, 66.0], [85.8, 66.0], [85.9, 66.0], [86.0, 66.0], [86.1, 67.0], [86.2, 67.0], [86.3, 67.0], [86.4, 67.0], [86.5, 67.0], [86.6, 67.0], [86.7, 67.0], [86.8, 67.0], [86.9, 68.0], [87.0, 68.0], [87.1, 68.0], [87.2, 68.0], [87.3, 68.0], [87.4, 68.0], [87.5, 68.0], [87.6, 68.0], [87.7, 69.0], [87.8, 69.0], [87.9, 69.0], [88.0, 69.0], [88.1, 69.0], [88.2, 69.0], [88.3, 70.0], [88.4, 70.0], [88.5, 70.0], [88.6, 70.0], [88.7, 70.0], [88.8, 70.0], [88.9, 71.0], [89.0, 71.0], [89.1, 71.0], [89.2, 71.0], [89.3, 71.0], [89.4, 72.0], [89.5, 72.0], [89.6, 72.0], [89.7, 72.0], [89.8, 72.0], [89.9, 73.0], [90.0, 73.0], [90.1, 73.0], [90.2, 73.0], [90.3, 74.0], [90.4, 74.0], [90.5, 74.0], [90.6, 74.0], [90.7, 75.0], [90.8, 75.0], [90.9, 75.0], [91.0, 75.0], [91.1, 76.0], [91.2, 76.0], [91.3, 76.0], [91.4, 77.0], [91.5, 77.0], [91.6, 77.0], [91.7, 78.0], [91.8, 78.0], [91.9, 78.0], [92.0, 79.0], [92.1, 79.0], [92.2, 80.0], [92.3, 80.0], [92.4, 81.0], [92.5, 81.0], [92.6, 81.0], [92.7, 82.0], [92.8, 82.0], [92.9, 83.0], [93.0, 83.0], [93.1, 84.0], [93.2, 84.0], [93.3, 85.0], [93.4, 86.0], [93.5, 86.0], [93.6, 87.0], [93.7, 87.0], [93.8, 88.0], [93.9, 89.0], [94.0, 89.0], [94.1, 90.0], [94.2, 91.0], [94.3, 92.0], [94.4, 93.0], [94.5, 93.0], [94.6, 94.0], [94.7, 95.0], [94.8, 96.0], [94.9, 97.0], [95.0, 98.0], [95.1, 99.0], [95.2, 100.0], [95.3, 101.0], [95.4, 102.0], [95.5, 103.0], [95.6, 104.0], [95.7, 105.0], [95.8, 107.0], [95.9, 108.0], [96.0, 109.0], [96.1, 111.0], [96.2, 113.0], [96.3, 115.0], [96.4, 117.0], [96.5, 119.0], [96.6, 121.0], [96.7, 125.0], [96.8, 129.0], [96.9, 133.0], [97.0, 139.0], [97.1, 149.0], [97.2, 162.0], [97.3, 182.0], [97.4, 227.0], [97.5, 274.0], [97.6, 302.0], [97.7, 320.0], [97.8, 345.0], [97.9, 379.0], [98.0, 409.0], [98.1, 429.0], [98.2, 447.0], [98.3, 461.0], [98.4, 486.0], [98.5, 510.0], [98.6, 533.0], [98.7, 557.0], [98.8, 581.0], [98.9, 613.0], [99.0, 645.0], [99.1, 685.0], [99.2, 723.0], [99.3, 750.0], [99.4, 781.0], [99.5, 814.0], [99.6, 851.0], [99.7, 911.0], [99.8, 1012.0], [99.9, 1249.0]], "isOverall": false, "label": "Sunstar Home Japan", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 76405.0, "series": [{"data": [[0.0, 76405.0], [8500.0, 1.0], [8600.0, 1.0], [8700.0, 1.0], [9100.0, 1.0], [8900.0, 1.0], [8800.0, 1.0], [600.0, 232.0], [700.0, 242.0], [12200.0, 1.0], [12900.0, 1.0], [13300.0, 1.0], [800.0, 184.0], [13700.0, 2.0], [900.0, 90.0], [16300.0, 1.0], [1000.0, 29.0], [17200.0, 1.0], [17400.0, 1.0], [17900.0, 1.0], [1100.0, 36.0], [1200.0, 25.0], [1300.0, 8.0], [1400.0, 25.0], [1500.0, 10.0], [100.0, 1752.0], [1600.0, 1.0], [1700.0, 4.0], [1800.0, 4.0], [200.0, 192.0], [4800.0, 1.0], [300.0, 296.0], [5600.0, 2.0], [5700.0, 3.0], [5800.0, 2.0], [6200.0, 1.0], [6300.0, 1.0], [400.0, 399.0], [500.0, 326.0]], "isOverall": false, "label": "Sunstar Home Japan", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 17900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 43.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 79051.0, "series": [{"data": [[0.0, 79051.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1191.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 43.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.62583991E12, "maxY": 1985.6, "series": [{"data": [[1.62583999E12, 783.0867052023123], [1.62584076E12, 11.486263736263735], [1.62584025E12, 3.7999999999999954], [1.62584008E12, 3.0], [1.62584059E12, 3.0], [1.62584042E12, 7.0], [1.62583991E12, 1985.6], [1.62584068E12, 10.212660028449498], [1.62584017E12, 11.0], [1.62584E12, 329.3518041237111], [1.62584051E12, 12.264000000000006], [1.62584034E12, 8.240902474526933], [1.62583998E12, 1163.9057071960287], [1.62584015E12, 10.889185580774368], [1.62584041E12, 7.0], [1.62584024E12, 5.0], [1.62584075E12, 12.0], [1.62584058E12, 6.297115384615385], [1.62584007E12, 4.086206896551723], [1.62584033E12, 7.0], [1.62584016E12, 11.0], [1.62584067E12, 8.52835051546392], [1.6258405E12, 10.59346126510306], [1.62584014E12, 9.508150248051022], [1.62584031E12, 6.549271636675237], [1.62583997E12, 1466.015151515152], [1.62584057E12, 6.0], [1.6258404E12, 5.348615090735436], [1.62584074E12, 12.0], [1.62584006E12, 7.0], [1.62584023E12, 7.639053254437874], [1.62584049E12, 8.409286328460869], [1.62584032E12, 7.0], [1.62584066E12, 6.908396946564891], [1.62583996E12, 1681.7736625514408], [1.62584047E12, 5.24137931034483], [1.62584013E12, 9.0], [1.6258403E12, 6.902838427947594], [1.62584073E12, 12.0], [1.62584056E12, 6.0], [1.62584039E12, 6.891548242333579], [1.62584005E12, 7.1181384248210025], [1.62584022E12, 11.0], [1.62584065E12, 5.110612855007477], [1.62584048E12, 7.806979280261727], [1.62584029E12, 5.329341317365266], [1.62584012E12, 8.24657534246575], [1.62584063E12, 3.0], [1.62584046E12, 3.657142857142855], [1.62583995E12, 1833.46875], [1.62584072E12, 12.0], [1.62584021E12, 11.0], [1.62584004E12, 13.0], [1.62584055E12, 5.89445557782231], [1.62584038E12, 8.0], [1.62584081E12, 3.0], [1.62584064E12, 4.588095238095235], [1.62584045E12, 3.0], [1.62584028E12, 3.335714285714284], [1.62584079E12, 3.0], [1.62584062E12, 3.0], [1.62584011E12, 5.010670731707321], [1.62584037E12, 7.593729152768503], [1.6258402E12, 11.0], [1.62584071E12, 12.0], [1.62584054E12, 5.0], [1.62584003E12, 15.065699006875489], [1.6258408E12, 3.0], [1.62584061E12, 3.0], [1.62584044E12, 3.0], [1.62584078E12, 5.773109243697482], [1.6258401E12, 3.83687943262411], [1.62584027E12, 2.0], [1.62583993E12, 1893.7454545454543], [1.62584053E12, 11.807511737089216], [1.62584036E12, 7.0], [1.6258407E12, 11.894101876675593], [1.62584002E12, 18.0], [1.62584019E12, 11.0], [1.62584077E12, 6.0], [1.6258406E12, 3.0], [1.62583992E12, 1946.4615384615386], [1.62584043E12, 3.570605187319883], [1.62584009E12, 3.0], [1.62584026E12, 2.0], [1.62584069E12, 11.0], [1.62584052E12, 9.523936170212757], [1.62584035E12, 7.869767441860483], [1.62584001E12, 14.500802568218297], [1.62584018E12, 11.0]], "isOverall": false, "label": "bzm - Concurrency Thread Group-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62584081E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 28.38215488215488, "minX": 1.0, "maxY": 17935.0, "series": [{"data": [[2.0, 28.38215488215488], [3.0, 39.26182180189142], [4.0, 40.63722826086959], [5.0, 43.77540106951864], [6.0, 39.589059986209996], [7.0, 39.03675414051248], [8.0, 37.170548459804614], [9.0, 56.691252955082724], [10.0, 58.015984015983975], [11.0, 59.197041110238054], [12.0, 60.22012234091115], [13.0, 70.82082695252683], [14.0, 94.42857142857142], [15.0, 57.70945945945944], [16.0, 99.96341463414625], [17.0, 92.635761589404], [18.0, 88.16336448598132], [19.0, 165.4], [20.0, 41.0], [21.0, 165.8], [22.0, 82.09022556390977], [23.0, 355.0], [24.0, 352.0], [25.0, 514.0], [26.0, 527.0], [27.0, 502.0], [28.0, 491.0], [29.0, 473.0], [30.0, 466.0], [31.0, 293.0], [32.0, 293.0], [35.0, 804.0], [34.0, 468.5], [37.0, 376.5], [39.0, 469.0], [38.0, 471.0], [41.0, 465.0], [40.0, 466.0], [42.0, 449.0], [44.0, 459.0], [47.0, 806.0], [46.0, 804.0], [51.0, 274.0], [50.0, 628.0], [52.0, 451.0], [55.0, 730.5], [57.0, 877.0], [59.0, 792.0], [61.0, 799.0], [60.0, 781.0], [63.0, 775.0], [62.0, 787.0], [67.0, 761.0], [66.0, 760.0], [65.0, 774.0], [71.0, 593.0], [70.0, 760.0], [69.0, 773.0], [68.0, 848.0], [75.0, 1170.0], [74.0, 352.0], [73.0, 353.0], [72.0, 1443.0], [79.0, 689.0], [78.0, 747.0], [77.0, 1559.0], [76.0, 909.0], [83.0, 682.0], [82.0, 795.0], [80.0, 681.0], [87.0, 1352.0], [86.0, 689.0], [85.0, 789.0], [91.0, 672.0], [90.0, 1298.0], [89.0, 1613.0], [88.0, 1598.0], [95.0, 1882.0], [94.0, 859.0], [93.0, 1590.0], [92.0, 734.0], [99.0, 723.0], [98.0, 1567.0], [97.0, 853.0], [96.0, 858.0], [103.0, 852.0], [102.0, 1591.0], [101.0, 853.0], [100.0, 858.0], [107.0, 1196.0], [106.0, 1581.0], [105.0, 855.0], [104.0, 853.0], [111.0, 1210.0], [110.0, 1503.0], [109.0, 843.0], [108.0, 849.0], [114.0, 839.0], [113.0, 965.0], [112.0, 838.0], [119.0, 965.0], [118.0, 1437.0], [117.0, 1490.0], [116.0, 1148.5], [123.0, 1328.0], [122.0, 1466.0], [121.0, 835.0], [120.0, 836.0], [127.0, 1349.0], [126.0, 1824.0], [125.0, 1842.0], [124.0, 1569.0], [135.0, 1464.0], [134.0, 889.0], [133.0, 1410.0], [132.0, 1340.0], [131.0, 940.0], [130.0, 1221.0], [129.0, 814.0], [128.0, 1299.0], [143.0, 1273.0], [142.0, 873.0], [141.0, 1744.0], [140.0, 1747.0], [139.0, 1841.0], [138.0, 880.0], [137.0, 1763.0], [136.0, 1749.0], [151.0, 1245.0], [150.0, 1249.0], [149.0, 664.0], [148.0, 964.0], [147.0, 1051.0], [146.0, 1223.0], [145.0, 1216.0], [144.0, 571.0], [158.0, 624.0], [157.0, 1227.0], [155.0, 1065.0], [154.0, 811.0], [153.0, 643.0], [167.0, 1218.0], [166.0, 921.5], [164.0, 752.0], [162.0, 1204.0], [161.0, 1205.0], [160.0, 1207.5], [175.0, 741.0], [174.0, 1207.0], [172.0, 746.0], [171.0, 1219.0], [170.0, 1210.0], [169.0, 1125.0], [183.0, 1151.0], [181.0, 787.0], [180.0, 1204.0], [179.0, 994.5], [177.0, 612.0], [176.0, 740.0], [190.0, 1213.0], [189.0, 1197.0], [188.0, 948.0], [187.0, 603.0], [186.0, 735.0], [185.0, 918.0], [184.0, 735.0], [199.0, 907.5], [197.0, 961.0], [195.0, 1039.5], [193.0, 1212.0], [192.0, 1195.5], [207.0, 1194.0], [206.0, 833.0], [205.0, 835.0], [204.0, 978.5], [203.0, 1204.0], [202.0, 730.0], [201.0, 594.0], [200.0, 1192.5], [215.0, 1141.0], [214.0, 1181.0], [213.0, 1171.0], [212.0, 1167.0], [211.0, 587.0], [210.0, 762.0], [209.0, 1166.0], [208.0, 999.0], [223.0, 1042.0], [222.0, 831.0], [221.0, 1004.5], [219.0, 566.0], [218.0, 1465.0], [217.0, 937.0], [216.0, 1155.0], [231.0, 990.0], [230.0, 1014.0], [229.0, 873.0], [228.0, 1441.0], [227.0, 996.0], [226.0, 902.0], [225.0, 1441.0], [224.0, 1051.0], [239.0, 1132.0], [238.0, 1162.0], [237.0, 1160.0], [236.0, 1431.0], [235.0, 1155.0], [234.0, 735.0], [233.0, 1135.0], [232.0, 1137.0], [247.0, 1440.0], [246.0, 1218.5], [244.0, 1292.0], [242.0, 1289.0], [240.0, 978.0], [255.0, 1138.0], [254.0, 1127.0], [253.0, 1116.0], [252.0, 1119.0], [251.0, 1130.0], [250.0, 1088.0], [249.0, 760.0], [248.0, 1143.0], [270.0, 720.0], [271.0, 1388.0], [269.0, 1403.0], [268.0, 1483.0], [267.0, 1109.0], [266.0, 1479.0], [265.0, 1410.0], [264.0, 1397.0], [263.0, 1482.0], [257.0, 1501.0], [256.0, 1417.0], [259.0, 1429.0], [258.0, 1413.0], [262.0, 1500.0], [261.0, 1408.0], [260.0, 1495.0], [286.0, 815.0], [287.0, 896.0], [285.0, 823.0], [284.0, 901.0], [283.0, 822.0], [282.0, 827.0], [281.0, 821.0], [280.0, 801.0], [279.0, 1186.0], [273.0, 1379.0], [272.0, 1107.0], [275.0, 415.0], [274.0, 1082.0], [278.0, 1119.0], [277.0, 1123.0], [276.0, 655.0], [302.0, 706.0], [303.0, 708.0], [301.0, 812.0], [300.0, 744.0], [299.0, 737.0], [298.0, 817.0], [297.0, 823.0], [296.0, 741.0], [295.0, 751.0], [289.0, 800.0], [288.0, 824.0], [291.0, 812.0], [290.0, 806.0], [294.0, 801.0], [293.0, 811.0], [292.0, 806.0], [318.0, 580.0], [319.0, 459.0], [317.0, 519.0], [316.0, 553.5], [315.0, 575.0], [314.0, 561.0], [313.0, 571.0], [312.0, 557.0], [311.0, 596.0], [305.0, 684.0], [304.0, 698.0], [307.0, 670.0], [306.0, 692.0], [310.0, 593.0], [309.0, 610.0], [334.0, 483.0], [335.0, 504.0], [333.0, 501.0], [332.0, 508.0], [331.0, 488.0], [330.0, 501.0], [329.0, 493.0], [328.0, 511.0], [327.0, 502.0], [321.0, 457.0], [320.0, 456.0], [323.0, 333.0], [322.0, 447.0], [326.0, 494.0], [325.0, 501.0], [324.0, 320.0], [350.0, 472.0], [351.0, 468.0], [349.0, 445.0], [348.0, 444.0], [347.0, 459.0], [346.0, 445.0], [345.0, 497.0], [344.0, 478.0], [343.0, 482.5], [337.0, 470.0], [336.0, 470.0], [339.0, 500.0], [338.0, 500.0], [342.0, 496.0], [340.0, 486.0], [366.0, 411.0], [367.0, 419.0], [365.0, 413.0], [364.0, 411.0], [363.0, 428.0], [361.0, 436.0], [360.0, 434.0], [359.0, 447.0], [353.0, 435.0], [352.0, 463.0], [355.0, 430.0], [354.0, 434.0], [358.0, 436.0], [357.0, 453.5], [382.0, 416.0], [383.0, 385.0], [381.0, 393.0], [380.0, 393.0], [379.0, 413.0], [378.0, 387.0], [377.0, 410.0], [376.0, 406.0], [375.0, 401.0], [368.0, 433.0], [371.0, 424.0], [370.0, 405.0], [374.0, 398.0], [373.0, 412.0], [372.0, 389.0], [398.0, 408.0], [399.0, 317.0], [397.0, 461.0], [396.0, 418.0], [395.0, 319.0], [394.0, 401.0], [393.0, 450.0], [392.0, 324.0], [391.0, 368.0], [385.0, 409.0], [384.0, 397.0], [387.0, 382.0], [386.0, 392.0], [390.0, 389.0], [389.0, 376.0], [388.0, 402.0], [414.0, 394.0], [415.0, 342.0], [413.0, 372.0], [412.0, 520.0], [411.0, 363.0], [410.0, 398.0], [409.0, 378.0], [408.0, 345.0], [407.0, 340.0], [401.0, 430.0], [400.0, 343.0], [403.0, 306.0], [402.0, 309.0], [406.0, 352.0], [405.0, 361.0], [404.0, 853.0], [430.0, 458.0], [431.0, 450.0], [429.0, 616.0], [418.0, 377.0], [417.0, 363.0], [416.0, 762.0], [427.0, 777.0], [426.0, 561.0], [425.0, 555.0], [424.0, 671.0], [423.0, 780.0], [422.0, 780.0], [421.0, 781.0], [420.0, 787.0], [446.0, 758.0], [447.0, 760.0], [445.0, 439.0], [444.0, 761.0], [443.0, 441.0], [442.0, 764.0], [441.0, 563.0], [440.0, 836.0], [439.0, 449.0], [432.0, 797.0], [435.0, 689.5], [433.0, 452.0], [438.0, 565.0], [437.0, 551.0], [462.0, 476.0], [463.0, 690.0], [461.0, 707.0], [460.0, 711.0], [459.0, 787.0], [458.0, 415.0], [457.0, 845.0], [456.0, 743.0], [455.0, 743.0], [449.0, 541.0], [448.0, 837.0], [451.0, 534.0], [450.0, 744.0], [454.0, 747.0], [453.0, 793.0], [452.0, 426.0], [467.0, 737.0], [477.0, 465.5], [478.0, 452.0], [476.0, 355.0], [474.0, 563.0], [472.0, 738.0], [471.0, 474.0], [469.0, 464.0], [468.0, 367.0], [465.0, 680.0], [464.0, 372.0], [494.0, 659.0], [495.0, 444.0], [493.0, 445.0], [492.0, 666.0], [491.0, 456.0], [490.0, 573.5], [489.0, 464.0], [487.0, 459.0], [480.0, 575.5], [483.0, 449.0], [481.0, 358.0], [486.0, 430.0], [485.0, 459.0], [510.0, 593.0], [511.0, 576.0], [509.0, 634.0], [508.0, 612.0], [507.0, 656.0], [506.0, 613.0], [505.0, 579.0], [504.0, 595.0], [503.0, 643.0], [499.0, 558.5], [497.0, 446.0], [502.0, 652.0], [501.0, 643.0], [500.0, 743.1642857142857], [540.0, 517.0], [542.0, 526.0], [528.0, 144.0], [532.0, 134.0], [538.0, 520.0], [536.0, 530.5], [518.0, 504.0], [516.0, 562.0], [514.0, 666.0], [512.0, 576.0], [526.0, 144.0], [524.0, 535.3333333333334], [520.0, 501.0], [534.0, 531.0], [572.0, 414.0], [560.0, 489.0], [562.0, 440.0], [574.0, 463.0], [570.0, 411.0], [568.0, 419.0], [544.0, 512.0], [546.0, 512.0], [548.0, 490.0], [550.0, 511.0], [558.0, 502.0], [556.0, 491.0], [554.0, 492.0], [552.0, 488.0], [566.0, 461.0], [604.0, 298.0], [592.0, 317.0], [594.0, 303.0], [596.0, 277.0], [606.0, 244.0], [602.0, 302.0], [600.0, 296.0], [576.0, 458.0], [578.0, 450.0], [580.0, 398.0], [582.0, 388.0], [590.0, 296.0], [588.0, 300.0], [586.0, 353.0], [584.0, 340.0], [598.0, 300.0], [636.0, 448.0], [638.0, 416.0], [624.0, 423.0], [626.0, 424.0], [634.0, 436.0], [632.0, 432.0], [614.0, 475.0], [612.0, 444.0], [610.0, 461.0], [608.0, 250.0], [622.0, 461.0], [620.0, 441.0], [618.0, 436.0], [616.0, 468.0], [630.0, 458.0], [668.0, 399.0], [656.0, 407.0], [658.0, 404.5], [660.0, 384.0], [670.0, 330.0], [666.0, 384.0], [664.0, 398.5], [640.0, 448.0], [642.0, 433.0], [644.0, 418.0], [652.0, 439.0], [650.0, 396.0], [648.0, 431.0], [662.0, 432.0], [698.0, 460.0], [700.0, 441.0], [692.0, 117.0], [702.0, 445.0], [688.0, 128.0], [690.0, 123.0], [696.0, 414.0], [678.0, 147.0], [676.0, 154.0], [674.0, 262.0], [672.0, 332.0], [686.0, 122.0], [684.0, 128.0], [682.0, 139.0], [680.0, 142.0], [694.0, 451.0], [706.0, 451.5], [734.0, 405.2857142857143], [710.0, 414.0], [708.0, 411.0], [704.0, 448.0], [722.0, 392.0], [720.0, 423.0], [718.0, 424.0], [716.0, 409.0], [714.0, 407.0], [712.0, 452.0], [738.0, 343.0], [736.0, 378.0], [740.0, 367.0], [742.0, 338.0], [750.0, 310.0], [748.0, 344.0], [746.0, 347.0], [758.0, 346.0], [756.0, 305.0], [754.0, 340.0], [796.0, 476.0], [798.0, 458.0], [786.0, 322.0], [788.0, 318.0], [792.0, 513.0], [774.0, 321.5], [772.0, 314.0], [770.0, 328.0], [768.0, 335.0], [780.0, 314.0], [778.0, 316.0], [790.0, 312.0], [828.0, 601.0], [816.0, 463.0], [818.0, 432.0], [820.0, 432.0], [830.0, 627.0], [826.0, 286.0], [824.0, 420.0], [800.0, 483.0], [802.0, 453.0], [812.0, 463.0], [810.0, 449.5], [808.0, 444.0], [822.0, 424.0], [856.0, 559.0], [860.0, 539.5], [862.0, 554.0], [858.0, 551.0], [832.0, 609.0], [834.0, 630.0], [836.0, 590.5], [838.0, 567.0], [846.0, 593.0], [844.0, 565.0], [842.0, 569.0], [840.0, 617.0], [890.0, 502.0], [894.0, 523.5], [880.0, 525.0], [892.0, 552.0], [864.0, 534.0], [866.0, 567.0], [868.0, 531.0], [870.0, 524.0], [878.0, 532.0], [876.0, 573.0], [874.0, 555.5], [872.0, 542.0], [886.0, 549.0], [884.0, 510.0], [924.0, 293.0], [926.0, 258.0], [912.0, 488.0], [914.0, 527.0], [896.0, 520.0], [898.0, 492.0], [900.0, 536.0], [902.0, 516.0], [910.0, 521.0], [908.0, 498.0], [906.0, 512.0], [904.0, 526.0], [918.0, 285.0], [916.0, 494.0], [956.0, 316.0], [944.0, 203.0], [946.0, 209.0], [948.0, 231.0], [958.0, 312.0], [954.0, 225.0], [952.0, 206.0], [928.0, 280.0], [930.0, 260.0], [932.0, 251.0], [942.0, 235.0], [940.0, 216.0], [938.0, 278.0], [936.0, 247.0], [950.0, 228.0], [988.0, 581.0], [984.0, 592.0], [990.0, 604.6666666666666], [960.0, 605.0], [962.0, 631.0], [966.0, 509.6666666666667], [974.0, 622.0], [968.0, 294.0], [982.0, 606.0], [980.0, 597.0], [1020.0, 548.0], [1022.0, 532.0], [1008.0, 580.0], [1010.0, 538.0], [1018.0, 582.0], [1016.0, 592.0], [996.0, 632.0], [994.0, 454.0], [992.0, 593.0], [1006.0, 623.0], [1004.0, 555.0], [1002.0, 621.0], [1000.0, 589.0], [1014.0, 576.0], [1080.0, 163.0], [1076.0, 196.0], [1084.0, 345.0], [1056.0, 300.0], [1060.0, 295.0], [1068.0, 277.0], [1072.0, 186.0], [1024.0, 546.0], [1028.0, 568.0], [1032.0, 539.0], [1052.0, 339.0], [1048.0, 534.0], [1044.0, 572.0], [1040.0, 535.0], [1140.0, 783.0], [1148.0, 796.0], [1120.0, 311.0], [1128.0, 195.0], [1132.0, 825.0], [1144.0, 791.0], [1136.0, 766.0], [1092.0, 327.0], [1096.0, 326.0], [1100.0, 312.0], [1116.0, 286.0], [1112.0, 322.0], [1108.0, 332.0], [1104.0, 331.0], [1204.0, 687.0], [1208.0, 711.0], [1212.0, 729.0], [1188.0, 700.0], [1192.0, 690.0], [1196.0, 699.0], [1200.0, 711.0], [1156.0, 792.25], [1152.0, 772.0], [1160.0, 794.0], [1164.0, 777.0], [1176.0, 793.0], [1172.0, 732.5], [1168.0, 760.5], [1228.0, 704.0], [1248.0, 1014.0], [1216.0, 708.0], [1220.0, 709.0], [1244.0, 1009.0], [1236.0, 1017.0], [1232.0, 662.0], [1336.0, 870.5], [1340.0, 894.0], [1312.0, 968.0], [1320.0, 875.0], [1324.0, 959.3333333333334], [1332.0, 868.0], [1328.0, 920.0], [1288.0, 921.5], [1292.0, 980.0], [1308.0, 1007.0], [1304.0, 949.0], [1296.0, 990.0], [1356.0, 716.0], [1392.0, 628.0], [1388.0, 733.0], [1352.0, 804.0], [1348.0, 817.5], [1344.0, 830.0], [1412.0, 662.0], [1420.0, 663.0], [1456.0, 194.0], [1468.0, 639.0], [1440.0, 646.0], [1444.0, 609.0], [1436.0, 634.0], [1432.0, 636.5], [1428.0, 651.0], [1424.0, 685.0], [1452.0, 320.0], [1528.0, 194.0], [1504.0, 539.0], [1508.0, 529.0], [1512.0, 499.0], [1516.0, 484.0], [1524.0, 369.0], [1520.0, 450.0], [1496.0, 562.0], [1492.0, 545.0], [1488.0, 598.8], [1588.0, 511.0], [1592.0, 464.0], [1596.0, 455.0], [1572.0, 550.0], [1576.0, 519.0], [1580.0, 548.0], [1584.0, 490.0], [1536.0, 145.0], [1540.0, 63.0], [1564.0, 525.0], [1556.0, 560.0], [1552.0, 558.0], [1652.0, 872.0], [1656.0, 825.5], [1660.0, 819.5], [1636.0, 871.0], [1640.0, 847.0], [1612.0, 886.0], [1608.0, 438.0], [1604.0, 406.0], [1600.0, 474.0], [1624.0, 851.0], [1616.0, 870.5], [1668.0, 752.0], [1696.0, 654.5], [1700.0, 603.0], [1704.0, 669.0], [1708.0, 631.0], [1664.0, 821.0], [1672.0, 786.0], [1676.0, 725.0], [1688.0, 667.0], [1684.0, 695.0], [1680.0, 676.0], [1784.0, 232.0], [1780.0, 271.0], [1788.0, 236.0], [1760.0, 387.0], [1764.0, 421.0], [1768.0, 356.0], [1728.0, 483.0], [1732.0, 475.0], [1756.0, 405.0], [1752.0, 461.0], [1748.0, 458.0], [1744.0, 430.5], [1848.0, 376.0], [1852.0, 341.0], [1824.0, 401.0], [1832.0, 409.0], [1836.0, 380.0], [1840.0, 401.0], [1792.0, 204.0], [1796.0, 201.0], [1800.0, 617.0], [1804.0, 540.0], [1820.0, 426.0], [1816.0, 419.0], [1912.0, 441.0], [1916.0, 431.0], [1888.0, 299.0], [1892.0, 294.5], [1896.0, 276.0], [1900.0, 263.0], [1856.0, 104.0], [1860.0, 95.0], [1884.0, 316.5], [1876.0, 336.0], [1872.0, 327.5], [1976.0, 129.0], [1972.0, 8932.0], [1980.0, 109.0], [1952.0, 331.0], [1956.0, 317.0], [1960.0, 329.0], [1964.0, 292.0], [1968.0, 251.0], [1920.0, 429.5], [1924.0, 395.0], [1928.0, 379.0], [1932.0, 301.0], [1940.0, 12950.0], [1936.0, 16386.0], [2000.0, 4812.0], [1984.0, 79.0], [1996.0, 276.5], [1992.0, 276.0], [1988.0, 5857.0], [1081.0, 187.0], [1085.0, 347.0], [1057.0, 306.0], [1061.0, 302.0], [1065.0, 300.0], [1069.0, 286.0], [1077.0, 178.0], [1073.0, 183.0], [1025.0, 533.0], [1029.0, 529.0], [1033.0, 526.0], [1037.0, 540.5], [1053.0, 328.0], [1049.0, 530.0], [1045.0, 548.0], [1041.0, 542.0], [1141.0, 821.5], [1145.0, 785.0], [1125.0, 246.0], [1121.0, 280.0], [1129.0, 197.0], [1133.0, 846.0], [1137.0, 842.0], [1089.0, 338.0], [1093.0, 352.0], [1097.0, 311.0], [1117.0, 298.0], [1113.0, 324.0], [1109.0, 306.0], [1105.0, 311.0], [1209.0, 687.0], [1213.0, 762.0], [1185.0, 698.0], [1189.0, 702.0], [1193.0, 782.0], [1205.0, 765.0], [1201.0, 699.0], [1157.0, 792.0], [1161.0, 755.0], [1165.0, 755.0], [1173.0, 740.0], [1169.0, 721.0], [1221.0, 747.0], [1249.0, 1007.0], [1217.0, 675.0], [1225.0, 697.0], [1229.0, 702.0], [1245.0, 1021.0], [1241.0, 1008.0], [1237.0, 1015.0], [1233.0, 1089.0], [1337.0, 880.0], [1313.0, 882.0], [1317.0, 931.5], [1321.0, 976.0], [1325.0, 863.0], [1341.0, 802.0], [1333.0, 891.5], [1329.0, 907.0], [1281.0, 1042.0], [1289.0, 915.0], [1293.0, 967.5], [1309.0, 972.5], [1305.0, 900.0], [1301.0, 947.5], [1297.0, 918.0], [1393.0, 664.0], [1389.0, 729.0], [1357.0, 737.0], [1353.0, 829.0], [1349.0, 783.5], [1345.0, 829.0], [1457.0, 667.0], [1441.0, 610.0], [1469.0, 637.0], [1445.0, 631.0], [1449.0, 581.0], [1413.0, 665.0], [1417.0, 654.0], [1421.0, 689.0], [1437.0, 602.0], [1433.0, 676.0], [1429.0, 685.0], [1425.0, 655.5], [1453.0, 353.0], [1533.0, 186.0], [1505.0, 546.0], [1509.0, 515.0], [1513.0, 494.0], [1517.0, 466.0], [1529.0, 188.5], [1525.0, 347.0], [1521.0, 472.0], [1477.0, 630.0], [1481.0, 630.0], [1485.0, 615.0], [1501.0, 541.5], [1497.0, 556.0], [1489.0, 593.8], [1597.0, 455.0], [1569.0, 511.0], [1573.0, 536.0], [1581.0, 499.0], [1589.0, 504.0], [1537.0, 104.0], [1541.0, 613.0], [1549.0, 566.25], [1561.0, 529.0], [1557.0, 550.0], [1661.0, 838.0], [1633.0, 884.0], [1637.0, 881.0], [1641.0, 883.0], [1645.0, 851.0], [1653.0, 861.0], [1605.0, 403.0], [1601.0, 448.0], [1625.0, 910.0], [1721.0, 487.0], [1717.0, 487.0], [1701.0, 635.0], [1697.0, 610.0], [1705.0, 669.0], [1709.0, 584.0], [1725.0, 490.0], [1665.0, 836.0], [1669.0, 798.0], [1673.0, 766.0], [1677.0, 730.0], [1693.0, 637.0], [1689.0, 696.0], [1685.0, 695.0], [1681.0, 717.0], [1785.0, 243.0], [1789.0, 237.0], [1761.0, 413.5], [1765.0, 355.0], [1769.0, 262.0], [1773.0, 276.0], [1781.0, 259.5], [1729.0, 473.5], [1733.0, 462.0], [1737.0, 488.5], [1741.0, 456.5], [1753.0, 402.0], [1749.0, 410.0], [1745.0, 477.0], [1849.0, 347.0], [1853.0, 112.0], [1825.0, 415.0], [1829.0, 407.5], [1833.0, 382.0], [1837.0, 361.0], [1845.0, 359.5], [1841.0, 392.0], [1797.0, 191.0], [1801.0, 604.0], [1805.0, 524.0], [1821.0, 409.0], [1813.0, 418.0], [1913.0, 442.0], [1917.0, 439.0], [1889.0, 278.0], [1893.0, 286.0], [1897.0, 273.0], [1901.0, 246.0], [1909.0, 455.5], [1905.0, 450.0], [1857.0, 99.0], [1861.0, 88.0], [1885.0, 297.0], [1881.0, 298.0], [1877.0, 321.5], [1873.0, 311.0], [1977.0, 125.0], [1981.0, 116.0], [1957.0, 325.0], [1961.0, 303.0], [1965.0, 303.6666666666667], [1973.0, 9153.0], [1969.0, 244.0], [1921.0, 416.0], [1925.0, 404.0], [1933.0, 17935.0], [1949.0, 322.0], [1945.0, 334.5], [1941.0, 12288.0], [1937.0, 13790.0], [1985.0, 76.0], [1997.0, 272.0], [1989.0, 5844.0], [537.0, 535.0], [541.0, 526.0], [529.0, 140.0], [531.0, 139.5], [539.0, 487.0], [519.0, 524.0], [517.0, 531.0], [515.0, 621.0], [513.0, 551.0], [527.0, 147.0], [525.0, 579.0], [521.0, 465.0], [533.0, 134.0], [573.0, 419.0], [575.0, 460.0], [561.0, 451.0], [565.0, 478.0], [563.0, 441.0], [571.0, 420.0], [569.0, 446.0], [559.0, 470.0], [545.0, 509.0], [549.0, 529.0], [551.0, 509.5], [557.0, 476.0], [555.0, 508.0], [553.0, 482.0], [567.0, 414.0], [605.0, 298.0], [607.0, 269.0], [593.0, 293.0], [595.0, 317.0], [597.0, 261.0], [603.0, 306.0], [601.0, 294.5], [591.0, 317.0], [577.0, 421.0], [579.0, 423.0], [581.0, 395.0], [583.0, 358.0], [589.0, 301.0], [587.0, 308.0], [585.0, 342.0], [599.0, 269.0], [633.0, 424.0], [639.0, 451.0], [625.0, 418.0], [629.0, 436.0], [627.0, 442.0], [635.0, 419.0], [613.0, 461.0], [611.0, 486.0], [609.0, 467.0], [623.0, 420.0], [621.0, 443.0], [619.0, 465.0], [617.0, 471.0], [631.0, 437.0], [669.0, 424.0], [671.0, 331.0], [657.0, 405.0], [659.0, 406.0], [667.0, 404.0], [665.0, 428.0], [655.0, 426.0], [641.0, 442.0], [643.0, 447.0], [647.0, 446.0], [645.0, 443.0], [653.0, 404.0], [651.0, 429.0], [649.0, 391.0], [661.0, 433.0], [679.0, 144.0], [689.0, 120.0], [691.0, 124.0], [697.0, 425.0], [677.0, 157.0], [675.0, 162.0], [673.0, 328.0], [687.0, 127.0], [685.0, 128.0], [683.0, 147.0], [681.0, 142.0], [695.0, 460.0], [693.0, 113.0], [711.0, 431.0], [721.0, 440.0], [735.0, 348.6666666666667], [729.0, 413.0], [709.0, 412.0], [707.0, 459.0], [727.0, 385.0], [723.0, 438.0], [719.0, 408.0], [717.0, 428.0], [713.0, 407.0], [763.0, 341.5], [761.0, 327.0], [755.0, 358.0], [767.0, 331.3333333333333], [765.0, 325.0], [751.0, 311.0], [737.0, 353.0], [741.0, 353.0], [743.0, 323.0], [749.0, 336.0], [747.0, 318.0], [745.0, 337.0], [757.0, 312.0], [753.0, 345.5], [795.0, 477.0], [793.0, 478.0], [799.0, 478.0], [785.0, 315.5], [787.0, 318.0], [789.0, 543.0], [797.0, 482.0], [775.0, 319.0], [773.0, 343.0], [769.0, 326.0], [783.0, 318.0], [781.0, 335.0], [779.0, 309.0], [777.0, 329.0], [791.0, 321.0], [829.0, 614.0], [831.0, 578.0], [817.0, 440.0], [819.0, 459.0], [821.0, 428.0], [827.0, 273.0], [825.0, 373.0], [815.0, 461.5], [801.0, 457.0], [803.0, 445.0], [807.0, 463.0], [805.0, 457.5], [813.0, 455.0], [811.0, 454.0], [823.0, 421.0], [859.0, 545.0], [863.0, 529.0], [851.0, 601.0], [861.0, 537.0], [857.0, 548.0], [847.0, 561.0], [833.0, 609.0], [837.0, 561.0], [839.0, 588.0], [845.0, 570.0], [843.0, 610.0], [855.0, 594.0], [853.0, 568.0], [889.0, 509.5], [895.0, 509.0], [883.0, 555.0], [881.0, 541.0], [891.0, 557.0], [879.0, 503.0], [865.0, 560.0], [867.0, 516.0], [869.0, 556.0], [877.0, 518.0], [875.0, 509.0], [887.0, 524.0], [885.0, 493.0], [923.0, 283.3333333333333], [921.0, 294.0], [927.0, 281.0], [913.0, 527.0], [915.0, 497.0], [925.0, 289.0], [911.0, 462.0], [897.0, 526.0], [899.0, 538.0], [901.0, 498.0], [903.0, 525.0], [909.0, 473.0], [907.0, 507.0], [905.0, 533.0], [919.0, 282.0], [917.0, 499.0], [957.0, 658.0], [959.0, 304.0], [945.0, 226.0], [947.0, 236.0], [949.0, 227.0], [955.0, 224.0], [953.0, 227.0], [943.0, 231.0], [929.0, 254.0], [931.0, 259.0], [935.0, 248.5], [933.0, 247.0], [941.0, 218.0], [939.0, 239.0], [937.0, 256.0], [951.0, 203.0], [989.0, 614.0], [991.0, 616.0], [979.0, 642.0], [977.0, 443.0], [987.0, 589.5], [975.0, 601.0], [961.0, 630.0], [963.0, 619.0], [967.0, 616.0], [973.0, 579.5], [971.0, 587.0], [969.0, 293.0], [983.0, 623.0], [981.0, 574.0], [1017.0, 545.0], [1021.0, 245.0], [1009.0, 257.0], [1013.0, 583.0], [1019.0, 589.0], [999.0, 576.5], [995.0, 582.0], [1007.0, 570.0], [1003.0, 557.0], [1001.0, 568.0], [1015.0, 591.0], [1086.0, 360.0], [1058.0, 310.0], [1062.0, 309.0], [1066.0, 306.0], [1070.0, 288.0], [1082.0, 167.0], [1078.0, 167.0], [1074.0, 200.0], [1026.0, 529.0], [1030.0, 558.0], [1034.0, 534.0], [1038.0, 530.0], [1054.0, 318.0], [1050.0, 500.0], [1046.0, 539.0], [1042.0, 546.0], [1142.0, 777.0], [1122.0, 275.0], [1126.0, 222.5], [1146.0, 773.0], [1138.0, 805.0], [1090.0, 333.0], [1094.0, 312.0], [1098.0, 350.0], [1102.0, 338.0], [1114.0, 304.0], [1106.0, 311.0], [1214.0, 720.0], [1186.0, 716.0], [1194.0, 679.0], [1198.0, 725.0], [1210.0, 654.0], [1206.0, 690.0], [1202.0, 736.0], [1162.0, 778.0], [1166.0, 736.0], [1182.0, 730.0], [1174.0, 750.0], [1170.0, 734.0], [1226.0, 674.5], [1250.0, 982.0], [1222.0, 671.0], [1230.0, 743.0], [1246.0, 1017.0], [1238.0, 1084.0], [1342.0, 865.0], [1314.0, 979.0], [1318.0, 929.0], [1322.0, 954.0], [1326.0, 979.0], [1338.0, 905.0], [1334.0, 907.9499999999999], [1330.0, 961.0], [1286.0, 1017.0], [1290.0, 968.0], [1310.0, 905.0], [1306.0, 944.0], [1298.0, 998.5], [1394.0, 683.5], [1358.0, 714.5], [1354.0, 791.0], [1350.0, 824.0], [1346.0, 785.5], [1466.0, 620.0], [1442.0, 615.0], [1446.0, 589.0], [1450.0, 589.0], [1458.0, 642.0], [1414.0, 652.0], [1418.0, 703.0], [1422.0, 699.0], [1438.0, 605.0], [1434.0, 638.0], [1430.0, 649.0], [1426.0, 639.0], [1454.0, 299.0], [1530.0, 182.0], [1534.0, 172.5], [1506.0, 535.0], [1510.0, 510.0], [1514.0, 494.6666666666667], [1518.0, 457.0], [1526.0, 251.0], [1522.0, 430.0], [1478.0, 638.0], [1482.0, 625.0], [1502.0, 542.5], [1498.0, 549.0], [1494.0, 559.0], [1490.0, 588.7142857142858], [1594.0, 463.0], [1570.0, 542.0], [1582.0, 511.0], [1598.0, 435.0], [1590.0, 502.0], [1586.0, 494.0], [1566.0, 511.0], [1542.0, 593.0], [1546.0, 579.0], [1550.0, 578.0], [1558.0, 547.0], [1662.0, 808.5], [1638.0, 860.0], [1634.0, 849.6666666666666], [1642.0, 850.0], [1646.0, 890.0], [1658.0, 812.5], [1654.0, 801.0], [1650.0, 864.0], [1614.0, 893.0], [1610.0, 867.0], [1606.0, 453.0], [1602.0, 442.0], [1626.0, 917.0], [1618.0, 852.0], [1722.0, 490.0], [1714.0, 512.0], [1698.0, 647.6666666666666], [1702.0, 668.0], [1726.0, 446.0], [1666.0, 792.0], [1670.0, 753.0], [1674.0, 738.0], [1678.0, 682.0], [1694.0, 660.0], [1690.0, 685.0], [1686.0, 645.0], [1682.0, 721.0], [1790.0, 240.0], [1762.0, 419.0], [1766.0, 355.0], [1770.0, 271.0], [1786.0, 225.0], [1782.0, 260.5], [1778.0, 267.0], [1730.0, 449.0], [1738.0, 429.0], [1742.0, 473.0], [1758.0, 422.0], [1754.0, 459.0], [1750.0, 423.0], [1746.0, 427.0], [1854.0, 105.0], [1826.0, 383.0], [1830.0, 373.0], [1834.0, 374.0], [1838.0, 385.0], [1850.0, 342.0], [1842.0, 355.5], [1794.0, 207.5], [1798.0, 170.0], [1806.0, 504.0], [1818.0, 411.0], [1918.0, 426.0], [1890.0, 305.0], [1894.0, 295.0], [1898.0, 275.5], [1902.0, 243.5], [1914.0, 439.0], [1910.0, 460.0], [1906.0, 469.0], [1862.0, 79.0], [1886.0, 284.0], [1882.0, 307.0], [1878.0, 319.5], [1982.0, 105.0], [1954.0, 321.0], [1958.0, 312.0], [1962.0, 302.0], [1966.0, 283.5], [1978.0, 123.0], [1974.0, 8691.0], [1970.0, 237.0], [1922.0, 414.0], [1926.0, 392.0], [1930.0, 379.0], [1934.0, 17426.0], [1950.0, 350.0], [1938.0, 13748.0], [1990.0, 287.0], [1994.0, 3002.0], [1986.0, 63.0], [1083.0, 342.0], [1087.0, 354.0], [1059.0, 294.0], [1063.0, 312.0], [1067.0, 294.0], [1071.0, 193.0], [1079.0, 162.0], [1075.0, 179.0], [1055.0, 308.0], [1027.0, 535.0], [1031.0, 552.0], [1035.0, 546.0], [1039.0, 529.0], [1051.0, 530.0], [1047.0, 514.0], [1043.0, 544.0], [1147.0, 801.0], [1123.0, 239.0], [1127.0, 207.0], [1131.0, 793.0], [1139.0, 798.5], [1119.0, 308.5], [1091.0, 331.0], [1095.0, 321.0], [1099.0, 304.0], [1103.0, 304.0], [1115.0, 288.0], [1111.0, 305.0], [1107.0, 335.0], [1211.0, 724.5], [1215.0, 704.0], [1187.0, 748.0], [1191.0, 744.0], [1195.0, 717.0], [1199.0, 681.0], [1207.0, 764.0], [1203.0, 686.0], [1183.0, 762.5], [1159.0, 771.5], [1175.0, 747.0], [1219.0, 699.5], [1251.0, 981.5], [1247.0, 989.0], [1223.0, 718.0], [1227.0, 702.0], [1231.0, 703.0], [1243.0, 1008.5], [1239.0, 1047.0], [1339.0, 818.0], [1343.0, 852.0], [1315.0, 900.0], [1327.0, 960.0], [1335.0, 862.3333333333334], [1331.0, 944.0], [1311.0, 959.0], [1283.0, 893.0], [1287.0, 943.0], [1307.0, 938.0], [1391.0, 711.8], [1387.0, 744.0], [1355.0, 747.5], [1351.0, 807.0], [1347.0, 892.0], [1447.0, 635.0], [1451.0, 541.8750000000001], [1439.0, 605.0], [1411.0, 702.0], [1415.0, 657.0], [1419.0, 638.0], [1435.0, 615.0], [1427.0, 651.0], [1455.0, 275.0], [1535.0, 171.0], [1531.0, 190.0], [1507.0, 518.0], [1511.0, 501.0], [1515.0, 518.0], [1519.0, 482.0], [1523.0, 460.0], [1503.0, 539.0], [1475.0, 634.0], [1479.0, 597.0], [1483.0, 614.0], [1499.0, 572.0], [1495.0, 577.0], [1491.0, 569.0], [1591.0, 489.0], [1599.0, 455.0], [1575.0, 512.5], [1579.0, 501.6666666666667], [1583.0, 494.0], [1595.0, 451.0], [1587.0, 495.0], [1539.0, 85.0], [1543.0, 584.0], [1551.0, 578.0], [1563.0, 535.5], [1559.0, 528.0], [1555.0, 541.0], [1659.0, 848.0], [1655.0, 835.0], [1663.0, 767.0], [1635.0, 842.0], [1639.0, 869.0], [1643.0, 645.0], [1651.0, 851.5], [1615.0, 879.5], [1611.0, 940.0], [1607.0, 427.0], [1603.0, 424.0], [1631.0, 851.0], [1623.0, 878.0], [1619.0, 846.0], [1723.0, 461.0], [1719.0, 492.0], [1727.0, 500.5], [1699.0, 647.0], [1703.0, 617.0], [1707.0, 617.5], [1715.0, 493.0], [1695.0, 639.0], [1667.0, 786.5], [1671.0, 808.0], [1675.0, 731.0], [1679.0, 761.0], [1691.0, 635.0], [1687.0, 625.0], [1683.0, 693.0], [1787.0, 223.0], [1791.0, 212.0], [1763.0, 366.0], [1767.0, 361.0], [1771.0, 272.0], [1783.0, 255.0], [1779.0, 257.0], [1759.0, 423.6666666666667], [1731.0, 462.0], [1735.0, 433.0], [1755.0, 433.0], [1751.0, 434.6666666666667], [1747.0, 461.0], [1851.0, 347.0], [1855.0, 108.0], [1827.0, 389.0], [1831.0, 414.0], [1835.0, 390.0], [1839.0, 358.0], [1847.0, 362.5], [1843.0, 366.0], [1823.0, 420.5], [1795.0, 184.0], [1799.0, 164.0], [1803.0, 539.5], [1807.0, 519.0], [1819.0, 441.0], [1815.0, 418.0], [1915.0, 446.0], [1919.0, 440.0], [1891.0, 306.0], [1895.0, 291.0], [1899.0, 268.0], [1903.0, 457.0], [1911.0, 445.0], [1907.0, 466.0], [1887.0, 291.0], [1859.0, 99.0], [1871.0, 343.0], [1863.0, 80.5], [1883.0, 320.5], [1979.0, 122.0], [1983.0, 91.0], [1955.0, 311.0], [1959.0, 315.0], [1963.0, 303.0], [1967.0, 235.0], [1975.0, 8507.0], [1971.0, 8817.0], [1951.0, 322.0], [1923.0, 404.0], [1927.0, 401.0], [1931.0, 302.0], [1935.0, 17282.0], [1939.0, 13362.0], [1999.0, 279.0], [1991.0, 288.0], [1987.0, 6225.0], [1.0, 71.15789473684211]], "isOverall": false, "label": "Sunstar Home Japan", "isController": false}, {"data": [[34.47140810861307, 67.59625085632477]], "isOverall": false, "label": "Sunstar Home Japan-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 12.9, "minX": 1.62583991E12, "maxY": 7342142.5, "series": [{"data": [[1.62583999E12, 1687928.0], [1.62584076E12, 5327322.0], [1.62584025E12, 1707494.9], [1.62584008E12, 492728.5], [1.62584059E12, 4112491.2], [1.62584042E12, 2888072.0], [1.62583991E12, 146373.3], [1.62584068E12, 6859171.0], [1.62584017E12, 7312871.5], [1.62584E12, 3785638.4], [1.62584051E12, 7317750.0], [1.62584034E12, 6703088.7], [1.62583998E12, 1966128.4], [1.62584015E12, 7307993.0], [1.62584041E12, 4132089.5], [1.62584024E12, 2902707.5], [1.62584075E12, 6512797.5], [1.62584058E12, 5073536.0], [1.62584007E12, 1697718.0], [1.62584033E12, 7307993.0], [1.62584016E12, 7312871.5], [1.62584067E12, 5678574.0], [1.6258405E12, 6864049.5], [1.62584014E12, 6883563.5], [1.62584031E12, 5693209.5], [1.62583997E12, 965923.2], [1.62584057E12, 6532177.6], [1.6258404E12, 5107789.5], [1.62584074E12, 7303114.5], [1.62584006E12, 2892950.5], [1.62584023E12, 4122332.5], [1.62584049E12, 5673695.5], [1.62584032E12, 6883563.5], [1.62584066E12, 4473584.5], [1.62583996E12, 1185452.7], [1.62584047E12, 3253959.5], [1.62584013E12, 5673695.5], [1.6258403E12, 4468706.0], [1.62584073E12, 7307993.0], [1.62584056E12, 7307843.2], [1.62584039E12, 6522554.5], [1.62584005E12, 4088183.0], [1.62584022E12, 5322443.5], [1.62584065E12, 3263716.5], [1.62584048E12, 4473584.5], [1.62584029E12, 3258838.0], [1.62584012E12, 4273566.0], [1.62584063E12, 824454.9], [1.62584046E12, 2048970.0], [1.62583995E12, 312221.4], [1.62584072E12, 7322628.5], [1.62584021E12, 6532311.5], [1.62584004E12, 5307808.0], [1.62584055E12, 7302964.8], [1.62584038E12, 7293357.5], [1.62584081E12, 4878.5], [1.62584064E12, 2048970.0], [1.62584045E12, 834223.5], [1.62584028E12, 2048970.0], [1.62584079E12, 1692839.5], [1.62584062E12, 487840.0], [1.62584011E12, 3200296.0], [1.62584037E12, 7312871.5], [1.6258402E12, 7298236.0], [1.62584071E12, 7298236.0], [1.62584054E12, 7317520.4], [1.62584003E12, 6385956.5], [1.6258408E12, 497607.0], [1.62584061E12, 1702566.8], [1.62584044E12, 478093.0], [1.62584078E12, 2902707.5], [1.6258401E12, 2063605.5], [1.62584027E12, 843980.5], [1.62583993E12, 268314.3], [1.62584053E12, 3117232.5], [1.62584036E12, 7303114.5], [1.6258407E12, 7278722.0], [1.62584002E12, 7288344.0], [1.62584019E12, 7317750.0], [1.62584077E12, 4127211.0], [1.6258406E12, 2888012.8], [1.62583992E12, 253699.8], [1.62584043E12, 1692839.5], [1.62584009E12, 834223.5], [1.62584026E12, 507366.9], [1.62584069E12, 7332385.5], [1.62584052E12, 7337264.0], [1.62584035E12, 7342142.5], [1.62584001E12, 6078486.4], [1.62584018E12, 7307993.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62583999E12, 4463.4], [1.62584076E12, 14086.8], [1.62584025E12, 4515.0], [1.62584008E12, 1302.9], [1.62584059E12, 10874.7], [1.62584042E12, 7636.8], [1.62583991E12, 387.0], [1.62584068E12, 18137.4], [1.62584017E12, 19337.1], [1.62584E12, 10010.4], [1.62584051E12, 19350.0], [1.62584034E12, 17724.6], [1.62583998E12, 5198.7], [1.62584015E12, 19324.2], [1.62584041E12, 10926.3], [1.62584024E12, 7675.5], [1.62584075E12, 17221.5], [1.62584058E12, 13416.0], [1.62584007E12, 4489.2], [1.62584033E12, 19324.2], [1.62584016E12, 19337.1], [1.62584067E12, 15015.6], [1.6258405E12, 18150.3], [1.62584014E12, 18201.9], [1.62584031E12, 15054.3], [1.62583997E12, 2554.2], [1.62584057E12, 17273.1], [1.6258404E12, 13506.3], [1.62584074E12, 19311.3], [1.62584006E12, 7649.7], [1.62584023E12, 10900.5], [1.62584049E12, 15002.7], [1.62584032E12, 18201.9], [1.62584066E12, 11829.3], [1.62583996E12, 3134.7], [1.62584047E12, 8604.3], [1.62584013E12, 15002.7], [1.6258403E12, 11816.4], [1.62584073E12, 19324.2], [1.62584056E12, 19324.2], [1.62584039E12, 17247.3], [1.62584005E12, 10810.2], [1.62584022E12, 14073.9], [1.62584065E12, 8630.1], [1.62584048E12, 11829.3], [1.62584029E12, 8617.2], [1.62584012E12, 11300.4], [1.62584063E12, 2180.1], [1.62584046E12, 5418.0], [1.62583995E12, 825.6], [1.62584072E12, 19362.9], [1.62584021E12, 17273.1], [1.62584004E12, 14035.2], [1.62584055E12, 19311.3], [1.62584038E12, 19285.5], [1.62584081E12, 12.9], [1.62584064E12, 5418.0], [1.62584045E12, 2205.9], [1.62584028E12, 5418.0], [1.62584079E12, 4476.3], [1.62584062E12, 1290.0], [1.62584011E12, 8462.4], [1.62584037E12, 19337.1], [1.6258402E12, 19298.4], [1.62584071E12, 19298.4], [1.62584054E12, 19350.0], [1.62584003E12, 16886.1], [1.6258408E12, 1315.8], [1.62584061E12, 4502.1], [1.62584044E12, 1264.2], [1.62584078E12, 7675.5], [1.6258401E12, 5456.7], [1.62584027E12, 2231.7], [1.62583993E12, 709.5], [1.62584053E12, 8243.1], [1.62584036E12, 19311.3], [1.6258407E12, 19246.8], [1.62584002E12, 19272.6], [1.62584019E12, 19350.0], [1.62584077E12, 10913.4], [1.6258406E12, 7636.8], [1.62583992E12, 670.8], [1.62584043E12, 4476.3], [1.62584009E12, 2205.9], [1.62584026E12, 1341.6], [1.62584069E12, 19388.7], [1.62584052E12, 19401.6], [1.62584035E12, 19414.5], [1.62584001E12, 16073.4], [1.62584018E12, 19324.2]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62584081E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 21.452702702702734, "minX": 1.62583991E12, "maxY": 2871.7500000000005, "series": [{"data": [[1.62583999E12, 407.0433526011562], [1.62584076E12, 55.52014652014652], [1.62584025E12, 37.70857142857145], [1.62584008E12, 50.3960396039604], [1.62584059E12, 22.39620403321472], [1.62584042E12, 52.75675675675677], [1.62583991E12, 2540.4666666666662], [1.62584068E12, 58.27169274537694], [1.62584017E12, 59.11874583055373], [1.62584E12, 692.7306701030934], [1.62584051E12, 60.623333333333306], [1.62584034E12, 40.176855895196525], [1.62583998E12, 660.0124069478904], [1.62584015E12, 58.86048064085447], [1.62584041E12, 53.25737898465174], [1.62584024E12, 52.71932773109239], [1.62584075E12, 58.047191011235945], [1.62584058E12, 29.973076923076963], [1.62584007E12, 54.21264367816092], [1.62584033E12, 30.857142857142836], [1.62584016E12, 59.96597731821215], [1.62584067E12, 55.23281786941582], [1.6258405E12, 58.14925373134325], [1.62584014E12, 57.05031892274978], [1.62584031E12, 38.24764353041983], [1.62583997E12, 565.7626262626261], [1.62584057E12, 25.514563106796114], [1.6258404E12, 41.039159503342916], [1.62584074E12, 59.979959919839665], [1.62584006E12, 53.69814502529507], [1.62584023E12, 53.198816568047334], [1.62584049E12, 54.32760103181433], [1.62584032E12, 30.444365698086486], [1.62584066E12, 53.20937840785171], [1.62583996E12, 562.0082304526751], [1.62584047E12, 52.964017991004475], [1.62584013E12, 55.58899398108339], [1.6258403E12, 53.43449781659386], [1.62584073E12, 60.556742323097524], [1.62584056E12, 27.680240320427213], [1.62584039E12, 25.771877337322376], [1.62584005E12, 61.557279236276834], [1.62584022E12, 56.347387717690204], [1.62584065E12, 52.94319880418537], [1.62584048E12, 53.69356597600874], [1.62584029E12, 52.679640718562894], [1.62584012E12, 58.82648401826481], [1.62584063E12, 52.792899408284], [1.62584046E12, 50.70476190476187], [1.62583995E12, 358.3124999999999], [1.62584072E12, 60.20986009327115], [1.62584021E12, 56.95294996265872], [1.62584004E12, 79.48161764705884], [1.62584055E12, 27.566466265865014], [1.62584038E12, 27.65418060200667], [1.62584081E12, 58.0], [1.62584064E12, 52.00476190476189], [1.62584045E12, 51.87134502923978], [1.62584028E12, 44.51190476190473], [1.62584079E12, 50.63400576368875], [1.62584062E12, 51.16000000000002], [1.62584011E12, 54.35975609756103], [1.62584037E12, 27.940627084723143], [1.6258402E12, 58.98128342245982], [1.62584071E12, 60.76470588235288], [1.62584054E12, 27.187333333333314], [1.62584003E12, 83.86096256684485], [1.6258408E12, 51.43137254901963], [1.62584061E12, 36.627507163323784], [1.62584044E12, 50.78571428571429], [1.62584078E12, 52.30924369747902], [1.6258401E12, 53.063829787234056], [1.62584027E12, 25.034682080924842], [1.62583993E12, 342.0909090909091], [1.62584053E12, 89.39906103286377], [1.62584036E12, 28.03340013360051], [1.6258407E12, 62.162198391420844], [1.62584002E12, 89.2523427041501], [1.62584019E12, 59.50800000000011], [1.62584077E12, 52.92198581560277], [1.6258406E12, 21.452702702702734], [1.62583992E12, 2871.7500000000005], [1.62584043E12, 52.14697406340057], [1.62584009E12, 50.5438596491228], [1.62584026E12, 24.855769230769226], [1.62584069E12, 59.583499667332035], [1.62584052E12, 42.031250000000036], [1.62584035E12, 28.669767441860486], [1.62584001E12, 88.92375601926157], [1.62584018E12, 59.156875834445884]], "isOverall": false, "label": "Sunstar Home Japan", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62584081E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 19.359797297297288, "minX": 1.62583991E12, "maxY": 2833.230769230769, "series": [{"data": [[1.62583999E12, 397.7572254335261], [1.62584076E12, 48.37087912087918], [1.62584025E12, 33.11142857142859], [1.62584008E12, 43.07920792079211], [1.62584059E12, 20.2455516014235], [1.62584042E12, 45.434121621621586], [1.62583991E12, 2443.0], [1.62584068E12, 51.20625889046943], [1.62584017E12, 52.03602401601064], [1.62584E12, 679.3582474226807], [1.62584051E12, 53.8226666666667], [1.62584034E12, 37.38791848617177], [1.62583998E12, 642.5533498759299], [1.62584015E12, 52.00934579439259], [1.62584041E12, 46.05548996458088], [1.62584024E12, 45.415126050420184], [1.62584075E12, 50.98127340823966], [1.62584058E12, 27.27788461538463], [1.62584007E12, 46.87068965517241], [1.62584033E12, 28.335113484646147], [1.62584016E12, 53.07938625750503], [1.62584067E12, 47.991408934707884], [1.6258405E12, 51.200426439232366], [1.62584014E12, 50.0389794472006], [1.62584031E12, 33.94858611825191], [1.62583997E12, 557.8787878787882], [1.62584057E12, 23.268110530246446], [1.6258404E12, 36.10219675262655], [1.62584074E12, 53.14562458249829], [1.62584006E12, 46.51433389544687], [1.62584023E12, 45.94674556213019], [1.62584049E12, 47.08254514187443], [1.62584032E12, 27.776754075124035], [1.62584066E12, 46.019629225736075], [1.62583996E12, 551.3868312757202], [1.62584047E12, 45.61919040479759], [1.62584013E12, 48.29578675838346], [1.6258403E12, 46.17794759825328], [1.62584073E12, 53.66288384512687], [1.62584056E12, 25.36114819759678], [1.62584039E12, 23.495138369483904], [1.62584005E12, 54.59546539379476], [1.62584022E12, 48.99908340971581], [1.62584065E12, 45.708520179372236], [1.62584048E12, 46.402399127589916], [1.62584029E12, 45.42814371257483], [1.62584012E12, 51.50570776255704], [1.62584063E12, 45.568047337278095], [1.62584046E12, 43.39999999999995], [1.62583995E12, 338.93750000000006], [1.62584072E12, 53.21985343104595], [1.62584021E12, 49.92531740104557], [1.62584004E12, 72.54319852941173], [1.62584055E12, 25.22979291917166], [1.62584038E12, 25.385953177257534], [1.62584081E12, 55.0], [1.62584064E12, 44.590476190476195], [1.62584045E12, 44.538011695906434], [1.62584028E12, 38.828571428571436], [1.62584079E12, 43.38904899135445], [1.62584062E12, 43.660000000000004], [1.62584011E12, 46.71798780487808], [1.62584037E12, 25.555703802535028], [1.6258402E12, 52.00401069518712], [1.62584071E12, 53.658422459893124], [1.62584054E12, 24.95133333333334], [1.62584003E12, 76.94423223834988], [1.6258408E12, 44.19607843137256], [1.62584061E12, 31.962750716332383], [1.62584044E12, 43.51020408163265], [1.62584078E12, 45.00672268907564], [1.6258401E12, 45.76122931442082], [1.62584027E12, 22.71098265895955], [1.62583993E12, 336.8363636363636], [1.62584053E12, 84.7230046948357], [1.62584036E12, 25.71743486973947], [1.6258407E12, 55.193029490616546], [1.62584002E12, 82.69477911646594], [1.62584019E12, 52.60999999999997], [1.62584077E12, 45.61583924349883], [1.6258406E12, 19.359797297297288], [1.62583992E12, 2833.230769230769], [1.62584043E12, 44.86455331412103], [1.62584009E12, 43.251461988304094], [1.62584026E12, 22.394230769230774], [1.62584069E12, 52.59414504324676], [1.62584052E12, 37.840425531914846], [1.62584035E12, 26.270431893687743], [1.62584001E12, 81.98555377207062], [1.62584018E12, 52.23765020026694]], "isOverall": false, "label": "Sunstar Home Japan", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62584081E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 15.983108108108109, "minX": 1.62583991E12, "maxY": 644.7074742268038, "series": [{"data": [[1.62583999E12, 379.4682080924859], [1.62584076E12, 37.70787545787544], [1.62584025E12, 25.654285714285752], [1.62584008E12, 33.574257425742594], [1.62584059E12, 16.80545670225385], [1.62584042E12, 35.10472972972969], [1.62583991E12, 181.9999999999999], [1.62584068E12, 40.189900426742675], [1.62584017E12, 40.99933288859243], [1.62584E12, 644.7074742268038], [1.62584051E12, 42.4279999999999], [1.62584034E12, 32.28457059679769], [1.62583998E12, 586.1836228287842], [1.62584015E12, 40.92656875834442], [1.62584041E12, 35.77685950413216], [1.62584024E12, 35.08067226890755], [1.62584075E12, 40.01348314606745], [1.62584058E12, 22.629807692307722], [1.62584007E12, 36.844827586206904], [1.62584033E12, 23.1502002670227], [1.62584016E12, 41.94062708472312], [1.62584067E12, 37.47079037800686], [1.6258405E12, 40.04406538734896], [1.62584014E12, 39.28915662650602], [1.62584031E12, 27.06683804627251], [1.62583997E12, 538.59595959596], [1.62584057E12, 19.477221807318884], [1.6258404E12, 28.680993314231163], [1.62584074E12, 41.91315965263863], [1.62584006E12, 36.2849915682968], [1.62584023E12, 35.72426035502959], [1.62584049E12, 36.701633705932935], [1.62584032E12, 22.676824946846203], [1.62584066E12, 35.68266085059981], [1.62583996E12, 528.2469135802465], [1.62584047E12, 35.29985007496251], [1.62584013E12, 37.91573516766986], [1.6258403E12, 35.85589519650653], [1.62584073E12, 42.41054739652869], [1.62584056E12, 21.217623497997316], [1.62584039E12, 19.602094240837708], [1.62584005E12, 43.57159904534601], [1.62584022E12, 38.22273143904675], [1.62584065E12, 35.47234678624819], [1.62584048E12, 36.07088331515816], [1.62584029E12, 35.31137724550899], [1.62584012E12, 40.50570776255706], [1.62584063E12, 35.5680473372781], [1.62584046E12, 33.32142857142854], [1.62583995E12, 314.09375], [1.62584072E12, 42.066622251832136], [1.62584021E12, 39.153846153846196], [1.62584004E12, 60.35018382352934], [1.62584055E12, 21.13560454241814], [1.62584038E12, 21.252173913043492], [1.62584081E12, 41.0], [1.62584064E12, 34.335714285714275], [1.62584045E12, 34.695906432748544], [1.62584028E12, 30.3547619047619], [1.62584079E12, 33.46109510086454], [1.62584062E12, 33.91000000000001], [1.62584011E12, 36.580792682926784], [1.62584037E12, 21.481654436290853], [1.6258402E12, 41.037433155080166], [1.62584071E12, 42.425133689839484], [1.62584054E12, 20.895333333333344], [1.62584003E12, 64.8120702826585], [1.6258408E12, 34.52941176470589], [1.62584061E12, 24.787965616045838], [1.62584044E12, 33.948979591836704], [1.62584078E12, 35.0487394957983], [1.6258401E12, 35.25295508274231], [1.62584027E12, 18.317919075144502], [1.62583993E12, 320.52727272727265], [1.62584053E12, 22.974960876369327], [1.62584036E12, 21.50501002004007], [1.6258407E12, 43.2975871313672], [1.62584002E12, 69.80589022757687], [1.62584019E12, 41.348000000000056], [1.62584077E12, 35.64893617021281], [1.6258406E12, 15.983108108108109], [1.62583992E12, 266.846153846154], [1.62584043E12, 34.674351585014385], [1.62584009E12, 33.69590643274855], [1.62584026E12, 17.576923076923066], [1.62584069E12, 41.40119760479033], [1.62584052E12, 30.597074468085047], [1.62584035E12, 22.134219269102996], [1.62584001E12, 69.70626003210262], [1.62584018E12, 41.146194926568754]], "isOverall": false, "label": "Sunstar Home Japan", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62584081E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 14.0, "minX": 1.62583991E12, "maxY": 17935.0, "series": [{"data": [[1.62583999E12, 630.0], [1.62584076E12, 157.0], [1.62584025E12, 129.0], [1.62584008E12, 74.0], [1.62584059E12, 53.0], [1.62584042E12, 153.0], [1.62583991E12, 9153.0], [1.62584068E12, 326.0], [1.62584017E12, 147.0], [1.62584E12, 1882.0], [1.62584051E12, 245.0], [1.62584034E12, 686.0], [1.62583998E12, 1089.0], [1.62584015E12, 210.0], [1.62584041E12, 143.0], [1.62584024E12, 151.0], [1.62584075E12, 363.0], [1.62584058E12, 465.0], [1.62584007E12, 135.0], [1.62584033E12, 163.0], [1.62584016E12, 235.0], [1.62584067E12, 148.0], [1.6258405E12, 171.0], [1.62584014E12, 116.0], [1.62584031E12, 193.0], [1.62583997E12, 765.0], [1.62584057E12, 76.0], [1.6258404E12, 176.0], [1.62584074E12, 147.0], [1.62584006E12, 155.0], [1.62584023E12, 181.0], [1.62584049E12, 184.0], [1.62584032E12, 128.0], [1.62584066E12, 163.0], [1.62583996E12, 940.0], [1.62584047E12, 195.0], [1.62584013E12, 130.0], [1.6258403E12, 182.0], [1.62584073E12, 165.0], [1.62584056E12, 114.0], [1.62584039E12, 111.0], [1.62584005E12, 164.0], [1.62584022E12, 179.0], [1.62584065E12, 132.0], [1.62584048E12, 183.0], [1.62584029E12, 106.0], [1.62584012E12, 561.0], [1.62584063E12, 201.0], [1.62584046E12, 146.0], [1.62583995E12, 617.0], [1.62584072E12, 205.0], [1.62584021E12, 168.0], [1.62584004E12, 405.0], [1.62584055E12, 85.0], [1.62584038E12, 272.0], [1.62584081E12, 58.0], [1.62584064E12, 182.0], [1.62584045E12, 150.0], [1.62584028E12, 190.0], [1.62584079E12, 118.0], [1.62584062E12, 83.0], [1.62584011E12, 325.0], [1.62584037E12, 163.0], [1.6258402E12, 151.0], [1.62584071E12, 242.0], [1.62584054E12, 98.0], [1.62584003E12, 214.0], [1.6258408E12, 107.0], [1.62584061E12, 100.0], [1.62584044E12, 71.0], [1.62584078E12, 222.0], [1.6258401E12, 209.0], [1.62584027E12, 112.0], [1.62583993E12, 469.0], [1.62584053E12, 8795.0], [1.62584036E12, 149.0], [1.6258407E12, 221.0], [1.62584002E12, 217.0], [1.62584019E12, 187.0], [1.62584077E12, 129.0], [1.6258406E12, 50.0], [1.62583992E12, 17935.0], [1.62584043E12, 221.0], [1.62584009E12, 75.0], [1.62584026E12, 81.0], [1.62584069E12, 177.0], [1.62584052E12, 180.0], [1.62584035E12, 126.0], [1.62584001E12, 217.0], [1.62584018E12, 167.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62583999E12, 113.0], [1.62584076E12, 45.0], [1.62584025E12, 20.0], [1.62584008E12, 44.0], [1.62584059E12, 14.0], [1.62584042E12, 45.0], [1.62583991E12, 63.0], [1.62584068E12, 46.0], [1.62584017E12, 46.0], [1.62584E12, 47.0], [1.62584051E12, 45.0], [1.62584034E12, 16.0], [1.62583998E12, 162.0], [1.62584015E12, 45.0], [1.62584041E12, 44.0], [1.62584024E12, 45.0], [1.62584075E12, 46.0], [1.62584058E12, 14.0], [1.62584007E12, 45.0], [1.62584033E12, 21.0], [1.62584016E12, 46.0], [1.62584067E12, 45.0], [1.6258405E12, 46.0], [1.62584014E12, 45.0], [1.62584031E12, 21.0], [1.62583997E12, 61.0], [1.62584057E12, 14.0], [1.6258404E12, 15.0], [1.62584074E12, 45.0], [1.62584006E12, 45.0], [1.62584023E12, 45.0], [1.62584049E12, 45.0], [1.62584032E12, 21.0], [1.62584066E12, 44.0], [1.62583996E12, 164.0], [1.62584047E12, 44.0], [1.62584013E12, 45.0], [1.6258403E12, 45.0], [1.62584073E12, 46.0], [1.62584056E12, 14.0], [1.62584039E12, 14.0], [1.62584005E12, 45.0], [1.62584022E12, 45.0], [1.62584065E12, 44.0], [1.62584048E12, 45.0], [1.62584029E12, 44.0], [1.62584012E12, 45.0], [1.62584063E12, 44.0], [1.62584046E12, 44.0], [1.62583995E12, 79.0], [1.62584072E12, 46.0], [1.62584021E12, 45.0], [1.62584004E12, 46.0], [1.62584055E12, 15.0], [1.62584038E12, 15.0], [1.62584081E12, 58.0], [1.62584064E12, 44.0], [1.62584045E12, 44.0], [1.62584028E12, 20.0], [1.62584079E12, 44.0], [1.62584062E12, 44.0], [1.62584011E12, 45.0], [1.62584037E12, 15.0], [1.6258402E12, 46.0], [1.62584071E12, 46.0], [1.62584054E12, 15.0], [1.62584003E12, 47.0], [1.6258408E12, 45.0], [1.62584061E12, 14.0], [1.62584044E12, 44.0], [1.62584078E12, 45.0], [1.6258401E12, 44.0], [1.62584027E12, 20.0], [1.62583993E12, 239.0], [1.62584053E12, 16.0], [1.62584036E12, 15.0], [1.6258407E12, 46.0], [1.62584002E12, 50.0], [1.62584019E12, 47.0], [1.62584077E12, 44.0], [1.6258406E12, 14.0], [1.62583992E12, 235.0], [1.62584043E12, 44.0], [1.62584009E12, 44.0], [1.62584026E12, 20.0], [1.62584069E12, 46.0], [1.62584052E12, 16.0], [1.62584035E12, 15.0], [1.62584001E12, 48.0], [1.62584018E12, 46.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62583999E12, 554.6], [1.62584076E12, 62.0], [1.62584025E12, 53.0], [1.62584008E12, 54.0], [1.62584059E12, 29.0], [1.62584042E12, 57.700000000000045], [1.62583991E12, 8804.4], [1.62584068E12, 67.0], [1.62584017E12, 68.0], [1.62584E12, 1200.5000000000005], [1.62584051E12, 70.0], [1.62584034E12, 73.0], [1.62583998E12, 959.6], [1.62584015E12, 68.0], [1.62584041E12, 59.0], [1.62584024E12, 57.0], [1.62584075E12, 65.0], [1.62584058E12, 37.0], [1.62584007E12, 66.0], [1.62584033E12, 39.0], [1.62584016E12, 70.0], [1.62584067E12, 62.5], [1.6258405E12, 67.0], [1.62584014E12, 66.0], [1.62584031E12, 56.0], [1.62583997E12, 724.0], [1.62584057E12, 32.0], [1.6258404E12, 57.0], [1.62584074E12, 70.0], [1.62584006E12, 60.0], [1.62584023E12, 58.39999999999998], [1.62584049E12, 60.0], [1.62584032E12, 38.0], [1.62584066E12, 59.0], [1.62583996E12, 851.6], [1.62584047E12, 57.0], [1.62584013E12, 63.0], [1.6258403E12, 58.0], [1.62584073E12, 71.0], [1.62584056E12, 36.0], [1.62584039E12, 33.0], [1.62584005E12, 80.0], [1.62584022E12, 64.0], [1.62584065E12, 58.0], [1.62584048E12, 59.0], [1.62584029E12, 58.0], [1.62584012E12, 63.0], [1.62584063E12, 57.0], [1.62584046E12, 54.900000000000034], [1.62583995E12, 521.5], [1.62584072E12, 70.79999999999995], [1.62584021E12, 64.0], [1.62584004E12, 112.0], [1.62584055E12, 35.0], [1.62584038E12, 36.0], [1.62584081E12, 58.0], [1.62584064E12, 56.0], [1.62584045E12, 56.0], [1.62584028E12, 56.0], [1.62584079E12, 55.0], [1.62584062E12, 57.900000000000006], [1.62584011E12, 58.0], [1.62584037E12, 36.0], [1.6258402E12, 68.0], [1.62584071E12, 70.0], [1.62584054E12, 34.0], [1.62584003E12, 114.0], [1.6258408E12, 55.0], [1.62584061E12, 53.0], [1.62584044E12, 55.10000000000001], [1.62584078E12, 56.0], [1.6258401E12, 60.0], [1.62584027E12, 29.0], [1.62583993E12, 455.2], [1.62584053E12, 42.0], [1.62584036E12, 36.0], [1.6258407E12, 75.0], [1.62584002E12, 118.0], [1.62584019E12, 70.0], [1.62584077E12, 58.0], [1.6258406E12, 27.0], [1.62583992E12, 13777.4], [1.62584043E12, 57.0], [1.62584009E12, 55.0], [1.62584026E12, 31.0], [1.62584069E12, 69.0], [1.62584052E12, 66.0], [1.62584035E12, 37.0], [1.62584001E12, 119.29999999999995], [1.62584018E12, 69.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62583999E12, 618.5899999999999], [1.62584076E12, 87.06999999999994], [1.62584025E12, 90.49000000000001], [1.62584008E12, 73.86000000000003], [1.62584059E12, 39.559999999999945], [1.62584042E12, 92.35000000000025], [1.62583991E12, 9153.0], [1.62584068E12, 90.93000000000006], [1.62584017E12, 90.0], [1.62584E12, 1744.69], [1.62584051E12, 96.99000000000001], [1.62584034E12, 239.25], [1.62583998E12, 1041.6], [1.62584015E12, 91.0], [1.62584041E12, 89.11999999999989], [1.62584024E12, 90.19999999999982], [1.62584075E12, 93.0], [1.62584058E12, 187.0], [1.62584007E12, 96.50999999999999], [1.62584033E12, 68.00999999999999], [1.62584016E12, 99.0], [1.62584067E12, 95.69999999999982], [1.6258405E12, 101.0], [1.62584014E12, 82.87999999999988], [1.62584031E12, 85.59999999999968], [1.62583997E12, 764.01], [1.62584057E12, 46.59999999999991], [1.6258404E12, 85.55999999999995], [1.62584074E12, 93.01999999999998], [1.62584006E12, 89.23999999999978], [1.62584023E12, 74.07999999999993], [1.62584049E12, 83.0], [1.62584032E12, 65.87999999999988], [1.62584066E12, 80.81999999999994], [1.62583996E12, 913.9200000000001], [1.62584047E12, 110.9200000000003], [1.62584013E12, 91.3599999999999], [1.6258403E12, 99.45000000000061], [1.62584073E12, 95.00999999999999], [1.62584056E12, 55.00999999999999], [1.62584039E12, 45.0], [1.62584005E12, 128.22000000000003], [1.62584022E12, 101.15999999999985], [1.62584065E12, 92.599999999999], [1.62584048E12, 97.81999999999994], [1.62584029E12, 83.23999999999978], [1.62584012E12, 215.92000000000007], [1.62584063E12, 155.50000000000074], [1.62584046E12, 70.74000000000012], [1.62583995E12, 617.0], [1.62584072E12, 92.0], [1.62584021E12, 80.59999999999991], [1.62584004E12, 174.0], [1.62584055E12, 53.01999999999998], [1.62584038E12, 52.07999999999993], [1.62584081E12, 58.0], [1.62584064E12, 90.79000000000002], [1.62584045E12, 146.4], [1.62584028E12, 122.69000000000023], [1.62584079E12, 85.55999999999995], [1.62584062E12, 82.86999999999993], [1.62584011E12, 105.8599999999999], [1.62584037E12, 51.0], [1.6258402E12, 87.0], [1.62584071E12, 96.02999999999997], [1.62584054E12, 50.99000000000001], [1.62584003E12, 165.0], [1.6258408E12, 106.24999999999997], [1.62584061E12, 84.0], [1.62584044E12, 71.0], [1.62584078E12, 88.0], [1.6258401E12, 104.31999999999994], [1.62584027E12, 86.83999999999969], [1.62583993E12, 469.0], [1.62584053E12, 3445.400000000124], [1.62584036E12, 55.01999999999998], [1.6258407E12, 112.06999999999994], [1.62584002E12, 159.0], [1.62584019E12, 86.99000000000001], [1.62584077E12, 83.88999999999965], [1.6258406E12, 35.07000000000005], [1.62583992E12, 17935.0], [1.62584043E12, 111.51999999999998], [1.62584009E12, 72.12], [1.62584026E12, 79.3500000000001], [1.62584069E12, 92.92000000000007], [1.62584052E12, 92.0], [1.62584035E12, 65.88000000000011], [1.62584001E12, 158.1199999999999], [1.62584018E12, 90.01999999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62583999E12, 576.2499999999999], [1.62584076E12, 67.0], [1.62584025E12, 55.44999999999999], [1.62584008E12, 57.0], [1.62584059E12, 30.0], [1.62584042E12, 63.35000000000002], [1.62583991E12, 9031.45], [1.62584068E12, 71.0], [1.62584017E12, 73.0], [1.62584E12, 1418.1999999999998], [1.62584051E12, 77.0], [1.62584034E12, 85.0], [1.62583998E12, 990.0], [1.62584015E12, 73.0], [1.62584041E12, 62.59999999999991], [1.62584024E12, 63.0], [1.62584075E12, 70.0], [1.62584058E12, 45.94999999999993], [1.62584007E12, 77.0], [1.62584033E12, 46.0], [1.62584016E12, 75.0], [1.62584067E12, 67.0], [1.6258405E12, 73.0], [1.62584014E12, 70.0], [1.62584031E12, 61.0], [1.62583997E12, 736.3], [1.62584057E12, 36.0], [1.6258404E12, 60.0], [1.62584074E12, 76.0], [1.62584006E12, 68.0], [1.62584023E12, 62.0], [1.62584049E12, 64.0], [1.62584032E12, 44.0], [1.62584066E12, 62.0], [1.62583996E12, 876.8], [1.62584047E12, 63.0], [1.62584013E12, 67.0], [1.6258403E12, 63.14999999999998], [1.62584073E12, 76.0], [1.62584056E12, 39.0], [1.62584039E12, 36.0], [1.62584005E12, 92.0], [1.62584022E12, 71.0], [1.62584065E12, 62.0], [1.62584048E12, 65.0], [1.62584029E12, 60.0], [1.62584012E12, 71.0], [1.62584063E12, 63.5], [1.62584046E12, 58.0], [1.62583995E12, 546.0], [1.62584072E12, 76.0], [1.62584021E12, 67.0], [1.62584004E12, 130.0], [1.62584055E12, 39.0], [1.62584038E12, 39.0], [1.62584081E12, 58.0], [1.62584064E12, 61.0], [1.62584045E12, 61.0], [1.62584028E12, 60.94999999999999], [1.62584079E12, 58.0], [1.62584062E12, 60.94999999999999], [1.62584011E12, 64.14999999999998], [1.62584037E12, 40.0], [1.6258402E12, 73.0], [1.62584071E12, 77.0], [1.62584054E12, 38.0], [1.62584003E12, 127.0], [1.6258408E12, 59.69999999999999], [1.62584061E12, 57.5], [1.62584044E12, 61.0], [1.62584078E12, 61.19999999999993], [1.6258401E12, 67.0], [1.62584027E12, 36.29999999999998], [1.62583993E12, 461.2], [1.62584053E12, 56.0], [1.62584036E12, 41.0], [1.6258407E12, 81.0], [1.62584002E12, 128.0], [1.62584019E12, 75.0], [1.62584077E12, 63.0], [1.6258406E12, 28.0], [1.62583992E12, 17332.399999999998], [1.62584043E12, 61.599999999999966], [1.62584009E12, 60.400000000000006], [1.62584026E12, 37.5], [1.62584069E12, 74.0], [1.62584052E12, 72.0], [1.62584035E12, 43.0], [1.62584001E12, 131.0], [1.62584018E12, 74.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62584081E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 23.0, "minX": 1.0, "maxY": 6697.5, "series": [{"data": [[2.0, 3237.0], [3.0, 6697.5], [4.0, 50.0], [5.0, 51.5], [6.0, 23.0], [7.0, 51.0], [8.0, 49.0], [9.0, 50.0], [10.0, 51.5], [11.0, 82.0], [12.0, 49.0], [13.0, 49.5], [14.0, 51.5], [15.0, 51.0], [16.0, 51.0], [17.0, 167.0], [18.0, 48.0], [19.0, 50.0], [20.0, 49.0], [21.0, 49.0], [22.0, 37.5], [23.0, 49.0], [24.0, 51.0], [26.0, 49.0], [27.0, 44.5], [28.0, 46.5], [29.0, 51.0], [30.0, 50.0], [31.0, 50.0], [33.0, 51.0], [34.0, 49.0], [35.0, 49.0], [36.0, 48.0], [37.0, 50.0], [39.0, 51.0], [38.0, 50.0], [41.0, 49.0], [40.0, 50.0], [42.0, 597.5], [43.0, 50.0], [45.0, 50.0], [44.0, 52.0], [47.0, 48.0], [46.0, 51.0], [48.0, 51.0], [49.0, 51.0], [51.0, 51.0], [50.0, 52.0], [52.0, 53.0], [53.0, 50.0], [55.0, 50.0], [54.0, 49.0], [56.0, 51.0], [57.0, 51.0], [59.0, 52.0], [58.0, 51.0], [60.0, 49.0], [61.0, 51.0], [63.0, 50.0], [64.0, 52.0], [67.0, 51.0], [66.0, 51.0], [65.0, 51.0], [71.0, 53.5], [68.0, 50.0], [70.0, 51.0], [69.0, 52.0], [75.0, 51.0], [73.0, 52.0], [72.0, 51.5], [74.0, 50.0], [76.0, 53.0], [77.0, 70.0], [79.0, 52.0], [78.0, 52.0], [83.0, 53.0], [81.0, 52.0], [80.0, 50.0], [82.0, 39.5], [84.0, 53.0], [86.0, 47.0], [85.0, 52.0], [87.0, 51.0], [90.0, 53.5], [88.0, 53.0], [89.0, 52.0], [91.0, 51.0], [92.0, 53.0], [93.0, 53.0], [95.0, 46.0], [96.0, 54.0], [98.0, 52.5], [99.0, 52.0], [97.0, 52.0], [101.0, 54.0], [103.0, 52.0], [100.0, 53.0], [102.0, 52.0], [106.0, 54.0], [105.0, 52.0], [107.0, 49.0], [104.0, 53.0], [108.0, 54.0], [110.0, 56.0], [109.0, 53.0], [111.0, 54.0], [113.0, 54.0], [114.0, 57.0], [115.0, 56.0], [112.0, 56.0], [116.0, 31.0], [118.0, 54.0], [119.0, 49.0], [117.0, 28.0], [120.0, 58.0], [121.0, 54.0], [122.0, 29.0], [123.0, 55.0], [126.0, 61.0], [125.0, 47.0], [127.0, 47.0], [124.0, 56.0], [130.0, 55.0], [132.0, 47.5], [131.0, 55.0], [129.0, 30.0], [133.0, 54.0], [135.0, 26.0], [134.0, 53.0], [139.0, 48.0], [142.0, 56.0], [136.0, 52.0], [138.0, 55.0], [140.0, 53.0], [137.0, 53.0], [141.0, 53.0], [143.0, 48.5], [146.0, 58.5], [150.0, 53.0], [149.0, 54.0], [148.0, 55.0], [147.0, 55.0], [151.0, 49.0], [145.0, 56.0], [144.0, 58.0], [154.0, 98.0], [152.0, 58.0], [153.0, 55.0], [158.0, 30.0], [160.0, 502.5], [187.0, 547.0], [266.0, 875.0], [1.0, 56.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 266.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 21.0, "minX": 1.0, "maxY": 6543.0, "series": [{"data": [[2.0, 3033.5], [3.0, 6543.0], [4.0, 43.5], [5.0, 44.5], [6.0, 21.0], [7.0, 43.0], [8.0, 41.5], [9.0, 43.0], [10.0, 44.0], [11.0, 80.0], [12.0, 42.0], [13.0, 42.0], [14.0, 44.0], [15.0, 44.0], [16.0, 43.0], [17.0, 161.5], [18.0, 41.0], [19.0, 43.0], [20.0, 42.0], [21.0, 42.0], [22.0, 33.0], [23.0, 41.0], [24.0, 44.0], [26.0, 42.0], [27.0, 38.0], [28.0, 40.0], [29.0, 43.0], [30.0, 43.0], [31.0, 43.0], [33.0, 43.0], [34.0, 42.0], [35.0, 41.5], [36.0, 41.0], [37.0, 42.0], [39.0, 44.0], [38.0, 43.0], [41.0, 42.0], [40.0, 43.0], [42.0, 592.0], [43.0, 42.0], [45.0, 42.0], [44.0, 45.0], [47.0, 41.0], [46.0, 44.0], [48.0, 44.0], [49.0, 43.0], [51.0, 43.5], [50.0, 44.0], [52.0, 45.0], [53.0, 43.0], [55.0, 43.0], [54.0, 41.0], [56.0, 44.0], [57.0, 43.0], [59.0, 45.0], [58.0, 43.0], [60.0, 42.0], [61.0, 44.0], [63.0, 43.0], [64.0, 45.0], [67.0, 44.0], [66.0, 44.0], [65.0, 44.0], [71.0, 46.0], [68.0, 43.0], [70.0, 43.0], [69.0, 44.0], [75.0, 44.0], [73.0, 45.0], [72.0, 44.0], [74.0, 43.0], [76.0, 45.0], [77.0, 63.0], [79.0, 44.0], [78.0, 44.0], [83.0, 47.0], [81.0, 45.0], [80.0, 42.5], [82.0, 35.5], [84.0, 46.0], [86.0, 40.5], [85.0, 44.0], [87.0, 44.0], [90.0, 46.0], [88.0, 45.0], [89.0, 45.0], [91.0, 44.0], [92.0, 45.5], [93.0, 45.0], [95.0, 40.0], [96.0, 46.0], [98.0, 45.0], [99.0, 45.0], [97.0, 44.0], [101.0, 47.0], [103.0, 45.0], [100.0, 46.0], [102.0, 44.0], [106.0, 46.0], [105.0, 45.0], [107.0, 43.0], [104.0, 46.0], [108.0, 47.0], [110.0, 48.0], [109.0, 46.0], [111.0, 46.0], [113.0, 46.0], [114.0, 49.0], [115.0, 49.0], [112.0, 49.0], [116.0, 29.0], [118.0, 47.0], [119.0, 42.0], [117.0, 25.0], [120.0, 51.0], [121.0, 46.0], [122.0, 26.0], [123.0, 47.0], [126.0, 54.0], [125.0, 41.0], [127.0, 41.0], [124.0, 48.0], [130.0, 49.0], [132.0, 42.0], [131.0, 48.0], [129.0, 26.0], [133.0, 47.0], [135.0, 23.0], [134.0, 46.0], [139.0, 41.0], [142.0, 50.0], [136.0, 45.0], [138.0, 48.0], [140.0, 46.0], [137.0, 46.0], [141.0, 47.0], [143.0, 42.0], [146.0, 51.0], [150.0, 46.0], [149.0, 47.0], [148.0, 48.0], [147.0, 48.0], [151.0, 43.0], [145.0, 49.0], [144.0, 51.0], [154.0, 90.5], [152.0, 51.0], [153.0, 48.0], [158.0, 27.0], [160.0, 495.5], [187.0, 513.0], [266.0, 867.0], [1.0, 50.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 266.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.6258399E12, "maxY": 150.0, "series": [{"data": [[1.62583999E12, 34.7], [1.62584076E12, 109.0], [1.62584025E12, 34.8], [1.62584008E12, 10.0], [1.62584059E12, 84.2], [1.62584042E12, 59.1], [1.62583991E12, 3.4], [1.62584068E12, 140.9], [1.62584017E12, 149.9], [1.62584E12, 77.7], [1.62584051E12, 149.8], [1.62584034E12, 138.2], [1.62583998E12, 27.7], [1.62584015E12, 149.8], [1.62584041E12, 84.4], [1.62584024E12, 59.5], [1.62584075E12, 133.5], [1.62584058E12, 103.9], [1.6258399E12, 0.5], [1.62584007E12, 34.7], [1.62584033E12, 150.0], [1.62584016E12, 150.0], [1.62584067E12, 116.7], [1.6258405E12, 141.0], [1.62584014E12, 141.2], [1.62584031E12, 116.6], [1.62583997E12, 30.8], [1.62584057E12, 133.9], [1.6258404E12, 104.9], [1.62584074E12, 149.7], [1.62584006E12, 59.1], [1.62584023E12, 84.3], [1.62584049E12, 116.6], [1.62584032E12, 140.9], [1.62584066E12, 91.8], [1.62583996E12, 25.9], [1.62584047E12, 66.9], [1.62584013E12, 116.5], [1.6258403E12, 91.8], [1.62584073E12, 149.8], [1.62584056E12, 149.6], [1.62584039E12, 133.7], [1.62584005E12, 83.5], [1.62584022E12, 108.9], [1.62584065E12, 67.0], [1.62584048E12, 91.8], [1.62584029E12, 66.9], [1.62584012E12, 87.7], [1.62584063E12, 17.1], [1.62584046E12, 42.1], [1.62583995E12, 5.6], [1.62584072E12, 149.9], [1.62584021E12, 133.8], [1.62584004E12, 108.7], [1.62584055E12, 149.8], [1.62584038E12, 149.6], [1.62584081E12, 0.1], [1.62584064E12, 42.1], [1.62584045E12, 17.2], [1.62584028E12, 42.2], [1.62584079E12, 34.7], [1.62584062E12, 9.8], [1.62583994E12, 0.8], [1.62584011E12, 65.8], [1.62584037E12, 149.7], [1.6258402E12, 149.6], [1.62584071E12, 149.7], [1.62584054E12, 150.0], [1.62584003E12, 130.5], [1.6258408E12, 10.0], [1.62584061E12, 34.9], [1.62584044E12, 9.7], [1.62584078E12, 59.4], [1.6258401E12, 42.3], [1.62584027E12, 17.4], [1.62583993E12, 3.9], [1.62584053E12, 64.0], [1.62584036E12, 149.8], [1.6258407E12, 149.3], [1.62584002E12, 149.1], [1.62584019E12, 149.9], [1.62584077E12, 84.4], [1.6258406E12, 59.3], [1.62583992E12, 5.9], [1.62584043E12, 34.6], [1.62584009E12, 17.3], [1.62584026E12, 10.3], [1.62584069E12, 149.9], [1.62584052E12, 149.8], [1.62584035E12, 149.6], [1.62584001E12, 125.9], [1.62584018E12, 149.8]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62584081E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62583991E12, "maxY": 150.5, "series": [{"data": [[1.62583999E12, 34.6], [1.62584076E12, 109.2], [1.62584025E12, 35.0], [1.62584008E12, 10.1], [1.62584059E12, 84.3], [1.62584042E12, 59.2], [1.62583991E12, 3.0], [1.62584068E12, 140.6], [1.62584017E12, 149.9], [1.62584E12, 77.6], [1.62584051E12, 150.0], [1.62584034E12, 137.4], [1.62583998E12, 40.3], [1.62584015E12, 149.8], [1.62584041E12, 84.7], [1.62584024E12, 59.5], [1.62584075E12, 133.5], [1.62584058E12, 104.0], [1.62584007E12, 34.8], [1.62584033E12, 149.8], [1.62584016E12, 149.9], [1.62584067E12, 116.4], [1.6258405E12, 140.7], [1.62584014E12, 141.1], [1.62584031E12, 116.7], [1.62583997E12, 19.8], [1.62584057E12, 133.9], [1.6258404E12, 104.7], [1.62584074E12, 149.7], [1.62584006E12, 59.3], [1.62584023E12, 84.5], [1.62584049E12, 116.3], [1.62584032E12, 141.1], [1.62584066E12, 91.7], [1.62583996E12, 24.3], [1.62584047E12, 66.7], [1.62584013E12, 116.3], [1.6258403E12, 91.6], [1.62584073E12, 149.8], [1.62584056E12, 149.8], [1.62584039E12, 133.7], [1.62584005E12, 83.8], [1.62584022E12, 109.1], [1.62584065E12, 66.9], [1.62584048E12, 91.7], [1.62584029E12, 66.8], [1.62584012E12, 87.6], [1.62584063E12, 16.9], [1.62584046E12, 42.0], [1.62583995E12, 6.4], [1.62584072E12, 150.1], [1.62584021E12, 133.9], [1.62584004E12, 108.8], [1.62584055E12, 149.7], [1.62584038E12, 149.5], [1.62584081E12, 0.1], [1.62584064E12, 42.0], [1.62584045E12, 17.1], [1.62584028E12, 42.0], [1.62584079E12, 34.7], [1.62584062E12, 10.0], [1.62584011E12, 65.6], [1.62584037E12, 149.9], [1.6258402E12, 149.6], [1.62584071E12, 149.6], [1.62584054E12, 150.0], [1.62584003E12, 130.9], [1.6258408E12, 10.2], [1.62584061E12, 34.9], [1.62584044E12, 9.8], [1.62584078E12, 59.5], [1.6258401E12, 42.3], [1.62584027E12, 17.3], [1.62583993E12, 5.5], [1.62584053E12, 63.9], [1.62584036E12, 149.7], [1.6258407E12, 149.2], [1.62584002E12, 149.4], [1.62584019E12, 150.0], [1.62584077E12, 84.6], [1.6258406E12, 59.2], [1.62583992E12, 5.2], [1.62584043E12, 34.7], [1.62584009E12, 17.1], [1.62584026E12, 10.4], [1.62584069E12, 150.3], [1.62584052E12, 150.4], [1.62584035E12, 150.5], [1.62584001E12, 124.6], [1.62584018E12, 149.8]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62584081E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62583991E12, "maxY": 150.5, "series": [{"data": [[1.62583999E12, 34.6], [1.62584076E12, 109.2], [1.62584025E12, 35.0], [1.62584008E12, 10.1], [1.62584059E12, 84.3], [1.62584042E12, 59.2], [1.62583991E12, 3.0], [1.62584068E12, 140.6], [1.62584017E12, 149.9], [1.62584E12, 77.6], [1.62584051E12, 150.0], [1.62584034E12, 137.4], [1.62583998E12, 40.3], [1.62584015E12, 149.8], [1.62584041E12, 84.7], [1.62584024E12, 59.5], [1.62584075E12, 133.5], [1.62584058E12, 104.0], [1.62584007E12, 34.8], [1.62584033E12, 149.8], [1.62584016E12, 149.9], [1.62584067E12, 116.4], [1.6258405E12, 140.7], [1.62584014E12, 141.1], [1.62584031E12, 116.7], [1.62583997E12, 19.8], [1.62584057E12, 133.9], [1.6258404E12, 104.7], [1.62584074E12, 149.7], [1.62584006E12, 59.3], [1.62584023E12, 84.5], [1.62584049E12, 116.3], [1.62584032E12, 141.1], [1.62584066E12, 91.7], [1.62583996E12, 24.3], [1.62584047E12, 66.7], [1.62584013E12, 116.3], [1.6258403E12, 91.6], [1.62584073E12, 149.8], [1.62584056E12, 149.8], [1.62584039E12, 133.7], [1.62584005E12, 83.8], [1.62584022E12, 109.1], [1.62584065E12, 66.9], [1.62584048E12, 91.7], [1.62584029E12, 66.8], [1.62584012E12, 87.6], [1.62584063E12, 16.9], [1.62584046E12, 42.0], [1.62583995E12, 6.4], [1.62584072E12, 150.1], [1.62584021E12, 133.9], [1.62584004E12, 108.8], [1.62584055E12, 149.7], [1.62584038E12, 149.5], [1.62584081E12, 0.1], [1.62584064E12, 42.0], [1.62584045E12, 17.1], [1.62584028E12, 42.0], [1.62584079E12, 34.7], [1.62584062E12, 10.0], [1.62584011E12, 65.6], [1.62584037E12, 149.9], [1.6258402E12, 149.6], [1.62584071E12, 149.6], [1.62584054E12, 150.0], [1.62584003E12, 130.9], [1.6258408E12, 10.2], [1.62584061E12, 34.9], [1.62584044E12, 9.8], [1.62584078E12, 59.5], [1.6258401E12, 42.3], [1.62584027E12, 17.3], [1.62583993E12, 5.5], [1.62584053E12, 63.9], [1.62584036E12, 149.7], [1.6258407E12, 149.2], [1.62584002E12, 149.4], [1.62584019E12, 150.0], [1.62584077E12, 84.6], [1.6258406E12, 59.2], [1.62583992E12, 5.2], [1.62584043E12, 34.7], [1.62584009E12, 17.1], [1.62584026E12, 10.4], [1.62584069E12, 150.3], [1.62584052E12, 150.4], [1.62584035E12, 150.5], [1.62584001E12, 124.6], [1.62584018E12, 149.8]], "isOverall": false, "label": "Sunstar Home Japan-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62584081E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62583991E12, "maxY": 150.5, "series": [{"data": [[1.62583999E12, 34.6], [1.62584076E12, 109.2], [1.62584025E12, 35.0], [1.62584008E12, 10.1], [1.62584059E12, 84.3], [1.62584042E12, 59.2], [1.62583991E12, 3.0], [1.62584068E12, 140.6], [1.62584017E12, 149.9], [1.62584E12, 77.6], [1.62584051E12, 150.0], [1.62584034E12, 137.4], [1.62583998E12, 40.3], [1.62584015E12, 149.8], [1.62584041E12, 84.7], [1.62584024E12, 59.5], [1.62584075E12, 133.5], [1.62584058E12, 104.0], [1.62584007E12, 34.8], [1.62584033E12, 149.8], [1.62584016E12, 149.9], [1.62584067E12, 116.4], [1.6258405E12, 140.7], [1.62584014E12, 141.1], [1.62584031E12, 116.7], [1.62583997E12, 19.8], [1.62584057E12, 133.9], [1.6258404E12, 104.7], [1.62584074E12, 149.7], [1.62584006E12, 59.3], [1.62584023E12, 84.5], [1.62584049E12, 116.3], [1.62584032E12, 141.1], [1.62584066E12, 91.7], [1.62583996E12, 24.3], [1.62584047E12, 66.7], [1.62584013E12, 116.3], [1.6258403E12, 91.6], [1.62584073E12, 149.8], [1.62584056E12, 149.8], [1.62584039E12, 133.7], [1.62584005E12, 83.8], [1.62584022E12, 109.1], [1.62584065E12, 66.9], [1.62584048E12, 91.7], [1.62584029E12, 66.8], [1.62584012E12, 87.6], [1.62584063E12, 16.9], [1.62584046E12, 42.0], [1.62583995E12, 6.4], [1.62584072E12, 150.1], [1.62584021E12, 133.9], [1.62584004E12, 108.8], [1.62584055E12, 149.7], [1.62584038E12, 149.5], [1.62584081E12, 0.1], [1.62584064E12, 42.0], [1.62584045E12, 17.1], [1.62584028E12, 42.0], [1.62584079E12, 34.7], [1.62584062E12, 10.0], [1.62584011E12, 65.6], [1.62584037E12, 149.9], [1.6258402E12, 149.6], [1.62584071E12, 149.6], [1.62584054E12, 150.0], [1.62584003E12, 130.9], [1.6258408E12, 10.2], [1.62584061E12, 34.9], [1.62584044E12, 9.8], [1.62584078E12, 59.5], [1.6258401E12, 42.3], [1.62584027E12, 17.3], [1.62583993E12, 5.5], [1.62584053E12, 63.9], [1.62584036E12, 149.7], [1.6258407E12, 149.2], [1.62584002E12, 149.4], [1.62584019E12, 150.0], [1.62584077E12, 84.6], [1.6258406E12, 59.2], [1.62583992E12, 5.2], [1.62584043E12, 34.7], [1.62584009E12, 17.1], [1.62584026E12, 10.4], [1.62584069E12, 150.3], [1.62584052E12, 150.4], [1.62584035E12, 150.5], [1.62584001E12, 124.6], [1.62584018E12, 149.8]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62584081E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

