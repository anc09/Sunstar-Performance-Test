/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 9.0, "minX": 0.0, "maxY": 10944.0, "series": [{"data": [[0.0, 9.0], [0.1, 10.0], [0.2, 10.0], [0.3, 10.0], [0.4, 10.0], [0.5, 10.0], [0.6, 10.0], [0.7, 10.0], [0.8, 10.0], [0.9, 10.0], [1.0, 10.0], [1.1, 10.0], [1.2, 10.0], [1.3, 10.0], [1.4, 11.0], [1.5, 11.0], [1.6, 11.0], [1.7, 11.0], [1.8, 11.0], [1.9, 11.0], [2.0, 11.0], [2.1, 11.0], [2.2, 11.0], [2.3, 11.0], [2.4, 11.0], [2.5, 11.0], [2.6, 11.0], [2.7, 11.0], [2.8, 11.0], [2.9, 11.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 11.0], [3.4, 11.0], [3.5, 11.0], [3.6, 11.0], [3.7, 11.0], [3.8, 11.0], [3.9, 11.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 11.0], [4.8, 11.0], [4.9, 11.0], [5.0, 11.0], [5.1, 12.0], [5.2, 12.0], [5.3, 12.0], [5.4, 12.0], [5.5, 12.0], [5.6, 12.0], [5.7, 12.0], [5.8, 12.0], [5.9, 12.0], [6.0, 12.0], [6.1, 12.0], [6.2, 12.0], [6.3, 12.0], [6.4, 12.0], [6.5, 12.0], [6.6, 12.0], [6.7, 12.0], [6.8, 12.0], [6.9, 12.0], [7.0, 12.0], [7.1, 12.0], [7.2, 12.0], [7.3, 12.0], [7.4, 12.0], [7.5, 12.0], [7.6, 12.0], [7.7, 12.0], [7.8, 12.0], [7.9, 12.0], [8.0, 12.0], [8.1, 12.0], [8.2, 12.0], [8.3, 12.0], [8.4, 13.0], [8.5, 13.0], [8.6, 13.0], [8.7, 13.0], [8.8, 13.0], [8.9, 13.0], [9.0, 13.0], [9.1, 13.0], [9.2, 13.0], [9.3, 13.0], [9.4, 13.0], [9.5, 13.0], [9.6, 13.0], [9.7, 13.0], [9.8, 13.0], [9.9, 13.0], [10.0, 13.0], [10.1, 13.0], [10.2, 13.0], [10.3, 13.0], [10.4, 13.0], [10.5, 13.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 13.0], [11.2, 13.0], [11.3, 13.0], [11.4, 13.0], [11.5, 13.0], [11.6, 13.0], [11.7, 13.0], [11.8, 13.0], [11.9, 13.0], [12.0, 13.0], [12.1, 13.0], [12.2, 13.0], [12.3, 13.0], [12.4, 13.0], [12.5, 13.0], [12.6, 13.0], [12.7, 13.0], [12.8, 13.0], [12.9, 13.0], [13.0, 13.0], [13.1, 13.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 14.0], [13.7, 14.0], [13.8, 14.0], [13.9, 14.0], [14.0, 14.0], [14.1, 14.0], [14.2, 14.0], [14.3, 14.0], [14.4, 14.0], [14.5, 14.0], [14.6, 14.0], [14.7, 14.0], [14.8, 14.0], [14.9, 14.0], [15.0, 14.0], [15.1, 14.0], [15.2, 14.0], [15.3, 14.0], [15.4, 14.0], [15.5, 14.0], [15.6, 14.0], [15.7, 14.0], [15.8, 14.0], [15.9, 14.0], [16.0, 14.0], [16.1, 14.0], [16.2, 14.0], [16.3, 14.0], [16.4, 14.0], [16.5, 14.0], [16.6, 14.0], [16.7, 14.0], [16.8, 14.0], [16.9, 14.0], [17.0, 14.0], [17.1, 14.0], [17.2, 14.0], [17.3, 14.0], [17.4, 14.0], [17.5, 14.0], [17.6, 14.0], [17.7, 14.0], [17.8, 14.0], [17.9, 14.0], [18.0, 14.0], [18.1, 14.0], [18.2, 14.0], [18.3, 15.0], [18.4, 15.0], [18.5, 15.0], [18.6, 15.0], [18.7, 15.0], [18.8, 15.0], [18.9, 15.0], [19.0, 15.0], [19.1, 15.0], [19.2, 15.0], [19.3, 15.0], [19.4, 15.0], [19.5, 15.0], [19.6, 15.0], [19.7, 15.0], [19.8, 15.0], [19.9, 15.0], [20.0, 15.0], [20.1, 15.0], [20.2, 15.0], [20.3, 15.0], [20.4, 15.0], [20.5, 15.0], [20.6, 15.0], [20.7, 15.0], [20.8, 15.0], [20.9, 15.0], [21.0, 15.0], [21.1, 15.0], [21.2, 15.0], [21.3, 15.0], [21.4, 15.0], [21.5, 16.0], [21.6, 16.0], [21.7, 16.0], [21.8, 16.0], [21.9, 16.0], [22.0, 16.0], [22.1, 16.0], [22.2, 16.0], [22.3, 16.0], [22.4, 16.0], [22.5, 16.0], [22.6, 16.0], [22.7, 16.0], [22.8, 16.0], [22.9, 16.0], [23.0, 16.0], [23.1, 16.0], [23.2, 16.0], [23.3, 16.0], [23.4, 16.0], [23.5, 16.0], [23.6, 16.0], [23.7, 16.0], [23.8, 17.0], [23.9, 17.0], [24.0, 17.0], [24.1, 17.0], [24.2, 17.0], [24.3, 17.0], [24.4, 17.0], [24.5, 17.0], [24.6, 17.0], [24.7, 17.0], [24.8, 17.0], [24.9, 17.0], [25.0, 17.0], [25.1, 17.0], [25.2, 17.0], [25.3, 17.0], [25.4, 17.0], [25.5, 17.0], [25.6, 17.0], [25.7, 17.0], [25.8, 17.0], [25.9, 18.0], [26.0, 18.0], [26.1, 18.0], [26.2, 18.0], [26.3, 18.0], [26.4, 18.0], [26.5, 18.0], [26.6, 18.0], [26.7, 18.0], [26.8, 18.0], [26.9, 18.0], [27.0, 18.0], [27.1, 18.0], [27.2, 18.0], [27.3, 18.0], [27.4, 18.0], [27.5, 18.0], [27.6, 18.0], [27.7, 18.0], [27.8, 18.0], [27.9, 19.0], [28.0, 19.0], [28.1, 19.0], [28.2, 19.0], [28.3, 19.0], [28.4, 19.0], [28.5, 19.0], [28.6, 19.0], [28.7, 19.0], [28.8, 19.0], [28.9, 19.0], [29.0, 19.0], [29.1, 19.0], [29.2, 19.0], [29.3, 19.0], [29.4, 19.0], [29.5, 19.0], [29.6, 19.0], [29.7, 19.0], [29.8, 19.0], [29.9, 19.0], [30.0, 19.0], [30.1, 19.0], [30.2, 20.0], [30.3, 20.0], [30.4, 20.0], [30.5, 20.0], [30.6, 20.0], [30.7, 20.0], [30.8, 20.0], [30.9, 20.0], [31.0, 20.0], [31.1, 20.0], [31.2, 20.0], [31.3, 20.0], [31.4, 20.0], [31.5, 20.0], [31.6, 20.0], [31.7, 20.0], [31.8, 20.0], [31.9, 20.0], [32.0, 20.0], [32.1, 20.0], [32.2, 20.0], [32.3, 20.0], [32.4, 20.0], [32.5, 20.0], [32.6, 20.0], [32.7, 20.0], [32.8, 21.0], [32.9, 21.0], [33.0, 21.0], [33.1, 21.0], [33.2, 21.0], [33.3, 21.0], [33.4, 21.0], [33.5, 21.0], [33.6, 21.0], [33.7, 21.0], [33.8, 21.0], [33.9, 21.0], [34.0, 21.0], [34.1, 21.0], [34.2, 21.0], [34.3, 21.0], [34.4, 21.0], [34.5, 21.0], [34.6, 21.0], [34.7, 21.0], [34.8, 21.0], [34.9, 21.0], [35.0, 21.0], [35.1, 21.0], [35.2, 21.0], [35.3, 21.0], [35.4, 21.0], [35.5, 21.0], [35.6, 21.0], [35.7, 21.0], [35.8, 21.0], [35.9, 21.0], [36.0, 22.0], [36.1, 22.0], [36.2, 22.0], [36.3, 22.0], [36.4, 22.0], [36.5, 22.0], [36.6, 22.0], [36.7, 22.0], [36.8, 22.0], [36.9, 22.0], [37.0, 22.0], [37.1, 22.0], [37.2, 22.0], [37.3, 22.0], [37.4, 22.0], [37.5, 22.0], [37.6, 22.0], [37.7, 22.0], [37.8, 22.0], [37.9, 22.0], [38.0, 22.0], [38.1, 22.0], [38.2, 22.0], [38.3, 22.0], [38.4, 22.0], [38.5, 22.0], [38.6, 22.0], [38.7, 22.0], [38.8, 22.0], [38.9, 22.0], [39.0, 22.0], [39.1, 22.0], [39.2, 22.0], [39.3, 22.0], [39.4, 22.0], [39.5, 22.0], [39.6, 22.0], [39.7, 22.0], [39.8, 22.0], [39.9, 22.0], [40.0, 22.0], [40.1, 22.0], [40.2, 22.0], [40.3, 23.0], [40.4, 23.0], [40.5, 23.0], [40.6, 23.0], [40.7, 23.0], [40.8, 23.0], [40.9, 23.0], [41.0, 23.0], [41.1, 23.0], [41.2, 23.0], [41.3, 23.0], [41.4, 23.0], [41.5, 23.0], [41.6, 23.0], [41.7, 23.0], [41.8, 23.0], [41.9, 23.0], [42.0, 23.0], [42.1, 23.0], [42.2, 23.0], [42.3, 23.0], [42.4, 23.0], [42.5, 23.0], [42.6, 23.0], [42.7, 23.0], [42.8, 23.0], [42.9, 23.0], [43.0, 23.0], [43.1, 23.0], [43.2, 23.0], [43.3, 23.0], [43.4, 23.0], [43.5, 23.0], [43.6, 23.0], [43.7, 23.0], [43.8, 23.0], [43.9, 23.0], [44.0, 23.0], [44.1, 23.0], [44.2, 23.0], [44.3, 23.0], [44.4, 23.0], [44.5, 23.0], [44.6, 23.0], [44.7, 23.0], [44.8, 23.0], [44.9, 23.0], [45.0, 23.0], [45.1, 23.0], [45.2, 23.0], [45.3, 23.0], [45.4, 23.0], [45.5, 23.0], [45.6, 23.0], [45.7, 23.0], [45.8, 23.0], [45.9, 24.0], [46.0, 24.0], [46.1, 24.0], [46.2, 24.0], [46.3, 24.0], [46.4, 24.0], [46.5, 24.0], [46.6, 24.0], [46.7, 24.0], [46.8, 24.0], [46.9, 24.0], [47.0, 24.0], [47.1, 24.0], [47.2, 24.0], [47.3, 24.0], [47.4, 24.0], [47.5, 24.0], [47.6, 24.0], [47.7, 24.0], [47.8, 24.0], [47.9, 24.0], [48.0, 24.0], [48.1, 24.0], [48.2, 24.0], [48.3, 24.0], [48.4, 24.0], [48.5, 24.0], [48.6, 24.0], [48.7, 24.0], [48.8, 24.0], [48.9, 24.0], [49.0, 24.0], [49.1, 24.0], [49.2, 24.0], [49.3, 24.0], [49.4, 24.0], [49.5, 24.0], [49.6, 24.0], [49.7, 24.0], [49.8, 24.0], [49.9, 24.0], [50.0, 24.0], [50.1, 24.0], [50.2, 24.0], [50.3, 24.0], [50.4, 24.0], [50.5, 24.0], [50.6, 24.0], [50.7, 24.0], [50.8, 24.0], [50.9, 24.0], [51.0, 24.0], [51.1, 24.0], [51.2, 24.0], [51.3, 24.0], [51.4, 24.0], [51.5, 24.0], [51.6, 24.0], [51.7, 24.0], [51.8, 24.0], [51.9, 25.0], [52.0, 25.0], [52.1, 25.0], [52.2, 25.0], [52.3, 25.0], [52.4, 25.0], [52.5, 25.0], [52.6, 25.0], [52.7, 25.0], [52.8, 25.0], [52.9, 25.0], [53.0, 25.0], [53.1, 25.0], [53.2, 25.0], [53.3, 25.0], [53.4, 25.0], [53.5, 25.0], [53.6, 25.0], [53.7, 25.0], [53.8, 25.0], [53.9, 25.0], [54.0, 25.0], [54.1, 25.0], [54.2, 25.0], [54.3, 25.0], [54.4, 25.0], [54.5, 25.0], [54.6, 25.0], [54.7, 25.0], [54.8, 25.0], [54.9, 25.0], [55.0, 25.0], [55.1, 25.0], [55.2, 25.0], [55.3, 25.0], [55.4, 25.0], [55.5, 25.0], [55.6, 25.0], [55.7, 25.0], [55.8, 25.0], [55.9, 25.0], [56.0, 25.0], [56.1, 25.0], [56.2, 25.0], [56.3, 25.0], [56.4, 25.0], [56.5, 25.0], [56.6, 25.0], [56.7, 25.0], [56.8, 25.0], [56.9, 25.0], [57.0, 25.0], [57.1, 26.0], [57.2, 26.0], [57.3, 26.0], [57.4, 26.0], [57.5, 26.0], [57.6, 26.0], [57.7, 26.0], [57.8, 26.0], [57.9, 26.0], [58.0, 26.0], [58.1, 26.0], [58.2, 26.0], [58.3, 26.0], [58.4, 26.0], [58.5, 26.0], [58.6, 26.0], [58.7, 26.0], [58.8, 26.0], [58.9, 26.0], [59.0, 26.0], [59.1, 26.0], [59.2, 26.0], [59.3, 26.0], [59.4, 26.0], [59.5, 26.0], [59.6, 26.0], [59.7, 26.0], [59.8, 26.0], [59.9, 26.0], [60.0, 26.0], [60.1, 26.0], [60.2, 26.0], [60.3, 26.0], [60.4, 26.0], [60.5, 26.0], [60.6, 26.0], [60.7, 26.0], [60.8, 26.0], [60.9, 26.0], [61.0, 26.0], [61.1, 26.0], [61.2, 26.0], [61.3, 26.0], [61.4, 26.0], [61.5, 26.0], [61.6, 26.0], [61.7, 26.0], [61.8, 26.0], [61.9, 26.0], [62.0, 26.0], [62.1, 27.0], [62.2, 27.0], [62.3, 27.0], [62.4, 27.0], [62.5, 27.0], [62.6, 27.0], [62.7, 27.0], [62.8, 27.0], [62.9, 27.0], [63.0, 27.0], [63.1, 27.0], [63.2, 27.0], [63.3, 27.0], [63.4, 27.0], [63.5, 27.0], [63.6, 27.0], [63.7, 27.0], [63.8, 27.0], [63.9, 27.0], [64.0, 27.0], [64.1, 27.0], [64.2, 27.0], [64.3, 27.0], [64.4, 27.0], [64.5, 27.0], [64.6, 27.0], [64.7, 27.0], [64.8, 27.0], [64.9, 27.0], [65.0, 27.0], [65.1, 27.0], [65.2, 27.0], [65.3, 27.0], [65.4, 27.0], [65.5, 27.0], [65.6, 27.0], [65.7, 27.0], [65.8, 27.0], [65.9, 27.0], [66.0, 27.0], [66.1, 27.0], [66.2, 27.0], [66.3, 27.0], [66.4, 27.0], [66.5, 27.0], [66.6, 27.0], [66.7, 27.0], [66.8, 27.0], [66.9, 28.0], [67.0, 28.0], [67.1, 28.0], [67.2, 28.0], [67.3, 28.0], [67.4, 28.0], [67.5, 28.0], [67.6, 28.0], [67.7, 28.0], [67.8, 28.0], [67.9, 28.0], [68.0, 28.0], [68.1, 28.0], [68.2, 28.0], [68.3, 28.0], [68.4, 28.0], [68.5, 28.0], [68.6, 28.0], [68.7, 28.0], [68.8, 28.0], [68.9, 28.0], [69.0, 28.0], [69.1, 28.0], [69.2, 28.0], [69.3, 28.0], [69.4, 28.0], [69.5, 28.0], [69.6, 28.0], [69.7, 28.0], [69.8, 28.0], [69.9, 28.0], [70.0, 28.0], [70.1, 28.0], [70.2, 28.0], [70.3, 28.0], [70.4, 28.0], [70.5, 28.0], [70.6, 28.0], [70.7, 28.0], [70.8, 28.0], [70.9, 28.0], [71.0, 28.0], [71.1, 28.0], [71.2, 28.0], [71.3, 28.0], [71.4, 29.0], [71.5, 29.0], [71.6, 29.0], [71.7, 29.0], [71.8, 29.0], [71.9, 29.0], [72.0, 29.0], [72.1, 29.0], [72.2, 29.0], [72.3, 29.0], [72.4, 29.0], [72.5, 29.0], [72.6, 29.0], [72.7, 29.0], [72.8, 29.0], [72.9, 29.0], [73.0, 29.0], [73.1, 29.0], [73.2, 29.0], [73.3, 29.0], [73.4, 29.0], [73.5, 29.0], [73.6, 29.0], [73.7, 29.0], [73.8, 29.0], [73.9, 29.0], [74.0, 29.0], [74.1, 29.0], [74.2, 29.0], [74.3, 29.0], [74.4, 29.0], [74.5, 29.0], [74.6, 29.0], [74.7, 29.0], [74.8, 29.0], [74.9, 29.0], [75.0, 29.0], [75.1, 30.0], [75.2, 30.0], [75.3, 30.0], [75.4, 30.0], [75.5, 30.0], [75.6, 30.0], [75.7, 30.0], [75.8, 30.0], [75.9, 30.0], [76.0, 30.0], [76.1, 30.0], [76.2, 30.0], [76.3, 30.0], [76.4, 30.0], [76.5, 30.0], [76.6, 30.0], [76.7, 30.0], [76.8, 30.0], [76.9, 30.0], [77.0, 30.0], [77.1, 30.0], [77.2, 30.0], [77.3, 30.0], [77.4, 30.0], [77.5, 30.0], [77.6, 30.0], [77.7, 30.0], [77.8, 30.0], [77.9, 30.0], [78.0, 30.0], [78.1, 31.0], [78.2, 31.0], [78.3, 31.0], [78.4, 31.0], [78.5, 31.0], [78.6, 31.0], [78.7, 31.0], [78.8, 31.0], [78.9, 31.0], [79.0, 31.0], [79.1, 31.0], [79.2, 31.0], [79.3, 31.0], [79.4, 31.0], [79.5, 31.0], [79.6, 31.0], [79.7, 31.0], [79.8, 31.0], [79.9, 31.0], [80.0, 31.0], [80.1, 31.0], [80.2, 32.0], [80.3, 32.0], [80.4, 32.0], [80.5, 32.0], [80.6, 32.0], [80.7, 32.0], [80.8, 32.0], [80.9, 32.0], [81.0, 32.0], [81.1, 32.0], [81.2, 32.0], [81.3, 32.0], [81.4, 32.0], [81.5, 32.0], [81.6, 32.0], [81.7, 32.0], [81.8, 32.0], [81.9, 33.0], [82.0, 33.0], [82.1, 33.0], [82.2, 33.0], [82.3, 33.0], [82.4, 33.0], [82.5, 33.0], [82.6, 33.0], [82.7, 33.0], [82.8, 33.0], [82.9, 33.0], [83.0, 33.0], [83.1, 33.0], [83.2, 33.0], [83.3, 34.0], [83.4, 34.0], [83.5, 34.0], [83.6, 34.0], [83.7, 34.0], [83.8, 34.0], [83.9, 34.0], [84.0, 34.0], [84.1, 34.0], [84.2, 34.0], [84.3, 34.0], [84.4, 34.0], [84.5, 35.0], [84.6, 35.0], [84.7, 35.0], [84.8, 35.0], [84.9, 35.0], [85.0, 35.0], [85.1, 35.0], [85.2, 35.0], [85.3, 35.0], [85.4, 35.0], [85.5, 36.0], [85.6, 36.0], [85.7, 36.0], [85.8, 36.0], [85.9, 36.0], [86.0, 36.0], [86.1, 36.0], [86.2, 36.0], [86.3, 36.0], [86.4, 37.0], [86.5, 37.0], [86.6, 37.0], [86.7, 37.0], [86.8, 37.0], [86.9, 37.0], [87.0, 37.0], [87.1, 38.0], [87.2, 38.0], [87.3, 38.0], [87.4, 38.0], [87.5, 38.0], [87.6, 39.0], [87.7, 39.0], [87.8, 39.0], [87.9, 39.0], [88.0, 39.0], [88.1, 40.0], [88.2, 40.0], [88.3, 40.0], [88.4, 40.0], [88.5, 41.0], [88.6, 41.0], [88.7, 41.0], [88.8, 41.0], [88.9, 42.0], [89.0, 42.0], [89.1, 42.0], [89.2, 42.0], [89.3, 43.0], [89.4, 43.0], [89.5, 43.0], [89.6, 44.0], [89.7, 44.0], [89.8, 44.0], [89.9, 44.0], [90.0, 45.0], [90.1, 45.0], [90.2, 45.0], [90.3, 45.0], [90.4, 46.0], [90.5, 46.0], [90.6, 46.0], [90.7, 47.0], [90.8, 47.0], [90.9, 47.0], [91.0, 47.0], [91.1, 48.0], [91.2, 48.0], [91.3, 48.0], [91.4, 48.0], [91.5, 48.0], [91.6, 49.0], [91.7, 49.0], [91.8, 49.0], [91.9, 49.0], [92.0, 49.0], [92.1, 50.0], [92.2, 50.0], [92.3, 50.0], [92.4, 50.0], [92.5, 51.0], [92.6, 51.0], [92.7, 51.0], [92.8, 51.0], [92.9, 51.0], [93.0, 52.0], [93.1, 52.0], [93.2, 52.0], [93.3, 52.0], [93.4, 53.0], [93.5, 53.0], [93.6, 53.0], [93.7, 53.0], [93.8, 54.0], [93.9, 54.0], [94.0, 54.0], [94.1, 55.0], [94.2, 55.0], [94.3, 55.0], [94.4, 55.0], [94.5, 56.0], [94.6, 56.0], [94.7, 56.0], [94.8, 57.0], [94.9, 57.0], [95.0, 57.0], [95.1, 58.0], [95.2, 58.0], [95.3, 59.0], [95.4, 59.0], [95.5, 60.0], [95.6, 60.0], [95.7, 61.0], [95.8, 62.0], [95.9, 63.0], [96.0, 64.0], [96.1, 65.0], [96.2, 66.0], [96.3, 67.0], [96.4, 68.0], [96.5, 69.0], [96.6, 71.0], [96.7, 72.0], [96.8, 74.0], [96.9, 76.0], [97.0, 80.0], [97.1, 87.0], [97.2, 101.0], [97.3, 140.0], [97.4, 230.0], [97.5, 349.0], [97.6, 428.0], [97.7, 475.0], [97.8, 512.0], [97.9, 544.0], [98.0, 577.0], [98.1, 648.0], [98.2, 744.0], [98.3, 905.0], [98.4, 958.0], [98.5, 1004.0], [98.6, 1041.0], [98.7, 1097.0], [98.8, 1165.0], [98.9, 1236.0], [99.0, 1274.0], [99.1, 1339.0], [99.2, 1421.0], [99.3, 1494.0], [99.4, 1581.0], [99.5, 1696.0], [99.6, 1801.0], [99.7, 1905.0], [99.8, 2118.0], [99.9, 2324.0]], "isOverall": false, "label": "Healthy Thinking CN", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 77941.0, "series": [{"data": [[0.0, 77941.0], [8800.0, 2.0], [9100.0, 2.0], [8900.0, 1.0], [9200.0, 1.0], [600.0, 73.0], [10900.0, 1.0], [700.0, 84.0], [800.0, 38.0], [900.0, 160.0], [1000.0, 171.0], [1100.0, 104.0], [1200.0, 169.0], [1300.0, 100.0], [1400.0, 113.0], [1500.0, 85.0], [100.0, 151.0], [1600.0, 69.0], [1700.0, 76.0], [1800.0, 79.0], [1900.0, 40.0], [2000.0, 30.0], [2100.0, 60.0], [2200.0, 27.0], [2300.0, 21.0], [2400.0, 28.0], [2500.0, 6.0], [2600.0, 7.0], [2800.0, 3.0], [2900.0, 1.0], [200.0, 52.0], [4000.0, 1.0], [4100.0, 1.0], [300.0, 97.0], [4800.0, 1.0], [5000.0, 1.0], [5500.0, 1.0], [5700.0, 1.0], [6100.0, 4.0], [5900.0, 2.0], [6200.0, 1.0], [400.0, 161.0], [500.0, 227.0]], "isOverall": false, "label": "Healthy Thinking CN", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 10900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 550.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 78404.0, "series": [{"data": [[0.0, 78404.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1239.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 550.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.62703154E12, "maxY": 1998.8947368421054, "series": [{"data": [[1.62703183E12, 3.5147651006711413], [1.62703166E12, 6.793548387096771], [1.62703209E12, 3.0], [1.62703192E12, 3.0], [1.62703226E12, 2.0], [1.62703243E12, 3.0], [1.62703175E12, 3.0], [1.62703158E12, 1855.1551724137923], [1.62703201E12, 6.094251336898395], [1.62703184E12, 3.0], [1.62703235E12, 6.689126084056049], [1.62703218E12, 7.0], [1.62703244E12, 2.9166666666666665], [1.62703167E12, 4.013357079252009], [1.62703193E12, 3.0], [1.62703176E12, 3.9924599434495724], [1.62703227E12, 2.0], [1.6270321E12, 3.0], [1.62703236E12, 7.0], [1.62703159E12, 1766.2131147540986], [1.62703185E12, 3.0], [1.62703168E12, 3.994686503719447], [1.62703219E12, 7.0], [1.62703202E12, 7.0], [1.62703181E12, 4.496330887258166], [1.62703164E12, 20.830482115085534], [1.62703215E12, 6.0], [1.62703198E12, 5.244236311239188], [1.62703224E12, 3.161835748792268], [1.62703241E12, 3.0], [1.62703173E12, 2.4722222222222214], [1.62703156E12, 1906.033333333333], [1.62703207E12, 3.0], [1.6270319E12, 2.0], [1.62703233E12, 6.0], [1.62703216E12, 7.952500000000024], [1.62703165E12, 10.618855218855218], [1.62703199E12, 6.93364928909953], [1.62703182E12, 5.0], [1.62703225E12, 2.0], [1.62703208E12, 3.0], [1.62703242E12, 3.0], [1.62703191E12, 2.9228395061728425], [1.62703174E12, 2.978873239436618], [1.62703217E12, 7.0], [1.627032E12, 6.0], [1.62703234E12, 6.0], [1.62703213E12, 5.0], [1.62703196E12, 5.0], [1.6270323E12, 4.808450704225354], [1.62703179E12, 7.807123655913972], [1.62703162E12, 1213.7510917030563], [1.62703205E12, 3.0], [1.62703188E12, 4.799554565701559], [1.62703222E12, 4.3312169312169315], [1.62703239E12, 7.0], [1.62703171E12, 2.0], [1.62703154E12, 1998.8947368421054], [1.62703197E12, 4.024489795918366], [1.6270318E12, 4.0], [1.62703231E12, 5.098248286367098], [1.62703214E12, 5.897521768251838], [1.6270324E12, 3.0159066808059376], [1.62703163E12, 687.6968238691038], [1.62703189E12, 2.0], [1.62703172E12, 2.0], [1.62703223E12, 3.0], [1.62703206E12, 3.0], [1.62703232E12, 6.0], [1.62703155E12, 1963.7580645161293], [1.62703228E12, 2.7346221441124796], [1.62703177E12, 5.9107551487414165], [1.6270316E12, 1605.2971428571427], [1.62703211E12, 3.6303549571603426], [1.62703194E12, 3.0892857142857126], [1.62703237E12, 7.0], [1.6270322E12, 7.0], [1.62703169E12, 3.0978417266187046], [1.62703203E12, 7.0], [1.62703186E12, 9.836956521739129], [1.62703229E12, 3.9902439024390204], [1.62703212E12, 4.6215962441314575], [1.62703161E12, 1424.615789473685], [1.62703195E12, 3.85179526355997], [1.62703178E12, 7.0], [1.62703221E12, 7.0], [1.62703204E12, 3.4607218683651846], [1.62703238E12, 7.0], [1.62703187E12, 6.170977011494247], [1.6270317E12, 2.1313364055299524]], "isOverall": false, "label": "bzm - Concurrency Thread Group-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62703244E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 17.8238411441706, "minX": 1.0, "maxY": 10944.0, "series": [{"data": [[2.0, 21.135976505139432], [3.0, 17.8238411441706], [4.0, 21.93015750064543], [5.0, 23.11525634064991], [6.0, 28.43281733746133], [7.0, 29.594882213515362], [8.0, 46.5417142857143], [9.0, 42.979910714285715], [10.0, 60.89758595464516], [11.0, 62.279411764705905], [12.0, 49.42130750605327], [13.0, 49.8], [14.0, 320.25], [15.0, 51.419847328244266], [17.0, 1221.5], [19.0, 1251.0], [20.0, 1331.0], [22.0, 1287.0], [23.0, 1108.0], [24.0, 1366.0], [25.0, 1105.0], [26.0, 1100.0], [27.0, 1347.0], [28.0, 1283.0], [29.0, 1356.0], [30.0, 1307.0], [31.0, 1344.0], [32.0, 1274.0], [35.0, 1308.0], [34.0, 1325.0], [37.0, 1339.0], [36.0, 1096.0], [39.0, 1371.0], [38.0, 1315.0], [40.0, 1205.5], [43.0, 1361.0], [42.0, 1219.0], [45.0, 1077.0], [46.0, 1347.0], [51.0, 1285.0], [55.0, 1334.0], [54.0, 1198.0], [57.0, 1258.0], [56.0, 1251.0], [58.0, 1329.0], [61.0, 1248.0], [60.0, 1169.5], [62.0, 1061.0], [67.0, 1214.3333333333333], [65.0, 1314.5], [64.0, 1201.5], [70.0, 1314.0], [69.0, 1287.0], [75.0, 1287.0], [74.0, 1296.0], [73.0, 1310.0], [72.0, 1295.0], [79.0, 1236.0], [78.0, 1254.0], [77.0, 1282.0], [76.0, 1290.0], [83.0, 1293.0], [82.0, 1339.0], [81.0, 1262.0], [80.0, 1282.0], [87.0, 1279.0], [86.0, 1311.0], [85.0, 1273.0], [84.0, 1306.0], [91.0, 1328.0], [90.0, 1230.0], [89.0, 1225.5], [95.0, 1288.0], [94.0, 1253.0], [92.0, 1304.0], [99.0, 1259.0], [98.0, 1223.0], [97.0, 1042.0], [96.0, 1289.5], [103.0, 1271.0], [102.0, 1303.0], [101.0, 1221.0], [100.0, 1239.0], [107.0, 1023.0], [106.0, 1240.0], [105.0, 1219.0], [104.0, 1256.0], [111.0, 1264.0], [110.0, 1259.5], [108.0, 1216.0], [115.0, 1226.0], [114.0, 1026.0], [113.0, 1269.0], [112.0, 1269.0], [119.0, 1274.0], [118.0, 1243.0], [117.0, 1221.0], [116.0, 1224.0], [123.0, 1254.0], [122.0, 1223.0], [121.0, 1198.0], [120.0, 1233.0], [127.0, 1240.0], [126.0, 1285.0], [125.0, 1223.0], [124.0, 1257.0], [135.0, 1197.0], [134.0, 997.0], [133.0, 1217.0], [132.0, 1260.0], [131.0, 1239.0], [130.0, 1225.0], [129.0, 1226.0], [143.0, 1234.0], [142.0, 979.0], [141.0, 1236.0], [140.0, 1266.0], [139.0, 1176.0], [138.0, 1200.0], [137.0, 1241.0], [136.0, 1194.0], [151.0, 1176.0], [149.0, 1180.0], [148.0, 981.0], [147.0, 1214.0], [146.0, 1185.0], [145.0, 1164.0], [144.0, 1261.0], [158.0, 1177.0], [157.0, 1216.0], [156.0, 1212.0], [155.0, 1213.0], [154.0, 1221.0], [153.0, 1229.0], [152.0, 1253.0], [167.0, 936.0], [166.0, 1119.0], [165.0, 1192.0], [164.0, 931.0], [163.0, 933.0], [162.0, 945.0], [160.0, 1201.0], [175.0, 1162.0], [174.0, 1149.0], [173.0, 1102.0], [172.0, 1125.0], [171.0, 1101.0], [170.0, 1165.0], [169.0, 926.0], [168.0, 1165.0], [183.0, 1156.0], [182.0, 1146.0], [180.0, 1136.0], [179.0, 1111.0], [178.0, 1172.0], [177.0, 1195.0], [176.0, 1197.0], [191.0, 759.0], [190.0, 759.0], [187.0, 781.0], [186.0, 827.0], [185.0, 893.0], [184.0, 1128.0], [198.0, 752.0], [196.0, 737.0], [195.0, 769.0], [194.0, 746.0], [193.0, 731.0], [192.0, 758.0], [206.0, 729.0], [205.0, 743.0], [204.0, 561.5], [201.0, 736.0], [200.0, 732.0], [215.0, 731.0], [214.0, 734.0], [213.0, 734.5], [210.0, 549.0], [223.0, 748.0], [222.0, 748.0], [221.0, 667.0], [220.0, 715.0], [219.0, 718.0], [217.0, 729.0], [216.0, 739.0], [231.0, 704.5], [229.0, 717.0], [228.0, 706.0], [227.0, 700.0], [226.0, 693.0], [225.0, 631.5], [224.0, 555.0], [238.0, 691.0], [237.0, 717.0], [236.0, 716.0], [235.0, 613.0], [233.0, 695.0], [232.0, 697.5], [247.0, 536.0], [246.0, 525.0], [245.0, 696.0], [244.0, 698.0], [243.0, 692.0], [242.0, 709.0], [241.0, 705.0], [240.0, 706.5], [255.0, 663.0], [254.0, 669.0], [253.0, 511.0], [252.0, 596.5], [251.0, 666.0], [250.0, 512.0], [249.0, 569.3333333333334], [248.0, 531.0], [270.0, 428.0], [271.0, 578.0], [269.0, 580.0], [268.0, 458.0], [267.0, 451.0], [266.0, 464.0], [265.0, 454.0], [264.0, 625.0], [263.0, 658.0], [257.0, 654.0], [256.0, 670.0], [259.0, 484.0], [258.0, 651.0], [262.0, 486.0], [261.0, 477.0], [286.0, 399.0], [287.0, 549.0], [285.0, 510.5], [284.0, 575.0], [283.0, 568.0], [282.0, 595.0], [281.0, 581.0], [280.0, 571.0], [279.0, 585.0], [273.0, 584.0], [272.0, 606.0], [275.0, 578.0], [274.0, 576.0], [278.0, 599.0], [277.0, 602.0], [276.0, 583.0], [302.0, 1341.0], [303.0, 939.0], [301.0, 1498.0], [300.0, 947.0], [298.0, 1514.0], [297.0, 950.0], [296.0, 977.0], [295.0, 514.0], [289.0, 394.0], [288.0, 395.0], [291.0, 373.0], [290.0, 564.0], [294.0, 519.0], [293.0, 366.0], [292.0, 371.0], [318.0, 957.5], [319.0, 952.0], [316.0, 1003.0], [307.0, 1008.0], [306.0, 1642.0], [305.0, 1006.0], [304.0, 1287.0], [315.0, 1232.5], [314.0, 1245.0], [313.0, 928.0], [312.0, 931.0], [311.0, 1438.0], [310.0, 940.0], [308.0, 1246.0], [334.0, 908.0], [335.0, 945.0], [333.0, 1190.0], [323.0, 1221.0], [322.0, 1069.5], [320.0, 1237.0], [331.0, 919.0], [330.0, 1632.0], [329.0, 1275.5], [327.0, 1378.0], [326.0, 922.0], [325.0, 968.0], [324.0, 974.0], [350.0, 1522.0], [351.0, 1300.0], [349.0, 905.0], [348.0, 1651.0], [347.0, 1529.0], [346.0, 1510.0], [345.0, 1522.0], [344.0, 1618.0], [343.0, 1500.0], [338.0, 954.0], [337.0, 1417.0], [342.0, 1248.0], [341.0, 1162.0], [340.0, 1329.0], [366.0, 1435.0], [364.0, 1527.0], [354.0, 895.0], [353.0, 1418.0], [352.0, 912.0], [363.0, 1158.0], [362.0, 1366.0], [361.0, 1561.0], [360.0, 1555.0], [359.0, 1162.0], [358.0, 1387.0], [356.0, 1309.0], [382.0, 1366.0], [383.0, 1345.0], [381.0, 863.0], [380.0, 1134.5], [379.0, 1143.0], [378.0, 1313.0], [377.0, 1329.0], [376.0, 1141.0], [374.0, 1274.0], [369.0, 878.0], [368.0, 1206.5], [371.0, 1259.0], [370.0, 883.0], [373.0, 900.0], [372.0, 1224.0], [398.0, 838.0], [399.0, 1463.5], [397.0, 840.0], [396.0, 1542.0], [395.0, 1217.0], [394.0, 893.0], [393.0, 1219.0], [392.0, 1396.0], [391.0, 1160.0], [385.0, 1361.0], [387.0, 922.0], [386.0, 1503.0], [390.0, 855.0], [389.0, 1558.0], [388.0, 1476.0], [414.0, 1596.0], [415.0, 1896.0], [413.0, 2229.0], [412.0, 2231.0], [411.0, 1614.0], [410.0, 1879.0], [408.0, 1573.0], [406.0, 1108.0], [401.0, 1514.0], [400.0, 834.0], [403.0, 1488.0], [402.0, 1375.0], [405.0, 1245.0], [404.0, 1518.0], [430.0, 1850.0], [431.0, 1469.0], [429.0, 1598.0], [428.0, 1685.0], [427.0, 1814.0], [426.0, 1674.0], [425.0, 1614.0], [424.0, 1719.0], [423.0, 2117.0], [422.0, 1639.0], [421.0, 1745.0], [420.0, 1716.0], [446.0, 1828.0], [447.0, 1837.0], [445.0, 1632.0], [444.0, 1616.0], [443.0, 2082.0], [442.0, 1529.0], [441.0, 1839.0], [440.0, 1688.0], [439.0, 1838.0], [434.0, 1830.5], [432.0, 2118.0], [438.0, 1516.0], [437.0, 1642.5], [436.0, 1702.0], [462.0, 2584.0], [463.0, 2068.0], [461.0, 2626.0], [451.0, 1823.0], [450.0, 1668.0], [448.0, 1590.0], [459.0, 1582.5], [457.0, 1640.0], [456.0, 1775.0], [455.0, 2089.5], [454.0, 1796.0], [452.0, 1528.0], [478.0, 1371.0], [479.0, 1710.0], [477.0, 1706.0], [476.0, 1935.0], [475.0, 2524.0], [474.0, 1754.0], [473.0, 1765.0], [472.0, 1599.0], [471.0, 1508.0], [465.0, 2039.0], [464.0, 2669.0], [467.0, 1774.0], [466.0, 1559.0], [470.0, 2024.0], [469.0, 1576.0], [468.0, 1764.0], [492.0, 1548.0], [494.0, 1647.0], [495.0, 1905.0], [493.0, 2472.0], [491.0, 1671.0], [490.0, 1927.0], [487.0, 1929.0], [481.0, 2145.0], [480.0, 2552.0], [483.0, 1529.0], [482.0, 1457.0], [486.0, 2506.0], [484.0, 1673.0], [510.0, 2387.0], [511.0, 2487.0], [509.0, 1344.0], [508.0, 1893.0], [507.0, 2455.0], [506.0, 1447.0], [505.0, 2182.5], [504.0, 2458.0], [503.0, 1631.0], [496.0, 2483.0], [499.0, 1901.5], [497.0, 2477.0], [502.0, 2483.0], [501.0, 1913.0], [500.0, 1645.0], [540.0, 2284.0], [528.0, 1592.0], [530.0, 1253.0], [532.0, 1823.0], [542.0, 1137.0], [538.0, 2338.0], [536.0, 1785.0], [512.0, 1898.0], [514.0, 1612.0], [516.0, 2478.0], [518.0, 2416.0], [526.0, 2391.0], [524.0, 1378.0], [522.0, 1494.0], [520.0, 2442.0], [534.0, 2324.0], [550.0, 1569.5], [548.0, 2180.0], [546.0, 1264.0], [544.0, 2251.0], [604.0, 892.0], [592.0, 1859.0], [594.0, 1867.0], [596.0, 1550.5], [606.0, 1832.0], [602.0, 1828.5], [600.0, 1292.0], [590.0, 1850.0], [588.0, 1081.0], [586.0, 1906.0], [584.0, 1373.0], [598.0, 1272.0], [636.0, 1789.0], [624.0, 1734.0], [626.0, 1229.0], [628.0, 1247.0], [638.0, 1807.0], [634.0, 1231.0], [632.0, 1763.0], [608.0, 1246.0], [610.0, 1856.0], [612.0, 1242.0], [614.0, 1802.0], [622.0, 1239.0], [620.0, 1817.0], [618.0, 1245.0], [616.0, 1260.0], [630.0, 1214.0], [668.0, 1423.0], [656.0, 1467.0], [658.0, 1689.0], [660.0, 863.0], [670.0, 366.0], [666.0, 1444.0], [664.0, 1627.0], [654.0, 1679.0], [640.0, 1715.0], [642.0, 1775.0], [644.0, 1744.0], [646.0, 1205.0], [652.0, 1680.0], [650.0, 1732.0], [648.0, 1741.0], [662.0, 1706.0], [698.0, 1102.0], [702.0, 1755.0], [688.0, 1106.0], [690.0, 1104.0], [696.0, 1684.0], [678.0, 35.0], [676.0, 230.0], [674.0, 96.0], [672.0, 250.0], [684.0, 1275.0], [682.0, 1061.0], [732.0, 2012.0], [722.0, 1364.5], [724.0, 1572.0], [734.0, 1760.0], [730.0, 2396.0], [728.0, 1496.0], [706.0, 1101.0], [704.0, 1021.0], [708.0, 1521.5], [710.0, 1040.0], [718.0, 2260.0], [714.0, 1780.0], [726.0, 1516.0], [764.0, 1605.0], [766.0, 1013.0], [752.0, 983.0], [754.0, 982.0], [756.0, 1868.0], [762.0, 1012.0], [760.0, 975.0], [742.0, 2428.0], [740.0, 1817.0], [738.0, 1854.3333333333333], [736.0, 2002.0], [750.0, 2031.0], [748.0, 1024.0], [746.0, 1032.0], [758.0, 1796.0], [794.0, 1916.0], [792.0, 1461.0], [798.0, 1880.0], [784.0, 1916.0], [786.0, 1520.0], [796.0, 1697.0], [768.0, 1456.5], [770.0, 1948.0], [772.0, 967.0], [774.0, 1828.0], [782.0, 1867.0], [780.0, 1192.0], [778.0, 1014.0], [776.0, 937.0], [790.0, 2026.0], [826.0, 2062.0], [816.0, 1047.5], [818.0, 1706.0], [828.0, 1824.0], [824.0, 1547.0], [806.0, 1714.0], [804.0, 1542.0], [800.0, 1814.5], [814.0, 1437.0], [812.0, 1698.0], [808.0, 2285.0], [856.0, 1740.0], [848.0, 1457.0], [850.0, 995.0], [858.0, 1294.0], [834.0, 1777.0], [836.0, 1678.0], [838.0, 1745.0], [846.0, 1308.0], [844.0, 1512.0], [840.0, 1769.0], [854.0, 1482.0], [852.0, 971.0], [890.0, 2005.0], [894.0, 1552.0], [880.0, 908.0], [882.0, 2089.0], [884.0, 1624.0], [892.0, 2810.0], [888.0, 2036.0], [870.0, 1213.0], [866.0, 981.0], [878.0, 2852.0], [876.0, 940.0], [874.0, 2843.0], [872.0, 2160.0], [886.0, 1459.0], [924.0, 1810.0], [926.0, 1810.0], [912.0, 1844.0], [914.0, 1849.0], [916.0, 2634.0], [922.0, 1783.0], [920.0, 1835.0], [902.0, 2185.5], [900.0, 2671.0], [898.0, 1406.0], [896.0, 1833.0], [910.0, 2567.0], [908.0, 1831.0], [906.0, 1865.0], [904.0, 2633.0], [918.0, 1865.0], [956.0, 1602.0], [944.0, 1682.0], [948.0, 1684.0], [958.0, 1451.0], [954.0, 1586.0], [952.0, 2413.0], [928.0, 1771.0], [932.0, 1745.0], [934.0, 2532.0], [942.0, 1714.0], [940.0, 1677.0], [938.0, 1685.0], [936.0, 1712.0], [950.0, 1512.0], [988.0, 2271.0], [976.0, 1531.0], [978.0, 2251.0], [980.0, 1519.0], [990.0, 2234.0], [986.0, 1491.0], [984.0, 2249.0], [960.0, 1601.0], [962.0, 2345.0], [964.0, 1562.0], [966.0, 1569.0], [974.0, 1521.0], [972.0, 2307.0], [970.0, 1426.0], [968.0, 2286.0], [982.0, 1538.0], [1016.0, 639.0], [1020.0, 617.0], [1008.0, 1606.0], [1012.0, 612.0], [1022.0, 651.0], [1018.0, 648.0], [992.0, 2257.0], [994.0, 2228.0], [996.0, 2259.0], [998.0, 1430.0], [1006.0, 1530.0], [1004.0, 693.0], [1002.0, 691.0], [1000.0, 1772.223076923077], [1014.0, 599.0], [1080.0, 1419.0], [1084.0, 1355.0], [1056.0, 1502.0], [1060.0, 1499.0], [1064.0, 1425.0], [1068.0, 1453.0], [1076.0, 1413.0], [1072.0, 1450.0], [1028.0, 1516.0], [1032.0, 1421.0], [1052.0, 1497.0], [1048.0, 1455.0], [1044.0, 1501.0], [1144.0, 442.0], [1140.0, 428.5], [1124.0, 493.0], [1120.0, 457.0], [1128.0, 470.0], [1148.0, 446.5], [1136.0, 476.0], [1096.0, 1327.0], [1092.0, 1431.0], [1088.0, 1368.0], [1116.0, 473.0], [1112.0, 482.0], [1108.0, 455.0], [1104.0, 492.0], [1208.0, 1032.0], [1204.0, 1110.0], [1184.0, 548.0], [1188.0, 540.0], [1192.0, 1114.0], [1196.0, 824.0], [1212.0, 1034.0], [1200.0, 1062.0], [1156.0, 457.0], [1160.0, 447.0], [1164.0, 558.0], [1180.0, 1095.0], [1176.0, 826.0], [1168.0, 1109.0], [1272.0, 951.5], [1248.0, 733.0], [1252.0, 1020.0], [1256.0, 1022.0], [1260.0, 998.5], [1276.0, 1005.0], [1268.0, 1018.0], [1264.0, 1025.0], [1228.0, 1066.0], [1220.0, 1060.0], [1244.0, 1011.0], [1240.0, 1066.0], [1236.0, 1081.0], [1232.0, 1068.0], [1340.0, 602.0], [1332.0, 513.5], [1320.0, 129.0], [1312.0, 137.0], [1316.0, 125.0], [1324.0, 121.0], [1280.0, 955.0], [1284.0, 979.0], [1288.0, 944.0], [1292.0, 927.0], [1308.0, 884.0], [1304.0, 986.0], [1300.0, 889.0], [1296.0, 951.0], [1400.0, 421.0], [1396.0, 433.0], [1404.0, 435.0], [1376.0, 464.0], [1380.0, 555.0], [1388.0, 452.0], [1392.0, 448.0], [1344.0, 515.0], [1348.0, 505.0], [1352.0, 492.0], [1372.0, 474.0], [1368.0, 560.0], [1360.0, 491.0], [1468.0, 556.9599999999999], [1464.0, 550.0], [1440.0, 587.0], [1408.0, 589.0], [1412.0, 609.0], [1416.0, 568.0], [1420.0, 562.0], [1424.0, 602.0], [1528.0, 366.0], [1524.0, 394.0], [1532.0, 383.0], [1504.0, 320.0], [1508.0, 292.0], [1512.0, 262.0], [1516.0, 269.5], [1520.0, 398.0], [1484.0, 517.0], [1480.0, 533.0], [1476.0, 514.0], [1472.0, 514.0], [1500.0, 332.0], [1496.0, 330.0], [1492.0, 357.0], [1488.0, 358.0], [1592.0, 1256.0], [1596.0, 1248.0], [1568.0, 753.0], [1572.0, 744.0], [1576.0, 1243.0], [1580.0, 1276.0], [1588.0, 1181.0], [1584.0, 740.0], [1544.0, 347.0], [1540.0, 346.0], [1536.0, 354.0], [1564.0, 765.0], [1560.0, 286.0], [1556.0, 305.0], [1552.0, 337.0], [1656.0, 1107.0], [1660.0, 1096.0], [1640.0, 1124.0], [1632.0, 890.0], [1636.0, 1111.0], [1644.0, 1114.0], [1612.0, 1188.0], [1608.0, 1164.0], [1604.0, 1159.0], [1600.0, 1245.0], [1628.0, 1163.0], [1624.0, 1188.0], [1620.0, 1128.0], [1616.0, 1154.5], [1712.0, 1018.0], [1676.0, 1024.5], [1724.0, 1005.0], [1668.0, 1008.0], [1664.0, 1040.0], [1688.0, 832.0], [1680.0, 903.0], [1776.0, 894.0], [1788.0, 598.0], [1768.0, 717.0], [1760.0, 761.0], [1764.0, 742.0], [1772.0, 735.0], [1732.0, 1037.0], [1756.0, 1075.0], [1752.0, 963.0652173913044], [1748.0, 985.0], [1744.0, 1016.0], [1804.0, 524.0], [1852.0, 523.9354838709678], [1848.0, 548.0], [1844.0, 568.0], [1800.0, 647.25], [1796.0, 569.0], [1792.0, 856.0], [1812.0, 758.0], [1808.0, 560.0], [1904.0, 438.0], [1900.0, 528.0], [1868.0, 420.0], [1860.0, 479.5], [1856.0, 476.5], [1880.0, 558.0], [1872.0, 551.0], [1972.0, 66.0], [1976.0, 187.0], [1952.0, 285.3333333333333], [1956.0, 290.5], [1960.0, 215.0], [1964.0, 135.0], [1968.0, 123.0], [1920.0, 366.0], [1924.0, 371.5], [1928.0, 292.0], [1932.0, 349.0], [1948.0, 227.5], [1940.0, 348.0], [1988.0, 127.0], [1996.0, 5067.0], [2000.0, 1000.9999999999999], [1984.0, 162.0], [1992.0, 8895.0], [1081.0, 1425.0], [1085.0, 1379.0], [1057.0, 1459.0], [1061.0, 1471.0], [1065.0, 1487.0], [1069.0, 1406.0], [1077.0, 1423.0], [1073.0, 1426.0], [1029.0, 1481.0], [1037.0, 1499.5], [1053.0, 1502.0], [1045.0, 1491.0], [1041.0, 1472.0], [1141.0, 428.0], [1137.0, 442.0], [1129.0, 484.0], [1133.0, 463.5], [1149.0, 418.0], [1101.0, 495.0], [1097.0, 1364.0], [1093.0, 1400.0], [1089.0, 1383.0], [1117.0, 486.0], [1113.0, 478.0], [1105.0, 502.0], [1213.0, 1043.0], [1185.0, 1054.0], [1189.0, 539.0], [1197.0, 530.0], [1209.0, 527.0], [1201.0, 1064.0], [1153.0, 431.5], [1157.0, 445.0], [1161.0, 410.0], [1165.0, 1059.0], [1181.0, 553.0], [1169.0, 1051.0], [1277.0, 948.0], [1249.0, 1035.0], [1253.0, 987.0], [1261.0, 956.0], [1273.0, 1040.0], [1269.0, 947.0], [1265.0, 1038.0], [1229.0, 1071.0], [1225.0, 1051.5], [1221.0, 1024.0], [1217.0, 1019.0], [1245.0, 988.0], [1241.0, 998.0], [1233.0, 1077.0], [1337.0, 528.0], [1321.0, 118.0], [1325.0, 120.0], [1341.0, 520.0], [1333.0, 601.0], [1329.0, 521.5], [1281.0, 1031.0], [1285.0, 924.0], [1289.0, 982.0], [1293.0, 1005.0], [1309.0, 142.0], [1305.0, 945.0], [1301.0, 982.0], [1297.0, 945.0], [1401.0, 429.0], [1405.0, 432.0], [1377.0, 554.0], [1381.0, 560.0], [1385.0, 465.0], [1389.0, 549.0], [1397.0, 516.0], [1393.0, 439.0], [1345.0, 504.0], [1353.0, 584.0], [1357.0, 498.0], [1369.0, 566.0], [1365.0, 520.6666666666666], [1361.0, 487.0], [1469.0, 555.0], [1449.0, 558.0], [1413.0, 617.0], [1417.0, 628.0], [1433.0, 600.0], [1429.0, 489.5], [1425.0, 608.0], [1529.0, 370.0], [1505.0, 296.0], [1509.0, 278.0], [1513.0, 265.0], [1517.0, 407.0], [1533.0, 360.0], [1525.0, 403.0], [1521.0, 394.5], [1485.0, 467.0], [1481.0, 529.0], [1477.0, 559.0], [1473.0, 544.0], [1501.0, 338.0], [1497.0, 335.0], [1493.0, 354.0], [1489.0, 352.0], [1597.0, 1218.0], [1569.0, 760.0], [1573.0, 1244.0], [1577.0, 742.0], [1593.0, 1256.0], [1585.0, 1265.0], [1549.0, 334.0], [1545.0, 351.0], [1541.0, 359.0], [1537.0, 356.0], [1565.0, 771.0], [1561.0, 286.0], [1557.0, 292.0], [1553.0, 325.5], [1661.0, 1085.0], [1633.0, 1069.0], [1637.0, 1123.0], [1641.0, 1095.0], [1645.0, 1118.0], [1657.0, 1062.0], [1653.0, 1083.0], [1649.0, 1039.0], [1613.0, 1149.0], [1609.0, 1230.0], [1605.0, 700.0], [1629.0, 1105.0], [1625.0, 1123.0], [1621.0, 1184.0], [1677.0, 1024.0], [1673.0, 1015.5], [1665.0, 1016.0], [1709.0, 1258.0], [1689.0, 832.5], [1681.0, 908.0], [1789.0, 656.0], [1761.0, 770.0], [1769.0, 707.0], [1773.0, 679.0], [1785.0, 648.0], [1781.0, 635.0], [1777.0, 703.0], [1741.0, 1024.5], [1737.0, 997.0], [1757.0, 891.5], [1753.0, 835.0], [1749.0, 974.0], [1849.0, 563.0], [1853.0, 475.0], [1805.0, 526.0], [1801.0, 546.0], [1797.0, 577.0], [1813.0, 153.0], [1809.0, 769.0], [1913.0, 411.0], [1909.0, 404.0], [1897.0, 500.0], [1901.0, 524.0], [1917.0, 418.0], [1905.0, 393.0], [1869.0, 344.0], [1865.0, 466.0], [1861.0, 443.0], [1857.0, 496.0], [1881.0, 542.0], [1877.0, 557.0], [1873.0, 527.0], [1977.0, 181.0], [1953.0, 303.0], [1957.0, 236.0], [1961.0, 188.0], [1965.0, 134.0], [1973.0, 190.0], [1969.0, 120.0], [1921.0, 420.0], [1925.0, 401.0], [1929.0, 281.0], [1933.0, 249.0], [1949.0, 231.0], [1945.0, 280.0], [1937.0, 332.0], [1993.0, 8890.0], [1985.0, 161.83333333333334], [1989.0, 9267.0], [1997.0, 42.0], [541.0, 2294.0], [543.0, 1494.0], [529.0, 2457.0], [531.0, 2388.0], [533.0, 2312.0], [539.0, 1783.0], [537.0, 1378.0], [527.0, 2402.0], [513.0, 2435.0], [515.0, 2414.0], [517.0, 2471.0], [519.0, 1630.0], [525.0, 2384.0], [523.0, 2370.0], [521.0, 2462.0], [535.0, 1781.0], [547.0, 1623.0], [545.0, 2137.0], [605.0, 1790.0], [607.0, 1840.0], [593.0, 1867.0], [595.0, 1810.0], [603.0, 1802.0], [601.0, 1784.0], [591.0, 1861.0], [583.0, 1711.178571428571], [581.0, 1444.0], [589.0, 1885.0], [587.0, 1941.0], [585.0, 1944.0], [599.0, 728.0], [637.0, 1223.0], [639.0, 1212.0], [625.0, 1346.5], [627.0, 1239.0], [629.0, 1798.0], [635.0, 1199.0], [633.0, 1796.0], [623.0, 1236.0], [609.0, 1806.0], [611.0, 1005.0], [613.0, 1806.0], [615.0, 995.0], [621.0, 1224.0], [619.0, 1256.0], [617.0, 873.0], [631.0, 943.0], [669.0, 1327.0], [671.0, 36.0], [657.0, 1147.0], [659.0, 1708.0], [661.0, 1685.0], [667.0, 1393.0], [665.0, 1550.0], [641.0, 1780.0], [643.0, 1707.0], [645.0, 1735.0], [647.0, 1748.0], [653.0, 1762.0], [651.0, 1178.0], [649.0, 1696.0], [663.0, 1167.5], [699.0, 1633.0], [697.0, 1268.0], [703.0, 1277.0], [689.0, 1275.0], [691.0, 1692.0], [701.0, 1776.5], [679.0, 1073.0], [677.0, 277.0], [675.0, 94.0], [673.0, 195.0], [687.0, 2323.0], [685.0, 1581.0], [683.0, 1280.0], [681.0, 2326.0], [695.0, 1161.0], [693.0, 1563.5], [733.0, 2288.0], [735.0, 1020.0], [721.0, 1035.0], [723.0, 2055.0], [725.0, 1708.0], [731.0, 1989.0], [729.0, 1990.0], [719.0, 1664.0], [709.0, 2062.0], [711.0, 1673.0], [717.0, 1054.0], [715.0, 2002.0], [727.0, 1514.0], [761.0, 1433.0], [765.0, 1963.0], [753.0, 980.0], [757.0, 984.0], [763.0, 2099.0], [743.0, 1991.0], [741.0, 1985.0], [739.0, 1801.0], [737.0, 1027.0], [751.0, 986.0], [749.0, 2015.0], [747.0, 1011.0], [745.0, 1792.5], [759.0, 1201.0], [773.0, 1674.0], [797.0, 1636.0], [785.0, 1435.0], [793.0, 1424.0], [783.0, 1413.0], [769.0, 990.0], [771.0, 1000.0], [775.0, 1847.0], [781.0, 1433.0], [779.0, 1009.0], [777.0, 858.0], [791.0, 1428.0], [789.0, 1439.0], [787.0, 2367.0], [825.0, 1038.0], [829.0, 1762.0], [831.0, 1712.5], [817.0, 1039.0], [819.0, 1036.0], [827.0, 1267.0], [807.0, 2144.0], [805.0, 2104.0], [803.0, 1493.5], [801.0, 1585.0], [815.0, 2086.0], [811.0, 1837.0], [809.0, 1077.0], [823.0, 1812.5], [821.0, 1553.0], [859.0, 1295.0], [861.0, 1254.0], [863.0, 1341.5], [849.0, 982.0], [857.0, 1317.5], [847.0, 1393.0], [833.0, 1685.0], [835.0, 1806.0], [837.0, 1689.0], [839.0, 1762.0], [845.0, 1991.0], [843.0, 2166.0], [841.0, 1006.0], [855.0, 968.0], [851.0, 995.0], [893.0, 2026.0], [895.0, 1968.0], [881.0, 897.0], [883.0, 1675.0], [885.0, 2031.0], [891.0, 2018.0], [871.0, 959.0], [869.0, 1409.0], [867.0, 967.0], [865.0, 1440.0], [879.0, 1690.0], [877.0, 1425.0], [875.0, 932.0], [873.0, 1875.0], [887.0, 853.0], [921.0, 1841.0], [925.0, 1829.0], [913.0, 1833.0], [915.0, 2600.0], [917.0, 1861.0], [923.0, 1809.0], [903.0, 1852.0], [899.0, 794.0], [897.0, 1475.0], [911.0, 1865.0], [909.0, 1832.0], [907.0, 1863.0], [905.0, 1883.0], [919.0, 1861.0], [957.0, 2384.0], [959.0, 1617.0], [947.0, 1670.0], [945.0, 2446.0], [949.0, 2404.0], [955.0, 1593.0], [953.0, 1631.0], [943.0, 1694.0], [931.0, 1794.0], [929.0, 1755.0], [933.0, 1758.0], [935.0, 1683.0], [941.0, 2410.0], [937.0, 2436.0], [951.0, 2443.0], [989.0, 2237.0], [991.0, 2214.0], [977.0, 1552.0], [979.0, 1388.0], [981.0, 1339.0], [987.0, 1470.0], [985.0, 2230.0], [975.0, 1506.0], [963.0, 2340.0], [965.0, 2343.0], [967.0, 1412.0], [973.0, 2291.0], [971.0, 2324.0], [969.0, 1544.0], [983.0, 2286.0], [1021.0, 581.0], [1023.0, 576.0], [1009.0, 1560.0], [1011.0, 1544.5], [1019.0, 596.0], [1017.0, 639.0], [1007.0, 1581.0], [993.0, 2248.0], [995.0, 2232.0], [997.0, 1445.0], [999.0, 1445.0], [1005.0, 696.0], [1003.0, 749.0], [1001.0, 762.0], [1015.0, 641.0], [1086.0, 1373.0], [1058.0, 1500.0], [1062.0, 1455.5], [1066.0, 1466.0], [1070.0, 1463.0], [1082.0, 1383.0], [1074.0, 1408.0], [1030.0, 1515.0], [1034.0, 1468.5], [1054.0, 1490.0], [1050.0, 1460.5], [1046.0, 1407.0], [1042.0, 1497.0], [1138.0, 459.0], [1142.0, 446.0], [1146.0, 432.0], [1122.0, 462.5], [1126.0, 317.0], [1134.0, 471.0], [1102.0, 510.0], [1098.0, 519.0], [1094.0, 1404.0], [1090.0, 1395.0], [1118.0, 498.0], [1114.0, 467.0], [1110.0, 498.5], [1202.0, 1047.5], [1206.0, 1098.0], [1210.0, 1097.0], [1186.0, 543.0], [1198.0, 1023.0], [1154.0, 415.0], [1162.0, 578.0], [1182.0, 829.5], [1178.0, 833.5], [1174.0, 825.0], [1274.0, 941.0], [1250.0, 1057.0], [1258.0, 964.0], [1262.0, 954.0], [1270.0, 994.5], [1266.0, 1048.0], [1230.0, 1082.0], [1226.0, 1065.0], [1222.0, 1045.0], [1218.0, 1032.0], [1246.0, 1008.0], [1242.0, 1075.0], [1238.0, 1075.0], [1234.0, 1000.0], [1334.0, 516.0], [1314.0, 135.5], [1318.0, 123.0], [1322.0, 125.0], [1326.0, 115.0], [1342.0, 599.0], [1282.0, 955.5], [1286.0, 936.0], [1290.0, 939.0], [1294.0, 904.0], [1310.0, 143.0], [1306.0, 932.0], [1302.0, 953.0], [1298.0, 900.0], [1406.0, 413.0], [1378.0, 471.0], [1386.0, 463.0], [1390.0, 440.0], [1402.0, 455.0], [1398.0, 439.0], [1394.0, 529.0], [1346.0, 512.0], [1350.0, 502.5], [1354.0, 489.0], [1374.0, 519.0], [1370.0, 497.0], [1366.0, 489.0], [1362.0, 486.0], [1462.0, 600.0], [1470.0, 571.0], [1410.0, 633.5], [1414.0, 592.0], [1418.0, 607.0], [1438.0, 566.0], [1426.0, 572.0], [1534.0, 355.0], [1506.0, 285.0], [1510.0, 294.0], [1514.0, 263.0], [1530.0, 389.0], [1526.0, 408.0], [1486.0, 481.0], [1482.0, 511.0], [1478.0, 555.0], [1474.0, 534.0], [1502.0, 311.0], [1498.0, 345.0], [1494.0, 344.0], [1490.0, 343.0], [1598.0, 1171.0], [1570.0, 756.5], [1574.0, 1198.0], [1578.0, 750.0], [1582.0, 1221.5], [1594.0, 968.0], [1590.0, 721.0], [1586.0, 1218.0], [1550.0, 356.0], [1546.0, 330.0], [1542.0, 341.0], [1538.0, 361.0], [1566.0, 754.0], [1562.0, 249.0], [1558.0, 304.0], [1554.0, 332.0], [1662.0, 1012.0], [1638.0, 526.0], [1642.0, 1082.0], [1646.0, 1092.0], [1654.0, 1042.0], [1650.0, 1099.0], [1614.0, 1163.0], [1610.0, 942.0], [1606.0, 698.0], [1602.0, 705.0], [1630.0, 1096.0], [1626.0, 1124.0], [1622.0, 1118.0], [1618.0, 1174.0], [1678.0, 1046.0], [1674.0, 1063.0], [1666.0, 1071.0], [1690.0, 307.0], [1686.0, 855.0], [1682.0, 923.0], [1786.0, 870.0], [1790.0, 637.0], [1762.0, 752.0], [1766.0, 746.0], [1770.0, 731.0], [1774.0, 637.0], [1782.0, 695.0], [1778.0, 614.0], [1758.0, 783.0], [1754.0, 875.0], [1750.0, 958.0], [1746.0, 1020.0], [1846.0, 588.0], [1854.0, 478.0], [1806.0, 598.0], [1802.0, 541.0], [1798.0, 591.0], [1794.0, 641.5], [1810.0, 760.0], [1906.0, 386.0], [1914.0, 429.0], [1898.0, 508.0], [1918.0, 384.0], [1870.0, 293.0], [1866.0, 427.5], [1862.0, 473.5], [1858.0, 477.0], [1886.0, 521.0], [1882.0, 511.0], [1970.0, 113.5], [1982.0, 178.0], [1954.0, 214.0], [1958.0, 239.0], [1962.0, 187.0], [1922.0, 413.0], [1926.0, 375.3333333333333], [1930.0, 259.0], [1950.0, 227.0], [1946.0, 335.0], [1942.0, 343.0], [1938.0, 247.0], [1986.0, 156.0], [1998.0, 76.0], [1994.0, 5930.0], [1990.0, 8924.0], [1083.0, 1437.0], [1087.0, 1376.0], [1059.0, 1488.0], [1063.0, 1391.0], [1067.0, 1424.0], [1071.0, 1390.0], [1075.0, 1450.0], [1055.0, 1466.0], [1027.0, 1502.0], [1031.0, 1496.0], [1035.0, 1432.5], [1039.0, 1421.5], [1051.0, 1455.5], [1047.0, 1458.0], [1043.0, 1414.0], [1103.0, 518.0], [1151.0, 457.0], [1123.0, 493.0], [1127.0, 466.0], [1131.0, 442.5], [1099.0, 527.0], [1095.0, 1394.5], [1091.0, 1374.0], [1119.0, 481.0], [1115.0, 462.0], [1111.0, 492.0], [1107.0, 457.0], [1163.0, 566.0], [1203.0, 1024.0], [1187.0, 544.0], [1215.0, 1029.0], [1199.0, 1069.0], [1183.0, 1060.0], [1155.0, 457.0], [1159.0, 425.0], [1167.0, 1086.0], [1179.0, 554.0], [1171.0, 804.0], [1279.0, 984.5], [1271.0, 972.0], [1267.0, 965.0], [1275.0, 990.5], [1251.0, 986.0], [1255.0, 1009.0], [1259.0, 1043.0], [1263.0, 1016.0], [1231.0, 1055.0], [1227.0, 1076.0], [1223.0, 1076.0], [1219.0, 1091.0], [1243.0, 991.0], [1239.0, 1088.0], [1235.0, 1012.0], [1339.0, 546.5], [1343.0, 495.0], [1315.0, 126.0], [1319.0, 130.0], [1323.0, 125.0], [1327.0, 612.0], [1335.0, 516.0], [1331.0, 513.0], [1311.0, 131.0], [1283.0, 951.0], [1287.0, 939.0], [1291.0, 964.0], [1295.0, 986.0], [1307.0, 877.0], [1303.0, 984.0], [1299.0, 954.0], [1403.0, 448.0], [1407.0, 618.0], [1379.0, 477.0], [1383.0, 459.0], [1387.0, 446.0], [1391.0, 457.0], [1399.0, 447.0], [1395.0, 519.0], [1375.0, 476.0], [1351.0, 490.0], [1355.0, 501.0], [1359.0, 537.5], [1371.0, 557.0], [1367.0, 488.0], [1467.0, 563.0], [1459.0, 587.0], [1471.0, 519.0], [1443.0, 606.0], [1447.0, 569.0], [1439.0, 580.0], [1411.0, 584.0], [1419.0, 567.0], [1423.0, 604.0], [1431.0, 570.0], [1427.0, 617.0], [1455.0, 582.0], [1451.0, 554.0], [1531.0, 390.0], [1535.0, 352.0], [1507.0, 292.0], [1515.0, 258.0], [1527.0, 381.0], [1523.0, 396.0], [1487.0, 365.0], [1479.0, 538.0], [1475.0, 513.0], [1503.0, 311.0], [1499.0, 349.0], [1495.0, 354.0], [1491.0, 350.0], [1595.0, 1163.0], [1587.0, 734.0], [1599.0, 1219.0], [1571.0, 755.0], [1575.0, 744.0], [1579.0, 1206.0], [1583.0, 744.0], [1591.0, 1249.0], [1551.0, 318.0], [1547.0, 334.0], [1543.0, 354.0], [1539.0, 339.0], [1563.0, 249.0], [1559.0, 289.0], [1555.0, 312.0], [1659.0, 1062.0], [1655.0, 1036.0], [1663.0, 1035.0], [1639.0, 1107.0], [1643.0, 1071.0], [1647.0, 1069.0], [1651.0, 1081.0], [1611.0, 947.0], [1607.0, 952.0], [1603.0, 692.0], [1631.0, 1153.0], [1627.0, 1004.5], [1619.0, 1165.0], [1671.0, 1047.0], [1675.0, 1001.0], [1691.0, 381.0], [1679.0, 1001.6666666666666], [1667.0, 1067.0], [1687.0, 832.5], [1683.0, 343.0], [1783.0, 669.0], [1787.0, 627.0], [1763.0, 715.5], [1767.0, 722.0], [1771.0, 817.5], [1775.0, 618.0], [1779.0, 608.0], [1731.0, 998.0], [1755.0, 847.0], [1747.0, 984.0], [1847.0, 544.0], [1855.0, 487.0], [1807.0, 788.0], [1803.0, 537.0], [1795.0, 621.0], [1811.0, 508.0], [1907.0, 428.0], [1915.0, 407.0], [1919.0, 395.0], [1895.0, 541.0], [1899.0, 513.0], [1903.0, 462.53333333333336], [1871.0, 293.0], [1867.0, 420.0], [1863.0, 464.0], [1883.0, 553.5], [1879.0, 531.0], [1971.0, 70.0], [1975.0, 183.5], [1959.0, 228.0], [1955.0, 304.0], [1963.0, 10944.0], [1967.0, 132.0], [1951.0, 217.0], [1923.0, 367.0], [1927.0, 335.0], [1931.0, 256.0], [1935.0, 323.0], [1943.0, 230.0], [1987.0, 153.0], [1999.0, 65.0], [1995.0, 6147.0], [1991.0, 9131.0], [1.0, 43.33333333333332]], "isOverall": false, "label": "Healthy Thinking CN", "isController": false}, {"data": [[32.14457620989358, 55.92193832379415]], "isOverall": false, "label": "Healthy Thinking CN-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 273.6, "minX": 1.62703154E12, "maxY": 6557418.7, "series": [{"data": [[1.62703183E12, 6509363.0], [1.62703166E12, 6094336.5], [1.62703209E12, 1402352.7], [1.62703192E12, 2490159.0], [1.62703226E12, 375706.2], [1.62703243E12, 843159.1], [1.62703175E12, 3547384.4], [1.62703158E12, 253379.6], [1.62703201E12, 6535575.2], [1.62703184E12, 6251609.7], [1.62703235E12, 6548681.3], [1.62703218E12, 6548531.4], [1.62703244E12, 52424.4], [1.62703167E12, 4906067.8], [1.62703193E12, 3573596.6], [1.62703176E12, 4635190.7], [1.62703227E12, 1406721.4], [1.6270321E12, 2490159.0], [1.62703236E12, 6531206.5], [1.62703159E12, 532970.8], [1.62703185E12, 4508498.4], [1.62703168E12, 4110948.8], [1.62703219E12, 6548531.4], [1.62703202E12, 6238503.6], [1.62703181E12, 6548681.3], [1.62703164E12, 5618019.6], [1.62703215E12, 3901249.1], [1.62703198E12, 6063755.6], [1.62703224E12, 1808600.4], [1.62703241E12, 3040615.2], [1.62703173E12, 1415473.8], [1.62703156E12, 262116.8], [1.62703207E12, 865002.6], [1.6270319E12, 388805.4], [1.62703233E12, 6544312.6], [1.62703216E12, 5242177.2], [1.62703165E12, 6487445.2], [1.62703199E12, 6452569.9], [1.62703182E12, 6548681.3], [1.62703225E12, 869351.4], [1.62703208E12, 375708.2], [1.62703242E12, 1948440.2], [1.62703191E12, 1415432.3], [1.62703174E12, 2481429.5], [1.62703217E12, 6548501.7], [1.627032E12, 6553050.0], [1.62703234E12, 6548681.3], [1.62703213E12, 5736103.1], [1.62703196E12, 6509363.0], [1.6270323E12, 4652665.5], [1.62703179E12, 6500625.6], [1.62703162E12, 1000415.2], [1.62703205E12, 3036246.5], [1.62703188E12, 1961501.4], [1.62703222E12, 4128341.7], [1.62703239E12, 5190015.6], [1.62703171E12, 878108.7], [1.62703154E12, 83004.1], [1.62703197E12, 6421989.0], [1.6270318E12, 6557418.7], [1.62703231E12, 5736103.1], [1.62703214E12, 6522469.1], [1.6270324E12, 4119684.1], [1.62703163E12, 4538975.4], [1.62703189E12, 869351.4], [1.62703172E12, 384445.6], [1.62703223E12, 3036177.0], [1.62703206E12, 1952808.9], [1.62703232E12, 6509363.0], [1.62703155E12, 270861.7], [1.62703228E12, 2485797.6], [1.62703177E12, 5727365.7], [1.6270316E12, 764505.0], [1.62703211E12, 3569227.9], [1.62703194E12, 4648296.8], [1.62703237E12, 6557418.7], [1.6270322E12, 6255835.2], [1.62703169E12, 3036246.5], [1.62703203E12, 5198753.0], [1.62703186E12, 2813327.6], [1.62703229E12, 3582334.0], [1.62703212E12, 4652665.5], [1.62703161E12, 830055.6], [1.62703195E12, 5718628.3], [1.62703178E12, 6518100.4], [1.62703221E12, 5211739.8], [1.62703204E12, 4115315.4], [1.62703238E12, 6255978.4], [1.62703187E12, 3040529.9], [1.6270317E12, 1896015.8]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62703183E12, 33972.0], [1.62703166E12, 31806.0], [1.62703209E12, 7318.8], [1.62703192E12, 12996.0], [1.62703226E12, 1960.8], [1.62703243E12, 4400.4], [1.62703175E12, 18513.6], [1.62703158E12, 1322.4], [1.62703201E12, 34108.8], [1.62703184E12, 32626.8], [1.62703235E12, 34177.2], [1.62703218E12, 34177.2], [1.62703244E12, 273.6], [1.62703167E12, 25604.4], [1.62703193E12, 18650.4], [1.62703176E12, 24190.8], [1.62703227E12, 7341.6], [1.6270321E12, 12996.0], [1.62703236E12, 34086.0], [1.62703159E12, 2781.6], [1.62703185E12, 23529.6], [1.62703168E12, 21454.8], [1.62703219E12, 34177.2], [1.62703202E12, 32558.4], [1.62703181E12, 34177.2], [1.62703164E12, 29320.8], [1.62703215E12, 20360.4], [1.62703198E12, 31646.4], [1.62703224E12, 9439.2], [1.62703241E12, 15868.8], [1.62703173E12, 7387.2], [1.62703156E12, 1368.0], [1.62703207E12, 4514.4], [1.6270319E12, 2029.2], [1.62703233E12, 34154.4], [1.62703216E12, 27360.0], [1.62703165E12, 33858.0], [1.62703199E12, 33675.6], [1.62703182E12, 34177.2], [1.62703225E12, 4537.2], [1.62703208E12, 1960.8], [1.62703242E12, 10168.8], [1.62703191E12, 7387.2], [1.62703174E12, 12950.4], [1.62703217E12, 34177.2], [1.627032E12, 34200.0], [1.62703234E12, 34177.2], [1.62703213E12, 29936.4], [1.62703196E12, 33972.0], [1.6270323E12, 24282.0], [1.62703179E12, 33926.4], [1.62703162E12, 5221.2], [1.62703205E12, 15846.0], [1.62703188E12, 10237.2], [1.62703222E12, 21546.0], [1.62703239E12, 27086.4], [1.62703171E12, 4582.8], [1.62703154E12, 433.2], [1.62703197E12, 33516.0], [1.6270318E12, 34222.8], [1.62703231E12, 29936.4], [1.62703214E12, 34040.4], [1.6270324E12, 21500.4], [1.62703163E12, 23689.2], [1.62703189E12, 4537.2], [1.62703172E12, 2006.4], [1.62703223E12, 15846.0], [1.62703206E12, 10191.6], [1.62703232E12, 33972.0], [1.62703155E12, 1413.6], [1.62703228E12, 12973.2], [1.62703177E12, 29890.8], [1.6270316E12, 3990.0], [1.62703211E12, 18627.6], [1.62703194E12, 24259.2], [1.62703237E12, 34222.8], [1.6270322E12, 32649.6], [1.62703169E12, 15846.0], [1.62703203E12, 27132.0], [1.62703186E12, 14683.2], [1.62703229E12, 18696.0], [1.62703212E12, 24282.0], [1.62703161E12, 4332.0], [1.62703195E12, 29845.2], [1.62703178E12, 34017.6], [1.62703221E12, 27200.4], [1.62703204E12, 21477.6], [1.62703238E12, 32649.6], [1.62703187E12, 15868.8], [1.6270317E12, 9895.2]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62703244E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 12.145728643216085, "minX": 1.62703154E12, "maxY": 1596.842105263158, "series": [{"data": [[1.62703183E12, 15.788590604026838], [1.62703166E12, 38.89605734767023], [1.62703209E12, 19.825545171339563], [1.62703192E12, 12.966666666666672], [1.62703226E12, 12.872093023255815], [1.62703243E12, 12.829015544041455], [1.62703175E12, 23.221674876847263], [1.62703158E12, 496.56896551724134], [1.62703201E12, 27.103609625668494], [1.62703184E12, 15.206149545772192], [1.62703235E12, 27.623749166110755], [1.62703218E12, 28.876584389593074], [1.62703244E12, 13.833333333333334], [1.62703167E12, 24.044523597506636], [1.62703193E12, 12.254278728606373], [1.62703176E12, 26.59566446748351], [1.62703227E12, 12.198757763975168], [1.6270321E12, 20.828070175438604], [1.62703236E12, 28.32976588628761], [1.62703159E12, 830.1639344262294], [1.62703185E12, 13.79069767441862], [1.62703168E12, 25.97980871413392], [1.62703219E12, 28.609739826551056], [1.62703202E12, 26.630952380952348], [1.62703181E12, 16.34222815210141], [1.62703164E12, 222.18895800933132], [1.62703215E12, 27.05487122060472], [1.62703198E12, 28.123198847262245], [1.62703224E12, 18.38647342995169], [1.62703241E12, 12.548850574712626], [1.62703173E12, 21.447530864197514], [1.62703156E12, 442.8666666666667], [1.62703207E12, 20.2979797979798], [1.6270319E12, 49.640449438202246], [1.62703233E12, 26.969959946595488], [1.62703216E12, 63.52500000000006], [1.62703165E12, 51.021548821548784], [1.62703199E12, 31.16587677725118], [1.62703182E12, 15.833222148098713], [1.62703225E12, 12.145728643216085], [1.62703208E12, 21.17441860465117], [1.62703242E12, 13.18385650224216], [1.62703191E12, 43.94135802469136], [1.62703174E12, 22.827464788732414], [1.62703217E12, 27.73649099399601], [1.627032E12, 27.41333333333337], [1.62703234E12, 27.398265510340206], [1.62703213E12, 24.677075399847645], [1.62703196E12, 15.993959731543635], [1.6270323E12, 23.297652582159625], [1.62703179E12, 35.67607526881718], [1.62703162E12, 749.1965065502187], [1.62703205E12, 19.227338129496403], [1.62703188E12, 51.04899777282851], [1.62703222E12, 15.718518518518538], [1.62703239E12, 25.63973063973062], [1.62703171E12, 23.810945273631848], [1.62703154E12, 1596.842105263158], [1.62703197E12, 17.518367346938792], [1.6270318E12, 16.39640239840107], [1.62703231E12, 24.855293221629818], [1.62703214E12, 26.872069658405866], [1.6270324E12, 15.504772004241769], [1.62703163E12, 1499.0250240615992], [1.62703189E12, 49.854271356783904], [1.62703172E12, 21.090909090909093], [1.62703223E12, 12.582733812949623], [1.62703206E12, 19.12527964205819], [1.62703232E12, 26.934899328859093], [1.62703155E12, 1097.7258064516127], [1.62703228E12, 19.581722319859377], [1.62703177E12, 28.447749809305854], [1.6270316E12, 832.2914285714289], [1.62703211E12, 22.041615667074662], [1.62703194E12, 13.594924812030058], [1.62703237E12, 28.25916055962694], [1.6270322E12, 27.554469273743017], [1.62703169E12, 25.565467625899256], [1.62703203E12, 24.10924369747898], [1.62703186E12, 75.8509316770185], [1.62703229E12, 21.935365853658563], [1.62703212E12, 23.184976525821597], [1.62703161E12, 497.1315789473684], [1.62703195E12, 15.227654698242922], [1.62703178E12, 28.86394101876679], [1.62703221E12, 25.513830678960623], [1.62703204E12, 20.015923566878936], [1.62703238E12, 27.521648044692764], [1.62703187E12, 52.81752873563217], [1.6270317E12, 25.573732718894036]], "isOverall": false, "label": "Healthy Thinking CN", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62703244E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 11.924623115577894, "minX": 1.62703154E12, "maxY": 1553.0, "series": [{"data": [[1.62703183E12, 15.391946308724815], [1.62703166E12, 38.43225806451616], [1.62703209E12, 17.738317757009348], [1.62703192E12, 12.750877192982449], [1.62703226E12, 12.651162790697676], [1.62703243E12, 12.575129533678757], [1.62703175E12, 20.940886699507402], [1.62703158E12, 486.10344827586215], [1.62703201E12, 24.86163101604276], [1.62703184E12, 14.775681341719075], [1.62703235E12, 25.058038692461636], [1.62703218E12, 26.218812541694476], [1.62703244E12, 13.666666666666668], [1.62703167E12, 23.48085485307213], [1.62703193E12, 12.050122249388757], [1.62703176E12, 24.247879359095165], [1.62703227E12, 12.00621118012423], [1.6270321E12, 18.782456140350874], [1.62703236E12, 25.733110367892973], [1.62703159E12, 813.3934426229507], [1.62703185E12, 13.544573643410851], [1.62703168E12, 23.905419766206162], [1.62703219E12, 25.879252835223454], [1.62703202E12, 24.457983193277283], [1.62703181E12, 15.978652434956642], [1.62703164E12, 221.57698289269035], [1.62703215E12, 24.71220604703248], [1.62703198E12, 25.899135446685904], [1.62703224E12, 18.20531400966183], [1.62703241E12, 12.346264367816088], [1.62703173E12, 19.413580246913593], [1.62703156E12, 432.80000000000007], [1.62703207E12, 18.141414141414145], [1.6270319E12, 42.35955056179775], [1.62703233E12, 24.728971962616818], [1.62703216E12, 59.93333333333334], [1.62703165E12, 50.58585858585853], [1.62703199E12, 28.867298578199044], [1.62703182E12, 15.523682454969993], [1.62703225E12, 11.924623115577894], [1.62703208E12, 19.093023255813954], [1.62703242E12, 12.932735426008968], [1.62703191E12, 37.9506172839506], [1.62703174E12, 20.591549295774634], [1.62703217E12, 25.16677785190123], [1.627032E12, 25.07200000000001], [1.62703234E12, 24.905270180120077], [1.62703213E12, 22.529322162985515], [1.62703196E12, 15.692617449664425], [1.6270323E12, 21.158685446009383], [1.62703179E12, 33.42943548387103], [1.62703162E12, 748.1484716157204], [1.62703205E12, 17.132374100719424], [1.62703188E12, 43.74387527839642], [1.62703222E12, 14.965079365079353], [1.62703239E12, 23.206228956228966], [1.62703171E12, 21.746268656716428], [1.62703154E12, 1553.0], [1.62703197E12, 16.937414965986374], [1.6270318E12, 16.02398401065957], [1.62703231E12, 22.670220868240655], [1.62703214E12, 24.54922973878095], [1.6270324E12, 14.77200424178155], [1.62703163E12, 1494.9932627526473], [1.62703189E12, 42.66331658291459], [1.62703172E12, 19.068181818181813], [1.62703223E12, 12.378417266187054], [1.62703206E12, 17.06487695749442], [1.62703232E12, 24.65503355704701], [1.62703155E12, 1078.1612903225805], [1.62703228E12, 17.764499121265363], [1.62703177E12, 26.118230358504967], [1.6270316E12, 818.6228571428571], [1.62703211E12, 19.92166462668299], [1.62703194E12, 13.33364661654136], [1.62703237E12, 25.640906062624925], [1.6270322E12, 25.018854748603342], [1.62703169E12, 23.431654676258987], [1.62703203E12, 21.96470588235292], [1.62703186E12, 67.95186335403713], [1.62703229E12, 19.840243902439006], [1.62703212E12, 21.069483568075086], [1.62703161E12, 494.30526315789473], [1.62703195E12, 14.948051948051948], [1.62703178E12, 26.272117962466467], [1.62703221E12, 23.172673931265702], [1.62703204E12, 17.96921443736727], [1.62703238E12, 24.84567039106145], [1.62703187E12, 45.63362068965518], [1.6270317E12, 23.555299539170512]], "isOverall": false, "label": "Healthy Thinking CN", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62703244E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 10.673366834170858, "minX": 1.62703154E12, "maxY": 1440.8411934552457, "series": [{"data": [[1.62703183E12, 13.851006711409395], [1.62703166E12, 35.075268817204304], [1.62703209E12, 14.993769470404983], [1.62703192E12, 11.482456140350864], [1.62703226E12, 11.44186046511628], [1.62703243E12, 11.54922279792746], [1.62703175E12, 17.778325123152747], [1.62703158E12, 470.25862068965534], [1.62703201E12, 20.88569518716574], [1.62703184E12, 13.389937106918248], [1.62703235E12, 21.239492995330213], [1.62703218E12, 22.276184122748486], [1.62703244E12, 12.666666666666666], [1.62703167E12, 20.974176313446137], [1.62703193E12, 10.795843520782393], [1.62703176E12, 20.355325164938694], [1.62703227E12, 10.782608695652174], [1.6270321E12, 15.680701754385963], [1.62703236E12, 21.848160535117074], [1.62703159E12, 790.6393442622951], [1.62703185E12, 12.25096899224806], [1.62703168E12, 20.20828905419765], [1.62703219E12, 22.005336891260864], [1.62703202E12, 20.628851540616274], [1.62703181E12, 14.262841894596402], [1.62703164E12, 211.47200622083992], [1.62703215E12, 20.867861142217247], [1.62703198E12, 22.073487031700314], [1.62703224E12, 16.630434782608713], [1.62703241E12, 11.063218390804604], [1.62703173E12, 15.92901234567901], [1.62703156E12, 419.08333333333326], [1.62703207E12, 15.383838383838388], [1.6270319E12, 33.46067415730337], [1.62703233E12, 20.845794392523377], [1.62703216E12, 23.567499999999992], [1.62703165E12, 46.73737373737375], [1.62703199E12, 24.752200406228855], [1.62703182E12, 13.923949299533035], [1.62703225E12, 10.673366834170858], [1.62703208E12, 16.337209302325583], [1.62703242E12, 11.68385650224215], [1.62703191E12, 30.120370370370363], [1.62703174E12, 17.255281690140862], [1.62703217E12, 21.38092061374249], [1.627032E12, 21.143999999999995], [1.62703234E12, 21.06204136090728], [1.62703213E12, 18.910129474485906], [1.62703196E12, 14.11610738255033], [1.6270323E12, 17.775586854460116], [1.62703179E12, 29.433467741935537], [1.62703162E12, 734.598253275109], [1.62703205E12, 14.424460431654671], [1.62703188E12, 34.51893095768379], [1.62703222E12, 12.929100529100545], [1.62703239E12, 19.657407407407376], [1.62703171E12, 18.56716417910448], [1.62703154E12, 268.9473684210526], [1.62703197E12, 15.108843537414984], [1.6270318E12, 14.207195203197879], [1.62703231E12, 18.98781416603199], [1.62703214E12, 20.688546550569317], [1.6270324E12, 13.045599151643701], [1.62703163E12, 1440.8411934552457], [1.62703189E12, 33.55276381909548], [1.62703172E12, 15.954545454545451], [1.62703223E12, 11.17841726618705], [1.62703206E12, 14.402684563758399], [1.62703232E12, 20.834899328859063], [1.62703155E12, 180.3870967741935], [1.62703228E12, 14.797891036906847], [1.62703177E12, 22.15865751334857], [1.6270316E12, 790.4971428571426], [1.62703211E12, 16.697674418604635], [1.62703194E12, 12.052631578947356], [1.62703237E12, 21.75749500333108], [1.6270322E12, 21.208100558659204], [1.62703169E12, 19.77697841726619], [1.62703203E12, 18.470588235294073], [1.62703186E12, 39.12111801242232], [1.62703229E12, 16.70731707317075], [1.62703212E12, 17.697652582159602], [1.62703161E12, 479.36315789473684], [1.62703195E12, 13.579067990832709], [1.62703178E12, 22.276139410187657], [1.62703221E12, 19.55741827326066], [1.62703204E12, 15.216560509554162], [1.62703238E12, 21.143854748603342], [1.62703187E12, 36.280172413793075], [1.6270317E12, 20.23502304147465]], "isOverall": false, "label": "Healthy Thinking CN", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62703244E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 9.0, "minX": 1.62703154E12, "maxY": 10944.0, "series": [{"data": [[1.62703183E12, 156.0], [1.62703166E12, 149.0], [1.62703209E12, 60.0], [1.62703192E12, 95.0], [1.62703226E12, 53.0], [1.62703243E12, 29.0], [1.62703175E12, 58.0], [1.62703158E12, 588.0], [1.62703201E12, 65.0], [1.62703184E12, 130.0], [1.62703235E12, 72.0], [1.62703218E12, 324.0], [1.62703244E12, 27.0], [1.62703167E12, 134.0], [1.62703193E12, 165.0], [1.62703176E12, 59.0], [1.62703227E12, 61.0], [1.6270321E12, 49.0], [1.62703236E12, 123.0], [1.62703159E12, 1258.0], [1.62703185E12, 78.0], [1.62703168E12, 71.0], [1.62703219E12, 104.0], [1.62703202E12, 194.0], [1.62703181E12, 191.0], [1.62703164E12, 1386.0], [1.62703215E12, 59.0], [1.62703198E12, 642.0], [1.62703224E12, 585.0], [1.62703241E12, 86.0], [1.62703173E12, 69.0], [1.62703156E12, 558.0], [1.62703207E12, 30.0], [1.6270319E12, 71.0], [1.62703233E12, 77.0], [1.62703216E12, 9198.0], [1.62703165E12, 165.0], [1.62703199E12, 642.0], [1.62703182E12, 121.0], [1.62703225E12, 54.0], [1.62703208E12, 35.0], [1.62703242E12, 95.0], [1.62703191E12, 138.0], [1.62703174E12, 72.0], [1.62703217E12, 71.0], [1.627032E12, 95.0], [1.62703234E12, 72.0], [1.62703213E12, 79.0], [1.62703196E12, 94.0], [1.6270323E12, 81.0], [1.62703179E12, 140.0], [1.62703162E12, 1121.0], [1.62703205E12, 35.0], [1.62703188E12, 90.0], [1.62703222E12, 107.0], [1.62703239E12, 89.0], [1.62703171E12, 75.0], [1.62703154E12, 6147.0], [1.62703197E12, 157.0], [1.6270318E12, 155.0], [1.62703231E12, 95.0], [1.62703214E12, 70.0], [1.6270324E12, 180.0], [1.62703163E12, 2977.0], [1.62703189E12, 85.0], [1.62703172E12, 35.0], [1.62703223E12, 187.0], [1.62703206E12, 29.0], [1.62703232E12, 79.0], [1.62703155E12, 10944.0], [1.62703228E12, 37.0], [1.62703177E12, 78.0], [1.6270316E12, 1276.0], [1.62703211E12, 76.0], [1.62703194E12, 177.0], [1.62703237E12, 105.0], [1.6270322E12, 123.0], [1.62703169E12, 157.0], [1.62703203E12, 121.0], [1.62703186E12, 4836.0], [1.62703229E12, 52.0], [1.62703212E12, 48.0], [1.62703161E12, 639.0], [1.62703195E12, 147.0], [1.62703178E12, 148.0], [1.62703221E12, 121.0], [1.62703204E12, 34.0], [1.62703238E12, 73.0], [1.62703187E12, 123.0], [1.6270317E12, 648.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62703183E12, 10.0], [1.62703166E12, 13.0], [1.62703209E12, 12.0], [1.62703192E12, 10.0], [1.62703226E12, 10.0], [1.62703243E12, 10.0], [1.62703175E12, 20.0], [1.62703158E12, 293.0], [1.62703201E12, 14.0], [1.62703184E12, 10.0], [1.62703235E12, 21.0], [1.62703218E12, 21.0], [1.62703244E12, 10.0], [1.62703167E12, 10.0], [1.62703193E12, 9.0], [1.62703176E12, 20.0], [1.62703227E12, 10.0], [1.6270321E12, 13.0], [1.62703236E12, 21.0], [1.62703159E12, 153.0], [1.62703185E12, 10.0], [1.62703168E12, 14.0], [1.62703219E12, 21.0], [1.62703202E12, 14.0], [1.62703181E12, 10.0], [1.62703164E12, 14.0], [1.62703215E12, 14.0], [1.62703198E12, 14.0], [1.62703224E12, 9.0], [1.62703241E12, 10.0], [1.62703173E12, 14.0], [1.62703156E12, 256.0], [1.62703207E12, 12.0], [1.6270319E12, 44.0], [1.62703233E12, 14.0], [1.62703216E12, 20.0], [1.62703165E12, 15.0], [1.62703199E12, 15.0], [1.62703182E12, 10.0], [1.62703225E12, 10.0], [1.62703208E12, 13.0], [1.62703242E12, 10.0], [1.62703191E12, 10.0], [1.62703174E12, 20.0], [1.62703217E12, 21.0], [1.627032E12, 15.0], [1.62703234E12, 15.0], [1.62703213E12, 14.0], [1.62703196E12, 10.0], [1.6270323E12, 14.0], [1.62703179E12, 11.0], [1.62703162E12, 115.0], [1.62703205E12, 12.0], [1.62703188E12, 44.0], [1.62703222E12, 9.0], [1.62703239E12, 21.0], [1.62703171E12, 14.0], [1.62703154E12, 42.0], [1.62703197E12, 10.0], [1.6270318E12, 10.0], [1.62703231E12, 14.0], [1.62703214E12, 15.0], [1.6270324E12, 9.0], [1.62703163E12, 35.0], [1.62703189E12, 44.0], [1.62703172E12, 14.0], [1.62703223E12, 10.0], [1.62703206E12, 12.0], [1.62703232E12, 15.0], [1.62703155E12, 66.0], [1.62703228E12, 10.0], [1.62703177E12, 20.0], [1.6270316E12, 249.0], [1.62703211E12, 13.0], [1.62703194E12, 9.0], [1.62703237E12, 21.0], [1.6270322E12, 21.0], [1.62703169E12, 14.0], [1.62703203E12, 13.0], [1.62703186E12, 44.0], [1.62703229E12, 13.0], [1.62703212E12, 14.0], [1.62703161E12, 258.0], [1.62703195E12, 10.0], [1.62703178E12, 20.0], [1.62703221E12, 20.0], [1.62703204E12, 12.0], [1.62703238E12, 20.0], [1.62703187E12, 44.0], [1.6270317E12, 13.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62703183E12, 20.0], [1.62703166E12, 55.0], [1.62703209E12, 26.0], [1.62703192E12, 15.0], [1.62703226E12, 15.0], [1.62703243E12, 15.0], [1.62703175E12, 26.0], [1.62703158E12, 558.3], [1.62703201E12, 35.0], [1.62703184E12, 19.0], [1.62703235E12, 33.0], [1.62703218E12, 35.0], [1.62703244E12, 23.70000000000001], [1.62703167E12, 38.60000000000002], [1.62703193E12, 14.0], [1.62703176E12, 33.80000000000007], [1.62703227E12, 14.0], [1.6270321E12, 27.0], [1.62703236E12, 34.0], [1.62703159E12, 1013.2], [1.62703185E12, 16.0], [1.62703168E12, 38.0], [1.62703219E12, 35.0], [1.62703202E12, 34.0], [1.62703181E12, 21.0], [1.62703164E12, 1187.0999999999997], [1.62703215E12, 35.0], [1.62703198E12, 34.0], [1.62703224E12, 17.0], [1.62703241E12, 15.0], [1.62703173E12, 27.0], [1.62703156E12, 549.2], [1.62703207E12, 26.0], [1.6270319E12, 54.0], [1.62703233E12, 35.0], [1.62703216E12, 39.0], [1.62703165E12, 73.0], [1.62703199E12, 40.0], [1.62703182E12, 21.0], [1.62703225E12, 14.0], [1.62703208E12, 27.0], [1.62703242E12, 15.0], [1.62703191E12, 54.0], [1.62703174E12, 25.0], [1.62703217E12, 33.0], [1.627032E12, 35.0], [1.62703234E12, 34.0], [1.62703213E12, 31.0], [1.62703196E12, 20.0], [1.6270323E12, 30.0], [1.62703179E12, 58.0], [1.62703162E12, 1071.0], [1.62703205E12, 25.0], [1.62703188E12, 56.0], [1.62703222E12, 25.0], [1.62703239E12, 30.0], [1.62703171E12, 32.0], [1.62703154E12, 5930.0], [1.62703197E12, 26.0], [1.6270318E12, 20.0], [1.62703231E12, 31.0], [1.62703214E12, 34.0], [1.6270324E12, 24.0], [1.62703163E12, 2173.0], [1.62703189E12, 53.0], [1.62703172E12, 27.0], [1.62703223E12, 15.0], [1.62703206E12, 25.0], [1.62703232E12, 34.0], [1.62703155E12, 6327.700000000024], [1.62703228E12, 27.0], [1.62703177E12, 37.0], [1.6270316E12, 1199.6], [1.62703211E12, 28.0], [1.62703194E12, 16.0], [1.62703237E12, 34.0], [1.6270322E12, 32.0], [1.62703169E12, 35.0], [1.62703203E12, 30.0], [1.62703186E12, 61.0], [1.62703229E12, 28.0], [1.62703212E12, 29.0], [1.62703161E12, 597.6], [1.62703195E12, 19.0], [1.62703178E12, 36.0], [1.62703221E12, 29.0], [1.62703204E12, 26.0], [1.62703238E12, 33.0], [1.62703187E12, 58.0], [1.6270317E12, 29.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62703183E12, 35.08999999999992], [1.62703166E12, 80.07999999999993], [1.62703209E12, 32.899999999999864], [1.62703192E12, 40.57999999999993], [1.62703226E12, 53.0], [1.62703243E12, 25.24000000000001], [1.62703175E12, 42.870000000000005], [1.62703158E12, 588.0], [1.62703201E12, 44.02999999999997], [1.62703184E12, 34.0], [1.62703235E12, 47.0], [1.62703218E12, 54.0], [1.62703244E12, 27.0], [1.62703167E12, 62.0], [1.62703193E12, 29.429999999999836], [1.62703176E12, 49.37999999999988], [1.62703227E12, 41.69999999999982], [1.6270321E12, 31.289999999999964], [1.62703236E12, 50.0], [1.62703159E12, 1222.3499999999995], [1.62703185E12, 30.0], [1.62703168E12, 55.58000000000004], [1.62703219E12, 56.0], [1.62703202E12, 50.710000000000036], [1.62703181E12, 42.0], [1.62703164E12, 1339.6499999999994], [1.62703215E12, 46.0], [1.62703198E12, 46.0], [1.62703224E12, 144.85000000000002], [1.62703241E12, 34.08999999999992], [1.62703173E12, 49.5], [1.62703156E12, 558.0], [1.62703207E12, 29.00999999999999], [1.6270319E12, 71.0], [1.62703233E12, 46.0], [1.62703216E12, 77.0], [1.62703165E12, 107.2800000000002], [1.62703199E12, 80.66000000000008], [1.62703182E12, 35.0], [1.62703225E12, 28.0], [1.62703208E12, 35.0], [1.62703242E12, 35.059999999999945], [1.62703191E12, 67.0], [1.62703174E12, 43.309999999999945], [1.62703217E12, 46.0], [1.627032E12, 46.0], [1.62703234E12, 45.0], [1.62703213E12, 40.0], [1.62703196E12, 38.269999999999754], [1.6270323E12, 38.33999999999992], [1.62703179E12, 77.0], [1.62703162E12, 1112.8], [1.62703205E12, 28.0], [1.62703188E12, 63.0], [1.62703222E12, 46.23999999999978], [1.62703239E12, 42.1099999999999], [1.62703171E12, 60.91999999999996], [1.62703154E12, 6147.0], [1.62703197E12, 40.289999999999964], [1.6270318E12, 42.960000000000036], [1.62703231E12, 40.0], [1.62703214E12, 44.059999999999945], [1.6270324E12, 38.559999999999945], [1.62703163E12, 2615.5999999999976], [1.62703189E12, 69.0], [1.62703172E12, 35.0], [1.62703223E12, 25.159999999999854], [1.62703206E12, 27.519999999999982], [1.62703232E12, 49.0], [1.62703155E12, 10944.0], [1.62703228E12, 31.59999999999991], [1.62703177E12, 63.87999999999988], [1.6270316E12, 1267.64], [1.62703211E12, 34.0], [1.62703194E12, 38.399999999999636], [1.62703237E12, 47.98000000000002], [1.6270322E12, 51.67000000000007], [1.62703169E12, 80.51999999999953], [1.62703203E12, 39.0], [1.62703186E12, 84.0], [1.62703229E12, 32.0], [1.62703212E12, 38.0], [1.62703161E12, 628.99], [1.62703195E12, 42.0], [1.62703178E12, 55.0], [1.62703221E12, 48.0], [1.62703204E12, 30.0], [1.62703238E12, 47.67000000000007], [1.62703187E12, 72.02999999999997], [1.6270317E12, 130.6999999999996]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62703183E12, 23.0], [1.62703166E12, 60.0], [1.62703209E12, 27.0], [1.62703192E12, 18.0], [1.62703226E12, 18.949999999999974], [1.62703243E12, 16.0], [1.62703175E12, 30.34999999999991], [1.62703158E12, 564.2], [1.62703201E12, 38.0], [1.62703184E12, 21.0], [1.62703235E12, 36.0], [1.62703218E12, 39.0], [1.62703244E12, 27.0], [1.62703167E12, 45.799999999999955], [1.62703193E12, 16.0], [1.62703176E12, 40.0], [1.62703227E12, 16.849999999999966], [1.6270321E12, 28.0], [1.62703236E12, 37.200000000000045], [1.62703159E12, 1033.85], [1.62703185E12, 19.34999999999991], [1.62703168E12, 44.0], [1.62703219E12, 39.0], [1.62703202E12, 38.0], [1.62703181E12, 25.0], [1.62703164E12, 1272.2999999999997], [1.62703215E12, 38.0], [1.62703198E12, 37.0], [1.62703224E12, 31.25], [1.62703241E12, 17.0], [1.62703173E12, 28.0], [1.62703156E12, 555.75], [1.62703207E12, 27.0], [1.6270319E12, 56.0], [1.62703233E12, 38.0], [1.62703216E12, 46.950000000000045], [1.62703165E12, 80.0], [1.62703199E12, 51.0], [1.62703182E12, 24.0], [1.62703225E12, 16.0], [1.62703208E12, 29.0], [1.62703242E12, 17.0], [1.62703191E12, 57.75], [1.62703174E12, 30.0], [1.62703217E12, 36.0], [1.627032E12, 38.950000000000045], [1.62703234E12, 36.0], [1.62703213E12, 33.299999999999955], [1.62703196E12, 25.0], [1.6270323E12, 31.0], [1.62703179E12, 65.0], [1.62703162E12, 1095.0], [1.62703205E12, 26.0], [1.62703188E12, 57.5], [1.62703222E12, 27.0], [1.62703239E12, 32.0], [1.62703171E12, 45.799999999999955], [1.62703154E12, 6147.0], [1.62703197E12, 30.0], [1.6270318E12, 24.0], [1.62703231E12, 33.0], [1.62703214E12, 38.0], [1.6270324E12, 26.0], [1.62703163E12, 2370.0], [1.62703189E12, 58.0], [1.62703172E12, 28.0], [1.62703223E12, 17.0], [1.62703206E12, 26.0], [1.62703232E12, 38.0], [1.62703155E12, 9099.949999999999], [1.62703228E12, 28.0], [1.62703177E12, 47.0], [1.6270316E12, 1244.2], [1.62703211E12, 29.0], [1.62703194E12, 19.75], [1.62703237E12, 38.0], [1.6270322E12, 35.34999999999991], [1.62703169E12, 43.0], [1.62703203E12, 33.0], [1.62703186E12, 66.0], [1.62703229E12, 29.0], [1.62703212E12, 32.0], [1.62703161E12, 607.45], [1.62703195E12, 24.0], [1.62703178E12, 42.0], [1.62703221E12, 32.0], [1.62703204E12, 27.0], [1.62703238E12, 36.0], [1.62703187E12, 59.0], [1.6270317E12, 45.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62703244E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 11.0, "minX": 1.0, "maxY": 1684.5, "series": [{"data": [[2.0, 474.0], [3.0, 22.0], [4.0, 20.5], [5.0, 11.0], [6.0, 23.0], [7.0, 48.0], [8.0, 16.5], [9.0, 22.0], [10.0, 15.5], [11.0, 11.5], [12.0, 26.5], [13.0, 23.0], [14.0, 51.0], [15.0, 13.5], [16.0, 24.0], [17.0, 35.0], [18.0, 19.0], [19.0, 47.0], [20.0, 11.0], [21.0, 17.0], [22.0, 20.0], [23.0, 20.0], [24.0, 11.0], [25.0, 45.5], [26.0, 35.0], [27.0, 20.0], [28.0, 15.0], [29.0, 45.0], [30.0, 37.0], [31.0, 12.0], [33.0, 19.0], [32.0, 23.5], [34.0, 20.0], [35.0, 13.0], [37.0, 36.5], [36.0, 18.0], [39.0, 19.0], [38.0, 26.0], [41.0, 21.0], [40.0, 12.0], [43.0, 24.0], [42.0, 21.0], [44.0, 14.5], [45.0, 20.0], [46.0, 22.0], [47.0, 143.5], [49.0, 16.0], [48.0, 15.0], [51.0, 21.0], [50.0, 15.0], [53.0, 17.0], [52.0, 11.0], [55.0, 51.0], [54.0, 20.0], [56.0, 20.0], [57.0, 28.0], [58.0, 22.0], [59.0, 15.0], [60.0, 18.0], [61.0, 21.0], [63.0, 21.0], [62.0, 20.0], [64.0, 37.5], [67.0, 21.0], [66.0, 20.0], [65.0, 16.0], [70.0, 22.0], [71.0, 19.0], [69.0, 20.0], [68.0, 19.0], [75.0, 20.0], [73.0, 15.0], [74.0, 21.0], [78.0, 23.0], [77.0, 982.0], [79.0, 14.0], [76.0, 21.0], [82.0, 23.0], [83.0, 17.0], [81.0, 21.0], [80.0, 14.0], [86.0, 16.0], [87.0, 21.0], [84.0, 39.0], [85.0, 22.0], [91.0, 23.0], [88.0, 22.0], [90.0, 12.0], [89.0, 19.0], [94.0, 13.0], [95.0, 23.0], [93.0, 20.0], [97.0, 23.0], [96.0, 32.0], [99.0, 24.0], [98.0, 16.0], [102.0, 23.0], [101.0, 22.0], [100.0, 22.0], [103.0, 18.0], [105.0, 23.0], [106.0, 24.0], [107.0, 22.0], [108.0, 25.0], [109.0, 27.0], [110.0, 25.0], [111.0, 22.0], [112.0, 21.0], [114.0, 25.0], [115.0, 21.0], [113.0, 23.0], [117.0, 25.0], [116.0, 26.0], [119.0, 16.0], [118.0, 22.0], [121.0, 25.0], [123.0, 24.0], [122.0, 23.0], [120.0, 21.0], [125.0, 24.0], [127.0, 24.0], [124.0, 23.0], [126.0, 24.0], [133.0, 27.0], [134.0, 28.0], [128.0, 24.0], [130.0, 24.0], [135.0, 25.0], [132.0, 24.0], [129.0, 16.0], [136.0, 25.0], [143.0, 25.0], [141.0, 26.0], [138.0, 22.0], [139.0, 21.0], [140.0, 23.0], [137.0, 16.0], [144.0, 23.0], [149.0, 26.0], [151.0, 26.0], [148.0, 29.0], [146.0, 28.0], [150.0, 25.0], [145.0, 26.0], [147.0, 25.0], [154.0, 41.0], [155.0, 38.0], [153.0, 23.0], [152.0, 25.0], [214.0, 1222.0], [249.0, 1548.0], [314.0, 1684.5], [1.0, 31.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 314.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 11.0, "minX": 1.0, "maxY": 1684.0, "series": [{"data": [[2.0, 473.0], [3.0, 20.0], [4.0, 18.5], [5.0, 11.0], [6.0, 21.0], [7.0, 41.0], [8.0, 15.5], [9.0, 20.0], [10.0, 15.5], [11.0, 11.0], [12.0, 23.5], [13.0, 21.0], [14.0, 43.0], [15.0, 13.5], [16.0, 21.5], [17.0, 32.5], [18.0, 17.0], [19.0, 40.0], [20.0, 11.0], [21.0, 16.0], [22.0, 18.0], [23.0, 18.0], [24.0, 11.0], [25.0, 43.0], [26.0, 30.5], [27.0, 18.0], [28.0, 15.0], [29.0, 38.0], [30.0, 32.0], [31.0, 12.0], [33.0, 17.0], [32.0, 21.0], [34.0, 18.0], [35.0, 12.0], [37.0, 32.0], [36.0, 16.0], [39.0, 18.0], [38.0, 23.0], [41.0, 19.0], [40.0, 12.0], [43.0, 21.0], [42.0, 19.0], [44.0, 14.0], [45.0, 18.0], [46.0, 20.0], [47.0, 142.0], [49.0, 16.0], [48.0, 14.0], [51.0, 19.0], [50.0, 14.0], [53.0, 16.5], [52.0, 11.0], [55.0, 44.0], [54.0, 18.0], [56.0, 18.0], [57.0, 25.0], [58.0, 19.0], [59.0, 14.0], [60.0, 16.5], [61.0, 19.0], [63.0, 19.0], [62.0, 18.0], [64.0, 33.5], [67.0, 19.0], [66.0, 18.0], [65.0, 15.0], [70.0, 20.0], [71.0, 17.0], [69.0, 18.0], [68.0, 17.0], [75.0, 18.0], [73.0, 14.0], [74.0, 19.0], [78.0, 21.0], [77.0, 980.0], [79.0, 14.0], [76.0, 19.0], [82.0, 21.0], [83.0, 16.0], [81.0, 19.0], [80.0, 13.0], [86.0, 16.0], [87.0, 19.0], [84.0, 34.5], [85.0, 20.0], [91.0, 21.0], [88.0, 20.0], [90.0, 12.0], [89.0, 17.0], [94.0, 13.0], [95.0, 21.0], [93.0, 18.0], [97.0, 21.0], [96.0, 31.0], [99.0, 21.0], [98.0, 15.0], [102.0, 21.0], [101.0, 20.0], [100.0, 20.0], [103.0, 17.0], [105.0, 20.0], [106.0, 22.0], [107.0, 19.0], [108.0, 22.0], [109.0, 24.0], [110.0, 23.0], [111.0, 19.5], [112.0, 19.0], [114.0, 22.0], [115.0, 19.0], [113.0, 21.0], [117.0, 23.0], [116.0, 24.0], [119.0, 16.0], [118.0, 20.0], [121.0, 23.0], [123.0, 22.0], [122.0, 21.0], [120.0, 19.0], [125.0, 22.0], [127.0, 23.0], [124.0, 21.0], [126.0, 23.0], [133.0, 24.0], [134.0, 25.0], [128.0, 23.0], [130.0, 22.0], [135.0, 23.0], [132.0, 22.0], [129.0, 15.0], [136.0, 23.0], [143.0, 23.0], [141.0, 23.0], [138.0, 21.0], [139.0, 20.0], [140.0, 21.0], [137.0, 15.0], [144.0, 21.0], [149.0, 23.0], [151.0, 23.0], [148.0, 27.0], [146.0, 25.0], [150.0, 23.0], [145.0, 24.0], [147.0, 22.0], [154.0, 39.0], [155.0, 37.0], [153.0, 21.5], [152.0, 23.0], [214.0, 1221.5], [249.0, 1542.0], [314.0, 1684.0], [1.0, 30.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 314.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.2, "minX": 1.62703154E12, "maxY": 150.0, "series": [{"data": [[1.62703183E12, 149.0], [1.62703166E12, 139.0], [1.62703209E12, 32.1], [1.62703192E12, 56.9], [1.62703226E12, 8.6], [1.62703243E12, 19.3], [1.62703175E12, 81.4], [1.62703158E12, 5.8], [1.62703201E12, 149.7], [1.62703184E12, 143.1], [1.62703235E12, 149.8], [1.62703218E12, 150.0], [1.62703244E12, 1.2], [1.62703167E12, 112.3], [1.62703193E12, 81.9], [1.62703176E12, 106.2], [1.62703227E12, 32.3], [1.6270321E12, 57.0], [1.62703236E12, 149.7], [1.62703159E12, 12.2], [1.62703185E12, 103.3], [1.62703168E12, 94.1], [1.62703219E12, 149.8], [1.62703202E12, 142.6], [1.62703181E12, 149.9], [1.62703164E12, 124.2], [1.62703215E12, 89.6], [1.62703198E12, 139.0], [1.62703224E12, 41.5], [1.62703241E12, 69.6], [1.62703173E12, 32.3], [1.62703156E12, 6.0], [1.62703207E12, 19.6], [1.6270319E12, 8.9], [1.62703233E12, 149.9], [1.62703216E12, 119.8], [1.62703165E12, 148.4], [1.62703199E12, 147.5], [1.62703182E12, 149.9], [1.62703225E12, 19.8], [1.62703208E12, 8.7], [1.62703242E12, 44.5], [1.62703191E12, 32.4], [1.62703174E12, 56.9], [1.62703217E12, 149.9], [1.627032E12, 149.9], [1.62703234E12, 149.8], [1.62703213E12, 131.4], [1.62703196E12, 149.0], [1.6270323E12, 106.7], [1.62703179E12, 148.6], [1.62703162E12, 48.8], [1.62703205E12, 69.5], [1.62703188E12, 44.8], [1.62703222E12, 94.3], [1.62703239E12, 118.7], [1.62703171E12, 20.0], [1.62703154E12, 2.5], [1.62703197E12, 147.2], [1.6270318E12, 150.0], [1.62703231E12, 131.3], [1.62703214E12, 149.3], [1.6270324E12, 94.2], [1.62703163E12, 83.2], [1.62703189E12, 19.9], [1.62703172E12, 8.9], [1.62703223E12, 69.4], [1.62703206E12, 44.8], [1.62703232E12, 149.0], [1.62703155E12, 5.6], [1.62703228E12, 57.0], [1.62703177E12, 131.3], [1.6270316E12, 17.5], [1.62703211E12, 81.8], [1.62703194E12, 106.4], [1.62703237E12, 150.0], [1.6270322E12, 143.1], [1.62703169E12, 69.4], [1.62703203E12, 119.1], [1.62703186E12, 64.6], [1.62703229E12, 82.0], [1.62703212E12, 106.5], [1.62703161E12, 19.0], [1.62703195E12, 131.0], [1.62703178E12, 149.1], [1.62703221E12, 119.3], [1.62703204E12, 94.0], [1.62703238E12, 143.1], [1.62703187E12, 69.3], [1.6270317E12, 43.4]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62703244E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.2, "minX": 1.62703154E12, "maxY": 150.1, "series": [{"data": [[1.62703183E12, 149.0], [1.62703166E12, 139.5], [1.62703209E12, 32.1], [1.62703192E12, 57.0], [1.62703226E12, 8.6], [1.62703243E12, 19.3], [1.62703175E12, 81.2], [1.62703158E12, 5.8], [1.62703201E12, 149.6], [1.62703184E12, 143.1], [1.62703235E12, 149.9], [1.62703218E12, 149.9], [1.62703244E12, 1.2], [1.62703167E12, 112.3], [1.62703193E12, 81.8], [1.62703176E12, 106.1], [1.62703227E12, 32.2], [1.6270321E12, 57.0], [1.62703236E12, 149.5], [1.62703159E12, 12.2], [1.62703185E12, 103.2], [1.62703168E12, 94.1], [1.62703219E12, 149.9], [1.62703202E12, 142.8], [1.62703181E12, 149.9], [1.62703164E12, 128.6], [1.62703215E12, 89.3], [1.62703198E12, 138.8], [1.62703224E12, 41.4], [1.62703241E12, 69.6], [1.62703173E12, 32.4], [1.62703156E12, 6.0], [1.62703207E12, 19.8], [1.6270319E12, 8.9], [1.62703233E12, 149.8], [1.62703216E12, 120.0], [1.62703165E12, 148.5], [1.62703199E12, 147.7], [1.62703182E12, 149.9], [1.62703225E12, 19.9], [1.62703208E12, 8.6], [1.62703242E12, 44.6], [1.62703191E12, 32.4], [1.62703174E12, 56.8], [1.62703217E12, 149.9], [1.627032E12, 150.0], [1.62703234E12, 149.9], [1.62703213E12, 131.3], [1.62703196E12, 149.0], [1.6270323E12, 106.5], [1.62703179E12, 148.8], [1.62703162E12, 22.9], [1.62703205E12, 69.5], [1.62703188E12, 44.9], [1.62703222E12, 94.5], [1.62703239E12, 118.8], [1.62703171E12, 20.1], [1.62703154E12, 1.9], [1.62703197E12, 147.0], [1.6270318E12, 150.1], [1.62703231E12, 131.3], [1.62703214E12, 149.3], [1.6270324E12, 94.3], [1.62703163E12, 103.9], [1.62703189E12, 19.9], [1.62703172E12, 8.8], [1.62703223E12, 69.5], [1.62703206E12, 44.7], [1.62703232E12, 149.0], [1.62703155E12, 6.2], [1.62703228E12, 56.9], [1.62703177E12, 131.1], [1.6270316E12, 17.5], [1.62703211E12, 81.7], [1.62703194E12, 106.4], [1.62703237E12, 150.1], [1.6270322E12, 143.2], [1.62703169E12, 69.5], [1.62703203E12, 119.0], [1.62703186E12, 64.4], [1.62703229E12, 82.0], [1.62703212E12, 106.5], [1.62703161E12, 19.0], [1.62703195E12, 130.9], [1.62703178E12, 149.2], [1.62703221E12, 119.3], [1.62703204E12, 94.2], [1.62703238E12, 143.2], [1.62703187E12, 69.6], [1.6270317E12, 43.4]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62703244E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.2, "minX": 1.62703154E12, "maxY": 150.1, "series": [{"data": [[1.62703183E12, 149.0], [1.62703166E12, 139.5], [1.62703209E12, 32.1], [1.62703192E12, 57.0], [1.62703226E12, 8.6], [1.62703243E12, 19.3], [1.62703175E12, 81.2], [1.62703158E12, 5.8], [1.62703201E12, 149.6], [1.62703184E12, 143.1], [1.62703235E12, 149.9], [1.62703218E12, 149.9], [1.62703244E12, 1.2], [1.62703167E12, 112.3], [1.62703193E12, 81.8], [1.62703176E12, 106.1], [1.62703227E12, 32.2], [1.6270321E12, 57.0], [1.62703236E12, 149.5], [1.62703159E12, 12.2], [1.62703185E12, 103.2], [1.62703168E12, 94.1], [1.62703219E12, 149.9], [1.62703202E12, 142.8], [1.62703181E12, 149.9], [1.62703164E12, 128.6], [1.62703215E12, 89.3], [1.62703198E12, 138.8], [1.62703224E12, 41.4], [1.62703241E12, 69.6], [1.62703173E12, 32.4], [1.62703156E12, 6.0], [1.62703207E12, 19.8], [1.6270319E12, 8.9], [1.62703233E12, 149.8], [1.62703216E12, 120.0], [1.62703165E12, 148.5], [1.62703199E12, 147.7], [1.62703182E12, 149.9], [1.62703225E12, 19.9], [1.62703208E12, 8.6], [1.62703242E12, 44.6], [1.62703191E12, 32.4], [1.62703174E12, 56.8], [1.62703217E12, 149.9], [1.627032E12, 150.0], [1.62703234E12, 149.9], [1.62703213E12, 131.3], [1.62703196E12, 149.0], [1.6270323E12, 106.5], [1.62703179E12, 148.8], [1.62703162E12, 22.9], [1.62703205E12, 69.5], [1.62703188E12, 44.9], [1.62703222E12, 94.5], [1.62703239E12, 118.8], [1.62703171E12, 20.1], [1.62703154E12, 1.9], [1.62703197E12, 147.0], [1.6270318E12, 150.1], [1.62703231E12, 131.3], [1.62703214E12, 149.3], [1.6270324E12, 94.3], [1.62703163E12, 103.9], [1.62703189E12, 19.9], [1.62703172E12, 8.8], [1.62703223E12, 69.5], [1.62703206E12, 44.7], [1.62703232E12, 149.0], [1.62703155E12, 6.2], [1.62703228E12, 56.9], [1.62703177E12, 131.1], [1.6270316E12, 17.5], [1.62703211E12, 81.7], [1.62703194E12, 106.4], [1.62703237E12, 150.1], [1.6270322E12, 143.2], [1.62703169E12, 69.5], [1.62703203E12, 119.0], [1.62703186E12, 64.4], [1.62703229E12, 82.0], [1.62703212E12, 106.5], [1.62703161E12, 19.0], [1.62703195E12, 130.9], [1.62703178E12, 149.2], [1.62703221E12, 119.3], [1.62703204E12, 94.2], [1.62703238E12, 143.2], [1.62703187E12, 69.6], [1.6270317E12, 43.4]], "isOverall": false, "label": "Healthy Thinking CN-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62703244E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.2, "minX": 1.62703154E12, "maxY": 150.1, "series": [{"data": [[1.62703183E12, 149.0], [1.62703166E12, 139.5], [1.62703209E12, 32.1], [1.62703192E12, 57.0], [1.62703226E12, 8.6], [1.62703243E12, 19.3], [1.62703175E12, 81.2], [1.62703158E12, 5.8], [1.62703201E12, 149.6], [1.62703184E12, 143.1], [1.62703235E12, 149.9], [1.62703218E12, 149.9], [1.62703244E12, 1.2], [1.62703167E12, 112.3], [1.62703193E12, 81.8], [1.62703176E12, 106.1], [1.62703227E12, 32.2], [1.6270321E12, 57.0], [1.62703236E12, 149.5], [1.62703159E12, 12.2], [1.62703185E12, 103.2], [1.62703168E12, 94.1], [1.62703219E12, 149.9], [1.62703202E12, 142.8], [1.62703181E12, 149.9], [1.62703164E12, 128.6], [1.62703215E12, 89.3], [1.62703198E12, 138.8], [1.62703224E12, 41.4], [1.62703241E12, 69.6], [1.62703173E12, 32.4], [1.62703156E12, 6.0], [1.62703207E12, 19.8], [1.6270319E12, 8.9], [1.62703233E12, 149.8], [1.62703216E12, 120.0], [1.62703165E12, 148.5], [1.62703199E12, 147.7], [1.62703182E12, 149.9], [1.62703225E12, 19.9], [1.62703208E12, 8.6], [1.62703242E12, 44.6], [1.62703191E12, 32.4], [1.62703174E12, 56.8], [1.62703217E12, 149.9], [1.627032E12, 150.0], [1.62703234E12, 149.9], [1.62703213E12, 131.3], [1.62703196E12, 149.0], [1.6270323E12, 106.5], [1.62703179E12, 148.8], [1.62703162E12, 22.9], [1.62703205E12, 69.5], [1.62703188E12, 44.9], [1.62703222E12, 94.5], [1.62703239E12, 118.8], [1.62703171E12, 20.1], [1.62703154E12, 1.9], [1.62703197E12, 147.0], [1.6270318E12, 150.1], [1.62703231E12, 131.3], [1.62703214E12, 149.3], [1.6270324E12, 94.3], [1.62703163E12, 103.9], [1.62703189E12, 19.9], [1.62703172E12, 8.8], [1.62703223E12, 69.5], [1.62703206E12, 44.7], [1.62703232E12, 149.0], [1.62703155E12, 6.2], [1.62703228E12, 56.9], [1.62703177E12, 131.1], [1.6270316E12, 17.5], [1.62703211E12, 81.7], [1.62703194E12, 106.4], [1.62703237E12, 150.1], [1.6270322E12, 143.2], [1.62703169E12, 69.5], [1.62703203E12, 119.0], [1.62703186E12, 64.4], [1.62703229E12, 82.0], [1.62703212E12, 106.5], [1.62703161E12, 19.0], [1.62703195E12, 130.9], [1.62703178E12, 149.2], [1.62703221E12, 119.3], [1.62703204E12, 94.2], [1.62703238E12, 143.2], [1.62703187E12, 69.6], [1.6270317E12, 43.4]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62703244E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

