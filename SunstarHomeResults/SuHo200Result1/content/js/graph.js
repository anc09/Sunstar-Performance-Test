/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "maxY": 181204.0, "series": [{"data": [[0.0, 10.0], [0.1, 12.0], [0.2, 12.0], [0.3, 12.0], [0.4, 12.0], [0.5, 13.0], [0.6, 13.0], [0.7, 13.0], [0.8, 13.0], [0.9, 13.0], [1.0, 14.0], [1.1, 14.0], [1.2, 14.0], [1.3, 14.0], [1.4, 14.0], [1.5, 14.0], [1.6, 14.0], [1.7, 14.0], [1.8, 14.0], [1.9, 15.0], [2.0, 15.0], [2.1, 15.0], [2.2, 15.0], [2.3, 15.0], [2.4, 15.0], [2.5, 15.0], [2.6, 15.0], [2.7, 15.0], [2.8, 15.0], [2.9, 15.0], [3.0, 15.0], [3.1, 16.0], [3.2, 16.0], [3.3, 16.0], [3.4, 16.0], [3.5, 16.0], [3.6, 16.0], [3.7, 16.0], [3.8, 16.0], [3.9, 16.0], [4.0, 16.0], [4.1, 16.0], [4.2, 17.0], [4.3, 17.0], [4.4, 17.0], [4.5, 17.0], [4.6, 17.0], [4.7, 17.0], [4.8, 17.0], [4.9, 17.0], [5.0, 17.0], [5.1, 18.0], [5.2, 18.0], [5.3, 18.0], [5.4, 18.0], [5.5, 18.0], [5.6, 18.0], [5.7, 18.0], [5.8, 18.0], [5.9, 19.0], [6.0, 19.0], [6.1, 19.0], [6.2, 19.0], [6.3, 19.0], [6.4, 19.0], [6.5, 19.0], [6.6, 19.0], [6.7, 19.0], [6.8, 19.0], [6.9, 19.0], [7.0, 20.0], [7.1, 20.0], [7.2, 20.0], [7.3, 20.0], [7.4, 20.0], [7.5, 20.0], [7.6, 20.0], [7.7, 20.0], [7.8, 20.0], [7.9, 20.0], [8.0, 20.0], [8.1, 20.0], [8.2, 20.0], [8.3, 20.0], [8.4, 20.0], [8.5, 21.0], [8.6, 21.0], [8.7, 21.0], [8.8, 21.0], [8.9, 21.0], [9.0, 21.0], [9.1, 21.0], [9.2, 21.0], [9.3, 21.0], [9.4, 21.0], [9.5, 21.0], [9.6, 21.0], [9.7, 21.0], [9.8, 22.0], [9.9, 22.0], [10.0, 22.0], [10.1, 22.0], [10.2, 22.0], [10.3, 22.0], [10.4, 22.0], [10.5, 22.0], [10.6, 22.0], [10.7, 22.0], [10.8, 22.0], [10.9, 22.0], [11.0, 22.0], [11.1, 23.0], [11.2, 23.0], [11.3, 23.0], [11.4, 23.0], [11.5, 23.0], [11.6, 23.0], [11.7, 23.0], [11.8, 23.0], [11.9, 23.0], [12.0, 23.0], [12.1, 23.0], [12.2, 24.0], [12.3, 24.0], [12.4, 24.0], [12.5, 24.0], [12.6, 24.0], [12.7, 24.0], [12.8, 24.0], [12.9, 24.0], [13.0, 24.0], [13.1, 24.0], [13.2, 24.0], [13.3, 25.0], [13.4, 25.0], [13.5, 25.0], [13.6, 25.0], [13.7, 25.0], [13.8, 25.0], [13.9, 25.0], [14.0, 25.0], [14.1, 25.0], [14.2, 25.0], [14.3, 25.0], [14.4, 26.0], [14.5, 26.0], [14.6, 26.0], [14.7, 26.0], [14.8, 26.0], [14.9, 26.0], [15.0, 26.0], [15.1, 26.0], [15.2, 26.0], [15.3, 26.0], [15.4, 27.0], [15.5, 27.0], [15.6, 27.0], [15.7, 27.0], [15.8, 27.0], [15.9, 27.0], [16.0, 27.0], [16.1, 27.0], [16.2, 28.0], [16.3, 28.0], [16.4, 28.0], [16.5, 28.0], [16.6, 28.0], [16.7, 28.0], [16.8, 28.0], [16.9, 29.0], [17.0, 29.0], [17.1, 29.0], [17.2, 29.0], [17.3, 29.0], [17.4, 30.0], [17.5, 30.0], [17.6, 30.0], [17.7, 30.0], [17.8, 30.0], [17.9, 31.0], [18.0, 31.0], [18.1, 31.0], [18.2, 31.0], [18.3, 32.0], [18.4, 32.0], [18.5, 32.0], [18.6, 32.0], [18.7, 33.0], [18.8, 33.0], [18.9, 33.0], [19.0, 33.0], [19.1, 34.0], [19.2, 34.0], [19.3, 34.0], [19.4, 35.0], [19.5, 35.0], [19.6, 35.0], [19.7, 36.0], [19.8, 36.0], [19.9, 37.0], [20.0, 37.0], [20.1, 37.0], [20.2, 38.0], [20.3, 38.0], [20.4, 39.0], [20.5, 39.0], [20.6, 40.0], [20.7, 40.0], [20.8, 41.0], [20.9, 41.0], [21.0, 42.0], [21.1, 42.0], [21.2, 42.0], [21.3, 43.0], [21.4, 43.0], [21.5, 44.0], [21.6, 44.0], [21.7, 44.0], [21.8, 45.0], [21.9, 45.0], [22.0, 46.0], [22.1, 46.0], [22.2, 46.0], [22.3, 47.0], [22.4, 47.0], [22.5, 48.0], [22.6, 48.0], [22.7, 48.0], [22.8, 49.0], [22.9, 50.0], [23.0, 50.0], [23.1, 50.0], [23.2, 51.0], [23.3, 51.0], [23.4, 52.0], [23.5, 52.0], [23.6, 53.0], [23.7, 53.0], [23.8, 54.0], [23.9, 54.0], [24.0, 55.0], [24.1, 55.0], [24.2, 56.0], [24.3, 57.0], [24.4, 57.0], [24.5, 58.0], [24.6, 59.0], [24.7, 59.0], [24.8, 60.0], [24.9, 60.0], [25.0, 61.0], [25.1, 62.0], [25.2, 62.0], [25.3, 63.0], [25.4, 64.0], [25.5, 64.0], [25.6, 65.0], [25.7, 66.0], [25.8, 67.0], [25.9, 67.0], [26.0, 68.0], [26.1, 69.0], [26.2, 70.0], [26.3, 70.0], [26.4, 71.0], [26.5, 72.0], [26.6, 73.0], [26.7, 74.0], [26.8, 75.0], [26.9, 76.0], [27.0, 76.0], [27.1, 78.0], [27.2, 79.0], [27.3, 79.0], [27.4, 80.0], [27.5, 81.0], [27.6, 82.0], [27.7, 83.0], [27.8, 84.0], [27.9, 85.0], [28.0, 86.0], [28.1, 87.0], [28.2, 88.0], [28.3, 90.0], [28.4, 91.0], [28.5, 92.0], [28.6, 92.0], [28.7, 93.0], [28.8, 95.0], [28.9, 95.0], [29.0, 97.0], [29.1, 98.0], [29.2, 99.0], [29.3, 100.0], [29.4, 101.0], [29.5, 102.0], [29.6, 103.0], [29.7, 104.0], [29.8, 105.0], [29.9, 107.0], [30.0, 108.0], [30.1, 109.0], [30.2, 110.0], [30.3, 112.0], [30.4, 113.0], [30.5, 114.0], [30.6, 115.0], [30.7, 116.0], [30.8, 118.0], [30.9, 119.0], [31.0, 121.0], [31.1, 122.0], [31.2, 123.0], [31.3, 125.0], [31.4, 127.0], [31.5, 129.0], [31.6, 131.0], [31.7, 133.0], [31.8, 135.0], [31.9, 137.0], [32.0, 139.0], [32.1, 140.0], [32.2, 142.0], [32.3, 144.0], [32.4, 146.0], [32.5, 148.0], [32.6, 151.0], [32.7, 153.0], [32.8, 155.0], [32.9, 158.0], [33.0, 161.0], [33.1, 163.0], [33.2, 166.0], [33.3, 168.0], [33.4, 171.0], [33.5, 174.0], [33.6, 177.0], [33.7, 181.0], [33.8, 184.0], [33.9, 188.0], [34.0, 191.0], [34.1, 195.0], [34.2, 199.0], [34.3, 203.0], [34.4, 208.0], [34.5, 212.0], [34.6, 217.0], [34.7, 220.0], [34.8, 224.0], [34.9, 228.0], [35.0, 232.0], [35.1, 235.0], [35.2, 239.0], [35.3, 242.0], [35.4, 246.0], [35.5, 249.0], [35.6, 252.0], [35.7, 256.0], [35.8, 259.0], [35.9, 262.0], [36.0, 266.0], [36.1, 269.0], [36.2, 272.0], [36.3, 276.0], [36.4, 279.0], [36.5, 283.0], [36.6, 287.0], [36.7, 291.0], [36.8, 295.0], [36.9, 300.0], [37.0, 304.0], [37.1, 308.0], [37.2, 311.0], [37.3, 316.0], [37.4, 319.0], [37.5, 323.0], [37.6, 327.0], [37.7, 331.0], [37.8, 335.0], [37.9, 339.0], [38.0, 343.0], [38.1, 346.0], [38.2, 350.0], [38.3, 353.0], [38.4, 356.0], [38.5, 360.0], [38.6, 363.0], [38.7, 367.0], [38.8, 371.0], [38.9, 375.0], [39.0, 379.0], [39.1, 383.0], [39.2, 386.0], [39.3, 390.0], [39.4, 394.0], [39.5, 398.0], [39.6, 400.0], [39.7, 404.0], [39.8, 407.0], [39.9, 411.0], [40.0, 415.0], [40.1, 419.0], [40.2, 422.0], [40.3, 426.0], [40.4, 430.0], [40.5, 433.0], [40.6, 436.0], [40.7, 440.0], [40.8, 444.0], [40.9, 447.0], [41.0, 451.0], [41.1, 455.0], [41.2, 459.0], [41.3, 462.0], [41.4, 466.0], [41.5, 469.0], [41.6, 473.0], [41.7, 476.0], [41.8, 480.0], [41.9, 484.0], [42.0, 488.0], [42.1, 492.0], [42.2, 497.0], [42.3, 501.0], [42.4, 505.0], [42.5, 509.0], [42.6, 513.0], [42.7, 517.0], [42.8, 522.0], [42.9, 526.0], [43.0, 530.0], [43.1, 535.0], [43.2, 540.0], [43.3, 545.0], [43.4, 549.0], [43.5, 553.0], [43.6, 558.0], [43.7, 562.0], [43.8, 567.0], [43.9, 572.0], [44.0, 576.0], [44.1, 581.0], [44.2, 586.0], [44.3, 590.0], [44.4, 594.0], [44.5, 600.0], [44.6, 603.0], [44.7, 608.0], [44.8, 612.0], [44.9, 616.0], [45.0, 620.0], [45.1, 624.0], [45.2, 628.0], [45.3, 631.0], [45.4, 635.0], [45.5, 639.0], [45.6, 643.0], [45.7, 647.0], [45.8, 652.0], [45.9, 656.0], [46.0, 660.0], [46.1, 664.0], [46.2, 667.0], [46.3, 671.0], [46.4, 675.0], [46.5, 679.0], [46.6, 683.0], [46.7, 687.0], [46.8, 690.0], [46.9, 694.0], [47.0, 699.0], [47.1, 703.0], [47.2, 707.0], [47.3, 711.0], [47.4, 715.0], [47.5, 719.0], [47.6, 723.0], [47.7, 727.0], [47.8, 731.0], [47.9, 734.0], [48.0, 739.0], [48.1, 744.0], [48.2, 748.0], [48.3, 752.0], [48.4, 756.0], [48.5, 760.0], [48.6, 764.0], [48.7, 768.0], [48.8, 772.0], [48.9, 776.0], [49.0, 780.0], [49.1, 783.0], [49.2, 787.0], [49.3, 791.0], [49.4, 795.0], [49.5, 798.0], [49.6, 802.0], [49.7, 806.0], [49.8, 809.0], [49.9, 814.0], [50.0, 818.0], [50.1, 821.0], [50.2, 825.0], [50.3, 829.0], [50.4, 834.0], [50.5, 838.0], [50.6, 842.0], [50.7, 847.0], [50.8, 850.0], [50.9, 854.0], [51.0, 858.0], [51.1, 862.0], [51.2, 867.0], [51.3, 871.0], [51.4, 875.0], [51.5, 880.0], [51.6, 884.0], [51.7, 888.0], [51.8, 893.0], [51.9, 897.0], [52.0, 901.0], [52.1, 905.0], [52.2, 910.0], [52.3, 914.0], [52.4, 919.0], [52.5, 923.0], [52.6, 927.0], [52.7, 932.0], [52.8, 936.0], [52.9, 940.0], [53.0, 946.0], [53.1, 951.0], [53.2, 956.0], [53.3, 960.0], [53.4, 965.0], [53.5, 969.0], [53.6, 974.0], [53.7, 979.0], [53.8, 984.0], [53.9, 989.0], [54.0, 994.0], [54.1, 999.0], [54.2, 1005.0], [54.3, 1010.0], [54.4, 1014.0], [54.5, 1019.0], [54.6, 1024.0], [54.7, 1029.0], [54.8, 1036.0], [54.9, 1041.0], [55.0, 1045.0], [55.1, 1050.0], [55.2, 1055.0], [55.3, 1060.0], [55.4, 1065.0], [55.5, 1069.0], [55.6, 1074.0], [55.7, 1079.0], [55.8, 1084.0], [55.9, 1090.0], [56.0, 1095.0], [56.1, 1101.0], [56.2, 1107.0], [56.3, 1113.0], [56.4, 1118.0], [56.5, 1124.0], [56.6, 1129.0], [56.7, 1136.0], [56.8, 1143.0], [56.9, 1148.0], [57.0, 1154.0], [57.1, 1160.0], [57.2, 1166.0], [57.3, 1172.0], [57.4, 1178.0], [57.5, 1184.0], [57.6, 1189.0], [57.7, 1195.0], [57.8, 1202.0], [57.9, 1207.0], [58.0, 1213.0], [58.1, 1219.0], [58.2, 1226.0], [58.3, 1232.0], [58.4, 1237.0], [58.5, 1242.0], [58.6, 1249.0], [58.7, 1256.0], [58.8, 1263.0], [58.9, 1267.0], [59.0, 1274.0], [59.1, 1281.0], [59.2, 1287.0], [59.3, 1292.0], [59.4, 1299.0], [59.5, 1304.0], [59.6, 1310.0], [59.7, 1317.0], [59.8, 1323.0], [59.9, 1329.0], [60.0, 1334.0], [60.1, 1341.0], [60.2, 1346.0], [60.3, 1352.0], [60.4, 1358.0], [60.5, 1364.0], [60.6, 1370.0], [60.7, 1376.0], [60.8, 1383.0], [60.9, 1388.0], [61.0, 1394.0], [61.1, 1400.0], [61.2, 1407.0], [61.3, 1412.0], [61.4, 1419.0], [61.5, 1424.0], [61.6, 1430.0], [61.7, 1437.0], [61.8, 1444.0], [61.9, 1451.0], [62.0, 1456.0], [62.1, 1463.0], [62.2, 1468.0], [62.3, 1474.0], [62.4, 1480.0], [62.5, 1486.0], [62.6, 1492.0], [62.7, 1499.0], [62.8, 1505.0], [62.9, 1510.0], [63.0, 1515.0], [63.1, 1520.0], [63.2, 1527.0], [63.3, 1532.0], [63.4, 1538.0], [63.5, 1543.0], [63.6, 1549.0], [63.7, 1555.0], [63.8, 1560.0], [63.9, 1565.0], [64.0, 1571.0], [64.1, 1577.0], [64.2, 1583.0], [64.3, 1589.0], [64.4, 1594.0], [64.5, 1600.0], [64.6, 1606.0], [64.7, 1612.0], [64.8, 1619.0], [64.9, 1623.0], [65.0, 1629.0], [65.1, 1634.0], [65.2, 1640.0], [65.3, 1646.0], [65.4, 1652.0], [65.5, 1659.0], [65.6, 1664.0], [65.7, 1672.0], [65.8, 1678.0], [65.9, 1683.0], [66.0, 1689.0], [66.1, 1695.0], [66.2, 1702.0], [66.3, 1708.0], [66.4, 1713.0], [66.5, 1720.0], [66.6, 1726.0], [66.7, 1732.0], [66.8, 1740.0], [66.9, 1746.0], [67.0, 1752.0], [67.1, 1758.0], [67.2, 1765.0], [67.3, 1772.0], [67.4, 1779.0], [67.5, 1784.0], [67.6, 1791.0], [67.7, 1797.0], [67.8, 1804.0], [67.9, 1810.0], [68.0, 1817.0], [68.1, 1823.0], [68.2, 1829.0], [68.3, 1835.0], [68.4, 1843.0], [68.5, 1849.0], [68.6, 1858.0], [68.7, 1864.0], [68.8, 1870.0], [68.9, 1878.0], [69.0, 1884.0], [69.1, 1891.0], [69.2, 1898.0], [69.3, 1905.0], [69.4, 1913.0], [69.5, 1920.0], [69.6, 1926.0], [69.7, 1932.0], [69.8, 1940.0], [69.9, 1947.0], [70.0, 1955.0], [70.1, 1962.0], [70.2, 1968.0], [70.3, 1975.0], [70.4, 1983.0], [70.5, 1991.0], [70.6, 1999.0], [70.7, 2008.0], [70.8, 2015.0], [70.9, 2023.0], [71.0, 2031.0], [71.1, 2038.0], [71.2, 2046.0], [71.3, 2053.0], [71.4, 2061.0], [71.5, 2068.0], [71.6, 2078.0], [71.7, 2085.0], [71.8, 2092.0], [71.9, 2100.0], [72.0, 2108.0], [72.1, 2115.0], [72.2, 2123.0], [72.3, 2131.0], [72.4, 2139.0], [72.5, 2147.0], [72.6, 2156.0], [72.7, 2163.0], [72.8, 2171.0], [72.9, 2179.0], [73.0, 2188.0], [73.1, 2197.0], [73.2, 2205.0], [73.3, 2214.0], [73.4, 2223.0], [73.5, 2232.0], [73.6, 2241.0], [73.7, 2251.0], [73.8, 2260.0], [73.9, 2269.0], [74.0, 2279.0], [74.1, 2289.0], [74.2, 2299.0], [74.3, 2307.0], [74.4, 2318.0], [74.5, 2328.0], [74.6, 2340.0], [74.7, 2354.0], [74.8, 2365.0], [74.9, 2376.0], [75.0, 2387.0], [75.1, 2399.0], [75.2, 2409.0], [75.3, 2423.0], [75.4, 2435.0], [75.5, 2446.0], [75.6, 2456.0], [75.7, 2468.0], [75.8, 2481.0], [75.9, 2492.0], [76.0, 2507.0], [76.1, 2521.0], [76.2, 2535.0], [76.3, 2548.0], [76.4, 2561.0], [76.5, 2574.0], [76.6, 2588.0], [76.7, 2600.0], [76.8, 2614.0], [76.9, 2628.0], [77.0, 2643.0], [77.1, 2659.0], [77.2, 2673.0], [77.3, 2687.0], [77.4, 2701.0], [77.5, 2712.0], [77.6, 2724.0], [77.7, 2739.0], [77.8, 2753.0], [77.9, 2768.0], [78.0, 2782.0], [78.1, 2797.0], [78.2, 2813.0], [78.3, 2825.0], [78.4, 2838.0], [78.5, 2853.0], [78.6, 2865.0], [78.7, 2882.0], [78.8, 2896.0], [78.9, 2910.0], [79.0, 2925.0], [79.1, 2940.0], [79.2, 2955.0], [79.3, 2973.0], [79.4, 2989.0], [79.5, 3003.0], [79.6, 3017.0], [79.7, 3032.0], [79.8, 3047.0], [79.9, 3064.0], [80.0, 3081.0], [80.1, 3096.0], [80.2, 3111.0], [80.3, 3127.0], [80.4, 3140.0], [80.5, 3157.0], [80.6, 3172.0], [80.7, 3187.0], [80.8, 3200.0], [80.9, 3216.0], [81.0, 3232.0], [81.1, 3248.0], [81.2, 3266.0], [81.3, 3281.0], [81.4, 3300.0], [81.5, 3316.0], [81.6, 3333.0], [81.7, 3350.0], [81.8, 3367.0], [81.9, 3383.0], [82.0, 3399.0], [82.1, 3419.0], [82.2, 3435.0], [82.3, 3453.0], [82.4, 3470.0], [82.5, 3486.0], [82.6, 3500.0], [82.7, 3516.0], [82.8, 3531.0], [82.9, 3543.0], [83.0, 3560.0], [83.1, 3573.0], [83.2, 3590.0], [83.3, 3605.0], [83.4, 3620.0], [83.5, 3635.0], [83.6, 3649.0], [83.7, 3666.0], [83.8, 3681.0], [83.9, 3697.0], [84.0, 3713.0], [84.1, 3729.0], [84.2, 3743.0], [84.3, 3757.0], [84.4, 3768.0], [84.5, 3784.0], [84.6, 3799.0], [84.7, 3815.0], [84.8, 3829.0], [84.9, 3845.0], [85.0, 3859.0], [85.1, 3874.0], [85.2, 3889.0], [85.3, 3904.0], [85.4, 3920.0], [85.5, 3937.0], [85.6, 3958.0], [85.7, 3973.0], [85.8, 3993.0], [85.9, 4013.0], [86.0, 4034.0], [86.1, 4053.0], [86.2, 4070.0], [86.3, 4091.0], [86.4, 4108.0], [86.5, 4129.0], [86.6, 4150.0], [86.7, 4167.0], [86.8, 4185.0], [86.9, 4205.0], [87.0, 4225.0], [87.1, 4246.0], [87.2, 4263.0], [87.3, 4277.0], [87.4, 4297.0], [87.5, 4316.0], [87.6, 4336.0], [87.7, 4355.0], [87.8, 4373.0], [87.9, 4393.0], [88.0, 4413.0], [88.1, 4434.0], [88.2, 4453.0], [88.3, 4473.0], [88.4, 4493.0], [88.5, 4511.0], [88.6, 4532.0], [88.7, 4554.0], [88.8, 4579.0], [88.9, 4598.0], [89.0, 4616.0], [89.1, 4635.0], [89.2, 4653.0], [89.3, 4670.0], [89.4, 4686.0], [89.5, 4706.0], [89.6, 4725.0], [89.7, 4747.0], [89.8, 4768.0], [89.9, 4789.0], [90.0, 4809.0], [90.1, 4832.0], [90.2, 4851.0], [90.3, 4871.0], [90.4, 4892.0], [90.5, 4916.0], [90.6, 4936.0], [90.7, 4956.0], [90.8, 4975.0], [90.9, 4998.0], [91.0, 5019.0], [91.1, 5043.0], [91.2, 5065.0], [91.3, 5083.0], [91.4, 5108.0], [91.5, 5129.0], [91.6, 5156.0], [91.7, 5180.0], [91.8, 5204.0], [91.9, 5232.0], [92.0, 5259.0], [92.1, 5288.0], [92.2, 5310.0], [92.3, 5336.0], [92.4, 5363.0], [92.5, 5387.0], [92.6, 5411.0], [92.7, 5435.0], [92.8, 5461.0], [92.9, 5484.0], [93.0, 5511.0], [93.1, 5538.0], [93.2, 5568.0], [93.3, 5595.0], [93.4, 5623.0], [93.5, 5649.0], [93.6, 5683.0], [93.7, 5715.0], [93.8, 5751.0], [93.9, 5786.0], [94.0, 5825.0], [94.1, 5859.0], [94.2, 5904.0], [94.3, 5933.0], [94.4, 5966.0], [94.5, 6009.0], [94.6, 6043.0], [94.7, 6084.0], [94.8, 6123.0], [94.9, 6158.0], [95.0, 6201.0], [95.1, 6240.0], [95.2, 6285.0], [95.3, 6321.0], [95.4, 6358.0], [95.5, 6404.0], [95.6, 6448.0], [95.7, 6491.0], [95.8, 6545.0], [95.9, 6596.0], [96.0, 6635.0], [96.1, 6675.0], [96.2, 6719.0], [96.3, 6768.0], [96.4, 6804.0], [96.5, 6852.0], [96.6, 6899.0], [96.7, 6956.0], [96.8, 7020.0], [96.9, 7088.0], [97.0, 7155.0], [97.1, 7223.0], [97.2, 7320.0], [97.3, 7380.0], [97.4, 7459.0], [97.5, 7539.0], [97.6, 7613.0], [97.7, 7698.0], [97.8, 7779.0], [97.9, 7853.0], [98.0, 7930.0], [98.1, 8001.0], [98.2, 8093.0], [98.3, 8189.0], [98.4, 8296.0], [98.5, 8413.0], [98.6, 8493.0], [98.7, 8617.0], [98.8, 8737.0], [98.9, 8917.0], [99.0, 9140.0], [99.1, 9406.0], [99.2, 9634.0], [99.3, 9896.0], [99.4, 10251.0], [99.5, 10943.0], [99.6, 14016.0], [99.7, 60142.0], [99.8, 120139.0], [99.9, 120525.0], [100.0, 181204.0]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 27633.0, "series": [{"data": [[0.0, 27633.0], [180900.0, 9.0], [120300.0, 21.0], [121100.0, 3.0], [180200.0, 1.0], [100.0, 4650.0], [33300.0, 1.0], [36500.0, 1.0], [37700.0, 1.0], [39700.0, 1.0], [42100.0, 1.0], [43300.0, 1.0], [46100.0, 1.0], [181100.0, 12.0], [48100.0, 1.0], [200.0, 2534.0], [58900.0, 1.0], [60100.0, 104.0], [60500.0, 1.0], [300.0, 2535.0], [400.0, 2532.0], [121000.0, 4.0], [120200.0, 45.0], [500.0, 2113.0], [600.0, 2382.0], [700.0, 2369.0], [180400.0, 1.0], [800.0, 2301.0], [900.0, 2015.0], [1000.0, 1859.0], [1100.0, 1590.0], [1200.0, 1567.0], [1300.0, 1574.0], [1400.0, 1533.0], [1500.0, 1683.0], [1600.0, 1575.0], [1700.0, 1491.0], [1800.0, 1394.0], [1900.0, 1303.0], [2000.0, 1222.0], [2100.0, 1172.0], [2200.0, 1016.0], [2300.0, 843.0], [2400.0, 793.0], [2500.0, 700.0], [2600.0, 661.0], [2800.0, 670.0], [2700.0, 677.0], [2900.0, 629.0], [3000.0, 600.0], [3100.0, 637.0], [3300.0, 573.0], [3200.0, 565.0], [3400.0, 564.0], [3500.0, 631.0], [3700.0, 646.0], [3600.0, 615.0], [3800.0, 633.0], [3900.0, 526.0], [4000.0, 494.0], [4100.0, 488.0], [4200.0, 510.0], [4300.0, 495.0], [4600.0, 531.0], [4500.0, 451.0], [4400.0, 467.0], [4700.0, 451.0], [4800.0, 464.0], [5100.0, 390.0], [5000.0, 435.0], [4900.0, 441.0], [5300.0, 383.0], [5200.0, 344.0], [5400.0, 384.0], [5600.0, 321.0], [5500.0, 333.0], [5700.0, 266.0], [5800.0, 244.0], [5900.0, 271.0], [6000.0, 251.0], [6100.0, 235.0], [6300.0, 234.0], [6200.0, 234.0], [6400.0, 216.0], [6600.0, 232.0], [6500.0, 183.0], [6700.0, 219.0], [6800.0, 200.0], [6900.0, 164.0], [7000.0, 130.0], [7100.0, 139.0], [7300.0, 145.0], [7400.0, 109.0], [7200.0, 110.0], [7500.0, 120.0], [7600.0, 119.0], [120100.0, 33.0], [120900.0, 4.0], [7700.0, 116.0], [7800.0, 128.0], [7900.0, 130.0], [8000.0, 107.0], [8100.0, 91.0], [8700.0, 60.0], [8200.0, 89.0], [8600.0, 70.0], [8400.0, 115.0], [8500.0, 80.0], [8300.0, 80.0], [9200.0, 28.0], [8900.0, 45.0], [8800.0, 56.0], [9100.0, 38.0], [9000.0, 46.0], [9400.0, 36.0], [9500.0, 49.0], [9600.0, 45.0], [9700.0, 37.0], [9300.0, 36.0], [9900.0, 24.0], [10200.0, 29.0], [10000.0, 26.0], [10100.0, 21.0], [9800.0, 31.0], [10600.0, 11.0], [10700.0, 11.0], [10500.0, 11.0], [10300.0, 12.0], [10400.0, 12.0], [11000.0, 17.0], [11200.0, 5.0], [11100.0, 8.0], [10800.0, 19.0], [10900.0, 14.0], [11400.0, 5.0], [11500.0, 3.0], [11600.0, 3.0], [11300.0, 5.0], [11700.0, 5.0], [180600.0, 2.0], [12000.0, 3.0], [12200.0, 2.0], [11800.0, 8.0], [12100.0, 2.0], [11900.0, 3.0], [12300.0, 2.0], [12500.0, 3.0], [12400.0, 1.0], [12700.0, 1.0], [13000.0, 2.0], [13100.0, 1.0], [12900.0, 1.0], [12800.0, 1.0], [13200.0, 1.0], [13400.0, 2.0], [13800.0, 1.0], [13600.0, 1.0], [14000.0, 2.0], [14200.0, 1.0], [13900.0, 2.0], [14100.0, 2.0], [14500.0, 1.0], [15100.0, 1.0], [19400.0, 1.0], [20400.0, 1.0], [23200.0, 1.0], [24000.0, 1.0], [24800.0, 1.0], [28200.0, 1.0], [28400.0, 1.0], [31000.0, 1.0], [33600.0, 1.0], [35600.0, 1.0], [38000.0, 2.0], [40800.0, 1.0], [48800.0, 1.0], [50000.0, 1.0], [57200.0, 1.0], [58800.0, 1.0], [60800.0, 1.0], [60000.0, 1.0], [60400.0, 1.0], [120800.0, 6.0], [180800.0, 13.0], [120700.0, 8.0], [181000.0, 17.0], [49500.0, 1.0], [52700.0, 2.0], [54700.0, 1.0], [56700.0, 1.0], [60300.0, 5.0], [120600.0, 2.0], [181200.0, 1.0], [120500.0, 1.0], [121300.0, 1.0], [17900.0, 1.0], [19100.0, 1.0], [19500.0, 1.0], [23900.0, 1.0], [24500.0, 1.0], [27100.0, 1.0], [28700.0, 1.0], [29100.0, 1.0], [31900.0, 1.0], [33400.0, 1.0], [43400.0, 1.0], [44600.0, 1.0], [45400.0, 1.0], [180700.0, 8.0], [48200.0, 1.0], [51800.0, 1.0], [54600.0, 1.0], [57400.0, 1.0], [60200.0, 15.0], [121200.0, 2.0], [120400.0, 2.0]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 181200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 19291.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 39916.0, "series": [{"data": [[0.0, 39916.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 19291.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 35172.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.62920543E12, "maxY": 1000.0, "series": [{"data": [[1.62920564E12, 5.0406249999999915], [1.62920581E12, 3.993730407523511], [1.62920598E12, 3.0], [1.62920624E12, 388.50335120643416], [1.62920615E12, 130.59090909090912], [1.62920547E12, 22.958923512747898], [1.62920572E12, 1000.0], [1.62920589E12, 136.6051587301586], [1.62920606E12, 626.0169851380049], [1.62920632E12, 2.9876543209876543], [1.62920623E12, 351.6188790560476], [1.62920555E12, 200.15633245382566], [1.62920548E12, 91.81611570247937], [1.62920565E12, 8.898670044331853], [1.62920582E12, 5.650818394388152], [1.62920625E12, 826.1116883116865], [1.62920599E12, 3.7159450897571236], [1.62920608E12, 1000.0], [1.62920556E12, 414.32364864864866], [1.62920573E12, 1000.0], [1.6292059E12, 277.4914285714281], [1.62920633E12, 1.0], [1.62920607E12, 953.2877030162412], [1.62920549E12, 186.14276139410188], [1.62920626E12, 1000.0], [1.62920566E12, 28.45044472681063], [1.62920609E12, 1000.0], [1.62920583E12, 9.737483953786901], [1.62920592E12, 345.8114700065921], [1.62920557E12, 16.499051233396578], [1.62920574E12, 1000.0], [1.62920591E12, 355.55471035693415], [1.629206E12, 5.807782101167312], [1.62920627E12, 892.348364717543], [1.6292061E12, 818.7142857142851], [1.6292055E12, 278.467753366407], [1.62920567E12, 128.0559578670178], [1.62920576E12, 3.5034387895460815], [1.62920593E12, 6.678502879078703], [1.62920558E12, 8.213793103448264], [1.62920575E12, 359.2851267991775], [1.62920584E12, 31.7108359133127], [1.62920601E12, 9.15685019206145], [1.62920551E12, 768.2470881863559], [1.6292056E12, 2.0], [1.62920577E12, 3.0], [1.62920594E12, 2.4792817679558015], [1.62920628E12, 60.50351437699672], [1.62920559E12, 3.030534351145039], [1.62920568E12, 230.94098984771585], [1.62920585E12, 120.36307053941897], [1.62920602E12, 32.65936130244214], [1.62920544E12, 4.337078651685393], [1.62920561E12, 2.1288135593220345], [1.62920578E12, 3.0], [1.62920629E12, 4.389523809523808], [1.62920595E12, 2.0], [1.62920543E12, 8.2247191011236], [1.62920552E12, 834.1651612903225], [1.62920569E12, 307.4268774703564], [1.62920586E12, 287.68978102189783], [1.62920603E12, 111.29449321628101], [1.62920596E12, 2.0], [1.62920545E12, 4.609460946094603], [1.6292063E12, 3.0], [1.62920562E12, 3.177599999999994], [1.62920579E12, 3.0], [1.62920604E12, 460.2616822429906], [1.62920553E12, 990.4094063222819], [1.6292057E12, 398.8071342200723], [1.62920621E12, 64.10629921259846], [1.62920587E12, 333.3499691928533], [1.6292058E12, 3.0], [1.62920597E12, 2.415807560137458], [1.62920631E12, 3.0], [1.62920546E12, 8.365971107544137], [1.62920563E12, 4.270241850683493], [1.62920588E12, 503.9041916167662], [1.62920605E12, 554.0271343481138], [1.62920622E12, 245.9047619047623], [1.62920554E12, 306.72778345250305], [1.62920571E12, 756.7253588516749]], "isOverall": false, "label": "bzm - Concurrency Thread Group-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62920633E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 22.576333764076054, "minX": 1.0, "maxY": 43026.0608365019, "series": [{"data": [[2.0, 24.618409294012476], [3.0, 22.576333764076054], [4.0, 27.515247410817008], [5.0, 27.4631029986963], [6.0, 31.33708351363044], [7.0, 31.60791757049892], [8.0, 45.348477284073894], [9.0, 66.17701641684516], [10.0, 55.1496], [11.0, 77.29058116232468], [12.0, 77.30916844349673], [13.0, 85.33333333333337], [14.0, 92.45887445887436], [15.0, 62.622589531680475], [16.0, 118.20342205323193], [17.0, 105.08579881656804], [18.0, 102.28516525749423], [19.0, 113.0089020771513], [20.0, 108.13571428571424], [21.0, 124.90772128060263], [22.0, 123.11764705882354], [23.0, 154.92857142857133], [24.0, 144.5014326647563], [25.0, 152.54143646408838], [26.0, 173.94374999999994], [27.0, 147.8571428571429], [28.0, 163.94707520891373], [29.0, 174.07734806629833], [30.0, 225.3706293706293], [31.0, 75.99497487437182], [32.0, 189.15384615384613], [33.0, 214.48170731707316], [34.0, 201.977653631285], [35.0, 206.39999999999998], [36.0, 215.16853932584277], [37.0, 217.4], [38.0, 248.88202247191003], [39.0, 233.34499999999986], [40.0, 68.66666666666666], [41.0, 247.48404255319144], [42.0, 232.52941176470588], [43.0, 261.6395939086295], [44.0, 238.5769230769231], [45.0, 290.99999999999983], [46.0, 262.56666666666666], [47.0, 283.4502617801047], [48.0, 269.8333333333332], [49.0, 262.43999999999994], [50.0, 254.80000000000007], [51.0, 273.5185185185185], [52.0, 290.72413793103453], [53.0, 280.11428571428576], [54.0, 307.17647058823536], [55.0, 1704.5079365079362], [56.0, 798.1], [57.0, 381.6052631578946], [59.0, 447.511013215859], [58.0, 380.7551020408164], [60.0, 2200.163636363636], [61.0, 637.1999999999999], [63.0, 3779.1851851851843], [62.0, 43026.0608365019], [64.0, 2740.1948051948048], [65.0, 1811.285714285714], [66.0, 995.9860465116278], [67.0, 3635.948717948718], [68.0, 2341.901639344262], [69.0, 937.3092369477913], [71.0, 1746.9374999999998], [70.0, 2632.566037735849], [72.0, 1654.8514851485147], [73.0, 562.4571428571428], [74.0, 2852.8686868686873], [75.0, 951.3824701195222], [76.0, 2379.4179104477607], [77.0, 2140.739130434783], [78.0, 2216.285714285714], [79.0, 2431.1343283582087], [80.0, 779.1441860465113], [81.0, 3571.5555555555566], [82.0, 1832.5888888888887], [83.0, 1495.425196850394], [84.0, 3320.727272727273], [85.0, 2465.4062500000005], [86.0, 1133.7563451776646], [87.0, 3700.078947368421], [88.0, 4138.606060606061], [89.0, 2047.4749999999995], [90.0, 2404.1449275362315], [91.0, 1525.979020979021], [92.0, 4358.03125], [93.0, 1950.6931818181808], [94.0, 2121.061728395062], [95.0, 3620.205128205128], [96.0, 4470.727272727273], [97.0, 2673.75], [98.0, 3814.0540540540546], [99.0, 5366.960000000001], [100.0, 3475.4390243902435], [101.0, 1745.6435643564355], [102.0, 1712.2300884955755], [103.0, 1290.5369458128082], [104.0, 3938.6111111111113], [105.0, 2393.028571428571], [106.0, 2450.2], [107.0, 3730.538461538462], [108.0, 3305.0888888888885], [109.0, 1956.8369565217392], [110.0, 1428.360759493671], [111.0, 680.0117647058822], [112.0, 3598.3614457831327], [113.0, 1037.2964285714281], [114.0, 2495.029850746269], [115.0, 2953.622641509434], [119.0, 1844.8173076923078], [116.0, 2762.966101694916], [118.0, 2104.0476190476193], [117.0, 2368.9189189189187], [121.0, 2256.09756097561], [122.0, 2876.7118644067796], [123.0, 768.1709401709401], [120.0, 1858.5625], [124.0, 4460.578125], [125.0, 1884.3454545454545], [127.0, 4259.492537313432], [126.0, 731.8813559322033], [128.0, 2852.8214285714284], [129.0, 1989.1844660194174], [130.0, 2358.266666666667], [131.0, 2183.5180722891564], [132.0, 1713.0909090909092], [133.0, 2445.3142857142857], [134.0, 2593.121212121212], [135.0, 1392.1923076923076], [136.0, 805.2653061224489], [137.0, 853.3230769230769], [138.0, 4583.697916666668], [139.0, 1984.6330275229357], [140.0, 2423.5600000000004], [141.0, 1499.2254335260116], [142.0, 2500.9], [143.0, 2812.2833333333333], [144.0, 3105.566037735849], [145.0, 2059.3737373737376], [146.0, 1679.3203125000002], [147.0, 1708.58865248227], [148.0, 836.9833333333332], [149.0, 2505.720588235294], [150.0, 6450.86046511628], [151.0, 731.1929824561404], [152.0, 6045.488888888889], [153.0, 3957.2972972972975], [154.0, 2684.5], [156.0, 7959.375], [157.0, 8584.4], [158.0, 12472.2], [159.0, 20522.333333333332], [155.0, 5991.909090909091], [160.0, 2341.7373737373737], [161.0, 3078.274193548387], [162.0, 1966.4341085271321], [163.0, 5579.416666666667], [164.0, 1821.8136645962732], [165.0, 3947.025], [166.0, 3290.269230769231], [167.0, 1460.9361702127658], [168.0, 1562.9906103286382], [170.0, 4137.282051282051], [175.0, 1559.8429752066115], [174.0, 3715.8936170212764], [169.0, 4321.378378378378], [171.0, 5122.137931034484], [172.0, 1802.173913043478], [173.0, 2552.275], [176.0, 2852.2985074626868], [177.0, 3432.591836734694], [178.0, 757.3913043478261], [179.0, 5780.081632653061], [180.0, 1137.8148148148148], [181.0, 3468.9662921348317], [182.0, 1730.922222222223], [183.0, 4373.705882352941], [189.0, 1693.1225296442685], [190.0, 2692.1875], [191.0, 7317.5], [184.0, 3300.836363636364], [185.0, 2419.878048780488], [187.0, 3729.1395348837204], [188.0, 4156.842105263158], [186.0, 5024.666666666666], [192.0, 4190.431034482759], [193.0, 2286.1354166666665], [194.0, 2916.0677966101694], [195.0, 5333.275862068966], [196.0, 4058.5897435897436], [197.0, 860.7809523809527], [198.0, 828.5517241379309], [199.0, 608.4482758620688], [200.0, 697.2820512820515], [201.0, 569.6451612903227], [202.0, 559.9512195121949], [203.0, 654.939393939394], [204.0, 529.34375], [205.0, 651.6666666666666], [206.0, 488.60869565217394], [207.0, 615.6875000000001], [208.0, 626.6129032258065], [209.0, 600.8333333333334], [210.0, 495.3076923076923], [211.0, 705.7727272727275], [214.0, 648.4545454545455], [215.0, 415.9333333333333], [212.0, 860.75], [213.0, 569.3499999999999], [216.0, 532.6111111111112], [217.0, 503.4642857142857], [218.0, 695.2882882882884], [219.0, 723.4571428571428], [221.0, 634.5833333333333], [220.0, 620.258064516129], [222.0, 661.3809523809523], [223.0, 511.00000000000006], [224.0, 2240.561983471073], [225.0, 1396.1147540983604], [226.0, 1427.3023255813955], [227.0, 3392.7866666666664], [228.0, 1391.9666666666672], [229.0, 930.1639344262294], [230.0, 2801.795454545455], [231.0, 2360.4300000000007], [232.0, 1959.1011235955061], [233.0, 1576.2656250000002], [234.0, 1204.074074074074], [235.0, 1112.4893617021282], [236.0, 1595.2482269503544], [237.0, 712.4374999999999], [239.0, 1004.8461538461538], [238.0, 1481.5], [240.0, 890.9464285714287], [241.0, 986.6933333333334], [242.0, 933.0595238095237], [243.0, 1239.9999999999998], [244.0, 2257.0365853658545], [245.0, 1165.25], [246.0, 1485.5692307692311], [247.0, 1760.353982300885], [248.0, 1227.3648648648646], [249.0, 792.5121951219511], [250.0, 678.9999999999999], [251.0, 791.9999999999999], [252.0, 1228.1675392670165], [253.0, 1681.9036144578313], [254.0, 1241.4468085106384], [255.0, 964.4827586206895], [257.0, 858.0344827586208], [256.0, 999.6486486486486], [258.0, 2729.7919463087233], [259.0, 1029.6666666666665], [260.0, 1277.8965517241381], [261.0, 1448.8461538461538], [263.0, 1007.1874999999999], [262.0, 1653.3333333333335], [264.0, 2227.3333333333335], [270.0, 670.6000000000003], [271.0, 756.6315789473686], [268.0, 1693.6041666666663], [269.0, 1220.9423076923076], [265.0, 723.1818181818182], [266.0, 1539.734251968505], [267.0, 1596.6153846153848], [273.0, 809.3333333333334], [272.0, 829.5833333333333], [274.0, 832.7291666666666], [275.0, 1430.4214876033056], [276.0, 1542.797872340426], [277.0, 1381.3548387096776], [278.0, 921.7413793103448], [279.0, 1808.9816513761464], [280.0, 1506.538461538462], [286.0, 1549.8300000000004], [287.0, 1563.340425531915], [284.0, 1467.6443298969073], [285.0, 1566.8991596638662], [281.0, 1851.8447204968936], [282.0, 1971.83984375], [283.0, 1356.4591836734694], [290.0, 1632.9670329670325], [289.0, 3348.2956521739125], [288.0, 1590.4177215189875], [291.0, 1686.4690721649486], [300.0, 2010.7545454545445], [301.0, 1824.0370370370367], [302.0, 1353.9333333333332], [303.0, 2474.0], [292.0, 2496.451456310678], [293.0, 1648.3367346938776], [294.0, 1443.25], [295.0, 1090.9393939393942], [296.0, 1744.0877192982457], [297.0, 1672.2380952380954], [298.0, 1718.2735426008974], [299.0, 1715.3675675675674], [305.0, 1055.1666666666667], [304.0, 1941.7715517241381], [307.0, 1875.7142857142858], [316.0, 1512.0960000000007], [317.0, 841.4545454545456], [306.0, 1891.8], [308.0, 1185.5454545454545], [309.0, 987.4838709677425], [310.0, 1644.5310734463276], [311.0, 1844.3979591836742], [319.0, 834.8367346938776], [312.0, 1956.6521739130435], [318.0, 869.7826086956525], [315.0, 1727.4558823529414], [314.0, 1096.392405063291], [313.0, 1590.1538461538462], [334.0, 1868.8300395256917], [325.0, 2602.256756756758], [324.0, 1982.7391304347823], [326.0, 1492.83922829582], [320.0, 1837.2477876106198], [327.0, 1168.9199999999994], [321.0, 2081.310756972111], [335.0, 1755.2926829268295], [333.0, 2355.2084942084934], [332.0, 1881.996539792386], [323.0, 1534.5791855203627], [322.0, 844.8653846153848], [331.0, 1828.1929824561403], [330.0, 1855.8461538461536], [328.0, 1562.9777777777776], [329.0, 2350.6127659574477], [350.0, 1580.3503649635036], [346.0, 1797.5833333333333], [345.0, 1719.9199999999998], [343.0, 1675.058823529412], [341.0, 1072.7466666666667], [340.0, 1416.1346153846152], [342.0, 2094.826086956521], [351.0, 2047.4736842105262], [344.0, 2917.453846153847], [349.0, 2592.265957446809], [348.0, 1114.9333333333336], [339.0, 2153.1344086021504], [338.0, 2028.4677419354825], [337.0, 1826.939953810624], [336.0, 1611.3170731707316], [347.0, 1717.142857142857], [366.0, 1327.8640350877195], [358.0, 1801.418181818182], [357.0, 1174.6710526315785], [356.0, 1068.922077922078], [359.0, 1553.421052631579], [353.0, 1768.80890052356], [352.0, 1574.8433734939765], [354.0, 1731.7884615384614], [367.0, 1265.219512195122], [365.0, 945.1041666666666], [364.0, 989.8906250000001], [355.0, 1443.209677419355], [363.0, 999.5217391304346], [362.0, 1960.39393939394], [361.0, 1880.8461538461538], [360.0, 1843.0263157894735], [382.0, 2038.698795180724], [383.0, 1324.4242424242425], [381.0, 1300.2307692307688], [380.0, 1185.669491525424], [371.0, 1550.7027027027025], [370.0, 1378.8358208955226], [369.0, 1400.145833333333], [368.0, 1879.2185273159162], [379.0, 1988.042168674699], [378.0, 1438.8152173913043], [377.0, 1309.0144927536232], [376.0, 1469.7115384615379], [375.0, 1399.5871559633022], [374.0, 1684.8787878787878], [372.0, 1536.8749999999998], [373.0, 1597.378787878788], [386.0, 1497.047169811321], [389.0, 1181.4814814814813], [388.0, 996.758620689655], [387.0, 1205.9428571428568], [385.0, 1380.0294117647059], [384.0, 1235.2307692307693], [391.0, 1128.0847457627117], [390.0, 1003.9859154929579], [399.0, 2122.707692307692], [398.0, 2875.1607142857133], [392.0, 1317.6666666666672], [395.0, 1465.5473684210524], [394.0, 1476.5], [393.0, 2678.634615384615], [397.0, 4008.429508196721], [396.0, 1769.7349397590365], [403.0, 1438.621621621622], [414.0, 1635.396551724138], [408.0, 1159.6666666666667], [409.0, 501.8888888888888], [415.0, 1154.9090909090908], [413.0, 5361.903846153846], [412.0, 1100.875], [411.0, 853.203703703704], [410.0, 1231.25], [407.0, 1103.875], [405.0, 2917.7950310559], [406.0, 755.2857142857143], [404.0, 2079.0875], [402.0, 1513.0], [401.0, 1659.276190476191], [400.0, 1859.4550264550264], [430.0, 1437.4705882352941], [429.0, 1089.3749999999998], [427.0, 758.7777777777778], [426.0, 490.1000000000001], [431.0, 1145.1111111111113], [428.0, 834.4000000000001], [425.0, 579.7941176470588], [424.0, 450.5238095238095], [423.0, 765.9473684210526], [417.0, 674.5625], [416.0, 807.4], [419.0, 756.1578947368419], [418.0, 540.2142857142857], [422.0, 1281.2307692307693], [421.0, 1777.1551724137928], [420.0, 3593.306493506494], [440.0, 1034.8500000000001], [447.0, 1246.4666666666665], [446.0, 428.00000000000006], [445.0, 715.5], [444.0, 739.3636363636364], [435.0, 1667.2972972972975], [434.0, 2387.25], [433.0, 866.8], [432.0, 970.7272727272727], [443.0, 1477.2173913043478], [442.0, 1292.1333333333332], [441.0, 1002.2666666666668], [439.0, 2111.4429530201346], [438.0, 1819.8750000000002], [437.0, 2755.994623655914], [436.0, 2274.5229885057465], [462.0, 844.7999999999998], [463.0, 683.3235294117646], [461.0, 616.4090909090909], [458.0, 902.5714285714283], [460.0, 687.55], [459.0, 557.1333333333332], [457.0, 663.9411764705883], [456.0, 816.8571428571428], [454.0, 971.8333333333333], [448.0, 834.8823529411765], [455.0, 850.8888888888889], [450.0, 521.5], [451.0, 889.5882352941177], [449.0, 641.2666666666667], [453.0, 780.0000000000001], [452.0, 483.3333333333333], [478.0, 898.9411764705883], [479.0, 1520.090909090909], [477.0, 1194.4999999999998], [476.0, 1809.375], [467.0, 722.5652173913043], [466.0, 831.1111111111111], [465.0, 1745.8333333333335], [464.0, 653.5454545454545], [471.0, 1155.142857142857], [475.0, 1130.9230769230771], [474.0, 1166.6666666666665], [473.0, 1666.0909090909092], [472.0, 1791.8749999999998], [470.0, 568.24], [469.0, 703.0000000000001], [468.0, 1738.5], [494.0, 918.2857142857144], [495.0, 733.6249999999999], [493.0, 1047.6923076923078], [492.0, 1234.2941176470588], [491.0, 1214.916666666667], [490.0, 995.7142857142857], [489.0, 741.5384615384615], [488.0, 624.1818181818181], [487.0, 1144.1818181818182], [486.0, 791.7272727272726], [480.0, 1103.5833333333335], [483.0, 946.9565217391305], [482.0, 1025.375], [481.0, 1117.3999999999999], [485.0, 1775.8], [484.0, 1450.4], [510.0, 912.6428571428571], [511.0, 1010.2352941176471], [509.0, 1251.6153846153848], [508.0, 794.409090909091], [507.0, 1235.6], [506.0, 933.1333333333332], [505.0, 1273.076923076923], [504.0, 840.4117647058823], [503.0, 950.9230769230769], [497.0, 1082.7333333333336], [496.0, 1289.4615384615386], [499.0, 1189.3333333333333], [498.0, 975.8666666666668], [502.0, 893.2857142857144], [501.0, 980.2666666666665], [500.0, 4113.503496503494], [538.0, 1105.35], [532.0, 1337.263157894737], [522.0, 1140.3783783783786], [521.0, 1453.4857142857147], [520.0, 1351.9666666666667], [523.0, 2584.3636363636365], [526.0, 1163.3636363636365], [525.0, 1853.939393939394], [524.0, 1688.478260869565], [539.0, 1219.7333333333336], [541.0, 1273.3684210526314], [540.0, 1043.6875], [543.0, 1244.6], [542.0, 1182.6428571428573], [529.0, 1117.8285714285714], [528.0, 1238.6800000000003], [536.0, 1129.5806451612902], [537.0, 910.151515151515], [519.0, 1511.3999999999999], [517.0, 2112.75], [518.0, 1818.2142857142856], [516.0, 1254.7666666666667], [515.0, 1573.5333333333333], [514.0, 1442.0400000000002], [512.0, 996.9999999999998], [513.0, 801.8333333333333], [527.0, 1127.5714285714284], [535.0, 1261.56], [534.0, 970.5625000000001], [533.0, 1131.741935483871], [531.0, 1469.5882352941178], [530.0, 1356.2592592592591], [569.0, 2056.4444444444443], [563.0, 2080.6], [570.0, 2019.1666666666665], [572.0, 1437.2727272727273], [571.0, 1627.8], [574.0, 1878.6875000000002], [573.0, 1344.1666666666665], [560.0, 2040.8], [575.0, 1227.9999999999998], [568.0, 2239.777777777778], [551.0, 1368.5625], [550.0, 1363.9615384615383], [549.0, 1471.2999999999997], [548.0, 1205.4], [547.0, 1271.5500000000002], [546.0, 1179.8260869565217], [545.0, 1158.4313725490192], [544.0, 929.5263157894738], [559.0, 2322.0], [558.0, 3119.4], [557.0, 1987.8333333333335], [556.0, 1386.0476190476188], [555.0, 1887.9629629629628], [554.0, 1345.7187500000002], [553.0, 1421.0606060606062], [552.0, 1090.8684210526317], [567.0, 3098.6], [566.0, 1160.0170940170933], [565.0, 2654.833333333333], [564.0, 2297.5], [562.0, 2185.333333333333], [561.0, 2003.6], [601.0, 1375.4248366013076], [605.0, 1835.363636363636], [607.0, 2736.1428571428573], [594.0, 1530.909090909091], [592.0, 1107.3695652173913], [593.0, 1409.7073170731708], [606.0, 2123.2], [604.0, 3400.9201183431974], [603.0, 1863.2999999999997], [602.0, 1951.941176470588], [590.0, 1882.0000000000002], [576.0, 958.2195121951221], [591.0, 1299.3333333333333], [578.0, 1790.2], [577.0, 1125.0555555555557], [581.0, 1188.7297297297296], [580.0, 1092.3636363636363], [579.0, 4940.428571428572], [583.0, 1718.1714285714284], [600.0, 1950.25], [582.0, 1255.8125000000002], [589.0, 1317.28], [588.0, 1947.6428571428573], [587.0, 2176.3], [586.0, 2255.6923076923076], [585.0, 1191.159090909091], [584.0, 934.8181818181819], [599.0, 1737.4], [598.0, 2560.6], [597.0, 2272.285714285714], [596.0, 1962.6], [595.0, 3365.25], [637.0, 2127.5], [628.0, 3637.8666666666672], [638.0, 2054.9999999999995], [639.0, 1806.1272727272728], [625.0, 3154.2857142857147], [624.0, 2593.142857142857], [627.0, 1727.670391061453], [626.0, 3343.4], [635.0, 2368.961538461539], [634.0, 1751.5], [636.0, 2002.7307692307695], [633.0, 2610.571428571429], [632.0, 2070.1923076923076], [615.0, 5346.571428571428], [614.0, 1571.769230769231], [613.0, 2567.0], [612.0, 2231.866666666667], [611.0, 1709.1904761904766], [610.0, 3043.151515151515], [609.0, 1447.918699186992], [608.0, 2072.4375], [623.0, 3038.0], [622.0, 2704.2663043478274], [621.0, 3933.681818181817], [620.0, 3824.0], [619.0, 1865.5555555555554], [618.0, 1346.542372881356], [617.0, 1655.5833333333333], [616.0, 1796.7857142857144], [631.0, 1751.6911764705878], [630.0, 1993.5833333333337], [629.0, 2684.174418604652], [666.0, 2880.8571428571427], [659.0, 4647.714285714285], [668.0, 2751.2], [671.0, 2055.285714285714], [670.0, 1595.0], [669.0, 2426.125], [657.0, 3440.6666666666665], [658.0, 2649.5], [656.0, 2669.0], [667.0, 2669.2], [665.0, 4037.1666666666665], [664.0, 1704.8], [647.0, 2864.375], [646.0, 7026.875000000001], [645.0, 4134.5], [644.0, 3938.8333333333335], [643.0, 1771.2], [642.0, 1760.4], [641.0, 3226.25], [640.0, 2250.6000000000004], [655.0, 4134.0], [654.0, 2876.666666666667], [653.0, 2280.4166666666674], [652.0, 3203.0], [651.0, 3427.8333333333335], [650.0, 2885.0], [649.0, 3389.6], [648.0, 5202.833333333334], [663.0, 2232.2], [662.0, 3869.5000000000005], [661.0, 4046.0], [660.0, 2441.666666666667], [700.0, 2578.5714285714284], [703.0, 2781.0], [689.0, 2552.6363636363635], [688.0, 2177.6], [691.0, 1987.3333333333333], [690.0, 3196.0], [693.0, 2706.5714285714284], [692.0, 3257.6], [702.0, 3145.4], [701.0, 3317.0], [699.0, 3383.428571428571], [698.0, 2929.6], [697.0, 3026.4], [696.0, 3037.285714285714], [687.0, 2352.6], [672.0, 2718.1111111111113], [674.0, 2976.4285714285716], [675.0, 2064.3333333333335], [673.0, 2187.3333333333335], [677.0, 2701.5], [676.0, 3024.0], [679.0, 2558.5714285714284], [678.0, 2480.6666666666665], [686.0, 2978.4], [685.0, 2203.0], [684.0, 2313.75], [683.0, 2837.5555555555557], [682.0, 2906.285714285714], [681.0, 2803.8], [680.0, 2226.0], [695.0, 2037.4], [694.0, 2699.166666666667], [729.0, 3228.5], [734.0, 2971.6], [735.0, 2720.5714285714284], [722.0, 2663.4], [721.0, 3317.4], [720.0, 2736.666666666667], [724.0, 3526.4285714285716], [725.0, 2993.8], [723.0, 2994.666666666667], [733.0, 2677.0], [732.0, 2617.0], [731.0, 3182.5], [730.0, 3766.6], [728.0, 4051.5], [711.0, 3103.1666666666665], [709.0, 2816.0], [710.0, 2450.5], [708.0, 2715.833333333333], [706.0, 2894.6666666666665], [707.0, 2581.0], [705.0, 2575.714285714286], [704.0, 3461.0], [719.0, 2556.1428571428573], [718.0, 2282.1666666666665], [717.0, 2874.3333333333335], [716.0, 3161.166666666667], [715.0, 2904.666666666667], [714.0, 2478.85], [713.0, 2581.4], [712.0, 4244.666666666667], [727.0, 3337.9999999999995], [726.0, 3222.3333333333335], [761.0, 2853.285714285714], [765.0, 2453.4444444444443], [767.0, 2473.8], [766.0, 2133.5], [753.0, 3759.4], [752.0, 2432.25], [755.0, 1753.7], [754.0, 3245.2], [757.0, 2757.1666666666665], [756.0, 3131.0], [764.0, 2428.5], [763.0, 2361.857142857143], [762.0, 2634.6666666666665], [760.0, 2164.25], [743.0, 2571.5], [742.0, 2508.5], [741.0, 3061.5], [740.0, 2981.2], [739.0, 3136.1428571428573], [738.0, 3375.8], [737.0, 2106.714285714286], [736.0, 3674.6], [751.0, 2862.3333333333335], [748.0, 2460.0], [747.0, 2254.0], [750.0, 2384.5], [749.0, 2439.25], [746.0, 2042.2857142857142], [744.0, 2032.8], [745.0, 2113.3333333333335], [759.0, 2861.4], [758.0, 2654.625], [797.0, 3306.4], [781.0, 3253.8255813953483], [772.0, 1939.5714285714284], [771.0, 3842.111111111111], [770.0, 3262.75], [769.0, 2666.1666666666665], [768.0, 2536.428571428571], [773.0, 2457.5714285714284], [774.0, 2169.2000000000003], [775.0, 1998.3703703703704], [792.0, 4357.8], [794.0, 3966.6], [793.0, 4030.6666666666665], [796.0, 2900.6], [795.0, 3860.2], [798.0, 3232.6], [784.0, 4457.80756013746], [785.0, 4528.166666666666], [787.0, 3365.3333333333335], [786.0, 2489.308411214955], [789.0, 4101.5], [788.0, 2649.3333333333335], [791.0, 3585.4], [790.0, 4381.0], [799.0, 2504.6], [776.0, 2209.52380952381], [777.0, 2390.375], [778.0, 3176.3936170212764], [780.0, 2152.4], [779.0, 3304.2857142857147], [782.0, 3732.6486486486488], [783.0, 3479.943289224954], [807.0, 4141.0], [809.0, 3348.0], [808.0, 2784.6], [811.0, 3833.75], [810.0, 3324.0], [813.0, 3499.0], [812.0, 3396.0000000000005], [814.0, 3764.4736842105262], [815.0, 3977.9530685920595], [800.0, 2713.1666666666665], [802.0, 3612.5], [801.0, 3232.2], [804.0, 3638.6], [803.0, 3360.8], [806.0, 3886.75], [805.0, 2155.4], [817.0, 4890.5999999999985], [816.0, 3948.5000000000005], [831.0, 4346.5], [830.0, 3118.8], [829.0, 3796.0], [828.0, 2139.0], [825.0, 2832.3333333333335], [824.0, 3453.333333333333], [826.0, 1886.1666666666667], [827.0, 5070.4], [818.0, 4345.374999999999], [819.0, 4073.853994490358], [820.0, 3594.3639344262315], [821.0, 4966.037500000002], [823.0, 2627.0], [822.0, 2939.0], [861.0, 4652.333333333333], [843.0, 5106.321428571428], [832.0, 3846.4444444444443], [838.0, 3725.8], [837.0, 2775.6], [836.0, 4231.0], [835.0, 3795.333333333333], [834.0, 3967.75], [833.0, 2595.5], [856.0, 2312.5], [839.0, 2808.0], [858.0, 2440.25], [857.0, 2234.5], [860.0, 3442.6666666666665], [859.0, 3004.25], [862.0, 3352.0], [848.0, 4209.257777777773], [849.0, 9611.2], [851.0, 2923.5], [850.0, 2873.2], [853.0, 2211.0], [852.0, 3435.4], [855.0, 3418.75], [854.0, 1860.5], [863.0, 3462.25], [840.0, 5221.874999999999], [841.0, 5047.0845986984805], [842.0, 4765.285714285714], [844.0, 7084.804347826087], [845.0, 3475.0000000000005], [846.0, 3574.4285714285716], [847.0, 2819.3125], [889.0, 4383.5], [893.0, 2281.5], [894.0, 2254.75], [895.0, 2793.0], [881.0, 2381.75], [880.0, 3063.628571428572], [883.0, 4070.9912280701737], [882.0, 2593.4], [885.0, 2295.0], [884.0, 2373.5714285714284], [892.0, 3806.0], [891.0, 2818.8], [890.0, 2220.0], [888.0, 2329.6], [871.0, 2397.375], [870.0, 1781.75], [869.0, 2105.75], [868.0, 2209.0], [867.0, 1493.0], [866.0, 1952.75], [865.0, 4078.5], [864.0, 4599.75], [879.0, 2769.25], [878.0, 2562.0], [877.0, 2854.9999999999995], [876.0, 3409.235294117647], [875.0, 4502.0], [874.0, 2057.433333333333], [873.0, 754.2115384615382], [872.0, 1586.0000000000002], [887.0, 3416.602836879433], [886.0, 4464.142076502736], [924.0, 14325.5], [927.0, 1689.75], [913.0, 2952.9244604316536], [912.0, 1996.25], [915.0, 2371.75], [914.0, 3525.6666666666665], [917.0, 1493.0000000000002], [916.0, 2127.9999999999995], [926.0, 2565.75], [925.0, 3478.6], [923.0, 9673.6], [922.0, 3526.153846153846], [921.0, 2729.0600000000004], [920.0, 2609.0], [911.0, 1997.5], [897.0, 2745.75], [896.0, 1978.0], [899.0, 3397.0], [898.0, 3183.6666666666665], [901.0, 5504.333333333333], [900.0, 3740.8333333333335], [903.0, 2616.75], [902.0, 2172.0], [910.0, 2059.25], [909.0, 1986.0], [908.0, 2063.8], [907.0, 2553.0], [906.0, 2352.0], [905.0, 8320.6], [904.0, 3890.25], [919.0, 1750.2], [918.0, 1654.1874999999998], [956.0, 2123.5], [930.0, 2199.4], [929.0, 1884.0], [928.0, 2140.0], [931.0, 2382.75], [933.0, 2225.25], [932.0, 2321.5], [935.0, 2717.75], [934.0, 1930.0], [943.0, 1824.75], [942.0, 2050.75], [941.0, 2008.0], [940.0, 2030.75], [939.0, 2142.5], [938.0, 2272.5], [937.0, 2171.5], [936.0, 2183.25], [959.0, 2338.25], [945.0, 2345.75], [944.0, 3695.25], [947.0, 1575.3333333333333], [946.0, 1395.75], [949.0, 2276.2], [948.0, 1156.5], [951.0, 2173.0], [950.0, 2227.25], [958.0, 2149.25], [957.0, 1941.0], [955.0, 1867.5], [954.0, 2069.5], [953.0, 2414.0], [952.0, 1790.5], [985.0, 2542.0], [990.0, 2974.166666666667], [991.0, 2364.8], [976.0, 2903.8], [978.0, 3102.4], [979.0, 2884.0], [977.0, 2296.0], [981.0, 2462.2], [980.0, 3270.8333333333335], [989.0, 3059.5], [988.0, 2769.5], [987.0, 3240.6], [986.0, 2895.0], [984.0, 2806.6666666666665], [967.0, 2379.6], [966.0, 4534.874345549741], [965.0, 3087.0], [964.0, 1270.0], [963.0, 1829.0], [962.0, 4034.25], [961.0, 2831.0], [960.0, 1953.0], [975.0, 3798.0], [974.0, 3165.8], [973.0, 2729.4], [972.0, 4211.2], [971.0, 2984.0], [970.0, 2477.8], [969.0, 3512.2], [968.0, 2706.2], [983.0, 2707.25], [982.0, 2949.2], [996.0, 2319.5], [999.0, 2417.530612244898], [1000.0, 5226.420053093692], [998.0, 2090.1666666666665], [997.0, 2229.2], [995.0, 2697.4], [994.0, 2399.2], [993.0, 2416.4], [992.0, 2289.2], [1.0, 25.0]], "isOverall": false, "label": "Sunstar Home", "isController": false}, {"data": [[345.689666133354, 2016.724737494579]], "isOverall": false, "label": "Sunstar Home-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 19.5, "minX": 1.62920543E12, "maxY": 1495338.0, "series": [{"data": [[1.62920564E12, 948340.3], [1.62920581E12, 709111.8], [1.62920598E12, 463866.0], [1.62920624E12, 1105572.0], [1.62920615E12, 97910.6], [1.62920547E12, 1045997.8], [1.62920572E12, 1350102.0], [1.62920589E12, 1120219.4], [1.62920606E12, 1046764.8], [1.62920632E12, 60021.0], [1.62920623E12, 1255995.0], [1.62920555E12, 1123356.0], [1.62920548E12, 1075670.5], [1.62920565E12, 1169856.7], [1.62920582E12, 950558.4], [1.62920625E12, 1141140.0], [1.62920599E12, 701727.0], [1.62920608E12, 1337159.0], [1.62920556E12, 1096680.0], [1.62920573E12, 1212153.7], [1.6292059E12, 1166899.1], [1.62920633E12, 741.0], [1.62920607E12, 957859.2], [1.62920549E12, 1105422.8], [1.62920626E12, 1007019.0], [1.62920566E12, 1166203.9], [1.62920609E12, 1281598.2], [1.62920583E12, 1154303.2], [1.62920592E12, 1123930.1], [1.62920557E12, 781014.0], [1.62920574E12, 1305450.3], [1.62920591E12, 1266176.3], [1.629206E12, 952185.0], [1.62920627E12, 1495338.0], [1.6292061E12, 1296574.9], [1.6292055E12, 1045409.9], [1.62920567E12, 1125579.0], [1.62920576E12, 538707.7], [1.62920593E12, 772009.5], [1.62920558E12, 537225.0], [1.62920575E12, 1080985.8], [1.62920584E12, 1196539.4], [1.62920601E12, 1157442.0], [1.62920551E12, 890561.8], [1.6292056E12, 77064.0], [1.62920577E12, 291213.0], [1.62920594E12, 536404.2], [1.62920628E12, 1159665.0], [1.62920559E12, 291213.0], [1.62920568E12, 1167816.0], [1.62920585E12, 1071328.5], [1.62920602E12, 1183390.8], [1.62920544E12, 461481.1], [1.62920561E12, 218595.0], [1.62920578E12, 69654.0], [1.62920629E12, 778050.0], [1.62920595E12, 291172.3], [1.62920543E12, 131833.5], [1.62920552E12, 1148395.0], [1.62920569E12, 1124838.0], [1.62920586E12, 1218028.2], [1.62920603E12, 928473.0], [1.62920596E12, 75573.4], [1.62920545E12, 673374.8], [1.6292063E12, 537225.0], [1.62920562E12, 463125.0], [1.62920579E12, 216372.0], [1.62920604E12, 554783.3], [1.62920553E12, 960950.5], [1.6292057E12, 1225614.0], [1.62920621E12, 188301.4], [1.62920587E12, 1202466.7], [1.6292058E12, 462384.0], [1.62920597E12, 215631.0], [1.62920631E12, 289731.0], [1.62920546E12, 923022.6], [1.62920563E12, 704657.3], [1.62920588E12, 1237288.1], [1.62920605E12, 1119289.5], [1.62920622E12, 1089271.4], [1.62920554E12, 1450886.4], [1.62920571E12, 774345.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62920564E12, 24960.0], [1.62920581E12, 18661.5], [1.62920598E12, 12207.0], [1.62920624E12, 29094.0], [1.62920615E12, 2574.0], [1.62920547E12, 27534.0], [1.62920572E12, 35529.0], [1.62920589E12, 29484.0], [1.62920606E12, 27553.5], [1.62920632E12, 1579.5], [1.62920623E12, 33052.5], [1.62920555E12, 29562.0], [1.62920548E12, 28314.0], [1.62920565E12, 30790.5], [1.62920582E12, 25018.5], [1.62920625E12, 30030.0], [1.62920599E12, 18466.5], [1.62920608E12, 35197.5], [1.62920556E12, 28860.0], [1.62920573E12, 31902.0], [1.6292059E12, 30712.5], [1.62920633E12, 19.5], [1.62920607E12, 25213.5], [1.62920549E12, 29094.0], [1.62920626E12, 26500.5], [1.62920566E12, 30693.0], [1.62920609E12, 33676.5], [1.62920583E12, 30381.0], [1.62920592E12, 29581.5], [1.62920557E12, 20553.0], [1.62920574E12, 34359.0], [1.62920591E12, 33325.5], [1.629206E12, 25057.5], [1.62920627E12, 39351.0], [1.6292061E12, 34125.0], [1.6292055E12, 27514.5], [1.62920567E12, 29620.5], [1.62920576E12, 14176.5], [1.62920593E12, 20319.0], [1.62920558E12, 14137.5], [1.62920575E12, 28450.5], [1.62920584E12, 31492.5], [1.62920601E12, 30459.0], [1.62920551E12, 23439.0], [1.6292056E12, 2028.0], [1.62920577E12, 7663.5], [1.62920594E12, 14118.0], [1.62920628E12, 30517.5], [1.62920559E12, 7663.5], [1.62920568E12, 30732.0], [1.62920585E12, 28197.0], [1.62920602E12, 31141.5], [1.62920544E12, 12148.5], [1.62920561E12, 5752.5], [1.62920578E12, 1833.0], [1.62920629E12, 20475.0], [1.62920595E12, 7663.5], [1.62920543E12, 3471.0], [1.62920552E12, 30225.0], [1.62920569E12, 29601.0], [1.62920586E12, 32058.0], [1.62920603E12, 24433.5], [1.62920596E12, 1989.0], [1.62920545E12, 17725.5], [1.6292063E12, 14137.5], [1.62920562E12, 12187.5], [1.62920579E12, 5694.0], [1.62920604E12, 14605.5], [1.62920553E12, 25291.5], [1.6292057E12, 32253.0], [1.62920621E12, 4953.0], [1.62920587E12, 31648.5], [1.6292058E12, 12168.0], [1.62920597E12, 5674.5], [1.62920631E12, 7624.5], [1.62920546E12, 24297.0], [1.62920563E12, 18544.5], [1.62920588E12, 32565.0], [1.62920605E12, 29464.5], [1.62920622E12, 28665.0], [1.62920554E12, 38181.0], [1.62920571E12, 20377.5]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62920633E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 16.460784313725494, "minX": 1.62920543E12, "maxY": 120402.17424242421, "series": [{"data": [[1.62920564E12, 26.012499999999996], [1.62920581E12, 22.82236154649948], [1.62920598E12, 21.749201277955287], [1.62920624E12, 2224.0596514745303], [1.62920615E12, 120402.17424242421], [1.62920547E12, 157.29957507082167], [1.62920572E12, 5228.21130625686], [1.62920589E12, 661.6064814814819], [1.62920606E12, 1978.8322717622082], [1.62920632E12, 22.96296296296297], [1.62920623E12, 2150.539823008844], [1.62920555E12, 1183.583773087071], [1.62920548E12, 565.1928374655646], [1.62920565E12, 47.18619379354019], [1.62920582E12, 25.65549493374902], [1.62920625E12, 3637.6389610389624], [1.62920599E12, 24.005279831045396], [1.62920608E12, 3842.8288088642635], [1.62920556E12, 1126.8054054054037], [1.62920573E12, 4755.907090464547], [1.6292059E12, 1766.4584126984132], [1.62920633E12, 25.0], [1.62920607E12, 3380.3031709203387], [1.62920549E12, 1151.099195710457], [1.62920626E12, 5369.447387785128], [1.62920566E12, 172.69250317662042], [1.62920609E12, 8117.9119861030695], [1.62920583E12, 52.67586649550697], [1.62920592E12, 629.9228740936051], [1.62920557E12, 93.38235294117645], [1.62920574E12, 5547.59250851305], [1.62920591E12, 1348.0854300760673], [1.629206E12, 27.490272373540854], [1.62920627E12, 4666.783448959379], [1.6292061E12, 2528.120571428576], [1.6292055E12, 1719.798724309], [1.62920567E12, 743.5957867017778], [1.62920576E12, 22.13067400275102], [1.62920593E12, 21.172744721689046], [1.62920558E12, 73.83448275862078], [1.62920575E12, 1592.4475668265975], [1.62920584E12, 186.17399380804952], [1.62920601E12, 51.16069142125478], [1.62920551E12, 3619.8843594009954], [1.6292056E12, 47.53846153846155], [1.62920577E12, 21.720101781170477], [1.62920594E12, 18.792817679558024], [1.62920628E12, 774.1118210862624], [1.62920559E12, 50.08396946564887], [1.62920568E12, 1342.1922588832479], [1.62920585E12, 691.6459197786997], [1.62920602E12, 195.12961803381322], [1.62920544E12, 35.545746388443014], [1.62920561E12, 26.90508474576272], [1.62920578E12, 22.606382978723406], [1.62920629E12, 23.43523809523814], [1.62920595E12, 18.37150127226464], [1.62920543E12, 330.1235955056179], [1.62920552E12, 5093.765161290325], [1.62920569E12, 1814.6403162055324], [1.62920586E12, 1640.2238442822372], [1.62920603E12, 623.2290502793294], [1.62920596E12, 16.460784313725494], [1.62920545E12, 31.518151815181547], [1.6292063E12, 21.795862068965512], [1.62920562E12, 25.0288], [1.62920579E12, 21.708904109589028], [1.62920604E12, 389.4112149532709], [1.62920553E12, 5272.476484194293], [1.6292057E12, 2208.3319226118538], [1.62920621E12, 45883.011811023614], [1.62920587E12, 1807.2119531731355], [1.6292058E12, 22.631410256410245], [1.62920597E12, 21.391752577319572], [1.62920631E12, 21.524296675191824], [1.62920546E12, 56.70706260032098], [1.62920563E12, 24.713985278654036], [1.62920588E12, 2280.019161676641], [1.62920605E12, 1146.6598279285245], [1.62920622E12, 1121.2523809523805], [1.62920554E12, 2783.6016343207316], [1.62920571E12, 3582.9291866028693]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62920633E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 16.294117647058822, "minX": 1.62920543E12, "maxY": 120402.01515151515, "series": [{"data": [[1.62920564E12, 25.687500000000004], [1.62920581E12, 22.59979101358411], [1.62920598E12, 21.541533546325873], [1.62920624E12, 2220.280831099196], [1.62920615E12, 120402.01515151515], [1.62920547E12, 156.98441926345598], [1.62920572E12, 5222.053787047205], [1.62920589E12, 659.6706349206354], [1.62920606E12, 1972.696390658179], [1.62920632E12, 22.703703703703702], [1.62920623E12, 2146.2076696165154], [1.62920555E12, 1178.1246701846933], [1.62920548E12, 561.7231404958668], [1.62920565E12, 46.85750474984166], [1.62920582E12, 25.347622759158185], [1.62920625E12, 3631.3], [1.62920599E12, 23.772967265047487], [1.62920608E12, 3836.215512465368], [1.62920556E12, 1123.981756756755], [1.62920573E12, 4754.292176039122], [1.6292059E12, 1755.6495238095251], [1.62920633E12, 24.0], [1.62920607E12, 3378.8368136117547], [1.62920549E12, 1147.6467828418245], [1.62920626E12, 5368.049300956579], [1.62920566E12, 172.30686149936452], [1.62920609E12, 8117.107122177188], [1.62920583E12, 52.330551989730424], [1.62920592E12, 629.3309162821361], [1.62920557E12, 93.07779886148019], [1.62920574E12, 5544.157775255394], [1.62920591E12, 1337.4470450555875], [1.629206E12, 27.247470817120604], [1.62920627E12, 4664.178394449942], [1.6292061E12, 2526.018857142862], [1.6292055E12, 1717.153791637134], [1.62920567E12, 742.7682685977619], [1.62920576E12, 21.961485557083883], [1.62920593E12, 20.911708253358945], [1.62920558E12, 73.52275862068961], [1.62920575E12, 1590.8115147361175], [1.62920584E12, 185.84458204334362], [1.62920601E12, 50.89820742637647], [1.62920551E12, 3598.676372712145], [1.6292056E12, 47.269230769230774], [1.62920577E12, 21.562340966921127], [1.62920594E12, 18.581491712707173], [1.62920628E12, 772.9648562300328], [1.62920559E12, 49.87531806615776], [1.62920568E12, 1339.3483502538074], [1.62920585E12, 690.1618257261398], [1.62920602E12, 194.7971195992483], [1.62920544E12, 35.146067415730336], [1.62920561E12, 26.65762711864406], [1.62920578E12, 22.38297872340426], [1.62920629E12, 23.219999999999995], [1.62920595E12, 18.167938931297723], [1.62920543E12, 329.3820224719099], [1.62920552E12, 5071.488387096778], [1.62920569E12, 1810.8023715415009], [1.62920586E12, 1637.4221411192223], [1.62920603E12, 621.9944134078204], [1.62920596E12, 16.294117647058822], [1.62920545E12, 31.16501650165014], [1.6292063E12, 21.611034482758605], [1.62920562E12, 24.81440000000001], [1.62920579E12, 21.551369863013708], [1.62920604E12, 389.09212283044064], [1.62920553E12, 5260.2027756360785], [1.6292057E12, 2205.831318016929], [1.62920621E12, 45882.59448818897], [1.62920587E12, 1801.1293900184855], [1.6292058E12, 22.4198717948718], [1.62920597E12, 21.226804123711336], [1.62920631E12, 21.352941176470587], [1.62920546E12, 56.37560192616374], [1.62920563E12, 24.473186119873812], [1.62920588E12, 2276.9832335329324], [1.62920605E12, 1143.5665122435485], [1.62920622E12, 1120.478911564623], [1.62920554E12, 2782.521450459655], [1.62920571E12, 3549.4813397129187]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62920633E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 14.529411764705886, "minX": 1.62920543E12, "maxY": 5457.036889897842, "series": [{"data": [[1.62920564E12, 23.15703125000002], [1.62920581E12, 19.55799373040754], [1.62920598E12, 18.426517571884983], [1.62920624E12, 2167.806970509382], [1.62920615E12, 219.96969696969708], [1.62920547E12, 150.68555240793205], [1.62920572E12, 5163.426454445667], [1.62920589E12, 644.4894179894183], [1.62920606E12, 1663.2172682236364], [1.62920632E12, 19.592592592592595], [1.62920623E12, 2115.7439528023565], [1.62920555E12, 1147.2058047493397], [1.62920548E12, 545.7713498622588], [1.62920565E12, 43.083597213426174], [1.62920582E12, 22.79033515198753], [1.62920625E12, 3577.75714285714], [1.62920599E12, 20.334741288278757], [1.62920608E12, 3501.3174515235487], [1.62920556E12, 1076.454054054056], [1.62920573E12, 4647.149755501219], [1.6292059E12, 1704.785396825399], [1.62920633E12, 20.0], [1.62920607E12, 3015.316318638824], [1.62920549E12, 1120.811662198392], [1.62920626E12, 5233.6769683590865], [1.62920566E12, 164.17852604828457], [1.62920609E12, 3377.1696583671087], [1.62920583E12, 48.23234916559696], [1.62920592E12, 622.1779828609098], [1.62920557E12, 80.5777988614802], [1.62920574E12, 5457.036889897842], [1.62920591E12, 1308.4786424809854], [1.629206E12, 23.242801556420194], [1.62920627E12, 4606.001982160555], [1.6292061E12, 2422.8759999999997], [1.6292055E12, 1670.5350815024824], [1.62920567E12, 721.2962475312717], [1.62920576E12, 18.79642365887208], [1.62920593E12, 18.823416506717855], [1.62920558E12, 61.89103448275864], [1.62920575E12, 1573.4722412611375], [1.62920584E12, 179.1102167182663], [1.62920601E12, 45.93021766965436], [1.62920551E12, 3543.1988352745434], [1.6292056E12, 37.32692307692307], [1.62920577E12, 18.511450381679392], [1.62920594E12, 16.776243093922673], [1.62920628E12, 761.2453674121401], [1.62920559E12, 39.87786259541983], [1.62920568E12, 1309.2988578680179], [1.62920585E12, 673.8810511756573], [1.62920602E12, 187.60488415779568], [1.62920544E12, 31.80417335473513], [1.62920561E12, 22.54237288135595], [1.62920578E12, 19.095744680851062], [1.62920629E12, 19.81523809523806], [1.62920595E12, 16.346055979643765], [1.62920543E12, 57.1685393258427], [1.62920552E12, 4978.438064516132], [1.62920569E12, 1771.3998682476943], [1.62920586E12, 1613.6794403892948], [1.62920603E12, 603.1364724660825], [1.62920596E12, 14.529411764705886], [1.62920545E12, 27.840484048404853], [1.6292063E12, 18.52137931034485], [1.62920562E12, 21.14079999999999], [1.62920579E12, 18.47945205479453], [1.62920604E12, 326.7797062750331], [1.62920553E12, 5204.892058596767], [1.6292057E12, 2173.0580411124556], [1.62920621E12, 455.44488188976374], [1.62920587E12, 1776.048059149724], [1.6292058E12, 19.161858974358996], [1.62920597E12, 18.140893470790402], [1.62920631E12, 18.204603580562658], [1.62920546E12, 52.317014446227944], [1.62920563E12, 21.139852786540477], [1.62920588E12, 2234.7874251496983], [1.62920605E12, 1010.7379219060233], [1.62920622E12, 1097.7088435374144], [1.62920554E12, 2756.3810010214543], [1.62920571E12, 3480.6775119617214]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62920633E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.62920543E12, "maxY": 181204.0, "series": [{"data": [[1.62920564E12, 351.0], [1.62920581E12, 116.0], [1.62920598E12, 74.0], [1.62920624E12, 10549.0], [1.62920615E12, 121302.0], [1.62920547E12, 520.0], [1.62920572E12, 10561.0], [1.62920589E12, 3773.0], [1.62920606E12, 31994.0], [1.62920632E12, 62.0], [1.62920623E12, 7126.0], [1.62920555E12, 3933.0], [1.62920548E12, 1248.0], [1.62920565E12, 395.0], [1.62920582E12, 351.0], [1.62920625E12, 10888.0], [1.62920599E12, 108.0], [1.62920608E12, 51816.0], [1.62920556E12, 3763.0], [1.62920573E12, 11173.0], [1.6292059E12, 8637.0], [1.62920633E12, 25.0], [1.62920607E12, 42180.0], [1.62920549E12, 4585.0], [1.62920626E12, 11107.0], [1.62920566E12, 572.0], [1.62920609E12, 60879.0], [1.62920583E12, 388.0], [1.62920592E12, 8656.0], [1.62920557E12, 551.0], [1.62920574E12, 13981.0], [1.62920591E12, 7451.0], [1.629206E12, 134.0], [1.62920627E12, 14560.0], [1.6292061E12, 60559.0], [1.6292055E12, 6111.0], [1.62920567E12, 1808.0], [1.62920576E12, 47.0], [1.62920593E12, 256.0], [1.62920558E12, 305.0], [1.62920575E12, 9317.0], [1.62920584E12, 507.0], [1.62920601E12, 164.0], [1.62920551E12, 9409.0], [1.6292056E12, 212.0], [1.62920577E12, 89.0], [1.62920594E12, 231.0], [1.62920628E12, 6929.0], [1.62920559E12, 145.0], [1.62920568E12, 4183.0], [1.62920585E12, 2176.0], [1.62920602E12, 562.0], [1.62920544E12, 360.0], [1.62920561E12, 105.0], [1.62920578E12, 54.0], [1.62920629E12, 59.0], [1.62920595E12, 219.0], [1.62920543E12, 6328.0], [1.62920552E12, 12011.0], [1.62920569E12, 5903.0], [1.62920586E12, 4756.0], [1.62920603E12, 1274.0], [1.62920596E12, 62.0], [1.62920545E12, 247.0], [1.6292063E12, 110.0], [1.62920562E12, 195.0], [1.62920579E12, 72.0], [1.62920604E12, 8536.0], [1.62920553E12, 12366.0], [1.6292057E12, 9423.0], [1.62920621E12, 181204.0], [1.62920587E12, 3861.0], [1.6292058E12, 399.0], [1.62920597E12, 62.0], [1.62920631E12, 100.0], [1.62920546E12, 367.0], [1.62920563E12, 277.0], [1.62920588E12, 8434.0], [1.62920605E12, 20486.0], [1.62920622E12, 3032.0], [1.62920554E12, 15101.0], [1.62920571E12, 10765.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62920564E12, 11.0], [1.62920581E12, 12.0], [1.62920598E12, 13.0], [1.62920624E12, 599.0], [1.62920615E12, 120114.0], [1.62920547E12, 45.0], [1.62920572E12, 492.0], [1.62920589E12, 49.0], [1.62920606E12, 352.0], [1.62920632E12, 14.0], [1.62920623E12, 331.0], [1.62920555E12, 72.0], [1.62920548E12, 95.0], [1.62920565E12, 13.0], [1.62920582E12, 11.0], [1.62920625E12, 622.0], [1.62920599E12, 14.0], [1.62920608E12, 900.0], [1.62920556E12, 42.0], [1.62920573E12, 739.0], [1.6292059E12, 138.0], [1.62920633E12, 25.0], [1.62920607E12, 788.0], [1.62920549E12, 48.0], [1.62920626E12, 188.0], [1.62920566E12, 41.0], [1.62920609E12, 516.0], [1.62920583E12, 12.0], [1.62920592E12, 12.0], [1.62920557E12, 42.0], [1.62920574E12, 1109.0], [1.62920591E12, 182.0], [1.629206E12, 14.0], [1.62920627E12, 388.0], [1.6292061E12, 142.0], [1.6292055E12, 303.0], [1.62920567E12, 180.0], [1.62920576E12, 14.0], [1.62920593E12, 10.0], [1.62920558E12, 40.0], [1.62920575E12, 10.0], [1.62920584E12, 34.0], [1.62920601E12, 15.0], [1.62920551E12, 318.0], [1.6292056E12, 19.0], [1.62920577E12, 14.0], [1.62920594E12, 10.0], [1.62920628E12, 15.0], [1.62920559E12, 39.0], [1.62920568E12, 233.0], [1.62920585E12, 49.0], [1.62920602E12, 43.0], [1.62920544E12, 13.0], [1.62920561E12, 19.0], [1.62920578E12, 15.0], [1.62920629E12, 13.0], [1.62920595E12, 10.0], [1.62920543E12, 16.0], [1.62920552E12, 585.0], [1.62920569E12, 202.0], [1.62920586E12, 263.0], [1.62920603E12, 192.0], [1.62920596E12, 11.0], [1.62920545E12, 12.0], [1.6292063E12, 13.0], [1.62920562E12, 18.0], [1.62920579E12, 14.0], [1.62920604E12, 44.0], [1.62920553E12, 265.0], [1.6292057E12, 444.0], [1.62920621E12, 246.0], [1.62920587E12, 188.0], [1.6292058E12, 14.0], [1.62920597E12, 14.0], [1.62920631E12, 14.0], [1.62920546E12, 12.0], [1.62920563E12, 11.0], [1.62920588E12, 49.0], [1.62920605E12, 382.0], [1.62920622E12, 140.0], [1.62920554E12, 27.0], [1.62920571E12, 50.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62920564E12, 43.0], [1.62920581E12, 30.0], [1.62920598E12, 27.0], [1.62920624E12, 2794.4], [1.62920615E12, 120962.2], [1.62920547E12, 245.70000000000005], [1.62920572E12, 7919.1], [1.62920589E12, 906.4000000000001], [1.62920606E12, 2267.0], [1.62920632E12, 28.799999999999997], [1.62920623E12, 3509.8000000000015], [1.62920555E12, 2370.3], [1.62920548E12, 838.7], [1.62920565E12, 72.0], [1.62920582E12, 41.0], [1.62920625E12, 5289.8], [1.62920599E12, 31.0], [1.62920608E12, 5344.6], [1.62920556E12, 2200.7000000000003], [1.62920573E12, 7816.5], [1.6292059E12, 2449.8], [1.62920633E12, 25.0], [1.62920607E12, 4787.0], [1.62920549E12, 3401.0000000000036], [1.62920626E12, 7128.0], [1.62920566E12, 277.0], [1.62920609E12, 6399.8], [1.62920583E12, 82.0], [1.62920592E12, 807.0], [1.62920557E12, 133.0], [1.62920574E12, 8433.5], [1.62920591E12, 2304.0], [1.629206E12, 36.0], [1.62920627E12, 8476.2], [1.6292061E12, 4205.8], [1.6292055E12, 4772.999999999999], [1.62920567E12, 1158.0], [1.62920576E12, 28.0], [1.62920593E12, 30.0], [1.62920558E12, 111.0], [1.62920575E12, 4206.0], [1.62920584E12, 308.0], [1.62920601E12, 76.0], [1.62920551E12, 5631.3], [1.6292056E12, 68.0], [1.62920577E12, 27.0], [1.62920594E12, 26.0], [1.62920628E12, 3190.000000000001], [1.62920559E12, 60.0], [1.62920568E12, 2667.399999999999], [1.62920585E12, 983.0], [1.62920602E12, 346.0], [1.62920544E12, 64.0], [1.62920561E12, 37.0], [1.62920578E12, 27.0], [1.62920629E12, 30.0], [1.62920595E12, 24.0], [1.62920543E12, 233.1], [1.62920552E12, 7119.700000000001], [1.62920569E12, 3126.4000000000005], [1.62920586E12, 2384.0], [1.62920603E12, 857.6000000000001], [1.62920596E12, 22.0], [1.62920545E12, 51.0], [1.6292063E12, 27.0], [1.62920562E12, 30.0], [1.62920579E12, 27.0], [1.62920604E12, 473.0], [1.62920553E12, 8299.6], [1.6292057E12, 2899.0], [1.62920621E12, 181038.5], [1.62920587E12, 2675.600000000001], [1.6292058E12, 28.0], [1.62920597E12, 26.0], [1.62920631E12, 27.0], [1.62920546E12, 91.0], [1.62920563E12, 33.0], [1.62920588E12, 4023.6000000000004], [1.62920605E12, 1294.3999999999999], [1.62920622E12, 1933.9], [1.62920554E12, 6577.500000000002], [1.62920571E12, 5312.599999999999]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62920564E12, 98.57000000000016], [1.62920581E12, 57.83999999999992], [1.62920598E12, 37.460000000000036], [1.62920624E12, 8994.359999999997], [1.62920615E12, 121290.78], [1.62920547E12, 376.7399999999998], [1.62920572E12, 10214.39], [1.62920589E12, 2792.1799999999985], [1.62920606E12, 8656.819999999987], [1.62920632E12, 62.0], [1.62920623E12, 6811.04], [1.62920555E12, 3366.819999999996], [1.62920548E12, 1115.88], [1.62920565E12, 140.0], [1.62920582E12, 108.64000000000033], [1.62920625E12, 6951.979999999998], [1.62920599E12, 45.039999999999964], [1.62920608E12, 7048.460000000001], [1.62920556E12, 2888.5600000000013], [1.62920573E12, 9934.119999999997], [1.6292059E12, 7368.04], [1.62920633E12, 25.0], [1.62920607E12, 7028.9], [1.62920549E12, 4141.21], [1.62920626E12, 8712.400000000003], [1.62920566E12, 504.25], [1.62920609E12, 60212.16], [1.62920583E12, 139.41000000000008], [1.62920592E12, 8155.0199999999995], [1.62920557E12, 194.25000000000023], [1.62920574E12, 11845.359999999997], [1.62920591E12, 3726.000000000001], [1.629206E12, 57.0], [1.62920627E12, 10316.619999999999], [1.6292061E12, 6230.070000000001], [1.6292055E12, 5736.88], [1.62920567E12, 1494.6], [1.62920576E12, 35.0], [1.62920593E12, 101.41999999999962], [1.62920558E12, 155.48000000000002], [1.62920575E12, 7698.200000000001], [1.62920584E12, 396.0], [1.62920601E12, 107.0], [1.62920551E12, 6743.85], [1.6292056E12, 206.65000000000032], [1.62920577E12, 46.08000000000004], [1.62920594E12, 100.0], [1.62920628E12, 6103.739999999999], [1.62920559E12, 91.84000000000003], [1.62920568E12, 3725.650000000001], [1.62920585E12, 1798.06], [1.62920602E12, 423.0], [1.62920544E12, 128.87999999999988], [1.62920561E12, 79.24000000000012], [1.62920578E12, 54.0], [1.62920629E12, 41.49000000000001], [1.62920595E12, 109.20000000000005], [1.62920543E12, 6019.110000000003], [1.62920552E12, 11060.95], [1.62920569E12, 4403.91], [1.62920586E12, 3958.4999999999995], [1.62920603E12, 1111.0], [1.62920596E12, 61.609999999999985], [1.62920545E12, 108.59999999999991], [1.6292063E12, 48.960000000000036], [1.62920562E12, 71.22000000000003], [1.62920579E12, 38.27999999999997], [1.62920604E12, 631.0], [1.62920553E12, 10448.619999999992], [1.6292057E12, 8452.550000000001], [1.62920621E12, 181172.45], [1.62920587E12, 3406.4799999999996], [1.6292058E12, 44.75], [1.62920597E12, 48.079999999999984], [1.62920631E12, 40.19999999999976], [1.62920546E12, 135.58999999999992], [1.62920563E12, 71.44000000000005], [1.62920588E12, 7242.29], [1.62920605E12, 3392.6399999999967], [1.62920622E12, 2742.16], [1.62920554E12, 11078.380000000001], [1.62920571E12, 9165.939999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62920564E12, 53.0], [1.62920581E12, 33.0], [1.62920598E12, 29.0], [1.62920624E12, 8174.35], [1.62920615E12, 121098.15], [1.62920547E12, 288.0], [1.62920572E12, 9118.0], [1.62920589E12, 997.6999999999998], [1.62920606E12, 3034.999999999994], [1.62920632E12, 34.0], [1.62920623E12, 6066.19999999999], [1.62920555E12, 2767.249999999998], [1.62920548E12, 905.0499999999997], [1.62920565E12, 79.0], [1.62920582E12, 54.0], [1.62920625E12, 5648.849999999999], [1.62920599E12, 34.0], [1.62920608E12, 6124.0], [1.62920556E12, 2489.95], [1.62920573E12, 8605.899999999996], [1.6292059E12, 6783.599999999999], [1.62920633E12, 25.0], [1.62920607E12, 5178.3], [1.62920549E12, 3828.849999999999], [1.62920626E12, 7722.0], [1.62920566E12, 321.0], [1.62920609E12, 60142.6], [1.62920583E12, 99.0], [1.62920592E12, 6704.799999999999], [1.62920557E12, 151.0], [1.62920574E12, 9777.199999999997], [1.62920591E12, 2768.5], [1.629206E12, 41.0], [1.62920627E12, 9438.949999999999], [1.6292061E12, 4768.049999999995], [1.6292055E12, 5450.799999999999], [1.62920567E12, 1289.0], [1.62920576E12, 30.0], [1.62920593E12, 41.84999999999991], [1.62920558E12, 127.69999999999993], [1.62920575E12, 5114.0], [1.62920584E12, 339.0], [1.62920601E12, 88.0], [1.62920551E12, 6145.399999999998], [1.6292056E12, 72.5], [1.62920577E12, 30.299999999999955], [1.62920594E12, 41.0], [1.62920628E12, 4831.4], [1.62920559E12, 67.0], [1.62920568E12, 3047.899999999999], [1.62920585E12, 1124.9499999999996], [1.62920602E12, 374.0999999999999], [1.62920544E12, 81.79999999999995], [1.62920561E12, 44.0], [1.62920578E12, 31.25], [1.62920629E12, 33.0], [1.62920595E12, 37.0], [1.62920543E12, 4632.249999999997], [1.62920552E12, 8096.0], [1.62920569E12, 3616.4999999999995], [1.62920586E12, 2954.0], [1.62920603E12, 940.0], [1.62920596E12, 27.69999999999999], [1.62920545E12, 64.0], [1.6292063E12, 29.0], [1.62920562E12, 34.0], [1.62920579E12, 29.0], [1.62920604E12, 500.0], [1.62920553E12, 8832.8], [1.6292057E12, 7881.25], [1.62920621E12, 181120.0], [1.62920587E12, 3010.8], [1.6292058E12, 30.0], [1.62920597E12, 29.199999999999932], [1.62920631E12, 28.0], [1.62920546E12, 100.0], [1.62920563E12, 40.0], [1.62920588E12, 6404.049999999998], [1.62920605E12, 1709.7999999999902], [1.62920622E12, 2165.3500000000004], [1.62920554E12, 8108.749999999994], [1.62920571E12, 6668.5]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62920633E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 15.0, "minX": 1.0, "maxY": 21502.5, "series": [{"data": [[2.0, 2713.0], [3.0, 21502.5], [4.0, 26.0], [5.0, 2791.0], [6.0, 2225.5], [7.0, 22.0], [8.0, 21.0], [9.0, 1147.5], [10.0, 414.0], [11.0, 27.0], [12.0, 20.0], [13.0, 119.5], [14.0, 23.0], [15.0, 46.0], [16.0, 6713.0], [17.0, 21.0], [18.0, 28.0], [19.0, 24.0], [20.0, 42.5], [21.0, 24.0], [22.0, 20.5], [23.0, 2031.5], [24.0, 20.0], [25.0, 24.0], [26.0, 2126.0], [27.0, 24.0], [28.0, 2068.5], [29.0, 42.0], [30.0, 43.5], [31.0, 879.0], [32.0, 22.0], [33.0, 118.0], [35.0, 41.0], [34.0, 25.0], [37.0, 24.0], [36.0, 20.0], [38.0, 42.0], [39.0, 3099.0], [40.0, 51.5], [41.0, 23.0], [42.0, 20.0], [45.0, 19.0], [44.0, 22.0], [47.0, 23.0], [46.0, 48.5], [48.0, 25.0], [49.0, 15.0], [50.0, 24.5], [51.0, 21.0], [53.0, 4347.0], [52.0, 21.0], [55.0, 24.0], [54.0, 20.0], [57.0, 23.0], [56.0, 284.0], [59.0, 18.0], [61.0, 45.0], [60.0, 497.5], [62.0, 22.0], [64.0, 25.0], [67.0, 22.0], [65.0, 24.0], [66.0, 447.5], [71.0, 24.0], [70.0, 44.5], [69.0, 55.0], [68.0, 321.0], [75.0, 27.0], [72.0, 495.5], [73.0, 147.5], [74.0, 81.5], [78.0, 25.0], [76.0, 44.5], [77.0, 23.0], [79.0, 15.0], [80.0, 25.0], [81.0, 21.0], [82.0, 3026.5], [84.0, 22.0], [85.0, 57.5], [87.0, 24.0], [86.0, 1423.0], [89.0, 23.0], [91.0, 419.5], [88.0, 29.0], [90.0, 25.0], [92.0, 28.0], [94.0, 867.0], [93.0, 21.0], [95.0, 23.0], [99.0, 713.0], [97.0, 27.0], [96.0, 1315.0], [98.0, 16.0], [101.0, 27.0], [103.0, 293.0], [100.0, 25.0], [102.0, 17.0], [107.0, 27.0], [106.0, 29.0], [105.0, 353.0], [104.0, 28.0], [108.0, 5199.0], [111.0, 21.0], [110.0, 1131.0], [109.0, 1577.0], [113.0, 26.0], [114.0, 1166.0], [112.0, 54.5], [115.0, 141.0], [119.0, 75.0], [116.0, 3740.0], [117.0, 27.0], [118.0, 23.0], [120.0, 368.5], [123.0, 1832.0], [122.0, 94.5], [121.0, 48.0], [125.0, 412.5], [127.0, 69.0], [126.0, 260.5], [124.0, 24.0], [130.0, 265.5], [134.0, 639.0], [135.0, 468.0], [128.0, 655.5], [132.0, 1096.5], [131.0, 659.0], [129.0, 383.0], [133.0, 844.0], [142.0, 161.0], [136.0, 71.0], [143.0, 360.0], [140.0, 472.0], [141.0, 432.0], [139.0, 746.0], [138.0, 34.0], [137.0, 223.0], [144.0, 318.5], [150.0, 865.0], [145.0, 210.5], [148.0, 531.0], [146.0, 1086.0], [149.0, 575.0], [151.0, 513.0], [147.0, 1238.0], [155.0, 442.5], [154.0, 321.0], [158.0, 398.0], [153.0, 47.0], [159.0, 144.0], [157.0, 190.0], [152.0, 760.0], [156.0, 430.0], [165.0, 153.0], [164.0, 261.0], [162.0, 931.5], [167.0, 589.0], [163.0, 346.0], [166.0, 916.0], [160.0, 694.0], [161.0, 628.0], [173.0, 1113.0], [170.0, 862.5], [169.0, 2212.5], [168.0, 800.0], [172.0, 3387.0], [174.0, 3214.5], [175.0, 1483.0], [182.0, 1123.5], [180.0, 5199.5], [178.0, 3310.5], [177.0, 2017.0], [183.0, 1993.5], [179.0, 1700.0], [176.0, 281.5], [185.0, 1575.0], [191.0, 580.5], [189.0, 1326.5], [186.0, 1641.5], [187.0, 738.0], [190.0, 3426.0], [193.0, 1065.0], [196.0, 2141.5], [197.0, 1699.5], [199.0, 850.0], [198.0, 979.5], [192.0, 1367.0], [205.0, 1814.0], [206.0, 865.0], [207.0, 2816.0], [209.0, 4706.0], [213.0, 2263.0], [214.0, 1320.0], [212.0, 852.5], [208.0, 552.0], [219.0, 4319.0], [216.0, 2260.0], [222.0, 4174.5], [218.0, 1766.5], [217.0, 2157.0], [228.0, 5750.0], [234.0, 1113.5], [236.0, 1945.0], [232.0, 4937.5], [233.0, 1768.0], [243.0, 2106.0], [241.0, 1587.0], [247.0, 2340.0], [246.0, 1174.5], [240.0, 1828.0], [245.0, 2180.0], [248.0, 1405.0], [253.0, 2924.0], [252.0, 1179.5], [265.0, 5007.0], [263.0, 4638.0], [259.0, 1678.0], [267.0, 3427.0], [283.0, 2869.0], [276.0, 2938.0], [286.0, 4802.0], [299.0, 1730.0], [297.0, 3354.0], [306.0, 2571.5], [333.0, 4573.0], [320.0, 1691.5], [329.0, 1739.0], [349.0, 4445.0], [355.0, 3969.0], [360.0, 4156.5], [352.0, 4659.0], [367.0, 2195.0], [381.0, 3992.0], [374.0, 5578.5], [390.0, 5172.5], [410.0, 4486.0], [412.0, 5114.5], [401.0, 5286.0], [409.0, 3071.0], [438.0, 6962.5], [445.0, 2781.0], [436.0, 3209.5], [460.0, 7805.0], [493.0, 5121.0], [525.0, 4334.0], [537.0, 5287.0], [552.0, 3758.0], [681.0, 2706.0], [777.0, 5326.0], [1.0, 35.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 777.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 15.0, "minX": 1.0, "maxY": 21502.0, "series": [{"data": [[2.0, 2712.5], [3.0, 21502.0], [4.0, 26.0], [5.0, 2791.0], [6.0, 2208.0], [7.0, 22.0], [8.0, 20.5], [9.0, 1147.5], [10.0, 414.0], [11.0, 27.0], [12.0, 19.5], [13.0, 119.5], [14.0, 23.0], [15.0, 46.0], [16.0, 6713.0], [17.0, 21.0], [18.0, 27.0], [19.0, 24.0], [20.0, 42.5], [21.0, 24.0], [22.0, 20.0], [23.0, 1923.0], [24.0, 20.0], [25.0, 24.0], [26.0, 2125.0], [27.0, 24.0], [28.0, 2068.5], [29.0, 42.0], [30.0, 43.0], [31.0, 671.0], [32.0, 22.0], [33.0, 118.0], [35.0, 41.0], [34.0, 25.0], [37.0, 24.0], [36.0, 20.0], [38.0, 41.5], [39.0, 3099.0], [40.0, 49.0], [41.0, 23.0], [42.0, 19.5], [45.0, 19.0], [44.0, 22.0], [47.0, 23.0], [46.0, 48.0], [48.0, 25.0], [49.0, 15.0], [50.0, 24.0], [51.0, 21.0], [53.0, 4331.0], [52.0, 20.5], [55.0, 23.5], [54.0, 20.0], [57.0, 23.0], [56.0, 283.0], [59.0, 18.0], [61.0, 45.0], [60.0, 497.5], [62.0, 22.0], [64.0, 25.0], [67.0, 22.0], [65.0, 24.0], [66.0, 447.5], [71.0, 24.0], [70.0, 44.0], [69.0, 54.0], [68.0, 320.5], [75.0, 27.0], [72.0, 494.5], [73.0, 147.5], [74.0, 81.0], [78.0, 25.0], [76.0, 44.5], [77.0, 23.0], [79.0, 15.0], [80.0, 24.0], [81.0, 21.0], [82.0, 3026.0], [84.0, 22.0], [85.0, 57.5], [87.0, 23.5], [86.0, 1422.5], [89.0, 22.0], [91.0, 419.5], [88.0, 28.5], [90.0, 24.0], [92.0, 27.0], [94.0, 864.0], [93.0, 21.0], [95.0, 23.0], [99.0, 712.5], [97.0, 26.0], [96.0, 1315.0], [98.0, 16.0], [101.0, 27.0], [103.0, 290.0], [100.0, 25.0], [102.0, 17.0], [107.0, 26.5], [106.0, 29.0], [105.0, 353.0], [104.0, 27.0], [108.0, 5199.0], [111.0, 21.0], [110.0, 1131.0], [109.0, 1571.0], [113.0, 26.0], [114.0, 1166.0], [112.0, 54.5], [115.0, 141.0], [119.0, 74.0], [116.0, 3740.0], [117.0, 26.0], [118.0, 23.0], [120.0, 368.5], [123.0, 1832.0], [122.0, 93.0], [121.0, 47.0], [125.0, 412.0], [127.0, 69.0], [126.0, 260.5], [124.0, 24.0], [130.0, 265.0], [134.0, 638.5], [135.0, 468.0], [128.0, 643.0], [132.0, 1096.0], [131.0, 658.0], [129.0, 382.5], [133.0, 844.0], [142.0, 160.0], [136.0, 71.0], [143.0, 360.0], [140.0, 471.5], [141.0, 432.0], [139.0, 745.5], [138.0, 34.0], [137.0, 223.0], [144.0, 318.0], [150.0, 857.0], [145.0, 210.0], [148.0, 531.0], [146.0, 1085.5], [149.0, 575.0], [151.0, 512.0], [147.0, 1238.0], [155.0, 440.0], [154.0, 320.0], [158.0, 398.0], [153.0, 46.0], [159.0, 144.0], [157.0, 190.0], [152.0, 759.5], [156.0, 430.0], [165.0, 153.0], [164.0, 261.0], [162.0, 926.0], [167.0, 579.5], [163.0, 346.0], [166.0, 916.0], [160.0, 692.0], [161.0, 628.0], [173.0, 1112.0], [170.0, 859.5], [169.0, 2212.5], [168.0, 799.0], [172.0, 3386.5], [174.0, 3214.5], [175.0, 1483.0], [182.0, 1123.0], [180.0, 5199.5], [178.0, 3310.5], [177.0, 2017.0], [183.0, 1988.5], [179.0, 1700.0], [176.0, 281.5], [185.0, 1575.0], [191.0, 578.5], [189.0, 1326.5], [186.0, 1630.0], [187.0, 738.0], [190.0, 3426.0], [193.0, 1065.0], [196.0, 2141.5], [197.0, 1699.5], [199.0, 850.0], [198.0, 979.0], [192.0, 1367.0], [205.0, 1777.0], [206.0, 864.5], [207.0, 2816.0], [209.0, 4706.0], [213.0, 2216.0], [214.0, 1314.0], [212.0, 852.5], [208.0, 551.5], [219.0, 4297.0], [216.0, 2252.5], [222.0, 4174.5], [218.0, 1766.0], [217.0, 2078.0], [228.0, 5750.0], [234.0, 1104.0], [236.0, 1945.0], [232.0, 4937.5], [233.0, 1767.0], [243.0, 2095.0], [241.0, 1587.0], [247.0, 2323.0], [246.0, 1174.0], [240.0, 1810.0], [245.0, 2180.0], [248.0, 1401.0], [253.0, 2924.0], [252.0, 1179.5], [265.0, 5006.0], [263.0, 4638.0], [259.0, 1678.0], [267.0, 3427.0], [283.0, 2855.0], [276.0, 2938.0], [286.0, 4790.0], [299.0, 1730.0], [297.0, 3354.0], [306.0, 2570.5], [333.0, 4570.0], [320.0, 1691.0], [329.0, 1739.0], [349.0, 4362.0], [355.0, 3969.0], [360.0, 4142.0], [352.0, 4659.0], [367.0, 2195.0], [381.0, 3991.0], [374.0, 5563.5], [390.0, 5172.0], [410.0, 4485.5], [412.0, 5114.5], [401.0, 5286.0], [409.0, 3071.0], [438.0, 6962.5], [445.0, 2780.0], [436.0, 3209.5], [460.0, 7805.0], [493.0, 5121.0], [525.0, 4329.0], [537.0, 5287.0], [552.0, 3754.5], [681.0, 2706.0], [777.0, 5326.0], [1.0, 35.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 777.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.4, "minX": 1.62920542E12, "maxY": 189.2, "series": [{"data": [[1.62920564E12, 128.3], [1.62920581E12, 95.7], [1.62920598E12, 62.6], [1.62920624E12, 157.8], [1.62920547E12, 144.4], [1.62920572E12, 177.5], [1.62920589E12, 166.2], [1.62920606E12, 151.6], [1.62920632E12, 8.2], [1.62920623E12, 168.5], [1.62920555E12, 153.2], [1.62920548E12, 154.7], [1.62920565E12, 158.6], [1.62920582E12, 128.6], [1.62920625E12, 189.2], [1.62920599E12, 94.9], [1.62920608E12, 169.5], [1.62920556E12, 133.8], [1.62920573E12, 152.3], [1.6292059E12, 169.4], [1.62920607E12, 159.6], [1.62920549E12, 158.3], [1.62920626E12, 160.4], [1.62920566E12, 162.1], [1.62920609E12, 151.6], [1.62920583E12, 156.7], [1.62920592E12, 136.4], [1.62920557E12, 105.2], [1.62920574E12, 135.9], [1.62920591E12, 154.1], [1.629206E12, 128.7], [1.62920627E12, 135.6], [1.6292061E12, 126.7], [1.6292055E12, 148.8], [1.62920567E12, 164.8], [1.62920576E12, 72.5], [1.62920593E12, 104.0], [1.62920558E12, 72.2], [1.62920575E12, 102.5], [1.62920584E12, 166.5], [1.62920601E12, 157.0], [1.62920551E12, 170.2], [1.6292056E12, 10.3], [1.62920577E12, 39.2], [1.62920594E12, 72.4], [1.62920628E12, 123.0], [1.62920542E12, 0.4], [1.62920559E12, 39.0], [1.62920568E12, 165.3], [1.62920585E12, 164.8], [1.62920602E12, 165.3], [1.62920544E12, 62.3], [1.62920561E12, 29.6], [1.62920578E12, 9.4], [1.62920629E12, 104.9], [1.62920595E12, 39.2], [1.62920543E12, 17.5], [1.62920552E12, 152.0], [1.62920569E12, 159.0], [1.62920586E12, 169.4], [1.62920603E12, 156.6], [1.62920596E12, 10.2], [1.62920545E12, 91.2], [1.6292063E12, 72.4], [1.62920562E12, 62.6], [1.62920579E12, 29.3], [1.62920604E12, 87.7], [1.62920553E12, 141.2], [1.6292057E12, 172.2], [1.62920621E12, 26.2], [1.62920587E12, 165.9], [1.6292058E12, 62.5], [1.62920597E12, 29.2], [1.62920631E12, 39.0], [1.62920546E12, 125.5], [1.62920563E12, 95.1], [1.62920588E12, 137.3], [1.62920605E12, 159.5], [1.62920622E12, 172.5], [1.62920554E12, 120.0], [1.62920571E12, 164.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62920632E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62920543E12, "maxY": 201.8, "series": [{"data": [[1.62920564E12, 128.0], [1.62920581E12, 95.7], [1.62920598E12, 62.6], [1.62920624E12, 149.2], [1.62920615E12, 13.2], [1.62920547E12, 141.2], [1.62920572E12, 182.2], [1.62920589E12, 151.2], [1.62920606E12, 141.3], [1.62920632E12, 8.1], [1.62920623E12, 169.5], [1.62920555E12, 151.6], [1.62920548E12, 145.2], [1.62920565E12, 157.9], [1.62920582E12, 128.3], [1.62920625E12, 154.0], [1.62920599E12, 94.7], [1.62920608E12, 180.5], [1.62920556E12, 148.0], [1.62920573E12, 163.6], [1.6292059E12, 157.5], [1.62920633E12, 0.1], [1.62920607E12, 129.3], [1.62920549E12, 149.2], [1.62920626E12, 135.9], [1.62920566E12, 157.4], [1.62920609E12, 172.7], [1.62920583E12, 155.8], [1.62920592E12, 151.7], [1.62920557E12, 105.4], [1.62920574E12, 176.2], [1.62920591E12, 170.9], [1.629206E12, 128.5], [1.62920627E12, 201.8], [1.6292061E12, 175.0], [1.6292055E12, 141.1], [1.62920567E12, 151.9], [1.62920576E12, 72.7], [1.62920593E12, 104.2], [1.62920558E12, 72.5], [1.62920575E12, 145.9], [1.62920584E12, 161.5], [1.62920601E12, 156.2], [1.62920551E12, 120.2], [1.6292056E12, 10.4], [1.62920577E12, 39.3], [1.62920594E12, 72.4], [1.62920628E12, 156.5], [1.62920559E12, 39.3], [1.62920568E12, 157.6], [1.62920585E12, 144.6], [1.62920602E12, 159.7], [1.62920544E12, 62.3], [1.62920561E12, 29.5], [1.62920578E12, 9.4], [1.62920629E12, 105.0], [1.62920595E12, 39.3], [1.62920543E12, 17.8], [1.62920552E12, 155.0], [1.62920569E12, 151.8], [1.62920586E12, 164.4], [1.62920603E12, 125.3], [1.62920596E12, 10.2], [1.62920545E12, 90.9], [1.6292063E12, 72.5], [1.62920562E12, 62.5], [1.62920579E12, 29.2], [1.62920604E12, 74.9], [1.62920553E12, 129.7], [1.6292057E12, 165.4], [1.62920621E12, 25.4], [1.62920587E12, 162.3], [1.6292058E12, 62.4], [1.62920597E12, 29.1], [1.62920631E12, 39.1], [1.62920546E12, 124.6], [1.62920563E12, 95.1], [1.62920588E12, 167.0], [1.62920605E12, 151.1], [1.62920622E12, 147.0], [1.62920554E12, 195.8], [1.62920571E12, 104.5]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62920633E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62920543E12, "maxY": 201.8, "series": [{"data": [[1.62920564E12, 128.0], [1.62920581E12, 95.7], [1.62920598E12, 62.6], [1.62920624E12, 149.2], [1.62920615E12, 13.2], [1.62920547E12, 141.2], [1.62920572E12, 182.2], [1.62920589E12, 151.2], [1.62920606E12, 141.3], [1.62920632E12, 8.1], [1.62920623E12, 169.5], [1.62920555E12, 151.6], [1.62920548E12, 145.2], [1.62920565E12, 157.9], [1.62920582E12, 128.3], [1.62920625E12, 154.0], [1.62920599E12, 94.7], [1.62920608E12, 180.5], [1.62920556E12, 148.0], [1.62920573E12, 163.6], [1.6292059E12, 157.5], [1.62920633E12, 0.1], [1.62920607E12, 129.3], [1.62920549E12, 149.2], [1.62920626E12, 135.9], [1.62920566E12, 157.4], [1.62920609E12, 172.7], [1.62920583E12, 155.8], [1.62920592E12, 151.7], [1.62920557E12, 105.4], [1.62920574E12, 176.2], [1.62920591E12, 170.9], [1.629206E12, 128.5], [1.62920627E12, 201.8], [1.6292061E12, 175.0], [1.6292055E12, 141.1], [1.62920567E12, 151.9], [1.62920576E12, 72.7], [1.62920593E12, 104.2], [1.62920558E12, 72.5], [1.62920575E12, 145.9], [1.62920584E12, 161.5], [1.62920601E12, 156.2], [1.62920551E12, 120.2], [1.6292056E12, 10.4], [1.62920577E12, 39.3], [1.62920594E12, 72.4], [1.62920628E12, 156.5], [1.62920559E12, 39.3], [1.62920568E12, 157.6], [1.62920585E12, 144.6], [1.62920602E12, 159.7], [1.62920544E12, 62.3], [1.62920561E12, 29.5], [1.62920578E12, 9.4], [1.62920629E12, 105.0], [1.62920595E12, 39.3], [1.62920543E12, 17.8], [1.62920552E12, 155.0], [1.62920569E12, 151.8], [1.62920586E12, 164.4], [1.62920603E12, 125.3], [1.62920596E12, 10.2], [1.62920545E12, 90.9], [1.6292063E12, 72.5], [1.62920562E12, 62.5], [1.62920579E12, 29.2], [1.62920604E12, 74.9], [1.62920553E12, 129.7], [1.6292057E12, 165.4], [1.62920621E12, 25.4], [1.62920587E12, 162.3], [1.6292058E12, 62.4], [1.62920597E12, 29.1], [1.62920631E12, 39.1], [1.62920546E12, 124.6], [1.62920563E12, 95.1], [1.62920588E12, 167.0], [1.62920605E12, 151.1], [1.62920622E12, 147.0], [1.62920554E12, 195.8], [1.62920571E12, 104.5]], "isOverall": false, "label": "Sunstar Home-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62920633E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62920543E12, "maxY": 201.8, "series": [{"data": [[1.62920564E12, 128.0], [1.62920581E12, 95.7], [1.62920598E12, 62.6], [1.62920624E12, 149.2], [1.62920615E12, 13.2], [1.62920547E12, 141.2], [1.62920572E12, 182.2], [1.62920589E12, 151.2], [1.62920606E12, 141.3], [1.62920632E12, 8.1], [1.62920623E12, 169.5], [1.62920555E12, 151.6], [1.62920548E12, 145.2], [1.62920565E12, 157.9], [1.62920582E12, 128.3], [1.62920625E12, 154.0], [1.62920599E12, 94.7], [1.62920608E12, 180.5], [1.62920556E12, 148.0], [1.62920573E12, 163.6], [1.6292059E12, 157.5], [1.62920633E12, 0.1], [1.62920607E12, 129.3], [1.62920549E12, 149.2], [1.62920626E12, 135.9], [1.62920566E12, 157.4], [1.62920609E12, 172.7], [1.62920583E12, 155.8], [1.62920592E12, 151.7], [1.62920557E12, 105.4], [1.62920574E12, 176.2], [1.62920591E12, 170.9], [1.629206E12, 128.5], [1.62920627E12, 201.8], [1.6292061E12, 175.0], [1.6292055E12, 141.1], [1.62920567E12, 151.9], [1.62920576E12, 72.7], [1.62920593E12, 104.2], [1.62920558E12, 72.5], [1.62920575E12, 145.9], [1.62920584E12, 161.5], [1.62920601E12, 156.2], [1.62920551E12, 120.2], [1.6292056E12, 10.4], [1.62920577E12, 39.3], [1.62920594E12, 72.4], [1.62920628E12, 156.5], [1.62920559E12, 39.3], [1.62920568E12, 157.6], [1.62920585E12, 144.6], [1.62920602E12, 159.7], [1.62920544E12, 62.3], [1.62920561E12, 29.5], [1.62920578E12, 9.4], [1.62920629E12, 105.0], [1.62920595E12, 39.3], [1.62920543E12, 17.8], [1.62920552E12, 155.0], [1.62920569E12, 151.8], [1.62920586E12, 164.4], [1.62920603E12, 125.3], [1.62920596E12, 10.2], [1.62920545E12, 90.9], [1.6292063E12, 72.5], [1.62920562E12, 62.5], [1.62920579E12, 29.2], [1.62920604E12, 74.9], [1.62920553E12, 129.7], [1.6292057E12, 165.4], [1.62920621E12, 25.4], [1.62920587E12, 162.3], [1.6292058E12, 62.4], [1.62920597E12, 29.1], [1.62920631E12, 39.1], [1.62920546E12, 124.6], [1.62920563E12, 95.1], [1.62920588E12, 167.0], [1.62920605E12, 151.1], [1.62920622E12, 147.0], [1.62920554E12, 195.8], [1.62920571E12, 104.5]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62920633E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

