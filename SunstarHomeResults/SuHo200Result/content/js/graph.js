/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "maxY": 138804.0, "series": [{"data": [[0.0, 10.0], [0.1, 11.0], [0.2, 11.0], [0.3, 11.0], [0.4, 12.0], [0.5, 12.0], [0.6, 12.0], [0.7, 12.0], [0.8, 13.0], [0.9, 13.0], [1.0, 13.0], [1.1, 13.0], [1.2, 13.0], [1.3, 14.0], [1.4, 14.0], [1.5, 14.0], [1.6, 14.0], [1.7, 14.0], [1.8, 14.0], [1.9, 14.0], [2.0, 15.0], [2.1, 15.0], [2.2, 15.0], [2.3, 15.0], [2.4, 15.0], [2.5, 15.0], [2.6, 15.0], [2.7, 15.0], [2.8, 16.0], [2.9, 16.0], [3.0, 16.0], [3.1, 16.0], [3.2, 16.0], [3.3, 16.0], [3.4, 17.0], [3.5, 17.0], [3.6, 17.0], [3.7, 17.0], [3.8, 17.0], [3.9, 18.0], [4.0, 18.0], [4.1, 18.0], [4.2, 18.0], [4.3, 18.0], [4.4, 18.0], [4.5, 19.0], [4.6, 19.0], [4.7, 19.0], [4.8, 19.0], [4.9, 19.0], [5.0, 19.0], [5.1, 19.0], [5.2, 19.0], [5.3, 20.0], [5.4, 20.0], [5.5, 20.0], [5.6, 20.0], [5.7, 20.0], [5.8, 20.0], [5.9, 20.0], [6.0, 20.0], [6.1, 20.0], [6.2, 20.0], [6.3, 21.0], [6.4, 21.0], [6.5, 21.0], [6.6, 21.0], [6.7, 21.0], [6.8, 21.0], [6.9, 21.0], [7.0, 21.0], [7.1, 21.0], [7.2, 21.0], [7.3, 21.0], [7.4, 22.0], [7.5, 22.0], [7.6, 22.0], [7.7, 22.0], [7.8, 22.0], [7.9, 22.0], [8.0, 22.0], [8.1, 22.0], [8.2, 22.0], [8.3, 22.0], [8.4, 22.0], [8.5, 23.0], [8.6, 23.0], [8.7, 23.0], [8.8, 23.0], [8.9, 23.0], [9.0, 23.0], [9.1, 23.0], [9.2, 23.0], [9.3, 23.0], [9.4, 23.0], [9.5, 23.0], [9.6, 24.0], [9.7, 24.0], [9.8, 24.0], [9.9, 24.0], [10.0, 24.0], [10.1, 24.0], [10.2, 24.0], [10.3, 24.0], [10.4, 24.0], [10.5, 24.0], [10.6, 25.0], [10.7, 25.0], [10.8, 25.0], [10.9, 25.0], [11.0, 25.0], [11.1, 25.0], [11.2, 25.0], [11.3, 25.0], [11.4, 25.0], [11.5, 25.0], [11.6, 26.0], [11.7, 26.0], [11.8, 26.0], [11.9, 26.0], [12.0, 26.0], [12.1, 26.0], [12.2, 26.0], [12.3, 26.0], [12.4, 26.0], [12.5, 27.0], [12.6, 27.0], [12.7, 27.0], [12.8, 27.0], [12.9, 27.0], [13.0, 27.0], [13.1, 27.0], [13.2, 27.0], [13.3, 27.0], [13.4, 28.0], [13.5, 28.0], [13.6, 28.0], [13.7, 28.0], [13.8, 28.0], [13.9, 28.0], [14.0, 28.0], [14.1, 29.0], [14.2, 29.0], [14.3, 29.0], [14.4, 29.0], [14.5, 29.0], [14.6, 29.0], [14.7, 29.0], [14.8, 30.0], [14.9, 30.0], [15.0, 30.0], [15.1, 30.0], [15.2, 30.0], [15.3, 31.0], [15.4, 31.0], [15.5, 31.0], [15.6, 31.0], [15.7, 31.0], [15.8, 32.0], [15.9, 32.0], [16.0, 32.0], [16.1, 32.0], [16.2, 33.0], [16.3, 33.0], [16.4, 33.0], [16.5, 33.0], [16.6, 34.0], [16.7, 34.0], [16.8, 34.0], [16.9, 34.0], [17.0, 35.0], [17.1, 35.0], [17.2, 35.0], [17.3, 36.0], [17.4, 36.0], [17.5, 36.0], [17.6, 37.0], [17.7, 37.0], [17.8, 37.0], [17.9, 38.0], [18.0, 38.0], [18.1, 39.0], [18.2, 39.0], [18.3, 39.0], [18.4, 40.0], [18.5, 40.0], [18.6, 41.0], [18.7, 41.0], [18.8, 41.0], [18.9, 42.0], [19.0, 42.0], [19.1, 42.0], [19.2, 43.0], [19.3, 43.0], [19.4, 43.0], [19.5, 43.0], [19.6, 43.0], [19.7, 44.0], [19.8, 44.0], [19.9, 44.0], [20.0, 44.0], [20.1, 44.0], [20.2, 45.0], [20.3, 45.0], [20.4, 45.0], [20.5, 45.0], [20.6, 45.0], [20.7, 45.0], [20.8, 45.0], [20.9, 46.0], [21.0, 46.0], [21.1, 46.0], [21.2, 46.0], [21.3, 46.0], [21.4, 46.0], [21.5, 46.0], [21.6, 47.0], [21.7, 47.0], [21.8, 47.0], [21.9, 47.0], [22.0, 47.0], [22.1, 47.0], [22.2, 47.0], [22.3, 48.0], [22.4, 48.0], [22.5, 48.0], [22.6, 48.0], [22.7, 48.0], [22.8, 48.0], [22.9, 49.0], [23.0, 49.0], [23.1, 49.0], [23.2, 49.0], [23.3, 49.0], [23.4, 50.0], [23.5, 50.0], [23.6, 50.0], [23.7, 50.0], [23.8, 50.0], [23.9, 51.0], [24.0, 51.0], [24.1, 51.0], [24.2, 51.0], [24.3, 51.0], [24.4, 52.0], [24.5, 52.0], [24.6, 52.0], [24.7, 52.0], [24.8, 53.0], [24.9, 53.0], [25.0, 53.0], [25.1, 54.0], [25.2, 54.0], [25.3, 54.0], [25.4, 55.0], [25.5, 55.0], [25.6, 55.0], [25.7, 55.0], [25.8, 56.0], [25.9, 56.0], [26.0, 56.0], [26.1, 57.0], [26.2, 57.0], [26.3, 58.0], [26.4, 58.0], [26.5, 59.0], [26.6, 59.0], [26.7, 59.0], [26.8, 60.0], [26.9, 60.0], [27.0, 61.0], [27.1, 61.0], [27.2, 62.0], [27.3, 62.0], [27.4, 63.0], [27.5, 63.0], [27.6, 64.0], [27.7, 64.0], [27.8, 65.0], [27.9, 66.0], [28.0, 66.0], [28.1, 67.0], [28.2, 67.0], [28.3, 68.0], [28.4, 69.0], [28.5, 70.0], [28.6, 71.0], [28.7, 71.0], [28.8, 72.0], [28.9, 73.0], [29.0, 74.0], [29.1, 75.0], [29.2, 75.0], [29.3, 76.0], [29.4, 77.0], [29.5, 78.0], [29.6, 79.0], [29.7, 80.0], [29.8, 81.0], [29.9, 82.0], [30.0, 82.0], [30.1, 83.0], [30.2, 84.0], [30.3, 85.0], [30.4, 86.0], [30.5, 87.0], [30.6, 88.0], [30.7, 89.0], [30.8, 90.0], [30.9, 91.0], [31.0, 93.0], [31.1, 94.0], [31.2, 95.0], [31.3, 96.0], [31.4, 97.0], [31.5, 99.0], [31.6, 100.0], [31.7, 101.0], [31.8, 102.0], [31.9, 104.0], [32.0, 105.0], [32.1, 106.0], [32.2, 107.0], [32.3, 109.0], [32.4, 110.0], [32.5, 112.0], [32.6, 113.0], [32.7, 115.0], [32.8, 116.0], [32.9, 117.0], [33.0, 119.0], [33.1, 121.0], [33.2, 122.0], [33.3, 124.0], [33.4, 126.0], [33.5, 128.0], [33.6, 130.0], [33.7, 132.0], [33.8, 134.0], [33.9, 136.0], [34.0, 138.0], [34.1, 140.0], [34.2, 142.0], [34.3, 144.0], [34.4, 147.0], [34.5, 149.0], [34.6, 152.0], [34.7, 154.0], [34.8, 156.0], [34.9, 159.0], [35.0, 162.0], [35.1, 165.0], [35.2, 167.0], [35.3, 170.0], [35.4, 173.0], [35.5, 176.0], [35.6, 179.0], [35.7, 182.0], [35.8, 185.0], [35.9, 188.0], [36.0, 191.0], [36.1, 194.0], [36.2, 197.0], [36.3, 200.0], [36.4, 202.0], [36.5, 205.0], [36.6, 208.0], [36.7, 211.0], [36.8, 213.0], [36.9, 217.0], [37.0, 220.0], [37.1, 223.0], [37.2, 226.0], [37.3, 230.0], [37.4, 232.0], [37.5, 236.0], [37.6, 240.0], [37.7, 243.0], [37.8, 247.0], [37.9, 249.0], [38.0, 253.0], [38.1, 256.0], [38.2, 261.0], [38.3, 265.0], [38.4, 269.0], [38.5, 275.0], [38.6, 279.0], [38.7, 284.0], [38.8, 290.0], [38.9, 297.0], [39.0, 303.0], [39.1, 309.0], [39.2, 315.0], [39.3, 322.0], [39.4, 328.0], [39.5, 333.0], [39.6, 339.0], [39.7, 344.0], [39.8, 351.0], [39.9, 355.0], [40.0, 361.0], [40.1, 366.0], [40.2, 371.0], [40.3, 376.0], [40.4, 380.0], [40.5, 385.0], [40.6, 391.0], [40.7, 396.0], [40.8, 401.0], [40.9, 407.0], [41.0, 412.0], [41.1, 417.0], [41.2, 422.0], [41.3, 427.0], [41.4, 432.0], [41.5, 436.0], [41.6, 442.0], [41.7, 447.0], [41.8, 452.0], [41.9, 458.0], [42.0, 464.0], [42.1, 470.0], [42.2, 475.0], [42.3, 481.0], [42.4, 486.0], [42.5, 491.0], [42.6, 495.0], [42.7, 501.0], [42.8, 507.0], [42.9, 513.0], [43.0, 518.0], [43.1, 524.0], [43.2, 530.0], [43.3, 535.0], [43.4, 540.0], [43.5, 546.0], [43.6, 551.0], [43.7, 556.0], [43.8, 561.0], [43.9, 566.0], [44.0, 572.0], [44.1, 577.0], [44.2, 583.0], [44.3, 587.0], [44.4, 592.0], [44.5, 597.0], [44.6, 601.0], [44.7, 606.0], [44.8, 611.0], [44.9, 614.0], [45.0, 619.0], [45.1, 624.0], [45.2, 628.0], [45.3, 633.0], [45.4, 637.0], [45.5, 641.0], [45.6, 645.0], [45.7, 650.0], [45.8, 654.0], [45.9, 658.0], [46.0, 663.0], [46.1, 668.0], [46.2, 672.0], [46.3, 676.0], [46.4, 682.0], [46.5, 687.0], [46.6, 691.0], [46.7, 696.0], [46.8, 702.0], [46.9, 707.0], [47.0, 712.0], [47.1, 718.0], [47.2, 723.0], [47.3, 728.0], [47.4, 733.0], [47.5, 740.0], [47.6, 747.0], [47.7, 751.0], [47.8, 756.0], [47.9, 762.0], [48.0, 767.0], [48.1, 772.0], [48.2, 777.0], [48.3, 781.0], [48.4, 787.0], [48.5, 792.0], [48.6, 799.0], [48.7, 803.0], [48.8, 808.0], [48.9, 813.0], [49.0, 820.0], [49.1, 827.0], [49.2, 832.0], [49.3, 837.0], [49.4, 843.0], [49.5, 848.0], [49.6, 854.0], [49.7, 860.0], [49.8, 863.0], [49.9, 869.0], [50.0, 874.0], [50.1, 879.0], [50.2, 885.0], [50.3, 889.0], [50.4, 895.0], [50.5, 900.0], [50.6, 905.0], [50.7, 911.0], [50.8, 917.0], [50.9, 923.0], [51.0, 929.0], [51.1, 933.0], [51.2, 940.0], [51.3, 946.0], [51.4, 951.0], [51.5, 956.0], [51.6, 962.0], [51.7, 968.0], [51.8, 974.0], [51.9, 979.0], [52.0, 985.0], [52.1, 991.0], [52.2, 996.0], [52.3, 1004.0], [52.4, 1010.0], [52.5, 1016.0], [52.6, 1023.0], [52.7, 1030.0], [52.8, 1036.0], [52.9, 1043.0], [53.0, 1052.0], [53.1, 1058.0], [53.2, 1064.0], [53.3, 1069.0], [53.4, 1075.0], [53.5, 1082.0], [53.6, 1088.0], [53.7, 1094.0], [53.8, 1101.0], [53.9, 1108.0], [54.0, 1114.0], [54.1, 1120.0], [54.2, 1126.0], [54.3, 1132.0], [54.4, 1139.0], [54.5, 1146.0], [54.6, 1152.0], [54.7, 1157.0], [54.8, 1164.0], [54.9, 1171.0], [55.0, 1178.0], [55.1, 1186.0], [55.2, 1192.0], [55.3, 1198.0], [55.4, 1206.0], [55.5, 1213.0], [55.6, 1220.0], [55.7, 1228.0], [55.8, 1236.0], [55.9, 1244.0], [56.0, 1251.0], [56.1, 1258.0], [56.2, 1266.0], [56.3, 1273.0], [56.4, 1280.0], [56.5, 1288.0], [56.6, 1296.0], [56.7, 1304.0], [56.8, 1313.0], [56.9, 1320.0], [57.0, 1329.0], [57.1, 1336.0], [57.2, 1345.0], [57.3, 1352.0], [57.4, 1361.0], [57.5, 1371.0], [57.6, 1379.0], [57.7, 1387.0], [57.8, 1393.0], [57.9, 1401.0], [58.0, 1410.0], [58.1, 1417.0], [58.2, 1425.0], [58.3, 1433.0], [58.4, 1440.0], [58.5, 1448.0], [58.6, 1455.0], [58.7, 1464.0], [58.8, 1473.0], [58.9, 1481.0], [59.0, 1489.0], [59.1, 1497.0], [59.2, 1505.0], [59.3, 1512.0], [59.4, 1519.0], [59.5, 1528.0], [59.6, 1535.0], [59.7, 1544.0], [59.8, 1552.0], [59.9, 1563.0], [60.0, 1574.0], [60.1, 1582.0], [60.2, 1591.0], [60.3, 1601.0], [60.4, 1609.0], [60.5, 1619.0], [60.6, 1629.0], [60.7, 1638.0], [60.8, 1647.0], [60.9, 1656.0], [61.0, 1668.0], [61.1, 1678.0], [61.2, 1690.0], [61.3, 1700.0], [61.4, 1710.0], [61.5, 1718.0], [61.6, 1729.0], [61.7, 1739.0], [61.8, 1750.0], [61.9, 1760.0], [62.0, 1771.0], [62.1, 1781.0], [62.2, 1789.0], [62.3, 1800.0], [62.4, 1809.0], [62.5, 1820.0], [62.6, 1831.0], [62.7, 1841.0], [62.8, 1851.0], [62.9, 1863.0], [63.0, 1874.0], [63.1, 1884.0], [63.2, 1894.0], [63.3, 1905.0], [63.4, 1915.0], [63.5, 1927.0], [63.6, 1938.0], [63.7, 1949.0], [63.8, 1961.0], [63.9, 1972.0], [64.0, 1983.0], [64.1, 1995.0], [64.2, 2007.0], [64.3, 2019.0], [64.4, 2031.0], [64.5, 2044.0], [64.6, 2054.0], [64.7, 2066.0], [64.8, 2080.0], [64.9, 2095.0], [65.0, 2109.0], [65.1, 2126.0], [65.2, 2140.0], [65.3, 2155.0], [65.4, 2168.0], [65.5, 2181.0], [65.6, 2195.0], [65.7, 2206.0], [65.8, 2221.0], [65.9, 2236.0], [66.0, 2249.0], [66.1, 2261.0], [66.2, 2275.0], [66.3, 2293.0], [66.4, 2308.0], [66.5, 2319.0], [66.6, 2333.0], [66.7, 2348.0], [66.8, 2362.0], [66.9, 2375.0], [67.0, 2388.0], [67.1, 2403.0], [67.2, 2417.0], [67.3, 2432.0], [67.4, 2446.0], [67.5, 2460.0], [67.6, 2472.0], [67.7, 2489.0], [67.8, 2501.0], [67.9, 2516.0], [68.0, 2530.0], [68.1, 2546.0], [68.2, 2559.0], [68.3, 2573.0], [68.4, 2586.0], [68.5, 2597.0], [68.6, 2610.0], [68.7, 2626.0], [68.8, 2639.0], [68.9, 2655.0], [69.0, 2670.0], [69.1, 2684.0], [69.2, 2700.0], [69.3, 2716.0], [69.4, 2730.0], [69.5, 2746.0], [69.6, 2760.0], [69.7, 2776.0], [69.8, 2793.0], [69.9, 2809.0], [70.0, 2823.0], [70.1, 2840.0], [70.2, 2853.0], [70.3, 2868.0], [70.4, 2883.0], [70.5, 2899.0], [70.6, 2915.0], [70.7, 2930.0], [70.8, 2946.0], [70.9, 2959.0], [71.0, 2973.0], [71.1, 2987.0], [71.2, 3002.0], [71.3, 3016.0], [71.4, 3033.0], [71.5, 3049.0], [71.6, 3064.0], [71.7, 3080.0], [71.8, 3098.0], [71.9, 3119.0], [72.0, 3135.0], [72.1, 3149.0], [72.2, 3166.0], [72.3, 3181.0], [72.4, 3195.0], [72.5, 3211.0], [72.6, 3222.0], [72.7, 3238.0], [72.8, 3254.0], [72.9, 3270.0], [73.0, 3286.0], [73.1, 3303.0], [73.2, 3322.0], [73.3, 3337.0], [73.4, 3351.0], [73.5, 3368.0], [73.6, 3384.0], [73.7, 3397.0], [73.8, 3411.0], [73.9, 3427.0], [74.0, 3442.0], [74.1, 3460.0], [74.2, 3472.0], [74.3, 3487.0], [74.4, 3502.0], [74.5, 3516.0], [74.6, 3533.0], [74.7, 3549.0], [74.8, 3564.0], [74.9, 3580.0], [75.0, 3597.0], [75.1, 3612.0], [75.2, 3626.0], [75.3, 3643.0], [75.4, 3657.0], [75.5, 3670.0], [75.6, 3684.0], [75.7, 3700.0], [75.8, 3714.0], [75.9, 3726.0], [76.0, 3740.0], [76.1, 3756.0], [76.2, 3772.0], [76.3, 3787.0], [76.4, 3801.0], [76.5, 3815.0], [76.6, 3831.0], [76.7, 3846.0], [76.8, 3864.0], [76.9, 3880.0], [77.0, 3897.0], [77.1, 3913.0], [77.2, 3925.0], [77.3, 3939.0], [77.4, 3951.0], [77.5, 3966.0], [77.6, 3982.0], [77.7, 3994.0], [77.8, 4008.0], [77.9, 4024.0], [78.0, 4038.0], [78.1, 4052.0], [78.2, 4068.0], [78.3, 4088.0], [78.4, 4101.0], [78.5, 4115.0], [78.6, 4130.0], [78.7, 4145.0], [78.8, 4160.0], [78.9, 4175.0], [79.0, 4189.0], [79.1, 4203.0], [79.2, 4218.0], [79.3, 4233.0], [79.4, 4248.0], [79.5, 4262.0], [79.6, 4274.0], [79.7, 4289.0], [79.8, 4305.0], [79.9, 4321.0], [80.0, 4338.0], [80.1, 4355.0], [80.2, 4372.0], [80.3, 4387.0], [80.4, 4401.0], [80.5, 4415.0], [80.6, 4430.0], [80.7, 4444.0], [80.8, 4460.0], [80.9, 4474.0], [81.0, 4489.0], [81.1, 4503.0], [81.2, 4514.0], [81.3, 4529.0], [81.4, 4542.0], [81.5, 4558.0], [81.6, 4573.0], [81.7, 4585.0], [81.8, 4599.0], [81.9, 4614.0], [82.0, 4627.0], [82.1, 4639.0], [82.2, 4652.0], [82.3, 4667.0], [82.4, 4681.0], [82.5, 4697.0], [82.6, 4710.0], [82.7, 4725.0], [82.8, 4740.0], [82.9, 4756.0], [83.0, 4768.0], [83.1, 4781.0], [83.2, 4795.0], [83.3, 4807.0], [83.4, 4822.0], [83.5, 4837.0], [83.6, 4851.0], [83.7, 4865.0], [83.8, 4880.0], [83.9, 4894.0], [84.0, 4909.0], [84.1, 4925.0], [84.2, 4938.0], [84.3, 4953.0], [84.4, 4965.0], [84.5, 4977.0], [84.6, 4991.0], [84.7, 5004.0], [84.8, 5019.0], [84.9, 5035.0], [85.0, 5048.0], [85.1, 5065.0], [85.2, 5082.0], [85.3, 5097.0], [85.4, 5111.0], [85.5, 5123.0], [85.6, 5137.0], [85.7, 5150.0], [85.8, 5165.0], [85.9, 5180.0], [86.0, 5195.0], [86.1, 5210.0], [86.2, 5225.0], [86.3, 5238.0], [86.4, 5252.0], [86.5, 5265.0], [86.6, 5281.0], [86.7, 5296.0], [86.8, 5313.0], [86.9, 5325.0], [87.0, 5341.0], [87.1, 5355.0], [87.2, 5371.0], [87.3, 5390.0], [87.4, 5405.0], [87.5, 5427.0], [87.6, 5445.0], [87.7, 5463.0], [87.8, 5482.0], [87.9, 5497.0], [88.0, 5517.0], [88.1, 5533.0], [88.2, 5554.0], [88.3, 5576.0], [88.4, 5596.0], [88.5, 5613.0], [88.6, 5632.0], [88.7, 5649.0], [88.8, 5671.0], [88.9, 5689.0], [89.0, 5707.0], [89.1, 5723.0], [89.2, 5741.0], [89.3, 5758.0], [89.4, 5775.0], [89.5, 5795.0], [89.6, 5813.0], [89.7, 5832.0], [89.8, 5853.0], [89.9, 5868.0], [90.0, 5886.0], [90.1, 5905.0], [90.2, 5928.0], [90.3, 5947.0], [90.4, 5967.0], [90.5, 5986.0], [90.6, 6005.0], [90.7, 6028.0], [90.8, 6050.0], [90.9, 6068.0], [91.0, 6088.0], [91.1, 6109.0], [91.2, 6132.0], [91.3, 6154.0], [91.4, 6174.0], [91.5, 6202.0], [91.6, 6226.0], [91.7, 6247.0], [91.8, 6264.0], [91.9, 6285.0], [92.0, 6302.0], [92.1, 6323.0], [92.2, 6353.0], [92.3, 6373.0], [92.4, 6393.0], [92.5, 6415.0], [92.6, 6439.0], [92.7, 6463.0], [92.8, 6485.0], [92.9, 6508.0], [93.0, 6531.0], [93.1, 6554.0], [93.2, 6574.0], [93.3, 6600.0], [93.4, 6626.0], [93.5, 6651.0], [93.6, 6676.0], [93.7, 6703.0], [93.8, 6727.0], [93.9, 6752.0], [94.0, 6776.0], [94.1, 6805.0], [94.2, 6831.0], [94.3, 6863.0], [94.4, 6903.0], [94.5, 6933.0], [94.6, 6970.0], [94.7, 7004.0], [94.8, 7031.0], [94.9, 7062.0], [95.0, 7097.0], [95.1, 7129.0], [95.2, 7166.0], [95.3, 7202.0], [95.4, 7242.0], [95.5, 7286.0], [95.6, 7326.0], [95.7, 7377.0], [95.8, 7416.0], [95.9, 7460.0], [96.0, 7496.0], [96.1, 7529.0], [96.2, 7563.0], [96.3, 7607.0], [96.4, 7647.0], [96.5, 7684.0], [96.6, 7723.0], [96.7, 7772.0], [96.8, 7819.0], [96.9, 7867.0], [97.0, 7927.0], [97.1, 7977.0], [97.2, 8045.0], [97.3, 8114.0], [97.4, 8179.0], [97.5, 8245.0], [97.6, 8303.0], [97.7, 8371.0], [97.8, 8437.0], [97.9, 8517.0], [98.0, 8609.0], [98.1, 8687.0], [98.2, 8760.0], [98.3, 8826.0], [98.4, 8912.0], [98.5, 9013.0], [98.6, 9134.0], [98.7, 9277.0], [98.8, 9402.0], [98.9, 9534.0], [99.0, 9677.0], [99.1, 9868.0], [99.2, 10094.0], [99.3, 10313.0], [99.4, 10508.0], [99.5, 10739.0], [99.6, 10999.0], [99.7, 11713.0], [99.8, 12685.0], [99.9, 37596.0], [100.0, 138804.0]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 33212.0, "series": [{"data": [[0.0, 33212.0], [135200.0, 1.0], [133600.0, 1.0], [132900.0, 2.0], [136100.0, 1.0], [65900.0, 2.0], [66700.0, 1.0], [81900.0, 1.0], [82700.0, 1.0], [83500.0, 1.0], [85100.0, 2.0], [86700.0, 1.0], [130700.0, 1.0], [132200.0, 1.0], [100.0, 4943.0], [131500.0, 1.0], [35300.0, 1.0], [36500.0, 1.0], [37300.0, 1.0], [39700.0, 1.0], [41300.0, 1.0], [42500.0, 1.0], [48900.0, 1.0], [50500.0, 1.0], [200.0, 2788.0], [55300.0, 1.0], [58100.0, 1.0], [64900.0, 2.0], [64500.0, 1.0], [300.0, 1927.0], [400.0, 1999.0], [500.0, 1972.0], [130600.0, 1.0], [138800.0, 1.0], [135600.0, 1.0], [132400.0, 1.0], [600.0, 2311.0], [700.0, 1968.0], [800.0, 1966.0], [900.0, 1841.0], [1000.0, 1613.0], [1100.0, 1624.0], [1200.0, 1402.0], [1300.0, 1290.0], [1400.0, 1321.0], [1500.0, 1214.0], [1600.0, 1057.0], [1700.0, 1054.0], [1800.0, 999.0], [1900.0, 938.0], [2000.0, 830.0], [2100.0, 756.0], [133300.0, 2.0], [131700.0, 1.0], [2300.0, 759.0], [2200.0, 730.0], [2400.0, 758.0], [2500.0, 765.0], [2600.0, 718.0], [2700.0, 679.0], [2800.0, 692.0], [2900.0, 725.0], [3000.0, 649.0], [3100.0, 650.0], [3200.0, 694.0], [3300.0, 665.0], [3400.0, 700.0], [3500.0, 668.0], [3600.0, 715.0], [3700.0, 723.0], [3800.0, 660.0], [3900.0, 757.0], [4000.0, 679.0], [4200.0, 735.0], [4100.0, 717.0], [4300.0, 660.0], [65700.0, 2.0], [4600.0, 748.0], [4400.0, 720.0], [4500.0, 772.0], [4700.0, 747.0], [4800.0, 741.0], [76100.0, 1.0], [76900.0, 1.0], [5000.0, 693.0], [4900.0, 765.0], [5100.0, 746.0], [79300.0, 1.0], [80900.0, 2.0], [5300.0, 683.0], [5200.0, 721.0], [85700.0, 1.0], [5600.0, 572.0], [5500.0, 532.0], [5400.0, 572.0], [5700.0, 596.0], [5800.0, 567.0], [90500.0, 2.0], [5900.0, 540.0], [6100.0, 462.0], [6000.0, 493.0], [6300.0, 452.0], [6200.0, 532.0], [6400.0, 463.0], [6600.0, 410.0], [6500.0, 455.0], [6900.0, 315.0], [6700.0, 411.0], [6800.0, 331.0], [7000.0, 331.0], [7100.0, 302.0], [7300.0, 239.0], [7200.0, 248.0], [7400.0, 270.0], [7500.0, 283.0], [7600.0, 278.0], [7700.0, 227.0], [7900.0, 182.0], [7800.0, 202.0], [8000.0, 158.0], [8100.0, 162.0], [129700.0, 1.0], [8600.0, 136.0], [8400.0, 145.0], [8500.0, 120.0], [8200.0, 168.0], [8700.0, 148.0], [8300.0, 151.0], [132600.0, 1.0], [135800.0, 1.0], [9000.0, 91.0], [8800.0, 139.0], [8900.0, 106.0], [9100.0, 85.0], [9200.0, 61.0], [9300.0, 83.0], [9600.0, 78.0], [9400.0, 84.0], [9500.0, 69.0], [9700.0, 64.0], [10000.0, 45.0], [9900.0, 49.0], [10100.0, 45.0], [10200.0, 48.0], [9800.0, 41.0], [10500.0, 55.0], [10600.0, 43.0], [10400.0, 58.0], [10700.0, 50.0], [10300.0, 46.0], [10800.0, 48.0], [10900.0, 23.0], [11100.0, 17.0], [11000.0, 17.0], [11200.0, 12.0], [11300.0, 15.0], [11400.0, 8.0], [11700.0, 20.0], [11500.0, 14.0], [11600.0, 16.0], [11900.0, 10.0], [12000.0, 13.0], [12100.0, 9.0], [12200.0, 8.0], [11800.0, 17.0], [12400.0, 19.0], [12300.0, 5.0], [12500.0, 7.0], [12600.0, 4.0], [12700.0, 5.0], [12800.0, 7.0], [13100.0, 7.0], [13300.0, 6.0], [13000.0, 7.0], [13200.0, 8.0], [12900.0, 5.0], [13800.0, 7.0], [13500.0, 3.0], [13700.0, 3.0], [13400.0, 7.0], [13600.0, 3.0], [13900.0, 1.0], [14300.0, 1.0], [14200.0, 2.0], [14800.0, 1.0], [14700.0, 2.0], [14600.0, 1.0], [15700.0, 1.0], [15900.0, 1.0], [16600.0, 1.0], [17200.0, 1.0], [18200.0, 1.0], [20800.0, 1.0], [21400.0, 1.0], [23000.0, 1.0], [25200.0, 1.0], [25600.0, 1.0], [27000.0, 1.0], [29600.0, 1.0], [30400.0, 1.0], [32000.0, 1.0], [131900.0, 2.0], [35200.0, 1.0], [40800.0, 1.0], [46000.0, 1.0], [50800.0, 1.0], [58400.0, 1.0], [65200.0, 1.0], [64400.0, 1.0], [65600.0, 1.0], [78400.0, 1.0], [129600.0, 1.0], [130400.0, 1.0], [131200.0, 1.0], [132100.0, 1.0], [133700.0, 1.0], [87900.0, 1.0], [91100.0, 1.0], [129500.0, 1.0], [138700.0, 1.0], [133900.0, 1.0], [135500.0, 1.0], [37500.0, 1.0], [41900.0, 1.0], [46300.0, 1.0], [51100.0, 1.0], [52700.0, 1.0], [54300.0, 1.0], [57100.0, 1.0], [59100.0, 1.0], [59500.0, 1.0], [65500.0, 1.0], [66200.0, 1.0], [67000.0, 2.0], [136400.0, 1.0], [134800.0, 1.0], [66100.0, 1.0], [77300.0, 1.0], [130100.0, 1.0], [135000.0, 3.0], [17500.0, 1.0], [18300.0, 1.0], [18700.0, 1.0], [22300.0, 1.0], [22700.0, 1.0], [26300.0, 1.0], [26900.0, 1.0], [31500.0, 1.0], [32700.0, 1.0], [132700.0, 1.0], [131100.0, 2.0], [44200.0, 1.0], [47000.0, 2.0], [49800.0, 1.0], [54600.0, 1.0], [55000.0, 1.0], [65000.0, 1.0], [65400.0, 1.0], [66800.0, 1.0], [130800.0, 4.0], [130000.0, 1.0]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 138800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 17302.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 44890.0, "series": [{"data": [[0.0, 44890.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 17302.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 42951.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.975609756097561, "minX": 1.62859922E12, "maxY": 1000.0, "series": [{"data": [[1.6285999E12, 282.9623846699784], [1.62859956E12, 10.81190019193858], [1.62860007E12, 1000.0], [1.62859973E12, 3.53178607467205], [1.62859922E12, 18.5], [1.62859939E12, 14.181818181818176], [1.62859998E12, 4.923880597014917], [1.62859964E12, 119.41509433962275], [1.62859981E12, 7.911097486204779], [1.6285993E12, 368.377240841777], [1.62859947E12, 215.0506485484868], [1.62859974E12, 3.0], [1.62859991E12, 21.59559559559559], [1.6285994E12, 21.27906976744186], [1.62859957E12, 9.36148648648648], [1.62859923E12, 4.053763440860215], [1.6286E12, 38.29086389061528], [1.62859982E12, 27.792418772563146], [1.62859999E12, 10.249845009299436], [1.62859948E12, 467.0893703452946], [1.62859965E12, 381.4855218855223], [1.62859931E12, 1000.0], [1.62860008E12, 593.4512077294711], [1.62859958E12, 12.068965517241379], [1.62859975E12, 3.0], [1.62859924E12, 4.985401459854009], [1.62859941E12, 27.0], [1.62860001E12, 132.80344607530304], [1.62859984E12, 214.6836668818593], [1.62859966E12, 201.15935057125665], [1.62859983E12, 85.48918269230771], [1.62859932E12, 1000.0], [1.62859949E12, 909.3592365371518], [1.62860009E12, 5.020161290322581], [1.62859992E12, 5.292867981790591], [1.62859942E12, 28.276967930029144], [1.62859959E12, 15.590395480225988], [1.62859925E12, 5.864811133200796], [1.62859968E12, 428.5382286146859], [1.62859985E12, 327.2549143944196], [1.62860002E12, 397.9695841092486], [1.6285995E12, 1000.0], [1.62859967E12, 332.8825417201542], [1.62859933E12, 1000.0], [1.62859976E12, 3.0], [1.62859993E12, 3.0], [1.6286001E12, 3.9969742813918283], [1.62859926E12, 10.610029940119746], [1.62859943E12, 35.10578842315368], [1.62859986E12, 523.0853163087634], [1.62859952E12, 1000.0], [1.62860003E12, 710.2062084257196], [1.62859969E12, 841.0084911822344], [1.62859934E12, 1000.0], [1.62859951E12, 1000.0], [1.62859994E12, 3.0], [1.6285996E12, 21.156250000000018], [1.62860011E12, 2.0], [1.62859977E12, 3.0], [1.62859927E12, 23.889779559118217], [1.62860004E12, 830.5076282940353], [1.6285997E12, 1000.0], [1.62859987E12, 161.93438485804418], [1.62859936E12, 941.9628520071897], [1.62859953E12, 1000.0], [1.62859935E12, 1000.0], [1.62860012E12, 1.975609756097561], [1.62859978E12, 2.668596237337193], [1.62859995E12, 3.0], [1.62859944E12, 38.0], [1.62859961E12, 32.90070210631896], [1.62860005E12, 935.8957845433247], [1.62859988E12, 238.09355246523393], [1.62859954E12, 892.447219604146], [1.62859971E12, 1000.0], [1.62859937E12, 112.01263001485903], [1.62859996E12, 3.449421965317919], [1.62859962E12, 39.765230312035726], [1.62859979E12, 3.414131501472035], [1.62859928E12, 92.83311081441907], [1.62859945E12, 42.96101485148511], [1.62859972E12, 699.4779840848811], [1.62859989E12, 288.9920091324196], [1.62860006E12, 1000.0], [1.62859938E12, 11.888714733542312], [1.62859955E12, 166.00961538461553], [1.6285998E12, 3.9239457831325257], [1.62859997E12, 3.9950738916256125], [1.62859946E12, 108.17259211376857], [1.62859963E12, 48.232278481012656], [1.62859929E12, 198.23232984293236]], "isOverall": false, "label": "bzm - Concurrency Thread Group-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62860012E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 18.606338615512914, "minX": 1.0, "maxY": 46620.66666666667, "series": [{"data": [[2.0, 18.606338615512914], [3.0, 21.73091994775148], [4.0, 22.852359208523595], [5.0, 29.38227087357805], [6.0, 35.269012485811615], [7.0, 562.8122710622715], [8.0, 47.07876712328774], [9.0, 414.37830319888775], [10.0, 278.0327022375216], [11.0, 236.39850615114239], [12.0, 74.01839464882937], [13.0, 88.40000000000002], [14.0, 71.42018981880929], [15.0, 747.8196022727273], [16.0, 98.84081632653067], [17.0, 48.97927461139896], [18.0, 85.76357267950966], [19.0, 116.33636363636363], [20.0, 85.421686746988], [21.0, 99.9794661190965], [22.0, 124.70899470899474], [23.0, 3052.3085714285735], [24.0, 123.08050847457625], [25.0, 153.45977011494256], [26.0, 116.15942028985503], [27.0, 75.38863976083704], [28.0, 123.50847457627123], [29.0, 56.5027700831025], [30.0, 166.40689655172426], [31.0, 940.4628422425031], [32.0, 550.6666666666665], [33.0, 125.6994382022471], [34.0, 397.51724137931035], [35.0, 96.57303370786506], [36.0, 133.61860465116283], [37.0, 392.4186046511628], [38.0, 48.904375281912515], [39.0, 55.70692194403536], [41.0, 73.5931232091691], [40.0, 61.186062717770035], [42.0, 92.58641239570929], [43.0, 157.4631828978623], [44.0, 102.86413043478267], [45.0, 277.6049999999999], [46.0, 204.58536585365852], [47.0, 114.85028248587568], [48.0, 215.09090909090912], [49.0, 304.5], [50.0, 128.4597701149425], [51.0, 154.9301075268817], [53.0, 256.18181818181813], [52.0, 364.8947368421052], [55.0, 215.2763157894737], [54.0, 337.0], [56.0, 176.00000000000003], [57.0, 353.5025380710661], [58.0, 369.758793969849], [59.0, 392.86666666666673], [60.0, 516.75], [61.0, 205.2994923857867], [62.0, 361.4322916666665], [63.0, 372.27906976744185], [64.0, 342.37837837837833], [65.0, 411.20276497695846], [66.0, 417.2941176470589], [67.0, 455.4545454545455], [68.0, 478.82352941176464], [69.0, 261.905], [70.0, 258.5754716981132], [71.0, 384.51612903225805], [72.0, 463.3246753246753], [73.0, 387.3928571428571], [74.0, 433.3414634146341], [75.0, 414.0399999999999], [76.0, 273.8521739130436], [77.0, 355.037037037037], [78.0, 511.3076923076923], [79.0, 435.10256410256403], [80.0, 473.68181818181813], [83.0, 585.3481481481481], [81.0, 361.57575757575756], [82.0, 480.75000000000006], [85.0, 600.2988505747126], [86.0, 425.8888888888888], [87.0, 548.2903225806451], [84.0, 1592.2352941176468], [88.0, 412.27906976744185], [89.0, 484.9847328244274], [90.0, 501.0243902439023], [91.0, 416.04651162790685], [92.0, 402.44444444444434], [93.0, 414.38659793814435], [94.0, 450.86666666666673], [95.0, 636.1612903225807], [96.0, 551.1384615384617], [97.0, 998.8237179487187], [98.0, 817.1219512195125], [99.0, 451.75471698113216], [100.0, 878.6018518518518], [101.0, 619.4347826086955], [102.0, 692.1486486486489], [103.0, 568.672727272727], [104.0, 492.33684210526326], [105.0, 651.2909090909092], [106.0, 523.9666666666666], [107.0, 513.9473684210526], [108.0, 604.8181818181814], [109.0, 599.8421052631578], [110.0, 588.0], [111.0, 959.3258426966296], [112.0, 620.7916666666667], [113.0, 613.8289473684213], [114.0, 706.5600000000001], [115.0, 508.84482758620686], [116.0, 767.3253012048195], [117.0, 620.9036144578313], [118.0, 737.8799999999995], [119.0, 648.0344827586209], [120.0, 731.554054054054], [122.0, 648.5576923076924], [123.0, 596.1276595744681], [121.0, 591.4516129032257], [127.0, 607.5000000000006], [126.0, 733.050847457627], [125.0, 570.4814814814815], [124.0, 811.9024390243903], [128.0, 688.9583333333333], [129.0, 823.7055837563455], [130.0, 762.4324324324325], [131.0, 734.3454545454547], [132.0, 789.2820512820509], [133.0, 643.1999999999999], [134.0, 652.3711340206189], [135.0, 666.6181818181819], [143.0, 751.9491525423728], [142.0, 1218.3561643835612], [140.0, 723.4918032786884], [139.0, 728.0816326530612], [138.0, 668.8], [137.0, 619.5250000000002], [136.0, 722.9047619047617], [141.0, 712.0363636363636], [144.0, 770.6744186046512], [145.0, 856.7769230769228], [146.0, 759.1607142857143], [149.0, 736.4915254237288], [150.0, 741.0088495575224], [151.0, 795.8356164383563], [148.0, 588.0363636363636], [147.0, 688.969696969697], [152.0, 1146.5193798449616], [153.0, 721.2065217391303], [154.0, 872.578947368421], [155.0, 816.4193548387098], [156.0, 1282.6407766990287], [157.0, 979.578313253012], [158.0, 788.3870967741937], [159.0, 721.4680851063829], [160.0, 1348.2343749999995], [161.0, 826.6333333333332], [162.0, 786.8000000000003], [166.0, 799.7199999999999], [167.0, 1180.6337209302326], [165.0, 753.2295081967214], [164.0, 801.991071428571], [163.0, 577.6363636363636], [168.0, 738.2019230769233], [169.0, 849.2179487179487], [170.0, 745.2941176470586], [171.0, 928.8070175438595], [172.0, 690.6493506493506], [173.0, 894.6901408450705], [174.0, 834.9016393442623], [175.0, 822.64], [176.0, 851.8064516129031], [177.0, 766.2619047619048], [178.0, 826.0624999999998], [179.0, 1296.4596774193556], [180.0, 778.9777777777778], [181.0, 890.5675675675673], [182.0, 744.4024390243902], [183.0, 901.730769230769], [184.0, 734.0000000000001], [185.0, 2742.9393939393944], [186.0, 868.3648648648649], [187.0, 1155.5030674846619], [188.0, 1055.0616438356171], [189.0, 953.4458598726115], [190.0, 995.3968871595325], [191.0, 1005.3948717948718], [192.0, 1662.0158730158735], [193.0, 2378.178082191781], [195.0, 1037.4], [196.0, 1851.9399999999996], [197.0, 939.6971428571429], [198.0, 1060.9242902208202], [199.0, 885.3157894736842], [194.0, 1627.0357142857138], [200.0, 1968.1411764705883], [201.0, 945.323863636364], [202.0, 954.3400000000003], [203.0, 983.6145833333331], [204.0, 927.9770992366416], [205.0, 1041.466019417476], [207.0, 1144.5128205128203], [206.0, 959.6904761904757], [212.0, 866.2592592592595], [214.0, 1374.5309090909093], [215.0, 1318.5283018867924], [208.0, 857.0238095238097], [209.0, 881.0740740740742], [210.0, 912.8870967741938], [211.0, 928.2408759124087], [213.0, 1076.980132450331], [216.0, 1512.530120481928], [217.0, 1053.6866359447008], [218.0, 1165.7194244604318], [219.0, 1177.252032520325], [220.0, 1196.887755102041], [221.0, 1438.3797468354428], [222.0, 1983.0000000000005], [223.0, 1838.5999999999997], [224.0, 1027.991304347826], [225.0, 1333.5555555555557], [226.0, 1213.8022813688215], [229.0, 1541.777070063694], [230.0, 2411.428571428571], [231.0, 908.2653061224491], [227.0, 724.2380952380951], [228.0, 1441.3333333333333], [232.0, 1367.908256880734], [233.0, 1303.6315789473686], [234.0, 1239.773333333333], [235.0, 1855.11262798635], [236.0, 2360.9907407407404], [237.0, 1115.1978021978018], [239.0, 1041.670588235294], [238.0, 1022.796052631579], [240.0, 1211.4869565217389], [244.0, 1160.8527131782948], [241.0, 1062.9534883720933], [242.0, 869.2388059701492], [243.0, 1518.6883116883116], [245.0, 1278.1408450704228], [247.0, 1552.2647058823532], [246.0, 2084.730994152046], [248.0, 1031.75], [249.0, 1012.7083333333333], [250.0, 1323.5731707317082], [251.0, 1036.45], [252.0, 866.25], [253.0, 784.8750000000001], [254.0, 1080.9333333333334], [255.0, 2301.2322274881512], [257.0, 1116.3750000000002], [268.0, 1243.5355450236973], [264.0, 1067.6333333333334], [271.0, 2836.416666666668], [269.0, 3216.2647058823536], [270.0, 2037.6545454545465], [265.0, 806.4347826086957], [266.0, 795.5555555555554], [267.0, 740.8421052631578], [263.0, 4072.36], [261.0, 1240.3731343283582], [262.0, 1331.95], [256.0, 971.9736842105262], [258.0, 1145.295081967213], [259.0, 1281.8581560283685], [260.0, 1606.636363636364], [286.0, 1656.4444444444448], [272.0, 1451.8933333333332], [279.0, 1402.1904761904761], [273.0, 1556.507462686567], [278.0, 2238.75], [276.0, 3153.40625], [277.0, 1985.4112149532712], [274.0, 1583.5405405405406], [287.0, 2035.7777777777778], [285.0, 1616.6511627906973], [284.0, 1786.204545454545], [275.0, 1221.3548387096773], [283.0, 2041.1764705882358], [282.0, 2289.6153846153843], [281.0, 1542.5384615384614], [280.0, 1426.522123893805], [301.0, 1373.2625], [303.0, 1283.9579439252336], [302.0, 1363.452380952381], [300.0, 1146.5714285714287], [291.0, 2588.0606060606056], [290.0, 1349.6305970149251], [289.0, 1826.103448275862], [288.0, 1689.857142857143], [299.0, 1877.677419354839], [298.0, 1651.25], [297.0, 1712.30412371134], [296.0, 1216.3205128205127], [295.0, 3124.884057971015], [294.0, 1292.5090909090914], [293.0, 2643.071428571429], [292.0, 1405.1724137931024], [318.0, 1010.8734177215196], [319.0, 1704.5947955390334], [317.0, 1363.1764705882356], [316.0, 2022.0246913580247], [315.0, 2533.9239130434767], [314.0, 1120.4918032786888], [313.0, 1809.492753623188], [312.0, 1558.9166666666667], [311.0, 1596.1290322580649], [305.0, 1537.6071428571433], [304.0, 1434.2800000000002], [307.0, 1497.5909090909086], [306.0, 1528.6399999999996], [310.0, 2566.1764705882356], [309.0, 1448.4266666666665], [308.0, 1311.8472222222229], [333.0, 801.3939393939394], [335.0, 3144.8680203045674], [334.0, 1377.857142857143], [332.0, 576.5454545454545], [323.0, 1204.0], [322.0, 973.3888888888889], [321.0, 1119.5294117647059], [320.0, 1992.7848101265824], [327.0, 1136.0], [331.0, 865.8888888888889], [330.0, 908.4444444444446], [329.0, 736.8275862068965], [328.0, 1045.8571428571427], [326.0, 770.8000000000001], [325.0, 625.0476190476192], [324.0, 1698.3928571428569], [338.0, 1645.9090909090912], [345.0, 1204.6111111111115], [344.0, 768.5925925925928], [347.0, 1847.8481012658224], [346.0, 1331.2575757575753], [349.0, 5351.723076923078], [342.0, 1359.6590909090905], [341.0, 1508.0952380952383], [340.0, 963.4411764705881], [339.0, 1459.2857142857144], [348.0, 2696.657894736842], [337.0, 1876.8115942028983], [336.0, 1494.894736842105], [343.0, 1392.4736842105267], [351.0, 1652.7500000000002], [350.0, 1438.2786885245905], [365.0, 869.9], [354.0, 2038.1666666666665], [358.0, 3014.5581395348836], [357.0, 1555.876190476191], [356.0, 2146.2145593869727], [359.0, 3189.0396600566564], [353.0, 1855.9756097560976], [352.0, 1784.5405405405404], [360.0, 4203.174603174603], [361.0, 2163.0422535211264], [362.0, 1747.553879310345], [363.0, 1652.303278688524], [364.0, 1611.4948096885814], [355.0, 2687.2], [366.0, 1879.7500000000002], [367.0, 1991.148148148148], [382.0, 1257.6666666666667], [375.0, 2101.4285714285716], [370.0, 1161.2], [369.0, 1079.1666666666667], [368.0, 1972.8461538461538], [374.0, 2710.0], [372.0, 1504.0978260869565], [373.0, 1798.25], [383.0, 2022.6666666666667], [381.0, 1537.0], [380.0, 2887.5], [371.0, 2831.2356321839084], [379.0, 994.8571428571429], [378.0, 1702.4285714285713], [377.0, 1400.2], [376.0, 945.0833333333334], [398.0, 1286.1267605633795], [399.0, 2040.4578313253007], [397.0, 1667.8333333333333], [396.0, 1681.2], [395.0, 1489.8], [394.0, 1259.9999999999998], [393.0, 1385.75], [392.0, 1501.4], [391.0, 1442.4285714285716], [385.0, 1587.6], [384.0, 1280.6666666666667], [387.0, 1611.3333333333335], [386.0, 1380.0], [390.0, 2609.4285714285716], [389.0, 1264.0], [388.0, 2145.142857142857], [414.0, 1832.9166666666667], [409.0, 995.2], [413.0, 2577.6428571428573], [415.0, 2080.3], [412.0, 1552.1875000000002], [411.0, 2068.65277777778], [410.0, 1959.6071428571427], [408.0, 1681.1176470588234], [407.0, 1188.3846153846155], [400.0, 2166.867469879517], [403.0, 1725.3255813953488], [402.0, 2245.5531914893613], [401.0, 1810.1250000000002], [406.0, 1006.4], [405.0, 1545.78125], [404.0, 2174.0454545454545], [429.0, 886.25], [426.0, 2398.72491909385], [420.0, 1148.125], [422.0, 1689.5], [421.0, 1106.0], [427.0, 2113.0], [430.0, 2603.8], [431.0, 2080.0], [428.0, 990.5], [419.0, 830.5454545454545], [418.0, 2258.95], [417.0, 2375.166666666667], [416.0, 1833.875], [425.0, 2019.8333333333333], [424.0, 1549.2], [423.0, 1460.9], [446.0, 1890.8333333333333], [447.0, 1669.0], [445.0, 2145.3333333333335], [444.0, 1588.0], [443.0, 1385.2857142857142], [442.0, 1581.7142857142858], [441.0, 1759.5714285714284], [440.0, 1825.6], [439.0, 2301.833333333333], [433.0, 1337.2], [432.0, 844.5], [435.0, 1343.1666666666667], [434.0, 1707.142857142857], [438.0, 2314.666666666667], [437.0, 919.1111111111111], [436.0, 2047.4285714285716], [462.0, 1629.1666666666667], [463.0, 1581.6666666666667], [461.0, 2120.6666666666665], [460.0, 2235.3333333333335], [459.0, 2013.8333333333335], [458.0, 1507.142857142857], [457.0, 1958.8], [456.0, 1766.0], [455.0, 1569.4], [449.0, 1934.4285714285713], [448.0, 1869.0], [451.0, 1532.0], [450.0, 1521.6666666666665], [454.0, 2069.5], [453.0, 1090.8], [452.0, 1851.0], [476.0, 1770.6666666666667], [479.0, 2067.5], [473.0, 923.25], [472.0, 1645.4], [478.0, 1534.5], [477.0, 2124.2], [475.0, 3574.177083333332], [474.0, 1359.6666666666665], [467.0, 2619.1428571428573], [466.0, 1681.2], [465.0, 1386.8333333333335], [464.0, 2160.8333333333335], [471.0, 834.8], [470.0, 688.2], [469.0, 1327.9999999999998], [468.0, 1344.6], [494.0, 2433.0], [495.0, 3762.666666666667], [493.0, 2014.857142857143], [492.0, 2100.7272727272725], [491.0, 2755.0000000000005], [490.0, 2338.326923076925], [489.0, 1825.4999999999998], [488.0, 2109.142857142857], [487.0, 1281.1666666666665], [481.0, 1319.6363636363637], [480.0, 1952.2], [483.0, 2226.714285714286], [482.0, 2309.1386554621863], [486.0, 1767.5], [485.0, 2818.4], [484.0, 1424.1666666666665], [510.0, 1350.8999999999999], [511.0, 1886.7142857142856], [509.0, 1969.8333333333335], [508.0, 992.8750000000001], [507.0, 659.2307692307693], [506.0, 1368.4444444444443], [505.0, 1374.25], [504.0, 2131.9], [503.0, 1574.4], [497.0, 1959.0], [496.0, 1539.2], [499.0, 1648.4], [498.0, 2292.875], [502.0, 1765.7142857142856], [501.0, 2388.8333333333335], [500.0, 438.13333333333327], [540.0, 18672.25], [543.0, 1885.1666666666667], [529.0, 1772.125], [528.0, 2385.428571428571], [531.0, 2004.4444444444443], [530.0, 1193.2], [533.0, 1883.0], [532.0, 2481.1428571428573], [542.0, 2104.5], [541.0, 2176.25], [539.0, 1558.7999999999997], [538.0, 1936.25], [537.0, 1787.3333333333333], [536.0, 1899.375], [527.0, 1500.6], [513.0, 1295.1666666666665], [512.0, 1582.6666666666665], [515.0, 1537.3333333333337], [514.0, 833.5000000000001], [517.0, 1389.75], [516.0, 1722.6], [519.0, 1426.4], [518.0, 15540.66666666667], [526.0, 2150.4285714285716], [525.0, 1547.75], [524.0, 1741.3333333333335], [523.0, 1440.5714285714287], [522.0, 1819.5], [520.0, 2004.7142857142858], [521.0, 1872.1666666666665], [535.0, 1834.4444444444443], [534.0, 1985.2857142857144], [570.0, 1719.0], [574.0, 2668.125], [575.0, 1393.1999999999998], [560.0, 1978.6666666666667], [561.0, 2620.571428571429], [562.0, 2822.7142857142853], [565.0, 1825.1111111111113], [564.0, 1522.375], [563.0, 1842.2999999999997], [573.0, 1925.0], [572.0, 1804.6], [571.0, 3276.2], [569.0, 2675.5], [568.0, 1423.7777777777778], [551.0, 1852.111111111111], [550.0, 2379.0], [549.0, 1609.1111111111113], [548.0, 2107.1250000000005], [547.0, 2751.142857142857], [546.0, 1436.1666666666665], [545.0, 2491.2], [544.0, 2167.8], [559.0, 2158.125], [558.0, 2181.1111111111113], [557.0, 1971.4444444444443], [555.0, 2330.0], [554.0, 2251.333333333333], [556.0, 1352.6], [553.0, 1290.375], [552.0, 1088.9166666666667], [567.0, 1436.8888888888887], [566.0, 2127.2857142857147], [601.0, 1724.9285714285713], [606.0, 2925.6666666666665], [607.0, 3460.333333333333], [593.0, 1302.75], [592.0, 2257.0], [595.0, 2507.7], [594.0, 1648.6363636363635], [605.0, 2951.3333333333335], [604.0, 2672.1666666666665], [603.0, 3257.428571428571], [602.0, 1978.6], [591.0, 2075.142857142857], [577.0, 862.8], [576.0, 1987.5], [579.0, 2339.625], [578.0, 1270.153846153846], [581.0, 2524.5], [580.0, 1673.857142857143], [583.0, 2444.4285714285716], [600.0, 2107.0], [582.0, 3073.4748201438847], [590.0, 1343.0], [589.0, 1237.3333333333333], [588.0, 1495.7142857142858], [587.0, 2715.0], [586.0, 1857.1428571428569], [585.0, 1359.0], [584.0, 2189.25], [599.0, 1778.5000000000002], [598.0, 2665.0], [597.0, 2076.666666666667], [596.0, 1810.7142857142856], [633.0, 2779.0], [638.0, 4060.2857142857147], [639.0, 3926.833333333333], [625.0, 2986.2], [624.0, 2211.0], [627.0, 2352.8], [626.0, 2218.3333333333335], [629.0, 2950.8], [628.0, 3614.3333333333335], [636.0, 3012.1428571428573], [637.0, 2228.4], [635.0, 3482.5], [634.0, 3431.4285714285716], [632.0, 2800.857142857143], [615.0, 2844.833333333333], [614.0, 2306.857142857143], [613.0, 1562.6], [612.0, 2378.0], [611.0, 2804.5], [610.0, 3571.285714285714], [609.0, 2992.8], [608.0, 3671.714285714286], [623.0, 1995.3333333333335], [622.0, 2891.1666666666665], [621.0, 2512.0], [620.0, 2053.6], [619.0, 2151.714285714286], [618.0, 2514.2499999999995], [617.0, 1960.3333333333333], [616.0, 2911.875], [631.0, 3614.3333333333335], [630.0, 2755.714285714286], [645.0, 3171.5], [655.0, 2285.636363636364], [668.0, 4096.2], [667.0, 4986.6], [665.0, 3519.117549668873], [666.0, 2934.75], [664.0, 2773.6388888888887], [647.0, 3250.5], [646.0, 3660.5], [670.0, 2868.5], [669.0, 2836.0], [653.0, 2764.833333333333], [641.0, 3082.3333333333335], [640.0, 2773.8333333333335], [642.0, 4131.4], [644.0, 3020.2], [643.0, 2456.4], [671.0, 3311.4], [656.0, 2535.6666666666665], [657.0, 3008.4], [659.0, 2359.2727272727275], [658.0, 3595.5], [661.0, 3907.5], [660.0, 3009.8243727598556], [663.0, 3335.3], [662.0, 3470.0], [654.0, 2273.0], [651.0, 2859.25], [652.0, 3186.6666666666665], [650.0, 2953.0], [648.0, 2707.2], [649.0, 3709.0], [700.0, 3158.25], [703.0, 2805.6], [690.0, 3216.0], [689.0, 1265.4782608695655], [688.0, 3087.2], [701.0, 2710.6666666666665], [702.0, 2463.333333333333], [699.0, 3245.333333333333], [698.0, 3103.2], [697.0, 3329.0], [696.0, 3315.8571428571427], [695.0, 4537.142857142857], [694.0, 3185.1666666666665], [693.0, 3381.2], [692.0, 3229.0714285714284], [691.0, 2657.3333333333335], [687.0, 2862.6666666666665], [678.0, 2065.5333333333333], [679.0, 4129.2], [672.0, 4254.4], [674.0, 2734.0], [673.0, 2850.0], [676.0, 2673.3333333333335], [675.0, 2821.333333333333], [677.0, 3207.0], [683.0, 2699.125], [682.0, 4212.6], [681.0, 2951.75], [680.0, 2675.666666666667], [685.0, 3025.8], [686.0, 3916.25], [684.0, 3375.8], [729.0, 2938.25], [706.0, 3578.5], [730.0, 2981.75], [720.0, 3415.0], [721.0, 3005.5], [723.0, 3031.0], [722.0, 3147.6666666666665], [725.0, 2218.6666666666665], [724.0, 3322.2], [727.0, 2340.6666666666665], [726.0, 2556.75], [735.0, 2504.6666666666665], [734.0, 2541.0], [733.0, 2622.6666666666665], [732.0, 2347.6666666666665], [731.0, 2979.0], [719.0, 46620.66666666667], [718.0, 2867.0], [717.0, 2553.666666666667], [715.0, 2146.642857142857], [714.0, 2846.0], [716.0, 3314.695454545454], [712.0, 2300.538461538462], [713.0, 2802.2142857142853], [705.0, 3496.857142857143], [704.0, 2559.7142857142853], [708.0, 3014.051968503936], [707.0, 2468.0], [709.0, 2466.5], [710.0, 2466.875], [711.0, 2175.642857142857], [728.0, 2311.3333333333335], [761.0, 2438.75], [751.0, 4219.333333333333], [737.0, 2209.3333333333335], [736.0, 2248.25], [750.0, 2690.0], [749.0, 2518.25], [748.0, 2722.0], [747.0, 1821.0], [746.0, 1953.3333333333335], [745.0, 2235.3333333333335], [744.0, 2187.0], [738.0, 3689.25], [743.0, 2811.6666666666665], [742.0, 2657.6666666666665], [741.0, 2228.0], [740.0, 1991.5], [739.0, 3365.0], [760.0, 2536.3333333333335], [753.0, 2500.714285714286], [752.0, 2716.5], [765.0, 3756.2316384180795], [766.0, 3449.5], [767.0, 2075.5], [754.0, 2633.166666666667], [755.0, 3344.705882352941], [756.0, 3481.8], [759.0, 2352.5], [758.0, 2741.0], [757.0, 2386.0], [763.0, 2951.4444444444443], [762.0, 2868.3333333333335], [764.0, 3483.4999999999995], [796.0, 2998.3333333333335], [799.0, 4435.3675], [784.0, 3862.6], [787.0, 4617.150000000001], [786.0, 3638.2], [785.0, 3199.166666666667], [789.0, 2619.3333333333335], [788.0, 2467.75], [798.0, 4067.4179104477635], [797.0, 3871.777777777778], [795.0, 2831.9689440993807], [794.0, 2421.6], [793.0, 2162.4], [792.0, 3314.375], [783.0, 3358.4], [769.0, 2559.0], [768.0, 2199.0], [771.0, 1834.3333333333333], [770.0, 2230.0], [773.0, 3058.25], [772.0, 5168.6875], [775.0, 3523.0], [774.0, 2851.5], [782.0, 2854.25], [781.0, 3322.5], [780.0, 3066.5], [779.0, 2419.8], [778.0, 2845.75], [777.0, 3031.25], [776.0, 2480.3333333333335], [791.0, 1800.6666666666667], [790.0, 3308.2], [825.0, 3379.166666666667], [829.0, 3290.1818181818185], [831.0, 3514.5], [830.0, 2917.909090909091], [817.0, 2204.0], [816.0, 2435.0], [819.0, 3186.0714285714275], [818.0, 3682.2045454545455], [821.0, 3412.6666666666665], [820.0, 4336.657894736842], [828.0, 3180.0370370370365], [827.0, 3404.3333333333335], [826.0, 3709.3888888888882], [824.0, 3028.8], [807.0, 3424.3333333333335], [805.0, 4700.538461538461], [806.0, 3721.5], [804.0, 4894.109311740892], [803.0, 1909.175572519084], [802.0, 3191.966101694915], [801.0, 3586.4671532846696], [800.0, 3480.077844311376], [815.0, 2957.5], [814.0, 2571.0], [813.0, 3157.0], [812.0, 3080.25], [811.0, 2638.8], [810.0, 2618.3333333333335], [809.0, 3569.5], [808.0, 2467.5], [823.0, 2764.75], [822.0, 3368.75], [856.0, 2162.2], [862.0, 4527.042253521128], [863.0, 6197.671957671958], [849.0, 3213.0], [850.0, 2173.3333333333335], [848.0, 1555.5], [861.0, 3161.166666666667], [860.0, 3118.0], [857.0, 2058.5], [858.0, 3267.0], [859.0, 2530.0], [847.0, 2419.0], [833.0, 2910.2], [832.0, 2489.5], [835.0, 2998.6], [834.0, 2934.952380952381], [837.0, 2963.75], [836.0, 2485.0], [839.0, 1621.5], [838.0, 2181.75], [846.0, 1777.25], [845.0, 3112.25], [844.0, 2091.0], [843.0, 3462.0], [842.0, 2890.8], [841.0, 1906.75], [840.0, 2715.75], [855.0, 2597.6666666666665], [854.0, 2512.0], [853.0, 2703.5], [852.0, 2419.5], [851.0, 5552.041474654376], [892.0, 2335.8750000000005], [895.0, 2661.0], [881.0, 2930.2], [880.0, 2005.5], [883.0, 2707.75], [882.0, 3013.0], [885.0, 2799.6666666666665], [884.0, 2803.0], [894.0, 3671.366906474821], [893.0, 2246.0], [891.0, 3326.0], [890.0, 2959.5], [889.0, 2960.5], [888.0, 3804.0], [879.0, 1604.5], [865.0, 5466.423076923078], [864.0, 4773.7852760736205], [867.0, 2252.2], [866.0, 5021.297297297298], [869.0, 3360.6], [868.0, 4746.2972972972975], [871.0, 2215.6], [870.0, 1494.4], [878.0, 2692.7142857142862], [877.0, 3384.0], [876.0, 4619.2523659306025], [875.0, 3823.7142857142853], [874.0, 1315.0], [873.0, 3041.75], [872.0, 1949.3333333333333], [887.0, 2339.75], [886.0, 4054.5], [920.0, 2919.8], [914.0, 2273.25], [923.0, 3082.8], [925.0, 3414.8], [924.0, 2152.25], [922.0, 2795.8], [921.0, 2874.2], [911.0, 2433.0], [896.0, 2979.0], [898.0, 2011.4], [897.0, 2684.5], [900.0, 2999.0], [899.0, 2647.0], [902.0, 3891.8], [903.0, 3057.3333333333335], [901.0, 2884.5], [910.0, 4272.5], [909.0, 2748.0], [908.0, 2399.8333333333335], [907.0, 2079.6], [906.0, 2739.0], [905.0, 2607.333333333333], [904.0, 1956.8333333333333], [919.0, 2422.4], [918.0, 2175.4285714285716], [915.0, 2217.2], [917.0, 2835.0], [916.0, 2175.5], [913.0, 2527.6666666666665], [927.0, 2600.25], [912.0, 2600.0], [926.0, 2286.0499999999997], [956.0, 5342.25724637681], [959.0, 2300.285714285714], [945.0, 3402.8333333333335], [944.0, 3435.2], [947.0, 2478.6], [946.0, 2273.0], [949.0, 3790.0727802037854], [948.0, 2993.6], [958.0, 2527.25], [957.0, 2595.4], [955.0, 4155.7], [954.0, 3442.4285714285716], [953.0, 3052.8], [952.0, 2133.5555555555557], [943.0, 3087.5], [929.0, 2375.25], [928.0, 3126.25], [931.0, 2477.333333333333], [930.0, 2836.6666666666665], [933.0, 2467.4], [932.0, 2507.8333333333335], [935.0, 3550.2], [934.0, 2090.8], [942.0, 2373.1666666666665], [941.0, 3245.0], [940.0, 2325.2], [939.0, 8258.166666666666], [938.0, 3415.0], [937.0, 3599.25], [936.0, 3692.0], [951.0, 2077.285714285714], [950.0, 2800.0], [988.0, 2496.5], [991.0, 1559.0], [977.0, 2873.0], [976.0, 2237.6], [979.0, 1764.2], [978.0, 2516.4], [981.0, 2794.6], [980.0, 2332.4], [990.0, 2386.625], [989.0, 3962.0], [987.0, 3699.8], [986.0, 2479.8], [985.0, 2349.0], [984.0, 2404.8], [975.0, 3303.6666666666665], [961.0, 3406.6], [960.0, 2710.0], [963.0, 7734.166666666666], [962.0, 2137.3333333333335], [965.0, 2695.0], [964.0, 2832.5], [967.0, 2398.8], [966.0, 2522.4], [974.0, 2646.0], [973.0, 3255.5], [972.0, 2325.9999999999995], [970.0, 2115.4], [971.0, 3438.5], [969.0, 3004.0], [968.0, 2810.0], [983.0, 2188.8], [982.0, 2685.4], [996.0, 2775.9999999999995], [999.0, 3023.14406779661], [1000.0, 5430.904060311524], [998.0, 3197.1666666666665], [997.0, 2477.2], [995.0, 1633.6], [994.0, 1963.6], [993.0, 2007.0], [992.0, 2454.6666666666665], [1.0, 19.0]], "isOverall": false, "label": "Sunstar Home", "isController": false}, {"data": [[398.8203494288761, 2129.266855615699]], "isOverall": false, "label": "Sunstar Home-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 117.0, "minX": 1.62859922E12, "maxY": 1552030.8, "series": [{"data": [[1.6285999E12, 1030361.9], [1.62859956E12, 381059.4], [1.62860007E12, 1285069.8], [1.62859973E12, 724817.4], [1.62859922E12, 4382.5], [1.62859939E12, 233316.6], [1.62859998E12, 979942.0], [1.62859964E12, 1124161.8], [1.62859981E12, 1192913.4], [1.6285993E12, 938257.9], [1.62859947E12, 1184136.6], [1.62859974E12, 481992.6], [1.62859991E12, 730559.5], [1.6285994E12, 62900.4], [1.62859957E12, 216494.4], [1.62859923E12, 272017.8], [1.6286E12, 1176661.7], [1.62859982E12, 1215586.8], [1.62859999E12, 1179586.9], [1.62859948E12, 1080277.8], [1.62859965E12, 1086129.0], [1.62859931E12, 880485.2], [1.62860008E12, 1513998.0], [1.62859958E12, 63631.8], [1.62859975E12, 238436.4], [1.62859924E12, 500940.5], [1.62859941E12, 255990.0], [1.62860001E12, 1146061.3], [1.62859984E12, 1132663.6], [1.62859966E12, 1216318.2], [1.62859983E12, 608425.8], [1.62859932E12, 1231509.4], [1.62859949E12, 1072974.3], [1.62860009E12, 725548.8], [1.62859992E12, 481923.4], [1.62859942E12, 501740.4], [1.62859959E12, 258915.6], [1.62859925E12, 735687.8], [1.62859968E12, 966179.4], [1.62859985E12, 1153249.1], [1.62860002E12, 1178285.4], [1.6285995E12, 955209.1], [1.62859967E12, 1139521.2], [1.62859933E12, 877680.0], [1.62859976E12, 63631.8], [1.62859993E12, 237672.5], [1.6286001E12, 483455.4], [1.62859926E12, 977016.8], [1.62859943E12, 732875.3], [1.62859986E12, 1260022.6], [1.62859952E12, 1026885.6], [1.62860003E12, 989584.2], [1.62859969E12, 1119773.4], [1.62859934E12, 1200227.4], [1.62859951E12, 1372106.4], [1.62859994E12, 63623.1], [1.6285996E12, 491500.8], [1.62860011E12, 242093.4], [1.62859977E12, 262572.6], [1.62859927E12, 1094756.1], [1.62860004E12, 1054678.8], [1.6285997E12, 1146103.8], [1.62859987E12, 1159101.8], [1.62859936E12, 1220706.6], [1.62859953E12, 1278487.2], [1.62859935E12, 1189256.4], [1.62860012E12, 29987.4], [1.62859978E12, 505397.4], [1.62859995E12, 260347.0], [1.62859944E12, 985927.2], [1.62859961E12, 729205.8], [1.62860005E12, 1249231.2], [1.62859988E12, 1156908.5], [1.62859954E12, 1552030.8], [1.62859971E12, 1343581.8], [1.62859937E12, 984473.4], [1.62859996E12, 506059.6], [1.62859962E12, 984464.4], [1.62859979E12, 745296.6], [1.62859928E12, 1095487.4], [1.62859945E12, 1181942.4], [1.62859972E12, 1378689.0], [1.62859989E12, 1281123.6], [1.62860006E12, 1032736.8], [1.62859938E12, 466633.2], [1.62859955E12, 228196.8], [1.6285998E12, 971299.2], [1.62859997E12, 742269.5], [1.62859946E12, 1131475.8], [1.62859963E12, 1155612.0], [1.62859929E12, 1117426.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6285999E12, 27475.5], [1.62859956E12, 10159.5], [1.62860007E12, 34261.5], [1.62859973E12, 19324.5], [1.62859922E12, 117.0], [1.62859939E12, 6220.5], [1.62859998E12, 26130.0], [1.62859964E12, 29971.5], [1.62859981E12, 31804.5], [1.6285993E12, 25018.5], [1.62859947E12, 31570.5], [1.62859974E12, 12850.5], [1.62859991E12, 19480.5], [1.6285994E12, 1677.0], [1.62859957E12, 5772.0], [1.62859923E12, 7254.0], [1.6286E12, 31375.5], [1.62859982E12, 32409.0], [1.62859999E12, 31453.5], [1.62859948E12, 28801.5], [1.62859965E12, 28957.5], [1.62859931E12, 23478.0], [1.62860008E12, 40365.0], [1.62859958E12, 1696.5], [1.62859975E12, 6357.0], [1.62859924E12, 13357.5], [1.62859941E12, 6825.0], [1.62860001E12, 30556.5], [1.62859984E12, 30205.5], [1.62859966E12, 32428.5], [1.62859983E12, 16224.0], [1.62859932E12, 32838.0], [1.62859949E12, 28606.5], [1.62860009E12, 19344.0], [1.62859992E12, 12850.5], [1.62859942E12, 13377.0], [1.62859959E12, 6903.0], [1.62859925E12, 19617.0], [1.62859968E12, 25759.5], [1.62859985E12, 30751.5], [1.62860002E12, 31414.5], [1.6285995E12, 25467.0], [1.62859967E12, 30381.0], [1.62859933E12, 23400.0], [1.62859976E12, 1696.5], [1.62859993E12, 6337.5], [1.6286001E12, 12889.5], [1.62859926E12, 26052.0], [1.62859943E12, 19539.0], [1.62859986E12, 33598.5], [1.62859952E12, 27378.0], [1.62860003E12, 26383.5], [1.62859969E12, 29854.5], [1.62859934E12, 31999.5], [1.62859951E12, 36582.0], [1.62859994E12, 1696.5], [1.6285996E12, 13104.0], [1.62860011E12, 6454.5], [1.62859977E12, 7000.5], [1.62859927E12, 29191.5], [1.62860004E12, 28119.0], [1.6285997E12, 30556.5], [1.62859987E12, 30907.5], [1.62859936E12, 32545.5], [1.62859953E12, 34086.0], [1.62859935E12, 31707.0], [1.62860012E12, 799.5], [1.62859978E12, 13474.5], [1.62859995E12, 6942.0], [1.62859944E12, 26286.0], [1.62859961E12, 19441.5], [1.62860005E12, 33306.0], [1.62859988E12, 30849.0], [1.62859954E12, 41379.0], [1.62859971E12, 35821.5], [1.62859937E12, 26247.0], [1.62859996E12, 13494.0], [1.62859962E12, 26247.0], [1.62859979E12, 19870.5], [1.62859928E12, 29211.0], [1.62859945E12, 31512.0], [1.62859972E12, 36757.5], [1.62859989E12, 34164.0], [1.62860006E12, 27534.0], [1.62859938E12, 12441.0], [1.62859955E12, 6084.0], [1.6285998E12, 25896.0], [1.62859997E12, 19792.5], [1.62859946E12, 30166.5], [1.62859963E12, 30810.0], [1.62859929E12, 29796.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62860012E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 13.710564399421123, "minX": 1.62859922E12, "maxY": 6688.240028490028, "series": [{"data": [[1.6285999E12, 290.7636621717529], [1.62859956E12, 2302.785028790785], [1.62860007E12, 5809.363688104724], [1.62859973E12, 23.26337033299694], [1.62859922E12, 933.1666666666666], [1.62859939E12, 48.811912225705335], [1.62859998E12, 30.267164179104494], [1.62859964E12, 505.3070917371507], [1.62859981E12, 43.581238503985276], [1.6285993E12, 1803.9625876851123], [1.62859947E12, 1059.7263743051237], [1.62859974E12, 20.602427921092563], [1.62859991E12, 1011.8938938938936], [1.6285994E12, 51.09302325581394], [1.62859957E12, 48.89527027027029], [1.62859923E12, 92.93279569892472], [1.6286E12, 228.80857675574876], [1.62859982E12, 162.7268351383875], [1.62859999E12, 59.88964662120271], [1.62859948E12, 2130.564658090719], [1.62859965E12, 1806.2383838383835], [1.62859931E12, 4286.031561461798], [1.62860008E12, 2844.863768115945], [1.62859958E12, 46.95402298850575], [1.62859975E12, 20.52147239263803], [1.62859924E12, 36.202919708029164], [1.62859941E12, 51.81428571428572], [1.62860001E12, 705.8621569878757], [1.62859984E12, 863.8760490639118], [1.62859966E12, 1296.237522549605], [1.62859983E12, 323.2295673076924], [1.62859932E12, 6353.833729216147], [1.62859949E12, 4311.044989775049], [1.62860009E12, 22.65826612903227], [1.62859992E12, 567.8072837632775], [1.62859942E12, 57.454810495626795], [1.62859959E12, 46.94067796610171], [1.62859925E12, 39.702783300198824], [1.62859968E12, 2452.4882664647976], [1.62859985E12, 1687.843373493976], [1.62860002E12, 2087.612662942272], [1.6285995E12, 5836.013016845331], [1.62859967E12, 2274.104621309372], [1.62859933E12, 5717.205000000006], [1.62859976E12, 22.229885057471268], [1.62859993E12, 21.024615384615373], [1.6286001E12, 22.024205748865345], [1.62859926E12, 64.92440119760475], [1.62859943E12, 40.72554890219562], [1.62859986E12, 2313.530470110272], [1.62859952E12, 6688.240028490028], [1.62860003E12, 3473.289726533625], [1.62859969E12, 3513.864141084255], [1.62859934E12, 5882.205971968296], [1.62859951E12, 5012.887526652447], [1.62859994E12, 21.241379310344833], [1.6285996E12, 48.76190476190477], [1.62860011E12, 20.253776435045324], [1.62859977E12, 16.548746518105833], [1.62859927E12, 152.4335337341352], [1.62860004E12, 4733.735090152578], [1.6285997E12, 6116.029355456287], [1.62859987E12, 1003.1716088328067], [1.62859936E12, 4879.894547633312], [1.62859953E12, 5050.8724256292835], [1.62859935E12, 6570.413899138993], [1.62860012E12, 22.390243902439025], [1.62859978E12, 13.710564399421123], [1.62859995E12, 23.078651685393254], [1.62859944E12, 32.45623145400596], [1.62859961E12, 51.706118355065186], [1.62860005E12, 4913.726580796251], [1.62859988E12, 1582.3407079646004], [1.62859954E12, 3292.717719132887], [1.62859971E12, 5447.18617310833], [1.62859937E12, 1113.1656760772667], [1.62859996E12, 22.76589595375724], [1.62859962E12, 30.93313521545317], [1.62859979E12, 15.421000981354249], [1.62859928E12, 565.5313751668903], [1.62859945E12, 70.86386138613845], [1.62859972E12, 2842.9978779840767], [1.62859989E12, 1476.9857305936084], [1.62860006E12, 5746.06232294618], [1.62859938E12, 68.52037617554866], [1.62859955E12, 2187.535256410256], [1.6285998E12, 18.929216867469894], [1.62859997E12, 25.228571428571435], [1.62859946E12, 444.756948933419], [1.62859963E12, 88.78924050632887], [1.62859929E12, 1230.1976439790583]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62860012E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 13.532561505065136, "minX": 1.62859922E12, "maxY": 6687.618233618233, "series": [{"data": [[1.6285999E12, 290.3506032647272], [1.62859956E12, 2302.5930902111327], [1.62860007E12, 5808.247581104161], [1.62859973E12, 23.07265388496467], [1.62859922E12, 930.4999999999999], [1.62859939E12, 48.62068965517242], [1.62859998E12, 30.01641791044775], [1.62859964E12, 501.1789199739756], [1.62859981E12, 43.239730226854704], [1.6285993E12, 1794.2618862042107], [1.62859947E12, 1054.789993823349], [1.62859974E12, 20.388467374810315], [1.62859991E12, 1011.6666666666666], [1.6285994E12, 50.825581395348834], [1.62859957E12, 48.726351351351326], [1.62859923E12, 92.50268817204311], [1.6286E12, 228.38098197638328], [1.62859982E12, 162.2376654632973], [1.62859999E12, 59.629262244265284], [1.62859948E12, 2128.8700067704826], [1.62859965E12, 1802.54276094276], [1.62859931E12, 4271.911129568112], [1.62860008E12, 2843.8497584541046], [1.62859958E12, 46.79310344827587], [1.62859975E12, 20.33435582822084], [1.62859924E12, 35.740145985401426], [1.62859941E12, 51.61142857142859], [1.62860001E12, 705.3056796426288], [1.62859984E12, 860.5861846352497], [1.62859966E12, 1293.055923030669], [1.62859983E12, 322.4879807692304], [1.62859932E12, 6348.505344418057], [1.62859949E12, 4300.214042263125], [1.62860009E12, 22.46572580645161], [1.62859992E12, 567.6403641881633], [1.62859942E12, 57.18950437317784], [1.62859959E12, 46.745762711864415], [1.62859925E12, 39.309145129224625], [1.62859968E12, 2443.6510219530696], [1.62859985E12, 1684.3088142041868], [1.62860002E12, 2085.0086902544945], [1.6285995E12, 5826.442572741193], [1.62859967E12, 2266.630295250319], [1.62859933E12, 5713.665000000002], [1.62859976E12, 22.068965517241374], [1.62859993E12, 20.84307692307693], [1.6286001E12, 21.83661119515885], [1.62859926E12, 64.62125748502993], [1.62859943E12, 40.49301397205592], [1.62859986E12, 2302.708067324435], [1.62859952E12, 6687.618233618233], [1.62860003E12, 3469.0946045824107], [1.62859969E12, 3511.711299804048], [1.62859934E12, 5856.34734917733], [1.62859951E12, 5011.046908315565], [1.62859994E12, 21.057471264367816], [1.6285996E12, 48.57440476190476], [1.62860011E12, 20.114803625377643], [1.62859977E12, 16.334261838440135], [1.62859927E12, 152.14762859051453], [1.62860004E12, 4726.889042995835], [1.6285997E12, 6099.784301212518], [1.62859987E12, 1000.8845425867505], [1.62859936E12, 4876.319952067103], [1.62859953E12, 5048.633867276877], [1.62859935E12, 6569.311808118085], [1.62860012E12, 22.219512195121958], [1.62859978E12, 13.532561505065136], [1.62859995E12, 22.85674157303371], [1.62859944E12, 32.22922848664685], [1.62859961E12, 51.467402206619916], [1.62860005E12, 4909.351288056209], [1.62859988E12, 1568.2781289506959], [1.62859954E12, 3290.810556079171], [1.62859971E12, 5445.876428960264], [1.62859937E12, 1111.870728083211], [1.62859996E12, 22.58381502890169], [1.62859962E12, 30.681277860326865], [1.62859979E12, 15.1972522080471], [1.62859928E12, 563.2950600801073], [1.62859945E12, 70.62066831683174], [1.62859972E12, 2841.50397877984], [1.62859989E12, 1475.5348173515993], [1.62860006E12, 5715.715297450427], [1.62859938E12, 68.25391849529781], [1.62859955E12, 2187.1538461538457], [1.6285998E12, 18.59563253012053], [1.62859997E12, 25.007881773398978], [1.62859946E12, 444.142857142857], [1.62859963E12, 88.50506329113932], [1.62859929E12, 1225.070026178011]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62860012E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 12.386396526772794, "minX": 1.62859922E12, "maxY": 6651.237891737889, "series": [{"data": [[1.6285999E12, 176.01419446415915], [1.62859956E12, 2292.7351247600805], [1.62860007E12, 5766.694365395558], [1.62859973E12, 19.89606458123109], [1.62859922E12, 240.83333333333331], [1.62859939E12, 39.07210031347964], [1.62859998E12, 25.70746268656717], [1.62859964E12, 489.59466493168475], [1.62859981E12, 40.13427345187001], [1.6285993E12, 1746.3538581449734], [1.62859947E12, 1021.8536133415678], [1.62859974E12, 17.503793626707115], [1.62859991E12, 22.537537537537556], [1.6285994E12, 41.27906976744188], [1.62859957E12, 39.08445945945945], [1.62859923E12, 43.24999999999994], [1.6286E12, 221.49160969546293], [1.62859982E12, 157.0162454873647], [1.62859999E12, 54.24674519528828], [1.62859948E12, 2082.0216655382546], [1.62859965E12, 1783.4444444444446], [1.62859931E12, 4057.9368770764095], [1.62860008E12, 2797.340579710145], [1.62859958E12, 37.47126436781609], [1.62859975E12, 17.487730061349698], [1.62859924E12, 31.210218978102173], [1.62859941E12, 41.885714285714265], [1.62860001E12, 694.6088066368873], [1.62859984E12, 714.5597159457699], [1.62859966E12, 1271.425135297654], [1.62859983E12, 284.9218749999994], [1.62859932E12, 6257.568883610454], [1.62859949E12, 4244.413769597817], [1.62860009E12, 19.243951612903235], [1.62859992E12, 19.767830045523535], [1.62859942E12, 47.12099125364433], [1.62859959E12, 37.27118644067794], [1.62859925E12, 34.91351888667995], [1.62859968E12, 2409.5276305828943], [1.62859985E12, 1453.0995561192121], [1.62860002E12, 2044.8355058969566], [1.6285995E12, 5725.106431852984], [1.62859967E12, 2236.363928112963], [1.62859933E12, 5651.357500000002], [1.62859976E12, 19.091954022988507], [1.62859993E12, 17.93538461538462], [1.6286001E12, 18.72012102874433], [1.62859926E12, 59.71706586826357], [1.62859943E12, 33.55389221556889], [1.62859986E12, 2076.6372605919873], [1.62859952E12, 6651.237891737889], [1.62860003E12, 3383.844789356984], [1.62859969E12, 3446.3651208360575], [1.62859934E12, 5777.95307739183], [1.62859951E12, 4956.170575692966], [1.62859994E12, 18.09195402298851], [1.6285996E12, 39.03571428571425], [1.62860011E12, 17.145015105740196], [1.62859977E12, 14.997214484679668], [1.62859927E12, 146.26586506346044], [1.62860004E12, 4664.67128987517], [1.6285997E12, 6036.405232929162], [1.62859987E12, 688.7823343848582], [1.62859936E12, 4773.065308568009], [1.62859953E12, 4998.1813501144115], [1.62859935E12, 6501.191266912675], [1.62860012E12, 19.000000000000004], [1.62859978E12, 12.386396526772794], [1.62859995E12, 19.053370786516844], [1.62859944E12, 27.8672106824926], [1.62859961E12, 41.54363089267804], [1.62860005E12, 4849.328454332552], [1.62859988E12, 1170.5594184576487], [1.62859954E12, 3253.410933081997], [1.62859971E12, 5400.037561241144], [1.62859937E12, 1086.5475482912325], [1.62859996E12, 19.236994219653166], [1.62859962E12, 26.155274888558687], [1.62859979E12, 13.978410206084408], [1.62859928E12, 550.0], [1.62859945E12, 65.04331683168313], [1.62859972E12, 2811.4615384615404], [1.62859989E12, 1318.475456621005], [1.62860006E12, 5568.131019830028], [1.62859938E12, 57.275862068965516], [1.62859955E12, 2184.682692307693], [1.6285998E12, 16.9314759036145], [1.62859997E12, 21.181280788177354], [1.62859946E12, 431.98448610213336], [1.62859963E12, 83.43544303797464], [1.62859929E12, 1195.8468586387453]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62860012E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.62859922E12, "maxY": 138804.0, "series": [{"data": [[1.6285999E12, 76960.0], [1.62859956E12, 131249.0], [1.62860007E12, 13722.0], [1.62859973E12, 98.0], [1.62859922E12, 4694.0], [1.62859939E12, 125.0], [1.62859998E12, 154.0], [1.62859964E12, 1483.0], [1.62859981E12, 160.0], [1.6285993E12, 5007.0], [1.62859947E12, 3073.0], [1.62859974E12, 108.0], [1.62859991E12, 86703.0], [1.6285994E12, 96.0], [1.62859957E12, 437.0], [1.62859923E12, 4594.0], [1.6286E12, 527.0], [1.62859982E12, 379.0], [1.62859999E12, 372.0], [1.62859948E12, 6040.0], [1.62859965E12, 4825.0], [1.62859931E12, 10041.0], [1.62860008E12, 9640.0], [1.62859958E12, 86.0], [1.62859975E12, 62.0], [1.62859924E12, 99.0], [1.62859941E12, 124.0], [1.62860001E12, 5261.0], [1.62859984E12, 17268.0], [1.62859966E12, 65988.0], [1.62859983E12, 6074.0], [1.62859932E12, 14813.0], [1.62859949E12, 9876.0], [1.62860009E12, 152.0], [1.62859992E12, 91157.0], [1.62859942E12, 248.0], [1.62859959E12, 108.0], [1.62859925E12, 146.0], [1.62859968E12, 67038.0], [1.62859985E12, 27045.0], [1.62860002E12, 5491.0], [1.6285995E12, 132920.0], [1.62859967E12, 66715.0], [1.62859933E12, 10799.0], [1.62859976E12, 40.0], [1.62859993E12, 39.0], [1.6286001E12, 271.0], [1.62859926E12, 153.0], [1.62859943E12, 266.0], [1.62859986E12, 37354.0], [1.62859952E12, 138804.0], [1.62860003E12, 9377.0], [1.62859969E12, 133977.0], [1.62859934E12, 16608.0], [1.62859951E12, 136467.0], [1.62859994E12, 32.0], [1.6285996E12, 118.0], [1.62860011E12, 63.0], [1.62859977E12, 97.0], [1.62859927E12, 321.0], [1.62860004E12, 10058.0], [1.6285997E12, 135599.0], [1.62859987E12, 47032.0], [1.62859936E12, 13751.0], [1.62859953E12, 138730.0], [1.62859935E12, 15916.0], [1.62860012E12, 36.0], [1.62859978E12, 130.0], [1.62859995E12, 66.0], [1.62859944E12, 97.0], [1.62859961E12, 189.0], [1.62860005E12, 13647.0], [1.62859988E12, 57198.0], [1.62859954E12, 132260.0], [1.62859971E12, 135067.0], [1.62859937E12, 8354.0], [1.62859996E12, 95.0], [1.62859962E12, 95.0], [1.62859979E12, 148.0], [1.62859928E12, 2999.0], [1.62859945E12, 231.0], [1.62859972E12, 133301.0], [1.62859989E12, 59526.0], [1.62860006E12, 15733.0], [1.62859938E12, 182.0], [1.62859955E12, 130860.0], [1.6285998E12, 130.0], [1.62859997E12, 62.0], [1.62859946E12, 2239.0], [1.62859963E12, 275.0], [1.62859929E12, 2559.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6285999E12, 14.0], [1.62859956E12, 40.0], [1.62860007E12, 893.0], [1.62859973E12, 13.0], [1.62859922E12, 167.0], [1.62859939E12, 41.0], [1.62859998E12, 20.0], [1.62859964E12, 104.0], [1.62859981E12, 12.0], [1.6285993E12, 56.0], [1.62859947E12, 270.0], [1.62859974E12, 13.0], [1.62859991E12, 13.0], [1.6285994E12, 42.0], [1.62859957E12, 40.0], [1.62859923E12, 18.0], [1.6286E12, 59.0], [1.62859982E12, 47.0], [1.62859999E12, 22.0], [1.62859948E12, 213.0], [1.62859965E12, 84.0], [1.62859931E12, 909.0], [1.62860008E12, 14.0], [1.62859958E12, 41.0], [1.62859975E12, 13.0], [1.62859924E12, 16.0], [1.62859941E12, 41.0], [1.62860001E12, 93.0], [1.62859984E12, 100.0], [1.62859966E12, 50.0], [1.62859983E12, 13.0], [1.62859932E12, 1312.0], [1.62859949E12, 644.0], [1.62860009E12, 14.0], [1.62859992E12, 13.0], [1.62859942E12, 41.0], [1.62859959E12, 41.0], [1.62859925E12, 15.0], [1.62859968E12, 723.0], [1.62859985E12, 222.0], [1.62860002E12, 327.0], [1.6285995E12, 1101.0], [1.62859967E12, 310.0], [1.62859933E12, 1287.0], [1.62859976E12, 14.0], [1.62859993E12, 14.0], [1.6286001E12, 13.0], [1.62859926E12, 18.0], [1.62859943E12, 20.0], [1.62859986E12, 21.0], [1.62859952E12, 1348.0], [1.62860003E12, 425.0], [1.62859969E12, 304.0], [1.62859934E12, 1823.0], [1.62859951E12, 874.0], [1.62859994E12, 14.0], [1.6285996E12, 41.0], [1.62860011E12, 13.0], [1.62859977E12, 10.0], [1.62859927E12, 64.0], [1.62860004E12, 1122.0], [1.6285997E12, 1201.0], [1.62859987E12, 116.0], [1.62859936E12, 432.0], [1.62859953E12, 1189.0], [1.62859935E12, 1484.0], [1.62860012E12, 14.0], [1.62859978E12, 10.0], [1.62859995E12, 14.0], [1.62859944E12, 20.0], [1.62859961E12, 41.0], [1.62860005E12, 23.0], [1.62859988E12, 51.0], [1.62859954E12, 22.0], [1.62859971E12, 520.0], [1.62859937E12, 23.0], [1.62859996E12, 18.0], [1.62859962E12, 14.0], [1.62859979E12, 10.0], [1.62859928E12, 134.0], [1.62859945E12, 22.0], [1.62859972E12, 15.0], [1.62859989E12, 151.0], [1.62860006E12, 400.0], [1.62859938E12, 42.0], [1.62859955E12, 14.0], [1.6285998E12, 10.0], [1.62859997E12, 19.0], [1.62859946E12, 25.0], [1.62859963E12, 16.0], [1.62859929E12, 95.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6285999E12, 558.0], [1.62859956E12, 58.0], [1.62860007E12, 8511.6], [1.62859973E12, 30.0], [1.62859922E12, 4694.0], [1.62859939E12, 55.0], [1.62859998E12, 40.0], [1.62859964E12, 871.2], [1.62859981E12, 69.0], [1.6285993E12, 2795.6000000000004], [1.62859947E12, 1447.0], [1.62859974E12, 26.0], [1.62859991E12, 30.0], [1.6285994E12, 61.3], [1.62859957E12, 53.0], [1.62859923E12, 81.0], [1.6286E12, 384.0], [1.62859982E12, 255.0], [1.62859999E12, 88.0], [1.62859948E12, 3949.2], [1.62859965E12, 3868.600000000001], [1.62859931E12, 6467.5], [1.62860008E12, 5212.8], [1.62859958E12, 51.0], [1.62859975E12, 26.0], [1.62859924E12, 51.39999999999998], [1.62859941E12, 62.0], [1.62860001E12, 761.2], [1.62859984E12, 1068.0], [1.62859966E12, 2490.8000000000065], [1.62859983E12, 446.10000000000014], [1.62859932E12, 9993.5], [1.62859949E12, 6437.2], [1.62860009E12, 29.0], [1.62859992E12, 27.0], [1.62859942E12, 80.0], [1.62859959E12, 52.0], [1.62859925E12, 64.30000000000007], [1.62859968E12, 2883.0], [1.62859985E12, 2515.800000000004], [1.62860002E12, 3046.3999999999996], [1.6285995E12, 7722.0], [1.62859967E12, 2391.0], [1.62859933E12, 8460.300000000003], [1.62859976E12, 29.0], [1.62859993E12, 26.0], [1.6286001E12, 27.0], [1.62859926E12, 89.0], [1.62859943E12, 55.0], [1.62859986E12, 4098.8], [1.62859952E12, 8881.0], [1.62860003E12, 5194.200000000001], [1.62859969E12, 4950.0], [1.62859934E12, 8578.6], [1.62859951E12, 6972.9], [1.62859994E12, 26.200000000000003], [1.6285996E12, 54.0], [1.62860011E12, 25.0], [1.62859977E12, 21.0], [1.62859927E12, 228.0], [1.62860004E12, 7192.500000000001], [1.6285997E12, 7742.2], [1.62859987E12, 960.0], [1.62859936E12, 7572.0], [1.62859953E12, 7217.400000000001], [1.62859935E12, 10056.9], [1.62860012E12, 29.60000000000001], [1.62859978E12, 17.0], [1.62859995E12, 28.0], [1.62859944E12, 45.0], [1.62859961E12, 61.0], [1.62860005E12, 7500.0], [1.62859988E12, 1613.1000000000001], [1.62859954E12, 6012.8], [1.62859971E12, 8046.4], [1.62859937E12, 3794.0], [1.62859996E12, 26.0], [1.62859962E12, 48.0], [1.62859979E12, 19.0], [1.62859928E12, 911.3000000000004], [1.62859945E12, 124.0], [1.62859972E12, 4772.0], [1.62859989E12, 1837.0], [1.62860006E12, 8114.4000000000015], [1.62859938E12, 99.0], [1.62859955E12, 333.0], [1.6285998E12, 27.0], [1.62859997E12, 30.0], [1.62859946E12, 778.0], [1.62859963E12, 167.9000000000001], [1.62859929E12, 1820.2000000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6285999E12, 1268.700000000002], [1.62859956E12, 130642.59999999999], [1.62860007E12, 11062.500000000002], [1.62859973E12, 44.08000000000004], [1.62859922E12, 4694.0], [1.62859939E12, 73.80000000000001], [1.62859998E12, 57.58999999999992], [1.62859964E12, 1285.4799999999996], [1.62859981E12, 100.68000000000006], [1.6285993E12, 3905.6400000000003], [1.62859947E12, 2496.3999999999996], [1.62859974E12, 33.799999999999955], [1.62859991E12, 79320.0], [1.6285994E12, 96.0], [1.62859957E12, 90.08999999999992], [1.62859923E12, 3500.4899999999766], [1.6286E12, 476.9000000000001], [1.62859982E12, 324.0], [1.62859999E12, 110.0], [1.62859948E12, 5169.720000000001], [1.62859965E12, 4676.700000000001], [1.62859931E12, 9294.550000000007], [1.62860008E12, 7590.019999999991], [1.62859958E12, 86.0], [1.62859975E12, 41.570000000000164], [1.62859924E12, 73.0], [1.62859941E12, 85.47000000000003], [1.62860001E12, 4991.32], [1.62859984E12, 6450.0], [1.62859966E12, 4739.0], [1.62859983E12, 924.3799999999994], [1.62859932E12, 13066.800000000001], [1.62859949E12, 8262.199999999997], [1.62860009E12, 39.34999999999968], [1.62859992E12, 51.19999999999982], [1.62859942E12, 140.39], [1.62859959E12, 77.44999999999999], [1.62859925E12, 101.92999999999995], [1.62859968E12, 7635.499999999998], [1.62859985E12, 5876.260000000002], [1.62860002E12, 5008.0], [1.6285995E12, 9925.23000000002], [1.62859967E12, 6752.1], [1.62859933E12, 10124.380000000001], [1.62859976E12, 40.0], [1.62859993E12, 31.0], [1.6286001E12, 44.41999999999996], [1.62859926E12, 113.0], [1.62859943E12, 83.91000000000008], [1.62859986E12, 5535.88], [1.62859952E12, 12457.2], [1.62860003E12, 7096.420000000005], [1.62859969E12, 5507.200000000001], [1.62859934E12, 12526.879999999997], [1.62859951E12, 10032.45], [1.62859994E12, 32.0], [1.6285996E12, 80.0], [1.62860011E12, 45.12000000000006], [1.62859977E12, 71.79999999999984], [1.62859927E12, 287.0], [1.62860004E12, 9196.439999999995], [1.6285997E12, 10361.599999999991], [1.62859987E12, 1264.9399999999973], [1.62859936E12, 11754.099999999999], [1.62859953E12, 9717.659999999998], [1.62859935E12, 13234.76], [1.62860012E12, 36.0], [1.62859978E12, 47.320000000000164], [1.62859995E12, 59.87000000000006], [1.62859944E12, 70.03999999999996], [1.62859961E12, 86.05999999999995], [1.62860005E12, 10682.470000000001], [1.62859988E12, 7221.250000000002], [1.62859954E12, 8682.439999999999], [1.62859971E12, 10130.019999999993], [1.62859937E12, 7994.6199999999935], [1.62859996E12, 49.0], [1.62859962E12, 65.05999999999995], [1.62859979E12, 42.19999999999982], [1.62859928E12, 1214.1499999999999], [1.62859945E12, 171.0], [1.62859972E12, 6576.279999999993], [1.62859989E12, 2225.94], [1.62860006E12, 10489.509999999991], [1.62859938E12, 140.61], [1.62859955E12, 130584.1], [1.6285998E12, 53.0], [1.62859997E12, 44.84000000000003], [1.62859946E12, 1943.7599999999998], [1.62859963E12, 234.57000000000016], [1.62859929E12, 2179.13]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6285999E12, 778.0], [1.62859956E12, 71.0], [1.62860007E12, 9898.699999999995], [1.62859973E12, 32.0], [1.62859922E12, 4694.0], [1.62859939E12, 58.0], [1.62859998E12, 44.0], [1.62859964E12, 1037.1999999999998], [1.62859981E12, 73.0], [1.6285993E12, 2979.5999999999995], [1.62859947E12, 1588.0], [1.62859974E12, 28.0], [1.62859991E12, 34.0], [1.6285994E12, 70.84999999999992], [1.62859957E12, 60.0], [1.62859923E12, 114.79999999999973], [1.6286E12, 417.5], [1.62859982E12, 282.0], [1.62859999E12, 97.0], [1.62859948E12, 4678.299999999999], [1.62859965E12, 4247.7], [1.62859931E12, 7262.25], [1.62860008E12, 5888.199999999997], [1.62859958E12, 54.599999999999994], [1.62859975E12, 28.649999999999977], [1.62859924E12, 61.0], [1.62859941E12, 69.0], [1.62860001E12, 889.599999999999], [1.62859984E12, 1271.5], [1.62859966E12, 3759.1999999999985], [1.62859983E12, 798.6499999999983], [1.62859932E12, 10516.75], [1.62859949E12, 7068.2], [1.62860009E12, 31.0], [1.62859992E12, 30.0], [1.62859942E12, 102.0], [1.62859959E12, 57.0], [1.62859925E12, 75.0], [1.62859968E12, 3319.9999999999973], [1.62859985E12, 5031.5], [1.62860002E12, 3874.0], [1.6285995E12, 7925.199999999999], [1.62859967E12, 5180.449999999995], [1.62859933E12, 9066.400000000001], [1.62859976E12, 30.0], [1.62859993E12, 28.0], [1.6286001E12, 29.0], [1.62859926E12, 96.0], [1.62859943E12, 60.0], [1.62859986E12, 4960.8], [1.62859952E12, 10111.0], [1.62860003E12, 5690.9], [1.62859969E12, 5119.0], [1.62859934E12, 9589.399999999998], [1.62859951E12, 8153.599999999999], [1.62859994E12, 28.599999999999994], [1.6285996E12, 58.0], [1.62860011E12, 27.0], [1.62859977E12, 26.0], [1.62859927E12, 246.0], [1.62860004E12, 7966.099999999999], [1.6285997E12, 8364.399999999998], [1.62859987E12, 1048.0], [1.62859936E12, 8981.0], [1.62859953E12, 8161.549999999996], [1.62859935E12, 10890.599999999999], [1.62860012E12, 31.9], [1.62859978E12, 19.0], [1.62859995E12, 30.0], [1.62859944E12, 52.0], [1.62859961E12, 66.0], [1.62860005E12, 8290.8], [1.62859988E12, 1870.0], [1.62859954E12, 7254.85], [1.62859971E12, 8529.5], [1.62859937E12, 5192.949999999994], [1.62859996E12, 30.0], [1.62859962E12, 54.0], [1.62859979E12, 24.0], [1.62859928E12, 1021.0999999999999], [1.62859945E12, 140.0], [1.62859972E12, 5601.4], [1.62859989E12, 1971.35], [1.62860006E12, 9257.7], [1.62859938E12, 108.0], [1.62859955E12, 368.0499999999999], [1.6285998E12, 32.0], [1.62859997E12, 33.0], [1.62859946E12, 1734.1999999999966], [1.62859963E12, 192.0], [1.62859929E12, 1956.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62860012E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 18.0, "minX": 1.0, "maxY": 7546.5, "series": [{"data": [[2.0, 50.5], [3.0, 2848.5], [4.0, 35.5], [5.0, 1459.0], [6.0, 2189.0], [7.0, 1276.0], [8.0, 24.0], [9.0, 1429.5], [10.0, 22.5], [11.0, 46.0], [12.0, 1367.0], [13.0, 23.0], [14.0, 26.0], [15.0, 3627.0], [17.0, 46.0], [18.0, 612.5], [19.0, 45.0], [20.0, 22.0], [21.0, 46.0], [22.0, 3007.5], [23.0, 46.5], [24.0, 45.0], [25.0, 41.0], [26.0, 24.5], [27.0, 42.0], [28.0, 46.5], [29.0, 45.0], [30.0, 35.5], [31.0, 44.0], [32.0, 22.5], [33.0, 45.0], [35.0, 31.0], [34.0, 24.0], [37.0, 49.0], [36.0, 6089.5], [38.0, 19.0], [41.0, 27.5], [40.0, 44.0], [42.0, 48.5], [43.0, 47.0], [44.0, 46.0], [45.0, 21.0], [47.0, 48.0], [46.0, 2633.5], [49.0, 2206.0], [48.0, 22.0], [50.0, 42.0], [51.0, 18.0], [53.0, 43.0], [54.0, 41.0], [55.0, 51.0], [57.0, 24.0], [56.0, 36.5], [59.0, 54.0], [58.0, 44.0], [60.0, 24.0], [61.0, 46.0], [62.0, 54.0], [63.0, 40.0], [67.0, 38.0], [64.0, 3263.0], [66.0, 43.5], [65.0, 22.0], [68.0, 36.5], [71.0, 27.0], [70.0, 48.0], [69.0, 4443.0], [73.0, 1818.0], [72.0, 71.5], [74.0, 24.0], [75.0, 48.0], [78.0, 598.5], [79.0, 2263.0], [77.0, 51.0], [76.0, 21.0], [82.0, 36.0], [80.0, 46.0], [83.0, 49.0], [81.0, 27.0], [86.0, 228.0], [87.0, 43.0], [84.0, 843.5], [85.0, 22.0], [91.0, 30.0], [90.0, 3341.5], [88.0, 58.5], [89.0, 1325.5], [94.0, 28.0], [95.0, 42.5], [92.0, 496.5], [93.0, 24.0], [98.0, 45.0], [99.0, 3949.0], [96.0, 42.0], [97.0, 2665.0], [100.0, 279.5], [101.0, 74.0], [102.0, 23.0], [103.0, 40.5], [105.0, 66.0], [104.0, 34.0], [106.0, 62.0], [107.0, 26.0], [111.0, 1805.5], [109.0, 1368.0], [108.0, 23.5], [110.0, 27.0], [115.0, 27.0], [114.0, 43.0], [112.0, 33.0], [113.0, 29.0], [119.0, 407.5], [116.0, 29.5], [117.0, 40.5], [118.0, 304.0], [123.0, 724.0], [120.0, 1620.0], [122.0, 31.0], [121.0, 577.0], [127.0, 50.0], [125.0, 28.0], [124.0, 5621.5], [126.0, 27.0], [130.0, 87.0], [134.0, 319.0], [133.0, 54.0], [132.0, 693.5], [128.0, 1222.5], [129.0, 247.5], [135.0, 600.0], [131.0, 29.0], [137.0, 72.0], [143.0, 43.5], [136.0, 381.5], [141.0, 1165.0], [138.0, 1344.0], [139.0, 28.0], [142.0, 758.5], [140.0, 53.0], [147.0, 203.5], [144.0, 32.0], [145.0, 77.5], [148.0, 983.0], [151.0, 421.0], [146.0, 893.0], [149.0, 376.0], [150.0, 146.5], [155.0, 589.0], [153.0, 552.0], [157.0, 400.0], [154.0, 270.5], [159.0, 122.0], [152.0, 3848.0], [156.0, 316.0], [158.0, 361.0], [161.0, 530.0], [163.0, 209.0], [165.0, 92.0], [162.0, 219.0], [167.0, 111.0], [164.0, 244.0], [160.0, 514.5], [166.0, 1155.0], [170.0, 608.5], [168.0, 1884.0], [171.0, 409.0], [172.0, 370.0], [175.0, 1122.0], [169.0, 286.0], [174.0, 907.5], [178.0, 1872.5], [177.0, 832.5], [176.0, 1920.0], [182.0, 3192.5], [180.0, 1536.0], [183.0, 1715.0], [181.0, 1245.0], [187.0, 4829.0], [186.0, 1343.5], [188.0, 1069.0], [191.0, 1417.5], [185.0, 2265.0], [192.0, 4511.5], [197.0, 5567.0], [193.0, 5317.0], [203.0, 6504.0], [207.0, 4154.0], [201.0, 1195.0], [202.0, 3765.5], [211.0, 5027.0], [212.0, 3534.0], [214.0, 1342.5], [209.0, 4623.0], [222.0, 4182.0], [220.0, 1620.5], [219.0, 2694.0], [223.0, 1557.0], [218.0, 4456.5], [229.0, 634.0], [230.0, 6547.0], [238.0, 4751.0], [232.0, 1799.5], [233.0, 6708.0], [247.0, 2832.0], [246.0, 3483.0], [243.0, 4876.0], [240.0, 2581.5], [245.0, 5016.0], [253.0, 1812.0], [249.0, 4147.0], [267.0, 5964.0], [270.0, 4753.0], [263.0, 3999.0], [261.0, 5448.0], [274.0, 5202.0], [280.0, 2422.0], [272.0, 4717.5], [299.0, 4264.5], [295.0, 5709.0], [310.0, 7546.5], [308.0, 2543.5], [318.0, 5901.5], [319.0, 4260.0], [314.0, 4191.0], [309.0, 5397.0], [305.0, 4503.0], [328.0, 6542.5], [325.0, 5648.0], [351.0, 1656.0], [347.0, 1515.0], [341.0, 2327.0], [344.0, 2972.0], [342.0, 850.5], [358.0, 4194.0], [363.0, 3216.0], [357.0, 5001.0], [366.0, 3609.5], [375.0, 3429.0], [373.0, 4427.0], [370.0, 4624.5], [398.0, 5886.5], [388.0, 1709.0], [389.0, 1988.0], [413.0, 5989.0], [402.0, 4653.5], [414.0, 6181.0], [422.0, 7289.0], [432.0, 3538.0], [439.0, 2895.0], [447.0, 4336.0], [458.0, 3158.0], [495.0, 4698.0], [484.0, 2835.5], [508.0, 4809.0], [553.0, 5558.0], [556.0, 7330.5], [562.0, 3657.5], [651.0, 3986.0], [1.0, 39.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 651.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 18.0, "minX": 1.0, "maxY": 7541.5, "series": [{"data": [[2.0, 50.5], [3.0, 2848.5], [4.0, 35.0], [5.0, 1458.0], [6.0, 2188.5], [7.0, 1276.0], [8.0, 24.0], [9.0, 1429.0], [10.0, 22.5], [11.0, 46.0], [12.0, 1367.0], [13.0, 23.0], [14.0, 26.0], [15.0, 3627.0], [17.0, 46.0], [18.0, 612.0], [19.0, 45.0], [20.0, 21.5], [21.0, 46.0], [22.0, 2903.5], [23.0, 46.5], [24.0, 45.0], [25.0, 41.0], [26.0, 24.5], [27.0, 42.0], [28.0, 46.0], [29.0, 45.0], [30.0, 35.0], [31.0, 44.0], [32.0, 22.0], [33.0, 45.0], [35.0, 31.0], [34.0, 24.0], [37.0, 48.0], [36.0, 6089.5], [38.0, 19.0], [41.0, 27.5], [40.0, 44.0], [42.0, 48.0], [43.0, 46.0], [44.0, 45.0], [45.0, 20.0], [47.0, 48.0], [46.0, 2633.5], [49.0, 2206.0], [48.0, 21.5], [50.0, 41.5], [51.0, 18.0], [53.0, 43.0], [54.0, 41.0], [55.0, 50.0], [57.0, 24.0], [56.0, 36.5], [59.0, 54.0], [58.0, 44.0], [60.0, 24.0], [61.0, 45.0], [62.0, 54.0], [63.0, 40.0], [67.0, 38.0], [64.0, 3263.0], [66.0, 43.0], [65.0, 22.0], [68.0, 36.5], [71.0, 26.0], [70.0, 48.0], [69.0, 4439.0], [73.0, 1817.0], [72.0, 71.5], [74.0, 24.0], [75.0, 47.5], [78.0, 598.5], [79.0, 2244.0], [77.0, 50.5], [76.0, 20.0], [82.0, 35.0], [80.0, 46.0], [83.0, 49.0], [81.0, 26.0], [86.0, 228.0], [87.0, 43.0], [84.0, 843.5], [85.0, 22.0], [91.0, 30.0], [90.0, 3341.5], [88.0, 58.5], [89.0, 1325.5], [94.0, 27.0], [95.0, 42.0], [92.0, 496.5], [93.0, 24.0], [98.0, 45.0], [99.0, 3949.0], [96.0, 41.5], [97.0, 2665.0], [100.0, 279.5], [101.0, 72.0], [102.0, 23.0], [103.0, 40.5], [105.0, 66.0], [104.0, 34.0], [106.0, 62.0], [107.0, 26.0], [111.0, 1805.5], [109.0, 1353.5], [108.0, 23.5], [110.0, 26.0], [115.0, 27.0], [114.0, 43.0], [112.0, 33.0], [113.0, 29.0], [119.0, 407.5], [116.0, 29.5], [117.0, 40.0], [118.0, 304.0], [123.0, 719.0], [120.0, 1619.5], [122.0, 31.0], [121.0, 577.0], [127.0, 49.0], [125.0, 28.0], [124.0, 5604.5], [126.0, 27.0], [130.0, 86.0], [134.0, 274.5], [133.0, 54.0], [132.0, 693.5], [128.0, 1222.5], [129.0, 247.5], [135.0, 596.0], [131.0, 28.0], [137.0, 72.0], [143.0, 43.0], [136.0, 377.0], [141.0, 1158.0], [138.0, 1318.0], [139.0, 28.0], [142.0, 751.0], [140.0, 52.5], [147.0, 202.0], [144.0, 32.0], [145.0, 77.5], [148.0, 981.0], [151.0, 418.0], [146.0, 893.0], [149.0, 376.0], [150.0, 146.5], [155.0, 589.0], [153.0, 551.5], [157.0, 400.0], [154.0, 270.5], [159.0, 122.0], [152.0, 3848.0], [156.0, 312.5], [158.0, 361.0], [161.0, 528.0], [163.0, 209.0], [165.0, 92.0], [162.0, 218.5], [167.0, 110.0], [164.0, 244.0], [160.0, 514.0], [166.0, 1126.0], [170.0, 608.5], [168.0, 1884.0], [171.0, 409.0], [172.0, 370.0], [175.0, 1122.0], [169.0, 286.0], [174.0, 907.0], [178.0, 1872.5], [177.0, 832.0], [176.0, 1920.0], [182.0, 3179.0], [180.0, 1535.5], [183.0, 1715.0], [181.0, 1204.0], [187.0, 4829.0], [186.0, 1343.5], [188.0, 1068.5], [191.0, 1409.5], [185.0, 2254.0], [192.0, 4511.5], [197.0, 5440.0], [193.0, 5317.0], [203.0, 6488.0], [207.0, 4097.0], [201.0, 1194.0], [202.0, 3765.0], [211.0, 5027.0], [212.0, 3534.0], [214.0, 1342.5], [209.0, 4588.0], [222.0, 4172.0], [220.0, 1619.5], [219.0, 2694.0], [223.0, 1546.0], [218.0, 4456.0], [229.0, 628.0], [230.0, 6547.0], [238.0, 4751.0], [232.0, 1799.5], [233.0, 6708.0], [247.0, 2832.0], [246.0, 3483.0], [243.0, 4876.0], [240.0, 2581.5], [245.0, 5016.0], [253.0, 1811.5], [249.0, 4147.0], [267.0, 5964.0], [270.0, 4752.5], [263.0, 3996.0], [261.0, 5439.0], [274.0, 5201.5], [280.0, 2422.0], [272.0, 4717.5], [299.0, 4264.0], [295.0, 5709.0], [310.0, 7541.5], [308.0, 2543.0], [318.0, 5900.5], [319.0, 4260.0], [314.0, 4190.5], [309.0, 5393.0], [305.0, 4503.0], [328.0, 6542.5], [325.0, 5648.0], [351.0, 1656.0], [347.0, 1515.0], [341.0, 2326.0], [344.0, 2972.0], [342.0, 850.5], [358.0, 4191.5], [363.0, 3216.0], [357.0, 5001.0], [366.0, 3609.0], [375.0, 3414.0], [373.0, 4427.0], [370.0, 4623.5], [398.0, 5886.0], [388.0, 1709.0], [389.0, 1983.0], [413.0, 5988.0], [402.0, 4653.5], [414.0, 6181.0], [422.0, 7288.5], [432.0, 3537.5], [439.0, 2895.0], [447.0, 4336.0], [458.0, 3138.5], [495.0, 4698.0], [484.0, 2834.5], [508.0, 4801.5], [553.0, 5557.0], [556.0, 7294.5], [562.0, 3657.5], [651.0, 3986.0], [1.0, 39.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 651.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.62859922E12, "maxY": 184.7, "series": [{"data": [[1.6285999E12, 130.4], [1.62859956E12, 51.7], [1.62860007E12, 160.5], [1.62859973E12, 99.0], [1.62859922E12, 2.0], [1.62859939E12, 32.3], [1.62859998E12, 134.1], [1.62859964E12, 166.0], [1.62859981E12, 164.0], [1.6285993E12, 165.6], [1.62859947E12, 167.0], [1.62859974E12, 65.8], [1.62859991E12, 98.6], [1.6285994E12, 8.6], [1.62859957E12, 29.9], [1.62859923E12, 35.9], [1.6286E12, 165.9], [1.62859982E12, 169.7], [1.62859999E12, 162.3], [1.62859948E12, 177.9], [1.62859965E12, 150.8], [1.62859931E12, 159.9], [1.62860008E12, 124.9], [1.62859958E12, 9.0], [1.62859975E12, 32.5], [1.62859924E12, 68.7], [1.62859941E12, 35.5], [1.62860001E12, 169.3], [1.62859984E12, 169.7], [1.62859966E12, 169.1], [1.62859983E12, 92.4], [1.62859932E12, 162.1], [1.62859949E12, 170.9], [1.62860009E12, 99.1], [1.62859992E12, 65.4], [1.62859942E12, 69.3], [1.62859959E12, 36.0], [1.62859925E12, 101.0], [1.62859968E12, 163.4], [1.62859985E12, 164.9], [1.62860002E12, 171.1], [1.6285995E12, 152.1], [1.62859967E12, 166.1], [1.62859933E12, 126.3], [1.62859976E12, 8.7], [1.62859993E12, 32.4], [1.6286001E12, 66.0], [1.62859926E12, 134.2], [1.62859943E12, 101.0], [1.62859986E12, 146.6], [1.62859952E12, 157.1], [1.62860003E12, 180.0], [1.62859969E12, 182.9], [1.62859934E12, 164.0], [1.62859951E12, 170.9], [1.62859994E12, 8.7], [1.6285996E12, 68.1], [1.62860011E12, 33.0], [1.62859977E12, 35.9], [1.62859927E12, 152.6], [1.62860004E12, 156.3], [1.6285997E12, 158.6], [1.62859987E12, 168.4], [1.62859936E12, 124.0], [1.62859953E12, 162.3], [1.62859935E12, 148.4], [1.62860012E12, 4.1], [1.62859978E12, 69.2], [1.62859995E12, 35.7], [1.62859944E12, 135.1], [1.62859961E12, 100.7], [1.62860005E12, 184.7], [1.62859988E12, 164.4], [1.62859954E12, 126.9], [1.62859971E12, 144.6], [1.62859937E12, 92.6], [1.62859996E12, 69.2], [1.62859962E12, 135.0], [1.62859979E12, 102.0], [1.62859928E12, 160.6], [1.62859945E12, 163.3], [1.62859972E12, 130.2], [1.62859989E12, 161.3], [1.62860006E12, 138.9], [1.62859938E12, 64.1], [1.62859955E12, 29.9], [1.6285998E12, 132.9], [1.62859997E12, 101.9], [1.62859946E12, 168.2], [1.62859963E12, 161.0], [1.62859929E12, 161.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62860012E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.62859922E12, "maxY": 212.2, "series": [{"data": [[1.6285999E12, 140.9], [1.62859956E12, 52.1], [1.62860007E12, 175.7], [1.62859973E12, 99.1], [1.62859922E12, 0.6], [1.62859939E12, 31.9], [1.62859998E12, 134.0], [1.62859964E12, 153.7], [1.62859981E12, 163.1], [1.6285993E12, 128.3], [1.62859947E12, 161.9], [1.62859974E12, 65.9], [1.62859991E12, 99.9], [1.6285994E12, 8.6], [1.62859957E12, 29.6], [1.62859923E12, 37.2], [1.6286E12, 160.9], [1.62859982E12, 166.2], [1.62859999E12, 161.3], [1.62859948E12, 147.7], [1.62859965E12, 148.5], [1.62859931E12, 120.4], [1.62860008E12, 207.0], [1.62859958E12, 8.7], [1.62859975E12, 32.6], [1.62859924E12, 68.5], [1.62859941E12, 35.0], [1.62860001E12, 156.7], [1.62859984E12, 154.9], [1.62859966E12, 166.3], [1.62859983E12, 83.2], [1.62859932E12, 168.4], [1.62859949E12, 146.7], [1.62860009E12, 99.2], [1.62859992E12, 65.9], [1.62859942E12, 68.6], [1.62859959E12, 35.4], [1.62859925E12, 100.6], [1.62859968E12, 132.1], [1.62859985E12, 157.7], [1.62860002E12, 161.1], [1.6285995E12, 130.6], [1.62859967E12, 155.8], [1.62859933E12, 120.0], [1.62859976E12, 8.7], [1.62859993E12, 32.5], [1.6286001E12, 66.1], [1.62859926E12, 133.6], [1.62859943E12, 100.2], [1.62859986E12, 172.3], [1.62859952E12, 140.4], [1.62860003E12, 135.3], [1.62859969E12, 153.1], [1.62859934E12, 164.1], [1.62859951E12, 187.6], [1.62859994E12, 8.7], [1.6285996E12, 67.2], [1.62860011E12, 33.1], [1.62859977E12, 35.9], [1.62859927E12, 149.7], [1.62860004E12, 144.2], [1.6285997E12, 156.7], [1.62859987E12, 158.5], [1.62859936E12, 166.9], [1.62859953E12, 174.8], [1.62859935E12, 162.6], [1.62860012E12, 4.1], [1.62859978E12, 69.1], [1.62859995E12, 35.6], [1.62859944E12, 134.8], [1.62859961E12, 99.7], [1.62860005E12, 170.8], [1.62859988E12, 158.2], [1.62859954E12, 212.2], [1.62859971E12, 183.7], [1.62859937E12, 134.6], [1.62859996E12, 69.2], [1.62859962E12, 134.6], [1.62859979E12, 101.9], [1.62859928E12, 149.8], [1.62859945E12, 161.6], [1.62859972E12, 188.5], [1.62859989E12, 175.2], [1.62860006E12, 141.2], [1.62859938E12, 63.8], [1.62859955E12, 31.2], [1.6285998E12, 132.8], [1.62859997E12, 101.5], [1.62859946E12, 154.7], [1.62859963E12, 158.0], [1.62859929E12, 152.8]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62860012E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.62859922E12, "maxY": 212.2, "series": [{"data": [[1.6285999E12, 140.9], [1.62859956E12, 52.1], [1.62860007E12, 175.7], [1.62859973E12, 99.1], [1.62859922E12, 0.6], [1.62859939E12, 31.9], [1.62859998E12, 134.0], [1.62859964E12, 153.7], [1.62859981E12, 163.1], [1.6285993E12, 128.3], [1.62859947E12, 161.9], [1.62859974E12, 65.9], [1.62859991E12, 99.9], [1.6285994E12, 8.6], [1.62859957E12, 29.6], [1.62859923E12, 37.2], [1.6286E12, 160.9], [1.62859982E12, 166.2], [1.62859999E12, 161.3], [1.62859948E12, 147.7], [1.62859965E12, 148.5], [1.62859931E12, 120.4], [1.62860008E12, 207.0], [1.62859958E12, 8.7], [1.62859975E12, 32.6], [1.62859924E12, 68.5], [1.62859941E12, 35.0], [1.62860001E12, 156.7], [1.62859984E12, 154.9], [1.62859966E12, 166.3], [1.62859983E12, 83.2], [1.62859932E12, 168.4], [1.62859949E12, 146.7], [1.62860009E12, 99.2], [1.62859992E12, 65.9], [1.62859942E12, 68.6], [1.62859959E12, 35.4], [1.62859925E12, 100.6], [1.62859968E12, 132.1], [1.62859985E12, 157.7], [1.62860002E12, 161.1], [1.6285995E12, 130.6], [1.62859967E12, 155.8], [1.62859933E12, 120.0], [1.62859976E12, 8.7], [1.62859993E12, 32.5], [1.6286001E12, 66.1], [1.62859926E12, 133.6], [1.62859943E12, 100.2], [1.62859986E12, 172.3], [1.62859952E12, 140.4], [1.62860003E12, 135.3], [1.62859969E12, 153.1], [1.62859934E12, 164.1], [1.62859951E12, 187.6], [1.62859994E12, 8.7], [1.6285996E12, 67.2], [1.62860011E12, 33.1], [1.62859977E12, 35.9], [1.62859927E12, 149.7], [1.62860004E12, 144.2], [1.6285997E12, 156.7], [1.62859987E12, 158.5], [1.62859936E12, 166.9], [1.62859953E12, 174.8], [1.62859935E12, 162.6], [1.62860012E12, 4.1], [1.62859978E12, 69.1], [1.62859995E12, 35.6], [1.62859944E12, 134.8], [1.62859961E12, 99.7], [1.62860005E12, 170.8], [1.62859988E12, 158.2], [1.62859954E12, 212.2], [1.62859971E12, 183.7], [1.62859937E12, 134.6], [1.62859996E12, 69.2], [1.62859962E12, 134.6], [1.62859979E12, 101.9], [1.62859928E12, 149.8], [1.62859945E12, 161.6], [1.62859972E12, 188.5], [1.62859989E12, 175.2], [1.62860006E12, 141.2], [1.62859938E12, 63.8], [1.62859955E12, 31.2], [1.6285998E12, 132.8], [1.62859997E12, 101.5], [1.62859946E12, 154.7], [1.62859963E12, 158.0], [1.62859929E12, 152.8]], "isOverall": false, "label": "Sunstar Home-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62860012E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.62859922E12, "maxY": 212.2, "series": [{"data": [[1.6285999E12, 140.9], [1.62859956E12, 52.1], [1.62860007E12, 175.7], [1.62859973E12, 99.1], [1.62859922E12, 0.6], [1.62859939E12, 31.9], [1.62859998E12, 134.0], [1.62859964E12, 153.7], [1.62859981E12, 163.1], [1.6285993E12, 128.3], [1.62859947E12, 161.9], [1.62859974E12, 65.9], [1.62859991E12, 99.9], [1.6285994E12, 8.6], [1.62859957E12, 29.6], [1.62859923E12, 37.2], [1.6286E12, 160.9], [1.62859982E12, 166.2], [1.62859999E12, 161.3], [1.62859948E12, 147.7], [1.62859965E12, 148.5], [1.62859931E12, 120.4], [1.62860008E12, 207.0], [1.62859958E12, 8.7], [1.62859975E12, 32.6], [1.62859924E12, 68.5], [1.62859941E12, 35.0], [1.62860001E12, 156.7], [1.62859984E12, 154.9], [1.62859966E12, 166.3], [1.62859983E12, 83.2], [1.62859932E12, 168.4], [1.62859949E12, 146.7], [1.62860009E12, 99.2], [1.62859992E12, 65.9], [1.62859942E12, 68.6], [1.62859959E12, 35.4], [1.62859925E12, 100.6], [1.62859968E12, 132.1], [1.62859985E12, 157.7], [1.62860002E12, 161.1], [1.6285995E12, 130.6], [1.62859967E12, 155.8], [1.62859933E12, 120.0], [1.62859976E12, 8.7], [1.62859993E12, 32.5], [1.6286001E12, 66.1], [1.62859926E12, 133.6], [1.62859943E12, 100.2], [1.62859986E12, 172.3], [1.62859952E12, 140.4], [1.62860003E12, 135.3], [1.62859969E12, 153.1], [1.62859934E12, 164.1], [1.62859951E12, 187.6], [1.62859994E12, 8.7], [1.6285996E12, 67.2], [1.62860011E12, 33.1], [1.62859977E12, 35.9], [1.62859927E12, 149.7], [1.62860004E12, 144.2], [1.6285997E12, 156.7], [1.62859987E12, 158.5], [1.62859936E12, 166.9], [1.62859953E12, 174.8], [1.62859935E12, 162.6], [1.62860012E12, 4.1], [1.62859978E12, 69.1], [1.62859995E12, 35.6], [1.62859944E12, 134.8], [1.62859961E12, 99.7], [1.62860005E12, 170.8], [1.62859988E12, 158.2], [1.62859954E12, 212.2], [1.62859971E12, 183.7], [1.62859937E12, 134.6], [1.62859996E12, 69.2], [1.62859962E12, 134.6], [1.62859979E12, 101.9], [1.62859928E12, 149.8], [1.62859945E12, 161.6], [1.62859972E12, 188.5], [1.62859989E12, 175.2], [1.62860006E12, 141.2], [1.62859938E12, 63.8], [1.62859955E12, 31.2], [1.6285998E12, 132.8], [1.62859997E12, 101.5], [1.62859946E12, 154.7], [1.62859963E12, 158.0], [1.62859929E12, 152.8]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62860012E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

