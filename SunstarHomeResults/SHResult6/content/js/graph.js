/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "maxY": 7665.0, "series": [{"data": [[0.0, 10.0], [0.1, 10.0], [0.2, 10.0], [0.3, 10.0], [0.4, 10.0], [0.5, 10.0], [0.6, 10.0], [0.7, 10.0], [0.8, 11.0], [0.9, 11.0], [1.0, 11.0], [1.1, 11.0], [1.2, 11.0], [1.3, 11.0], [1.4, 11.0], [1.5, 11.0], [1.6, 11.0], [1.7, 11.0], [1.8, 11.0], [1.9, 11.0], [2.0, 11.0], [2.1, 11.0], [2.2, 11.0], [2.3, 11.0], [2.4, 11.0], [2.5, 11.0], [2.6, 11.0], [2.7, 11.0], [2.8, 11.0], [2.9, 11.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 11.0], [3.4, 11.0], [3.5, 11.0], [3.6, 11.0], [3.7, 11.0], [3.8, 11.0], [3.9, 11.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 12.0], [4.8, 12.0], [4.9, 12.0], [5.0, 12.0], [5.1, 12.0], [5.2, 12.0], [5.3, 12.0], [5.4, 12.0], [5.5, 12.0], [5.6, 12.0], [5.7, 12.0], [5.8, 12.0], [5.9, 12.0], [6.0, 12.0], [6.1, 12.0], [6.2, 12.0], [6.3, 12.0], [6.4, 12.0], [6.5, 12.0], [6.6, 12.0], [6.7, 12.0], [6.8, 12.0], [6.9, 12.0], [7.0, 12.0], [7.1, 12.0], [7.2, 12.0], [7.3, 12.0], [7.4, 12.0], [7.5, 12.0], [7.6, 12.0], [7.7, 13.0], [7.8, 13.0], [7.9, 13.0], [8.0, 13.0], [8.1, 13.0], [8.2, 13.0], [8.3, 13.0], [8.4, 13.0], [8.5, 13.0], [8.6, 13.0], [8.7, 13.0], [8.8, 13.0], [8.9, 13.0], [9.0, 13.0], [9.1, 13.0], [9.2, 13.0], [9.3, 13.0], [9.4, 13.0], [9.5, 13.0], [9.6, 13.0], [9.7, 13.0], [9.8, 13.0], [9.9, 13.0], [10.0, 13.0], [10.1, 13.0], [10.2, 13.0], [10.3, 14.0], [10.4, 14.0], [10.5, 14.0], [10.6, 14.0], [10.7, 14.0], [10.8, 14.0], [10.9, 14.0], [11.0, 14.0], [11.1, 14.0], [11.2, 14.0], [11.3, 14.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 15.0], [13.7, 15.0], [13.8, 15.0], [13.9, 15.0], [14.0, 15.0], [14.1, 15.0], [14.2, 15.0], [14.3, 15.0], [14.4, 15.0], [14.5, 15.0], [14.6, 15.0], [14.7, 15.0], [14.8, 15.0], [14.9, 15.0], [15.0, 15.0], [15.1, 15.0], [15.2, 15.0], [15.3, 15.0], [15.4, 15.0], [15.5, 15.0], [15.6, 15.0], [15.7, 15.0], [15.8, 15.0], [15.9, 15.0], [16.0, 15.0], [16.1, 15.0], [16.2, 15.0], [16.3, 15.0], [16.4, 15.0], [16.5, 15.0], [16.6, 16.0], [16.7, 16.0], [16.8, 16.0], [16.9, 16.0], [17.0, 16.0], [17.1, 16.0], [17.2, 16.0], [17.3, 16.0], [17.4, 16.0], [17.5, 16.0], [17.6, 16.0], [17.7, 16.0], [17.8, 16.0], [17.9, 16.0], [18.0, 16.0], [18.1, 16.0], [18.2, 16.0], [18.3, 17.0], [18.4, 17.0], [18.5, 17.0], [18.6, 17.0], [18.7, 17.0], [18.8, 17.0], [18.9, 17.0], [19.0, 17.0], [19.1, 17.0], [19.2, 17.0], [19.3, 17.0], [19.4, 17.0], [19.5, 17.0], [19.6, 17.0], [19.7, 17.0], [19.8, 17.0], [19.9, 17.0], [20.0, 17.0], [20.1, 17.0], [20.2, 18.0], [20.3, 18.0], [20.4, 18.0], [20.5, 18.0], [20.6, 18.0], [20.7, 18.0], [20.8, 18.0], [20.9, 18.0], [21.0, 18.0], [21.1, 18.0], [21.2, 18.0], [21.3, 18.0], [21.4, 18.0], [21.5, 18.0], [21.6, 18.0], [21.7, 18.0], [21.8, 18.0], [21.9, 18.0], [22.0, 18.0], [22.1, 18.0], [22.2, 18.0], [22.3, 19.0], [22.4, 19.0], [22.5, 19.0], [22.6, 19.0], [22.7, 19.0], [22.8, 19.0], [22.9, 19.0], [23.0, 19.0], [23.1, 19.0], [23.2, 19.0], [23.3, 19.0], [23.4, 19.0], [23.5, 19.0], [23.6, 19.0], [23.7, 19.0], [23.8, 19.0], [23.9, 19.0], [24.0, 19.0], [24.1, 19.0], [24.2, 19.0], [24.3, 19.0], [24.4, 19.0], [24.5, 19.0], [24.6, 19.0], [24.7, 19.0], [24.8, 19.0], [24.9, 19.0], [25.0, 19.0], [25.1, 19.0], [25.2, 19.0], [25.3, 19.0], [25.4, 20.0], [25.5, 20.0], [25.6, 20.0], [25.7, 20.0], [25.8, 20.0], [25.9, 20.0], [26.0, 20.0], [26.1, 20.0], [26.2, 20.0], [26.3, 20.0], [26.4, 20.0], [26.5, 20.0], [26.6, 20.0], [26.7, 20.0], [26.8, 20.0], [26.9, 20.0], [27.0, 20.0], [27.1, 20.0], [27.2, 20.0], [27.3, 20.0], [27.4, 20.0], [27.5, 20.0], [27.6, 20.0], [27.7, 20.0], [27.8, 20.0], [27.9, 20.0], [28.0, 20.0], [28.1, 20.0], [28.2, 20.0], [28.3, 20.0], [28.4, 20.0], [28.5, 20.0], [28.6, 20.0], [28.7, 20.0], [28.8, 20.0], [28.9, 20.0], [29.0, 20.0], [29.1, 20.0], [29.2, 20.0], [29.3, 20.0], [29.4, 20.0], [29.5, 21.0], [29.6, 21.0], [29.7, 21.0], [29.8, 21.0], [29.9, 21.0], [30.0, 21.0], [30.1, 21.0], [30.2, 21.0], [30.3, 21.0], [30.4, 21.0], [30.5, 21.0], [30.6, 21.0], [30.7, 21.0], [30.8, 21.0], [30.9, 21.0], [31.0, 21.0], [31.1, 21.0], [31.2, 21.0], [31.3, 21.0], [31.4, 21.0], [31.5, 21.0], [31.6, 21.0], [31.7, 21.0], [31.8, 21.0], [31.9, 21.0], [32.0, 21.0], [32.1, 21.0], [32.2, 21.0], [32.3, 21.0], [32.4, 21.0], [32.5, 21.0], [32.6, 21.0], [32.7, 21.0], [32.8, 21.0], [32.9, 21.0], [33.0, 21.0], [33.1, 21.0], [33.2, 21.0], [33.3, 21.0], [33.4, 21.0], [33.5, 21.0], [33.6, 21.0], [33.7, 21.0], [33.8, 21.0], [33.9, 21.0], [34.0, 21.0], [34.1, 21.0], [34.2, 22.0], [34.3, 22.0], [34.4, 22.0], [34.5, 22.0], [34.6, 22.0], [34.7, 22.0], [34.8, 22.0], [34.9, 22.0], [35.0, 22.0], [35.1, 22.0], [35.2, 22.0], [35.3, 22.0], [35.4, 22.0], [35.5, 22.0], [35.6, 22.0], [35.7, 22.0], [35.8, 22.0], [35.9, 22.0], [36.0, 22.0], [36.1, 22.0], [36.2, 22.0], [36.3, 22.0], [36.4, 22.0], [36.5, 22.0], [36.6, 22.0], [36.7, 22.0], [36.8, 22.0], [36.9, 22.0], [37.0, 22.0], [37.1, 22.0], [37.2, 22.0], [37.3, 22.0], [37.4, 22.0], [37.5, 22.0], [37.6, 22.0], [37.7, 22.0], [37.8, 22.0], [37.9, 22.0], [38.0, 22.0], [38.1, 22.0], [38.2, 22.0], [38.3, 22.0], [38.4, 22.0], [38.5, 22.0], [38.6, 22.0], [38.7, 22.0], [38.8, 22.0], [38.9, 22.0], [39.0, 22.0], [39.1, 22.0], [39.2, 22.0], [39.3, 22.0], [39.4, 22.0], [39.5, 22.0], [39.6, 22.0], [39.7, 22.0], [39.8, 22.0], [39.9, 22.0], [40.0, 22.0], [40.1, 22.0], [40.2, 23.0], [40.3, 23.0], [40.4, 23.0], [40.5, 23.0], [40.6, 23.0], [40.7, 23.0], [40.8, 23.0], [40.9, 23.0], [41.0, 23.0], [41.1, 23.0], [41.2, 23.0], [41.3, 23.0], [41.4, 23.0], [41.5, 23.0], [41.6, 23.0], [41.7, 23.0], [41.8, 23.0], [41.9, 23.0], [42.0, 23.0], [42.1, 23.0], [42.2, 23.0], [42.3, 23.0], [42.4, 23.0], [42.5, 23.0], [42.6, 23.0], [42.7, 23.0], [42.8, 23.0], [42.9, 23.0], [43.0, 23.0], [43.1, 23.0], [43.2, 23.0], [43.3, 23.0], [43.4, 23.0], [43.5, 23.0], [43.6, 23.0], [43.7, 23.0], [43.8, 23.0], [43.9, 23.0], [44.0, 23.0], [44.1, 23.0], [44.2, 23.0], [44.3, 23.0], [44.4, 23.0], [44.5, 23.0], [44.6, 23.0], [44.7, 23.0], [44.8, 23.0], [44.9, 23.0], [45.0, 23.0], [45.1, 23.0], [45.2, 23.0], [45.3, 23.0], [45.4, 23.0], [45.5, 23.0], [45.6, 23.0], [45.7, 23.0], [45.8, 23.0], [45.9, 23.0], [46.0, 23.0], [46.1, 23.0], [46.2, 23.0], [46.3, 23.0], [46.4, 23.0], [46.5, 23.0], [46.6, 23.0], [46.7, 24.0], [46.8, 24.0], [46.9, 24.0], [47.0, 24.0], [47.1, 24.0], [47.2, 24.0], [47.3, 24.0], [47.4, 24.0], [47.5, 24.0], [47.6, 24.0], [47.7, 24.0], [47.8, 24.0], [47.9, 24.0], [48.0, 24.0], [48.1, 24.0], [48.2, 24.0], [48.3, 24.0], [48.4, 24.0], [48.5, 24.0], [48.6, 24.0], [48.7, 24.0], [48.8, 24.0], [48.9, 24.0], [49.0, 24.0], [49.1, 24.0], [49.2, 24.0], [49.3, 24.0], [49.4, 24.0], [49.5, 24.0], [49.6, 24.0], [49.7, 24.0], [49.8, 24.0], [49.9, 24.0], [50.0, 24.0], [50.1, 24.0], [50.2, 24.0], [50.3, 24.0], [50.4, 24.0], [50.5, 24.0], [50.6, 24.0], [50.7, 24.0], [50.8, 24.0], [50.9, 24.0], [51.0, 24.0], [51.1, 24.0], [51.2, 24.0], [51.3, 24.0], [51.4, 24.0], [51.5, 24.0], [51.6, 24.0], [51.7, 24.0], [51.8, 24.0], [51.9, 24.0], [52.0, 24.0], [52.1, 24.0], [52.2, 24.0], [52.3, 24.0], [52.4, 24.0], [52.5, 24.0], [52.6, 24.0], [52.7, 24.0], [52.8, 25.0], [52.9, 25.0], [53.0, 25.0], [53.1, 25.0], [53.2, 25.0], [53.3, 25.0], [53.4, 25.0], [53.5, 25.0], [53.6, 25.0], [53.7, 25.0], [53.8, 25.0], [53.9, 25.0], [54.0, 25.0], [54.1, 25.0], [54.2, 25.0], [54.3, 25.0], [54.4, 25.0], [54.5, 25.0], [54.6, 25.0], [54.7, 25.0], [54.8, 25.0], [54.9, 25.0], [55.0, 25.0], [55.1, 25.0], [55.2, 25.0], [55.3, 25.0], [55.4, 25.0], [55.5, 25.0], [55.6, 25.0], [55.7, 25.0], [55.8, 25.0], [55.9, 25.0], [56.0, 25.0], [56.1, 25.0], [56.2, 25.0], [56.3, 25.0], [56.4, 25.0], [56.5, 25.0], [56.6, 25.0], [56.7, 25.0], [56.8, 25.0], [56.9, 25.0], [57.0, 25.0], [57.1, 25.0], [57.2, 25.0], [57.3, 25.0], [57.4, 25.0], [57.5, 25.0], [57.6, 25.0], [57.7, 25.0], [57.8, 25.0], [57.9, 25.0], [58.0, 25.0], [58.1, 25.0], [58.2, 25.0], [58.3, 25.0], [58.4, 25.0], [58.5, 26.0], [58.6, 26.0], [58.7, 26.0], [58.8, 26.0], [58.9, 26.0], [59.0, 26.0], [59.1, 26.0], [59.2, 26.0], [59.3, 26.0], [59.4, 26.0], [59.5, 26.0], [59.6, 26.0], [59.7, 26.0], [59.8, 26.0], [59.9, 26.0], [60.0, 26.0], [60.1, 26.0], [60.2, 26.0], [60.3, 26.0], [60.4, 26.0], [60.5, 26.0], [60.6, 26.0], [60.7, 26.0], [60.8, 26.0], [60.9, 26.0], [61.0, 26.0], [61.1, 26.0], [61.2, 26.0], [61.3, 26.0], [61.4, 26.0], [61.5, 26.0], [61.6, 26.0], [61.7, 26.0], [61.8, 26.0], [61.9, 26.0], [62.0, 26.0], [62.1, 26.0], [62.2, 26.0], [62.3, 26.0], [62.4, 26.0], [62.5, 26.0], [62.6, 26.0], [62.7, 26.0], [62.8, 26.0], [62.9, 26.0], [63.0, 26.0], [63.1, 26.0], [63.2, 26.0], [63.3, 26.0], [63.4, 26.0], [63.5, 26.0], [63.6, 26.0], [63.7, 27.0], [63.8, 27.0], [63.9, 27.0], [64.0, 27.0], [64.1, 27.0], [64.2, 27.0], [64.3, 27.0], [64.4, 27.0], [64.5, 27.0], [64.6, 27.0], [64.7, 27.0], [64.8, 27.0], [64.9, 27.0], [65.0, 27.0], [65.1, 27.0], [65.2, 27.0], [65.3, 27.0], [65.4, 27.0], [65.5, 27.0], [65.6, 27.0], [65.7, 27.0], [65.8, 27.0], [65.9, 27.0], [66.0, 27.0], [66.1, 27.0], [66.2, 27.0], [66.3, 27.0], [66.4, 27.0], [66.5, 27.0], [66.6, 27.0], [66.7, 27.0], [66.8, 27.0], [66.9, 27.0], [67.0, 27.0], [67.1, 27.0], [67.2, 27.0], [67.3, 27.0], [67.4, 27.0], [67.5, 27.0], [67.6, 27.0], [67.7, 27.0], [67.8, 27.0], [67.9, 27.0], [68.0, 27.0], [68.1, 27.0], [68.2, 27.0], [68.3, 27.0], [68.4, 28.0], [68.5, 28.0], [68.6, 28.0], [68.7, 28.0], [68.8, 28.0], [68.9, 28.0], [69.0, 28.0], [69.1, 28.0], [69.2, 28.0], [69.3, 28.0], [69.4, 28.0], [69.5, 28.0], [69.6, 28.0], [69.7, 28.0], [69.8, 28.0], [69.9, 28.0], [70.0, 28.0], [70.1, 28.0], [70.2, 28.0], [70.3, 28.0], [70.4, 28.0], [70.5, 28.0], [70.6, 28.0], [70.7, 28.0], [70.8, 28.0], [70.9, 28.0], [71.0, 28.0], [71.1, 28.0], [71.2, 28.0], [71.3, 28.0], [71.4, 28.0], [71.5, 28.0], [71.6, 28.0], [71.7, 28.0], [71.8, 28.0], [71.9, 28.0], [72.0, 28.0], [72.1, 28.0], [72.2, 28.0], [72.3, 28.0], [72.4, 28.0], [72.5, 28.0], [72.6, 29.0], [72.7, 29.0], [72.8, 29.0], [72.9, 29.0], [73.0, 29.0], [73.1, 29.0], [73.2, 29.0], [73.3, 29.0], [73.4, 29.0], [73.5, 29.0], [73.6, 29.0], [73.7, 29.0], [73.8, 29.0], [73.9, 29.0], [74.0, 29.0], [74.1, 29.0], [74.2, 29.0], [74.3, 29.0], [74.4, 29.0], [74.5, 29.0], [74.6, 29.0], [74.7, 29.0], [74.8, 29.0], [74.9, 29.0], [75.0, 29.0], [75.1, 29.0], [75.2, 29.0], [75.3, 29.0], [75.4, 29.0], [75.5, 29.0], [75.6, 29.0], [75.7, 29.0], [75.8, 29.0], [75.9, 29.0], [76.0, 29.0], [76.1, 30.0], [76.2, 30.0], [76.3, 30.0], [76.4, 30.0], [76.5, 30.0], [76.6, 30.0], [76.7, 30.0], [76.8, 30.0], [76.9, 30.0], [77.0, 30.0], [77.1, 30.0], [77.2, 30.0], [77.3, 30.0], [77.4, 30.0], [77.5, 30.0], [77.6, 30.0], [77.7, 30.0], [77.8, 30.0], [77.9, 30.0], [78.0, 30.0], [78.1, 30.0], [78.2, 30.0], [78.3, 30.0], [78.4, 30.0], [78.5, 30.0], [78.6, 30.0], [78.7, 30.0], [78.8, 30.0], [78.9, 30.0], [79.0, 30.0], [79.1, 31.0], [79.2, 31.0], [79.3, 31.0], [79.4, 31.0], [79.5, 31.0], [79.6, 31.0], [79.7, 31.0], [79.8, 31.0], [79.9, 31.0], [80.0, 31.0], [80.1, 31.0], [80.2, 31.0], [80.3, 31.0], [80.4, 31.0], [80.5, 31.0], [80.6, 31.0], [80.7, 31.0], [80.8, 31.0], [80.9, 31.0], [81.0, 31.0], [81.1, 31.0], [81.2, 31.0], [81.3, 31.0], [81.4, 31.0], [81.5, 31.0], [81.6, 32.0], [81.7, 32.0], [81.8, 32.0], [81.9, 32.0], [82.0, 32.0], [82.1, 32.0], [82.2, 32.0], [82.3, 32.0], [82.4, 32.0], [82.5, 32.0], [82.6, 32.0], [82.7, 32.0], [82.8, 32.0], [82.9, 32.0], [83.0, 32.0], [83.1, 32.0], [83.2, 32.0], [83.3, 32.0], [83.4, 32.0], [83.5, 32.0], [83.6, 32.0], [83.7, 32.0], [83.8, 33.0], [83.9, 33.0], [84.0, 33.0], [84.1, 33.0], [84.2, 33.0], [84.3, 33.0], [84.4, 33.0], [84.5, 33.0], [84.6, 33.0], [84.7, 33.0], [84.8, 33.0], [84.9, 33.0], [85.0, 33.0], [85.1, 33.0], [85.2, 33.0], [85.3, 33.0], [85.4, 33.0], [85.5, 33.0], [85.6, 33.0], [85.7, 33.0], [85.8, 34.0], [85.9, 34.0], [86.0, 34.0], [86.1, 34.0], [86.2, 34.0], [86.3, 34.0], [86.4, 34.0], [86.5, 34.0], [86.6, 34.0], [86.7, 34.0], [86.8, 34.0], [86.9, 34.0], [87.0, 34.0], [87.1, 34.0], [87.2, 34.0], [87.3, 35.0], [87.4, 35.0], [87.5, 35.0], [87.6, 35.0], [87.7, 35.0], [87.8, 35.0], [87.9, 35.0], [88.0, 35.0], [88.1, 35.0], [88.2, 35.0], [88.3, 35.0], [88.4, 35.0], [88.5, 35.0], [88.6, 35.0], [88.7, 36.0], [88.8, 36.0], [88.9, 36.0], [89.0, 36.0], [89.1, 36.0], [89.2, 36.0], [89.3, 36.0], [89.4, 36.0], [89.5, 36.0], [89.6, 36.0], [89.7, 36.0], [89.8, 37.0], [89.9, 37.0], [90.0, 37.0], [90.1, 37.0], [90.2, 37.0], [90.3, 37.0], [90.4, 37.0], [90.5, 37.0], [90.6, 37.0], [90.7, 38.0], [90.8, 38.0], [90.9, 38.0], [91.0, 38.0], [91.1, 38.0], [91.2, 38.0], [91.3, 38.0], [91.4, 39.0], [91.5, 39.0], [91.6, 39.0], [91.7, 39.0], [91.8, 39.0], [91.9, 39.0], [92.0, 39.0], [92.1, 40.0], [92.2, 40.0], [92.3, 40.0], [92.4, 40.0], [92.5, 40.0], [92.6, 41.0], [92.7, 41.0], [92.8, 41.0], [92.9, 41.0], [93.0, 41.0], [93.1, 42.0], [93.2, 42.0], [93.3, 42.0], [93.4, 43.0], [93.5, 43.0], [93.6, 43.0], [93.7, 44.0], [93.8, 44.0], [93.9, 44.0], [94.0, 45.0], [94.1, 45.0], [94.2, 46.0], [94.3, 46.0], [94.4, 47.0], [94.5, 47.0], [94.6, 48.0], [94.7, 48.0], [94.8, 49.0], [94.9, 49.0], [95.0, 50.0], [95.1, 51.0], [95.2, 52.0], [95.3, 53.0], [95.4, 54.0], [95.5, 55.0], [95.6, 56.0], [95.7, 57.0], [95.8, 58.0], [95.9, 60.0], [96.0, 61.0], [96.1, 63.0], [96.2, 65.0], [96.3, 66.0], [96.4, 68.0], [96.5, 70.0], [96.6, 72.0], [96.7, 74.0], [96.8, 77.0], [96.9, 80.0], [97.0, 83.0], [97.1, 87.0], [97.2, 93.0], [97.3, 108.0], [97.4, 178.0], [97.5, 324.0], [97.6, 386.0], [97.7, 425.0], [97.8, 466.0], [97.9, 536.0], [98.0, 571.0], [98.1, 610.0], [98.2, 642.0], [98.3, 668.0], [98.4, 686.0], [98.5, 716.0], [98.6, 746.0], [98.7, 790.0], [98.8, 844.0], [98.9, 900.0], [99.0, 950.0], [99.1, 993.0], [99.2, 1036.0], [99.3, 1062.0], [99.4, 1085.0], [99.5, 1110.0], [99.6, 1143.0], [99.7, 1196.0], [99.8, 1267.0], [99.9, 1354.0], [100.0, 7665.0]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 76653.0, "series": [{"data": [[0.0, 76653.0], [600.0, 299.0], [700.0, 213.0], [800.0, 143.0], [900.0, 173.0], [1000.0, 274.0], [1100.0, 190.0], [1200.0, 105.0], [1300.0, 68.0], [1400.0, 7.0], [1500.0, 14.0], [100.0, 132.0], [1600.0, 9.0], [1700.0, 7.0], [1800.0, 7.0], [200.0, 36.0], [4000.0, 1.0], [4200.0, 1.0], [4300.0, 1.0], [4600.0, 1.0], [300.0, 130.0], [4700.0, 1.0], [5000.0, 1.0], [4900.0, 1.0], [5200.0, 1.0], [5500.0, 2.0], [5600.0, 1.0], [6200.0, 1.0], [400.0, 180.0], [7100.0, 1.0], [7600.0, 1.0], [500.0, 166.0]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 51.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 77133.0, "series": [{"data": [[0.0, 77133.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1636.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 51.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.62702142E12, "maxY": 1995.0, "series": [{"data": [[1.62702151E12, 945.4133611691021], [1.62702228E12, 3.0], [1.62702194E12, 3.0], [1.62702211E12, 3.0], [1.62702177E12, 2.0], [1.6270216E12, 3.0], [1.62702159E12, 3.0], [1.62702142E12, 1995.0], [1.62702202E12, 6.0], [1.62702219E12, 5.410638297872338], [1.62702185E12, 7.0], [1.62702168E12, 5.0], [1.62702212E12, 3.0], [1.62702229E12, 3.0], [1.62702178E12, 2.0], [1.62702195E12, 3.0], [1.62702161E12, 3.0], [1.62702144E12, 1968.75], [1.62702143E12, 1983.076923076923], [1.6270222E12, 6.0], [1.62702186E12, 7.497994652406416], [1.62702203E12, 9.549738219895294], [1.62702169E12, 5.0], [1.62702152E12, 516.0866935483866], [1.62702183E12, 6.215198863636357], [1.62702166E12, 4.507004669779857], [1.62702149E12, 1583.5560344827586], [1.62702226E12, 5.737471952131635], [1.62702192E12, 3.0], [1.62702209E12, 3.6654445462878136], [1.62702174E12, 4.2071428571428555], [1.62702191E12, 5.128087831655986], [1.62702157E12, 3.0], [1.627022E12, 4.206689536878217], [1.62702217E12, 3.526717557251906], [1.62702167E12, 4.396910678307588], [1.6270215E12, 1325.3250883392222], [1.6270221E12, 3.0], [1.62702227E12, 3.0], [1.62702176E12, 2.0], [1.62702193E12, 3.0], [1.62702175E12, 2.0], [1.62702158E12, 3.0], [1.62702218E12, 4.104721030042916], [1.62702184E12, 7.0], [1.62702201E12, 5.5145493257629505], [1.62702198E12, 3.0], [1.62702215E12, 3.0], [1.62702181E12, 3.3224400871459707], [1.62702164E12, 3.9081545064377696], [1.62702147E12, 1896.7812500000002], [1.62702224E12, 6.0], [1.62702206E12, 6.0], [1.62702223E12, 6.0], [1.62702189E12, 6.696117804551542], [1.62702172E12, 5.0], [1.62702155E12, 6.658135283363805], [1.62702232E12, 1.5], [1.62702182E12, 3.213241616509031], [1.62702199E12, 3.906318082788671], [1.62702165E12, 5.371002132196158], [1.62702148E12, 1791.010928961749], [1.62702208E12, 6.0], [1.62702225E12, 6.0], [1.6270219E12, 7.0], [1.62702207E12, 6.0], [1.62702173E12, 5.0], [1.62702156E12, 2.8341346153846145], [1.62702216E12, 3.0], [1.6270223E12, 3.0], [1.62702196E12, 3.0], [1.62702213E12, 3.0], [1.62702179E12, 2.0], [1.62702162E12, 2.7641791044776105], [1.62702204E12, 5.895333333333335], [1.62702221E12, 6.0], [1.62702187E12, 8.890006706908109], [1.6270217E12, 6.089512358049431], [1.62702153E12, 45.87848932676523], [1.62702214E12, 3.0], [1.62702231E12, 3.0], [1.6270218E12, 2.82414307004471], [1.62702197E12, 3.0], [1.62702163E12, 2.7253829321663], [1.62702146E12, 1937.6250000000002], [1.62702222E12, 6.0], [1.62702188E12, 5.911705685618736], [1.62702205E12, 6.0], [1.62702171E12, 6.505693235097121], [1.62702154E12, 10.501128668171557]], "isOverall": false, "label": "bzm - Concurrency Thread Group-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62702232E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 15.546522705620822, "minX": 1.0, "maxY": 7665.0, "series": [{"data": [[2.0, 15.546522705620822], [3.0, 17.891626780121662], [4.0, 20.318362142249935], [5.0, 24.20206224576677], [6.0, 29.181646367072453], [7.0, 27.95192674551698], [8.0, 28.708888888888914], [9.0, 30.143536121673012], [10.0, 39.38709677419356], [11.0, 187.66666666666669], [12.0, 76.80272108843536], [13.0, 60.139575971731446], [14.0, 246.0], [15.0, 53.0], [16.0, 314.0], [17.0, 69.6], [18.0, 292.6666666666667], [19.0, 31.0], [20.0, 95.57723577235771], [21.0, 416.0], [22.0, 416.0], [23.0, 431.0], [24.0, 411.0], [25.0, 418.0], [26.0, 425.0], [27.0, 413.0], [28.0, 415.0], [29.0, 428.5], [30.0, 437.0], [31.0, 424.0], [33.0, 439.0], [32.0, 424.0], [35.0, 416.0], [36.0, 419.0], [38.0, 413.0], [41.0, 402.0], [40.0, 421.0], [43.0, 431.0], [42.0, 390.0], [45.0, 414.5], [47.0, 413.0], [46.0, 397.0], [49.0, 407.0], [48.0, 413.0], [51.0, 405.0], [50.0, 420.0], [53.0, 396.0], [52.0, 407.0], [55.0, 403.0], [54.0, 396.0], [57.0, 415.0], [56.0, 425.0], [59.0, 421.0], [58.0, 415.0], [61.0, 419.0], [60.0, 391.0], [63.0, 385.0], [62.0, 394.0], [67.0, 391.0], [66.0, 377.0], [65.0, 406.0], [64.0, 388.0], [71.0, 127.0], [70.0, 131.0], [69.0, 341.0], [68.0, 364.0], [75.0, 125.0], [74.0, 123.0], [73.0, 129.5], [79.0, 122.0], [78.0, 125.0], [76.0, 124.0], [83.0, 122.0], [82.0, 118.0], [81.0, 120.0], [80.0, 125.0], [87.0, 120.0], [86.0, 119.0], [84.0, 117.0], [91.0, 452.0], [90.0, 212.0], [88.0, 266.0], [93.0, 210.0], [92.0, 465.5], [98.0, 472.0], [97.0, 203.0], [96.0, 530.3333333333334], [102.0, 663.0], [101.0, 199.0], [100.0, 506.0], [107.0, 448.0], [106.0, 513.6666666666666], [104.0, 465.0], [111.0, 1549.0], [110.0, 676.0], [109.0, 429.0], [108.0, 444.0], [115.0, 446.0], [114.0, 1539.0], [118.0, 965.0], [117.0, 427.0], [116.0, 1290.0], [122.0, 499.0], [121.0, 441.0], [120.0, 1043.5], [127.0, 890.0], [125.0, 631.0], [124.0, 444.0], [135.0, 415.0], [134.0, 631.0], [133.0, 429.0], [132.0, 421.0], [131.0, 455.0], [130.0, 530.0], [129.0, 1521.0], [128.0, 1528.0], [143.0, 495.0], [142.0, 388.0], [141.0, 459.0], [140.0, 578.0], [139.0, 519.0], [138.0, 721.0], [137.0, 410.0], [136.0, 550.0], [151.0, 1455.0], [150.0, 1087.0], [149.0, 880.0], [148.0, 900.0], [146.0, 453.0], [145.0, 1445.0], [144.0, 326.0], [159.0, 1446.0], [158.0, 818.0], [157.0, 1129.0], [156.0, 847.0], [155.0, 1113.0], [154.0, 1061.0], [153.0, 829.0], [152.0, 845.0], [165.0, 278.0], [163.0, 540.0], [162.0, 944.0], [161.0, 1446.0], [160.0, 903.0], [175.0, 844.0], [174.0, 249.0], [173.0, 916.0], [172.0, 1125.0], [171.0, 1105.0], [170.0, 1384.0], [182.0, 916.0], [181.0, 1116.0], [180.0, 1138.0], [179.0, 567.0], [178.0, 1388.0], [177.0, 1141.0], [176.0, 1391.0], [191.0, 1144.0], [190.0, 1350.0], [187.0, 1097.0], [186.0, 1371.0], [198.0, 1365.0], [197.0, 1367.0], [194.0, 561.0], [207.0, 1110.0], [206.0, 1085.0], [205.0, 1086.5], [204.0, 1349.0], [203.0, 1358.0], [202.0, 227.0], [215.0, 1316.0], [214.0, 829.0], [213.0, 1085.0], [212.0, 982.0], [211.0, 913.0], [210.0, 1177.3333333333333], [208.0, 1306.0], [222.0, 1097.0], [220.0, 1062.0], [219.0, 1317.0], [218.0, 850.0], [217.0, 1091.0], [216.0, 872.0], [231.0, 1319.0], [230.0, 1087.0], [229.0, 751.0], [228.0, 1320.0], [227.0, 1074.0], [225.0, 1035.0], [224.0, 1311.5], [239.0, 1068.0], [238.0, 1071.0], [237.0, 1283.0], [236.0, 1071.0], [235.0, 1079.0], [234.0, 1287.0], [233.0, 1312.0], [232.0, 1086.0], [247.0, 725.0], [246.0, 1039.0], [245.0, 990.0], [244.0, 1268.0], [243.0, 1286.0], [242.0, 1299.0], [241.0, 862.0], [253.0, 1244.0], [252.0, 1251.0], [251.0, 1249.0], [250.0, 1012.0], [249.0, 1272.0], [248.0, 940.0], [270.0, 677.0], [271.0, 1095.0], [268.0, 844.0], [267.0, 1077.0], [266.0, 797.0], [265.0, 1143.0], [264.0, 1161.0], [263.0, 1138.0], [262.0, 791.0], [261.0, 837.0], [260.0, 1022.7142857142859], [286.0, 450.0], [287.0, 520.0], [285.0, 409.0], [284.0, 1043.0], [283.0, 1051.0], [282.0, 745.0], [281.0, 629.0], [280.0, 831.0], [279.0, 645.0], [273.0, 851.0], [272.0, 824.0], [275.0, 473.0], [274.0, 849.0], [278.0, 871.5], [276.0, 1050.0], [301.0, 497.0], [300.0, 676.0], [291.0, 654.0], [290.0, 457.0], [289.0, 452.0], [288.0, 392.0], [299.0, 774.1428571428571], [298.0, 998.0], [297.0, 1014.0], [296.0, 1027.0], [295.0, 497.0], [294.0, 792.0], [293.0, 455.0], [292.0, 789.0], [316.0, 704.0], [310.0, 637.0], [307.0, 643.0], [331.0, 709.0], [330.0, 732.0], [327.0, 628.0], [323.0, 732.25], [346.0, 740.0], [339.0, 945.0], [338.0, 708.0], [336.0, 908.0], [365.0, 715.0], [362.0, 908.0], [361.0, 886.0], [358.0, 714.0], [356.0, 614.0], [354.0, 891.0], [353.0, 701.0], [381.0, 682.0], [382.0, 682.0], [380.0, 984.0], [370.0, 899.5], [368.0, 984.0], [379.0, 601.0], [378.0, 699.0], [377.0, 878.0], [376.0, 720.0], [375.0, 878.0], [374.0, 887.0], [373.0, 789.0], [372.0, 1056.0], [397.0, 631.5], [399.0, 652.0], [396.0, 655.5], [386.0, 967.0], [384.0, 951.5], [394.0, 1237.0], [393.0, 1183.0], [392.0, 681.0], [391.0, 1208.0], [390.0, 594.0], [389.0, 688.0], [388.0, 894.0], [408.0, 1696.0], [412.0, 1231.0], [403.0, 1191.0], [402.0, 1173.119047619048], [400.0, 671.0], [411.0, 1301.0], [410.0, 955.0], [409.0, 1153.0], [407.0, 1512.5], [406.0, 1208.0], [405.0, 1237.0], [404.0, 1353.0], [430.0, 1092.0], [431.0, 1099.0], [429.0, 1288.0], [428.0, 1106.0], [427.0, 1398.0], [426.0, 987.0], [425.0, 1111.0], [423.0, 1403.0], [417.0, 1029.0], [419.0, 1133.0], [418.0, 1150.0], [421.0, 1877.0], [420.0, 1819.0], [446.0, 1094.0], [447.0, 1800.0], [445.0, 1265.0], [444.0, 1375.0], [443.0, 1116.0], [441.0, 1075.5], [440.0, 1085.0], [439.0, 1100.0], [433.0, 1276.0], [432.0, 1105.0], [435.0, 958.0], [434.0, 962.0], [438.0, 1021.5], [437.0, 959.0], [436.0, 1097.0], [451.0, 1078.0], [463.0, 1028.0], [461.0, 1533.0], [450.0, 1333.0], [449.0, 956.0], [448.0, 1636.0], [459.0, 1344.5], [458.0, 944.0], [457.0, 1389.0], [455.0, 1265.0], [454.0, 1781.0], [453.0, 1064.0], [452.0, 1070.0], [478.0, 1798.0], [479.0, 1354.0], [477.0, 1066.0], [476.0, 935.0], [475.0, 1069.0], [474.0, 926.0], [473.0, 1253.0], [472.0, 1184.5], [470.0, 950.0], [464.0, 1069.5], [467.0, 1053.0], [466.0, 1191.5], [469.0, 1587.0], [468.0, 1062.0], [494.0, 1053.0], [495.0, 1590.0], [493.0, 1288.0], [492.0, 1049.0], [491.0, 1816.0], [490.0, 1063.0], [489.0, 1060.0], [488.0, 1041.0], [487.0, 931.0], [481.0, 1302.0], [480.0, 1071.0], [483.0, 1817.0], [482.0, 1243.0], [486.0, 933.0], [485.0, 1801.0], [484.0, 932.0], [504.0, 660.0], [509.0, 459.5], [498.0, 1790.0], [497.0, 915.0], [496.0, 1054.0], [507.0, 444.0], [506.0, 507.0], [505.0, 616.0], [503.0, 626.0], [502.0, 681.0], [501.0, 636.0], [500.0, 1106.3578947368414], [563.0, 718.3333333333334], [574.0, 691.0], [570.0, 725.0], [568.0, 704.0], [544.0, 729.0], [557.0, 706.0], [556.0, 741.0], [567.0, 731.0], [566.0, 665.5], [564.0, 735.0], [561.0, 496.5], [560.0, 714.0], [604.0, 726.0], [607.0, 677.0], [593.0, 687.5], [596.0, 690.0], [595.0, 696.0], [606.0, 704.0], [605.0, 661.0], [603.0, 695.0], [602.0, 697.0], [601.0, 682.0], [600.0, 701.5], [591.0, 701.0], [577.0, 687.0], [580.0, 736.0], [579.0, 741.0], [583.0, 724.0], [581.0, 690.0], [587.0, 681.0], [585.0, 738.0], [584.0, 715.5], [598.0, 681.0], [597.0, 709.0], [637.0, 707.0], [627.0, 667.0], [638.0, 673.0], [624.0, 672.0], [626.0, 706.0], [625.0, 709.0], [636.0, 644.5], [634.0, 606.0], [632.0, 695.0], [615.0, 544.0], [614.0, 537.0], [613.0, 611.5106382978723], [612.0, 712.0], [611.0, 687.5], [610.0, 671.0], [609.0, 654.5], [608.0, 657.0], [623.0, 592.0], [622.0, 720.0], [620.0, 590.0], [619.0, 692.0], [618.0, 608.0], [617.0, 683.0], [616.0, 636.0], [631.0, 678.0], [630.0, 670.0], [629.0, 593.5], [668.0, 633.0], [671.0, 567.0], [656.0, 680.0], [658.0, 574.0], [657.0, 694.0], [660.0, 638.0], [659.0, 665.0], [670.0, 630.0], [669.0, 568.0], [667.0, 568.0], [666.0, 669.0], [665.0, 581.0], [664.0, 679.0], [655.0, 674.5], [640.0, 667.5], [642.0, 664.0], [641.0, 674.0], [645.0, 616.5], [643.0, 641.0], [647.0, 586.0], [646.0, 652.0], [653.0, 565.0], [652.0, 702.0], [651.0, 663.0], [650.0, 680.0], [649.0, 684.0], [663.0, 640.5], [662.0, 658.0], [700.0, 357.0], [703.0, 170.0], [689.0, 423.0], [691.0, 409.0], [690.0, 401.0], [693.0, 399.5], [692.0, 405.0], [702.0, 231.0], [701.0, 229.0], [699.0, 311.0], [698.0, 350.0], [697.0, 468.0], [696.0, 459.0], [687.0, 538.0], [672.0, 634.0], [675.0, 555.0], [673.0, 509.0], [677.0, 564.0], [676.0, 554.0], [679.0, 579.0], [678.0, 575.0], [686.0, 540.0], [684.0, 533.0], [683.0, 549.0], [682.0, 566.0], [681.0, 568.0], [680.0, 467.0], [695.0, 389.0], [694.0, 500.0], [729.0, 604.0], [733.0, 656.0], [734.0, 593.0], [720.0, 615.0], [725.0, 651.0], [722.0, 621.0], [732.0, 612.0], [731.0, 602.0], [730.0, 600.0], [728.0, 647.0], [711.0, 670.0], [710.0, 672.0], [709.0, 630.0], [708.0, 668.0], [707.0, 669.0], [706.0, 641.0], [705.0, 666.0], [704.0, 636.0], [719.0, 656.0], [718.0, 620.0], [717.0, 640.0], [716.0, 667.0], [714.0, 661.5], [713.0, 642.0], [727.0, 621.0], [726.0, 633.0], [761.0, 568.0], [766.0, 576.0], [767.0, 558.0], [753.0, 558.0], [752.0, 571.0], [755.0, 600.0], [754.0, 552.0], [757.0, 579.0], [756.0, 551.0], [764.0, 554.0], [763.0, 581.0], [762.0, 567.0], [760.0, 556.0], [743.0, 572.0], [742.0, 601.5], [740.0, 618.0], [739.0, 611.0], [738.0, 634.0], [737.0, 633.5], [736.0, 605.5], [751.0, 559.0], [750.0, 619.0], [749.0, 575.0], [748.0, 600.0], [747.0, 602.0], [746.0, 615.0], [745.0, 591.0], [744.0, 571.0], [759.0, 596.0], [758.0, 550.0], [793.0, 259.0], [798.0, 346.0], [799.0, 365.0], [785.0, 319.0], [784.0, 348.0], [787.0, 292.0], [786.0, 346.0], [789.0, 274.0], [788.0, 278.0], [796.0, 190.0], [795.0, 318.0], [794.0, 259.0], [792.0, 305.0], [775.0, 471.0], [774.0, 443.0], [773.0, 435.0], [772.0, 474.0], [771.0, 458.0], [770.0, 514.0], [769.0, 554.0], [783.0, 350.5], [782.0, 309.0], [781.0, 307.0], [780.0, 361.0], [779.0, 356.0], [778.0, 378.0], [777.0, 458.0], [776.0, 471.0], [791.0, 206.0], [790.0, 314.0], [824.0, 338.0], [828.0, 304.0], [831.0, 305.0], [818.0, 332.0], [817.0, 334.0], [820.0, 305.0], [819.0, 326.0], [830.0, 308.0], [829.0, 294.0], [827.0, 330.0], [826.0, 335.0], [825.0, 297.0], [815.0, 335.0], [800.0, 349.0], [802.0, 363.0], [801.0, 360.0], [804.0, 334.0], [803.0, 340.0], [806.0, 353.0], [805.0, 363.0], [814.0, 328.0], [813.0, 338.0], [812.0, 324.0], [811.0, 327.0], [810.0, 343.0], [809.0, 330.0], [808.0, 354.0], [823.0, 308.0], [822.0, 316.5], [837.0, 305.0], [859.0, 1091.0], [861.0, 1133.0], [858.0, 1157.0], [839.0, 268.0], [838.0, 271.0], [836.0, 289.0], [835.0, 310.0], [834.0, 310.0], [833.0, 304.0], [832.0, 322.0], [852.0, 1092.0], [851.0, 1213.0], [850.0, 1132.0], [849.0, 1176.0], [847.0, 1182.0], [846.0, 280.0], [845.0, 257.0], [844.0, 293.0], [843.0, 274.0], [842.0, 284.0], [841.0, 307.0], [840.0, 266.0], [895.0, 1097.9642857142858], [893.0, 1139.0], [892.0, 1154.0], [891.0, 1159.0], [890.0, 1170.0], [888.0, 1074.0], [887.0, 1122.0], [876.0, 1137.0], [921.0, 988.0], [926.0, 959.0], [927.0, 1060.0], [913.0, 1093.0], [912.0, 1131.0], [915.0, 1067.0], [914.0, 1093.0], [917.0, 1050.0], [916.0, 995.0], [925.0, 1069.5], [923.0, 1035.0], [922.0, 1059.0], [920.0, 1077.0], [903.0, 1010.0], [902.0, 1018.0], [901.0, 1065.5], [900.0, 1058.5], [898.0, 1034.0], [897.0, 1121.0], [896.0, 1073.6666666666667], [911.0, 1141.0], [910.0, 1071.0], [909.0, 1085.0], [908.0, 1104.0], [907.0, 1090.0], [906.0, 1022.0], [905.0, 1038.5], [919.0, 1051.0], [918.0, 1080.0], [953.0, 1001.0], [957.0, 1054.0], [959.0, 1011.0], [944.0, 936.0], [946.0, 947.0], [945.0, 932.0], [949.0, 1000.0], [947.0, 951.0], [956.0, 927.0], [955.0, 978.0], [954.0, 1001.0], [952.0, 985.0], [934.0, 1004.5], [932.0, 1024.0], [931.0, 1046.0], [930.0, 1053.0], [928.0, 1053.0], [943.0, 1029.5], [942.0, 948.0], [941.0, 961.0], [940.0, 1009.0], [939.0, 984.5], [938.0, 1015.5], [936.0, 1034.0], [951.0, 991.0], [950.0, 1034.0], [988.0, 437.0], [991.0, 445.0], [976.0, 801.0], [978.0, 844.5], [977.0, 785.0], [980.0, 420.0], [979.0, 773.0], [990.0, 434.0], [989.0, 447.0], [987.0, 316.0], [986.0, 461.0], [985.0, 464.0], [984.0, 474.0], [975.0, 880.0], [960.0, 966.5], [963.0, 924.5], [961.0, 977.0], [965.0, 966.0], [964.0, 914.0], [967.0, 959.0], [966.0, 1018.0], [974.0, 859.0], [973.0, 873.0], [971.0, 821.0], [970.0, 915.5], [968.0, 862.0], [983.0, 459.5], [981.0, 255.0], [1022.0, 352.0], [1023.0, 331.0], [1009.0, 398.0], [1021.0, 352.0], [1020.0, 354.0], [1019.0, 365.3333333333333], [1016.0, 364.0], [1005.0, 426.5], [993.0, 419.5], [995.0, 438.0], [994.0, 428.0], [1004.0, 410.0], [1003.0, 409.0], [1000.0, 409.8], [1015.0, 391.0], [1014.0, 387.0], [1013.0, 391.0], [1012.0, 378.5], [1084.0, 1072.0], [1064.0, 603.0], [1056.0, 678.0], [1060.0, 637.0], [1058.0, 666.0], [1062.0, 649.0], [1066.0, 610.0], [1068.0, 559.0], [1086.0, 1118.0], [1074.0, 558.0], [1026.0, 348.0], [1028.0, 311.0], [1030.0, 307.0], [1032.0, 684.0], [1034.0, 698.0], [1038.0, 697.5], [1036.0, 686.0], [1054.0, 661.0], [1052.0, 664.5], [1050.0, 677.0], [1048.0, 684.0], [1046.0, 672.0], [1044.0, 692.0], [1042.0, 679.0], [1040.0, 677.5], [1070.0, 560.0], [1144.0, 973.5], [1146.0, 953.0], [1122.0, 1036.0], [1128.0, 1006.0], [1126.0, 866.75], [1132.0, 874.0], [1134.0, 892.5], [1150.0, 884.0], [1148.0, 898.0], [1142.0, 964.0], [1140.0, 849.5], [1138.0, 968.0], [1102.0, 1089.0], [1100.0, 1060.5], [1098.0, 1062.0], [1096.0, 1107.0], [1092.0, 794.0], [1116.0, 480.0], [1114.0, 1063.0], [1112.0, 1057.0], [1106.0, 1105.0], [1104.0, 821.0], [1200.0, 994.0], [1212.0, 1038.0], [1190.0, 1036.5], [1192.0, 1008.0], [1198.0, 1062.0], [1214.0, 1056.0], [1210.0, 1095.0], [1206.0, 1128.0], [1204.0, 1010.0], [1154.0, 907.0], [1156.0, 863.0], [1158.0, 882.0], [1160.0, 769.0], [1164.0, 739.0], [1166.0, 714.0], [1182.0, 1125.0], [1180.0, 1044.0], [1178.0, 1173.0], [1176.0, 466.0], [1174.0, 555.0], [1172.0, 673.0], [1170.0, 689.0], [1168.0, 681.0], [1276.0, 985.0], [1256.0, 960.0], [1248.0, 928.0], [1250.0, 977.0], [1252.0, 974.0], [1254.0, 1003.0], [1258.0, 991.0], [1260.0, 946.0], [1262.0, 978.0], [1278.0, 926.3333333333334], [1266.0, 996.0], [1216.0, 981.0], [1220.0, 968.0], [1222.0, 1033.0], [1230.0, 1029.5], [1228.0, 1019.0], [1246.0, 954.0], [1244.0, 1011.0], [1242.0, 1031.5], [1240.0, 969.0], [1238.0, 1061.0], [1236.0, 974.0], [1234.0, 1004.0], [1232.0, 1073.5], [1336.0, 794.0], [1312.0, 843.5], [1314.0, 818.0], [1316.0, 896.0], [1318.0, 739.0], [1320.0, 704.0], [1322.0, 347.0], [1324.0, 826.0], [1342.0, 845.0], [1338.0, 827.5], [1332.0, 841.5], [1330.0, 781.0], [1328.0, 812.0], [1294.0, 832.0], [1292.0, 868.0], [1290.0, 964.0], [1288.0, 826.0], [1286.0, 880.0], [1284.0, 927.0], [1282.0, 933.0], [1280.0, 898.0], [1310.0, 864.0], [1308.0, 896.0], [1306.0, 890.0], [1304.0, 897.0], [1302.0, 849.0], [1300.0, 893.0], [1298.0, 823.0], [1296.0, 811.0], [1400.0, 656.5], [1404.0, 640.0], [1380.0, 746.5], [1384.0, 770.0], [1388.0, 739.5], [1386.0, 743.0], [1390.0, 712.0], [1406.0, 898.0], [1402.0, 668.0], [1396.0, 718.0], [1392.0, 737.0], [1358.0, 736.5], [1354.0, 811.0], [1352.0, 792.0], [1350.0, 736.0], [1348.0, 754.0], [1346.0, 802.0], [1374.0, 742.0], [1372.0, 763.0], [1370.0, 802.5], [1368.0, 773.0], [1366.0, 795.5], [1364.0, 751.0], [1362.0, 773.0], [1470.0, 164.5], [1448.0, 756.0], [1440.0, 754.0], [1442.0, 742.0], [1444.0, 773.0], [1446.0, 765.0], [1450.0, 737.0], [1452.0, 657.0], [1454.0, 678.0], [1468.0, 163.0], [1464.0, 549.0], [1462.0, 553.0], [1460.0, 523.0], [1458.0, 598.0], [1422.0, 866.0], [1420.0, 844.0], [1418.0, 841.0], [1416.0, 857.5], [1408.0, 924.0], [1438.0, 793.0], [1436.0, 800.0], [1434.0, 805.0], [1432.0, 819.0], [1430.0, 758.0], [1428.0, 817.0], [1426.0, 844.0], [1424.0, 839.0], [1530.0, 734.0], [1510.0, 786.0], [1518.0, 746.0], [1516.0, 790.0], [1532.0, 702.5], [1528.0, 737.5], [1526.0, 739.0], [1520.0, 757.0], [1480.0, 770.0], [1478.0, 801.0], [1476.0, 149.0], [1474.0, 148.0], [1472.0, 151.0], [1498.0, 777.5], [1496.0, 762.0], [1494.0, 741.0], [1546.0, 622.0], [1592.0, 1198.8333333333333], [1568.0, 480.0], [1570.0, 1170.0], [1576.0, 1188.0], [1574.0, 1168.5], [1586.0, 1246.0], [1588.0, 1169.0], [1584.0, 1155.0], [1538.0, 711.0], [1542.0, 673.0], [1540.0, 734.0], [1548.0, 647.0], [1550.0, 607.0], [1566.0, 557.0], [1564.0, 549.0], [1562.0, 569.0], [1560.0, 556.0], [1558.0, 635.0], [1556.0, 638.0], [1554.0, 611.0], [1552.0, 587.0], [1582.0, 1167.0], [1578.0, 1150.5], [1662.0, 1065.3333333333333], [1632.0, 1172.0], [1636.0, 1133.0], [1642.0, 1107.0], [1644.0, 1159.75], [1658.0, 1060.0], [1654.0, 1112.0], [1652.0, 1136.0], [1650.0, 1110.0], [1648.0, 1164.5], [1610.0, 1194.0], [1612.0, 1234.0], [1614.0, 1166.25], [1630.0, 1211.0], [1622.0, 1118.0], [1724.0, 1307.0], [1696.0, 790.0], [1698.0, 1126.0], [1700.0, 1134.0], [1702.0, 1374.0], [1704.0, 1376.0], [1706.0, 1247.0], [1708.0, 1121.0], [1710.0, 1104.0], [1726.0, 1040.0], [1722.0, 1385.0], [1720.0, 1340.0], [1718.0, 1289.0], [1714.0, 1205.5], [1712.0, 1097.0], [1664.0, 993.0], [1666.0, 1000.0], [1668.0, 1044.0], [1670.0, 1053.0], [1676.0, 963.0], [1678.0, 917.5], [1694.0, 894.0], [1692.0, 839.0], [1690.0, 902.0], [1688.0, 921.0], [1686.0, 934.0], [1684.0, 869.0], [1682.0, 899.0], [1680.0, 969.3333333333334], [1780.0, 1216.5], [1788.0, 1125.0], [1762.0, 1263.0], [1760.0, 1175.0], [1764.0, 1280.0], [1768.0, 1242.0], [1770.0, 1174.0], [1790.0, 1137.0], [1786.0, 1052.0], [1784.0, 1101.0], [1782.0, 1151.1666666666667], [1776.0, 1261.0], [1728.0, 1312.0], [1730.0, 1316.0], [1736.0, 1306.0], [1740.0, 1284.0], [1742.0, 1275.0], [1756.0, 809.0], [1754.0, 1314.5], [1752.0, 1237.0], [1750.0, 1308.0], [1748.0, 1251.0], [1746.0, 1320.5], [1744.0, 1257.0], [1852.0, 558.0], [1824.0, 657.0], [1826.0, 635.0], [1830.0, 676.0], [1832.0, 603.0], [1834.0, 634.5], [1836.0, 628.0], [1838.0, 642.0], [1854.0, 543.0], [1850.0, 580.0], [1848.0, 625.0], [1846.0, 566.0], [1842.0, 648.0], [1840.0, 603.0], [1806.0, 860.0], [1804.0, 897.0], [1802.0, 1009.0], [1798.0, 943.0], [1796.0, 973.0], [1794.0, 1071.0], [1792.0, 1010.0], [1822.0, 680.0], [1818.0, 667.0], [1816.0, 621.0], [1812.0, 613.0], [1810.0, 637.0], [1808.0, 689.0], [1910.0, 201.5], [1894.0, 363.5], [1914.0, 583.5], [1888.0, 360.0], [1890.0, 362.0], [1892.0, 363.0], [1900.0, 339.0], [1902.0, 365.0], [1916.0, 578.5], [1912.0, 45.0], [1904.0, 322.0], [1870.0, 578.0], [1868.0, 531.0], [1866.0, 530.5], [1864.0, 532.0], [1862.0, 526.0], [1860.0, 544.0], [1858.0, 565.0], [1856.0, 563.0], [1886.0, 362.0], [1884.0, 386.0], [1882.0, 381.0], [1880.0, 495.0], [1878.0, 442.0], [1876.0, 518.0], [1874.0, 491.0], [1872.0, 520.0], [1980.0, 102.5], [1960.0, 405.0], [1952.0, 476.0], [1954.0, 462.0], [1956.0, 458.0], [1958.0, 431.0], [1962.0, 202.0], [1964.0, 196.0], [1966.0, 196.0], [1982.0, 110.0], [1978.0, 116.0], [1976.0, 138.5], [1974.0, 178.0], [1972.0, 176.5], [1970.0, 169.0], [1968.0, 190.0], [1934.0, 542.0], [1932.0, 549.0], [1928.0, 528.0], [1926.0, 563.0], [1924.0, 484.0], [1948.0, 487.0], [1946.0, 425.0], [1944.0, 475.0], [1942.0, 502.0], [1940.0, 524.0], [1936.0, 486.6666666666667], [1988.0, 67.0], [1996.0, 5610.0], [2000.0, 5068.0], [1984.0, 104.0], [1986.0, 82.0], [1998.0, 6284.0], [1994.0, 68.0], [1992.0, 7665.0], [1990.0, 4209.0], [1057.0, 643.0], [1087.0, 855.0], [1063.0, 614.0], [1065.0, 607.0], [1067.0, 567.0], [1069.0, 545.0], [1085.0, 1116.0], [1083.0, 1124.0], [1075.0, 542.0], [1073.0, 536.0], [1055.0, 645.0], [1025.0, 334.0], [1029.0, 301.0], [1031.0, 312.0], [1033.0, 700.0], [1035.0, 671.0], [1041.0, 682.0], [1071.0, 554.0], [1101.0, 1078.3333333333333], [1151.0, 893.0], [1125.0, 896.0], [1131.0, 971.0], [1135.0, 743.0], [1145.0, 938.0], [1139.0, 958.0], [1137.0, 1005.0], [1103.0, 1086.0], [1099.0, 872.6666666666666], [1097.0, 1083.0], [1095.0, 1099.5], [1091.0, 1086.0], [1089.0, 803.5], [1119.0, 849.3333333333334], [1117.0, 474.0], [1115.0, 1064.0], [1113.0, 1096.0], [1111.0, 967.6666666666666], [1109.0, 1107.0], [1107.0, 471.0], [1105.0, 483.0], [1207.0, 1054.5], [1203.0, 1084.0], [1215.0, 976.0], [1185.0, 1096.0], [1187.0, 1019.0], [1193.0, 1045.0], [1199.0, 1029.0], [1213.0, 1027.0], [1211.0, 1044.0], [1209.0, 1000.0], [1205.0, 1038.0], [1201.0, 1049.0], [1183.0, 1086.0], [1153.0, 782.0], [1155.0, 923.0], [1157.0, 842.0], [1159.0, 812.0], [1163.0, 773.0], [1161.0, 787.0], [1165.0, 741.0], [1167.0, 729.0], [1181.0, 1156.0], [1179.0, 1093.0], [1177.0, 1140.0], [1175.0, 549.0], [1173.0, 720.0], [1171.0, 721.0], [1169.0, 687.0], [1277.0, 996.0], [1279.0, 977.0], [1249.0, 994.0], [1251.0, 1004.0], [1253.0, 1043.0], [1255.0, 1003.0], [1257.0, 1063.0], [1259.0, 919.0], [1261.0, 1019.0], [1263.0, 1036.0], [1273.0, 977.5], [1271.0, 1034.5], [1269.0, 1009.5], [1267.0, 918.5], [1265.0, 1037.0], [1247.0, 1091.0], [1219.0, 1063.0], [1217.0, 1104.0], [1221.0, 1125.5], [1223.0, 975.0], [1227.0, 1025.0], [1225.0, 1018.0], [1245.0, 977.0], [1243.0, 1073.0], [1239.0, 1007.0], [1237.0, 1061.0], [1235.0, 1021.5], [1233.0, 955.0], [1339.0, 770.0], [1319.0, 730.0], [1343.0, 824.0], [1313.0, 800.0], [1315.0, 711.0], [1317.0, 840.0], [1321.0, 696.0], [1323.0, 242.0], [1327.0, 797.0], [1325.0, 796.0], [1341.0, 804.0], [1335.0, 771.5], [1333.0, 822.0], [1331.0, 847.0], [1329.0, 785.0], [1295.0, 946.0], [1293.0, 919.0], [1291.0, 839.0], [1289.0, 898.0], [1287.0, 925.0], [1285.0, 858.0], [1283.0, 851.0], [1281.0, 994.0], [1309.0, 893.0], [1307.0, 855.0], [1305.0, 876.0], [1303.0, 844.0], [1301.0, 818.0], [1299.0, 859.0], [1297.0, 932.0], [1401.0, 692.2], [1381.0, 729.0], [1407.0, 913.0], [1377.0, 757.0], [1379.0, 737.5], [1383.0, 743.0], [1385.0, 703.0], [1391.0, 707.0], [1405.0, 596.0], [1403.0, 630.0], [1395.0, 704.0], [1359.0, 790.5], [1351.0, 769.0], [1349.0, 785.0], [1347.0, 798.0], [1375.0, 751.0], [1373.0, 734.5], [1369.0, 745.0], [1367.0, 739.0], [1365.0, 803.0], [1363.0, 801.0], [1361.0, 813.0], [1465.0, 476.0], [1467.0, 168.0], [1471.0, 162.0], [1441.0, 749.0], [1443.0, 748.0], [1445.0, 776.0], [1449.0, 721.5], [1451.0, 713.0], [1453.0, 684.0], [1455.0, 633.0], [1461.0, 522.0], [1459.0, 532.0], [1423.0, 872.0], [1421.0, 830.0], [1419.0, 824.0], [1417.0, 850.0], [1415.0, 887.0], [1413.0, 904.0], [1411.0, 867.0], [1409.0, 923.0], [1439.0, 791.0], [1437.0, 815.0], [1435.0, 817.0], [1433.0, 780.0], [1431.0, 739.0], [1429.0, 816.0], [1427.0, 861.0], [1425.0, 848.0], [1523.0, 753.6666666666666], [1535.0, 744.3333333333334], [1505.0, 763.0], [1509.0, 764.0], [1507.0, 746.0], [1513.0, 781.6666666666666], [1511.0, 736.3333333333334], [1531.0, 713.0], [1525.0, 742.0], [1485.0, 782.5], [1483.0, 748.5], [1481.0, 764.0], [1479.0, 760.0], [1477.0, 762.0], [1475.0, 147.0], [1473.0, 153.0], [1501.0, 790.0], [1495.0, 790.0], [1491.0, 775.6], [1503.0, 783.0], [1545.0, 671.0], [1591.0, 1250.0], [1573.0, 1220.0], [1589.0, 1239.0], [1583.0, 1206.5], [1567.0, 573.0], [1537.0, 749.0], [1543.0, 680.0], [1547.0, 637.5], [1549.0, 615.0], [1551.0, 601.0], [1565.0, 560.0], [1563.0, 611.0], [1561.0, 572.0], [1559.0, 602.0], [1557.0, 586.0], [1555.0, 647.0], [1553.0, 632.0], [1579.0, 1204.5], [1663.0, 1028.5], [1657.0, 1093.0], [1635.0, 1160.0], [1633.0, 1147.3333333333333], [1637.0, 1117.0], [1641.0, 1124.0], [1643.0, 1125.0], [1655.0, 1080.0], [1653.0, 1107.0], [1649.0, 1151.0], [1613.0, 1173.625], [1611.0, 1158.6666666666667], [1605.0, 1187.0], [1631.0, 1127.0], [1623.0, 1175.3333333333333], [1619.0, 1193.2], [1617.0, 1213.3333333333333], [1725.0, 998.0], [1703.0, 1400.0], [1727.0, 1312.0], [1697.0, 821.0], [1699.0, 1140.0], [1701.0, 857.0], [1707.0, 1096.0], [1709.0, 1339.0], [1711.0, 1101.0], [1723.0, 1077.0], [1721.0, 1337.0], [1715.0, 1371.0], [1695.0, 808.0], [1665.0, 1016.0], [1667.0, 1035.0], [1671.0, 1045.0], [1675.0, 966.0], [1673.0, 928.0], [1677.0, 916.0], [1679.0, 961.0], [1693.0, 905.0], [1691.0, 865.0], [1687.0, 851.0], [1685.0, 940.0], [1683.0, 910.0], [1681.0, 939.0], [1781.0, 1214.0], [1791.0, 1102.0], [1763.0, 1229.0], [1769.0, 1046.5], [1775.0, 1184.0], [1789.0, 1036.0], [1787.0, 1161.0], [1785.0, 1081.0], [1783.0, 1076.0], [1779.0, 1174.0], [1759.0, 1207.6666666666667], [1729.0, 1274.0], [1731.0, 1380.0], [1735.0, 1285.5], [1739.0, 1320.5], [1737.0, 1258.0], [1741.0, 1300.3333333333333], [1743.0, 1341.0], [1755.0, 1267.0], [1751.0, 1246.5], [1749.0, 1255.0], [1747.0, 1351.0], [1745.0, 1276.0], [1851.0, 541.0], [1843.0, 640.0], [1855.0, 534.0], [1825.0, 666.0], [1827.0, 603.0], [1829.0, 636.0], [1831.0, 661.0], [1833.0, 607.0], [1837.0, 645.0], [1839.0, 649.0], [1853.0, 586.0], [1849.0, 620.0], [1847.0, 580.0], [1845.0, 601.0], [1841.0, 628.0], [1807.0, 783.0], [1805.0, 911.0], [1801.0, 930.0], [1799.0, 1081.0], [1797.0, 971.0], [1795.0, 991.0], [1793.0, 1050.0], [1823.0, 654.0], [1819.0, 618.0], [1813.0, 652.0], [1811.0, 649.0], [1809.0, 668.0], [1911.0, 64.0], [1909.0, 224.0], [1919.0, 536.0], [1889.0, 381.0], [1893.0, 371.0], [1895.0, 358.0], [1899.0, 372.0], [1897.0, 369.0], [1901.0, 358.0], [1903.0, 357.0], [1917.0, 517.0], [1907.0, 263.0], [1905.0, 328.0], [1871.0, 544.0], [1869.0, 545.0], [1867.0, 536.0], [1865.0, 520.0], [1863.0, 561.0], [1861.0, 599.0], [1859.0, 529.0], [1857.0, 584.0], [1887.0, 363.0], [1885.0, 380.0], [1883.0, 389.0], [1881.0, 394.0], [1879.0, 432.0], [1877.0, 428.0], [1875.0, 467.0], [1873.0, 533.0], [1981.0, 114.0], [1983.0, 106.0], [1953.0, 407.0], [1955.0, 474.0], [1957.0, 412.0], [1961.0, 197.0], [1963.0, 184.0], [1965.0, 180.0], [1967.0, 186.0], [1977.0, 116.0], [1975.0, 153.0], [1969.0, 192.0], [1931.0, 499.3333333333333], [1925.0, 493.0], [1923.0, 528.0], [1921.0, 534.0], [1951.0, 416.0], [1947.0, 493.0], [1945.0, 495.0], [1943.0, 495.0], [1941.0, 501.0], [1939.0, 437.0], [1993.0, 70.0], [1985.0, 84.0], [1987.0, 70.0], [1989.0, 67.0], [1999.0, 5532.0], [1997.0, 5224.0], [1995.0, 70.0], [1991.0, 4090.0], [1.0, 39.0]], "isOverall": false, "label": "Sunstar Home", "isController": false}, {"data": [[31.234267952297156, 46.393529561025105]], "isOverall": false, "label": "Sunstar Home-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 39.0, "minX": 1.62702142E12, "maxY": 1153050.0, "series": [{"data": [[1.62702151E12, 368159.4], [1.62702228E12, 650320.2], [1.62702194E12, 266738.9], [1.62702211E12, 457317.0], [1.62702177E12, 79176.1], [1.6270216E12, 129910.3], [1.62702159E12, 77638.7], [1.62702142E12, 8448.6], [1.62702202E12, 1037745.0], [1.62702219E12, 1083867.0], [1.62702185E12, 1153050.0], [1.62702168E12, 1153050.0], [1.62702212E12, 266704.2], [1.62702229E12, 457376.5], [1.62702178E12, 132216.4], [1.62702195E12, 76101.3], [1.62702161E12, 323622.7], [1.62702144E12, 12301.1], [1.62702143E12, 9994.1], [1.6270222E12, 1153050.0], [1.62702186E12, 1149975.2], [1.62702203E12, 733887.2], [1.62702169E12, 1152281.3], [1.62702152E12, 381248.2], [1.62702183E12, 1082333.1], [1.62702166E12, 1152281.3], [1.62702149E12, 178315.2], [1.62702226E12, 1027751.9], [1.62702192E12, 648782.8], [1.62702209E12, 838545.4], [1.62702174E12, 645708.0], [1.62702191E12, 840189.1], [1.62702157E12, 457376.5], [1.627022E12, 896304.2], [1.62702217E12, 704897.9], [1.62702167E12, 1144596.3], [1.6270215E12, 217523.6], [1.6270221E12, 650238.4], [1.62702227E12, 838651.7], [1.62702176E12, 268276.3], [1.62702193E12, 458145.2], [1.62702175E12, 455839.1], [1.62702158E12, 265201.5], [1.62702218E12, 895535.5], [1.62702184E12, 1152281.3], [1.62702201E12, 1083098.3], [1.62702198E12, 512722.9], [1.62702215E12, 323622.7], [1.62702181E12, 705666.6], [1.62702164E12, 895535.5], [1.62702147E12, 24596.6], [1.62702224E12, 1150743.9], [1.62702206E12, 1152131.4], [1.62702223E12, 1153050.0], [1.62702189E12, 1148437.8], [1.62702172E12, 1025445.8], [1.62702155E12, 840957.8], [1.62702232E12, 1537.4], [1.62702182E12, 894003.7], [1.62702199E12, 705666.6], [1.62702165E12, 1081560.9], [1.62702148E12, 140655.9], [1.62702208E12, 1029924.0], [1.62702225E12, 1152281.3], [1.6270219E12, 1030058.0], [1.62702207E12, 1150594.2], [1.62702173E12, 841726.5], [1.62702156E12, 639558.4], [1.62702216E12, 513491.6], [1.6270223E12, 265970.2], [1.62702196E12, 130679.0], [1.62702213E12, 75323.8], [1.62702179E12, 324391.4], [1.62702162E12, 515029.0], [1.62702204E12, 1152853.9], [1.62702221E12, 1152281.3], [1.62702187E12, 1146131.7], [1.6270217E12, 1150743.9], [1.62702153E12, 936276.6], [1.62702214E12, 129910.3], [1.62702231E12, 76101.3], [1.6270218E12, 515797.7], [1.62702197E12, 322854.0], [1.62702163E12, 702591.8], [1.62702146E12, 36895.6], [1.62702222E12, 1153050.0], [1.62702188E12, 1149206.5], [1.62702205E12, 1152131.4], [1.62702171E12, 1147669.1], [1.62702154E12, 1021602.3]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62702151E12, 9340.5], [1.62702228E12, 16497.0], [1.62702194E12, 6766.5], [1.62702211E12, 11602.5], [1.62702177E12, 2008.5], [1.6270216E12, 3295.5], [1.62702159E12, 1969.5], [1.62702142E12, 214.5], [1.62702202E12, 26325.0], [1.62702219E12, 27495.0], [1.62702185E12, 29250.0], [1.62702168E12, 29250.0], [1.62702212E12, 6766.5], [1.62702229E12, 11602.5], [1.62702178E12, 3354.0], [1.62702195E12, 1930.5], [1.62702161E12, 8209.5], [1.62702144E12, 312.0], [1.62702143E12, 253.5], [1.6270222E12, 29250.0], [1.62702186E12, 29172.0], [1.62702203E12, 18622.5], [1.62702169E12, 29230.5], [1.62702152E12, 9672.0], [1.62702183E12, 27456.0], [1.62702166E12, 29230.5], [1.62702149E12, 4524.0], [1.62702226E12, 26071.5], [1.62702192E12, 16458.0], [1.62702209E12, 21274.5], [1.62702174E12, 16380.0], [1.62702191E12, 21313.5], [1.62702157E12, 11602.5], [1.627022E12, 22737.0], [1.62702217E12, 17881.5], [1.62702167E12, 29035.5], [1.6270215E12, 5518.5], [1.6270221E12, 16497.0], [1.62702227E12, 21274.5], [1.62702176E12, 6805.5], [1.62702193E12, 11622.0], [1.62702175E12, 11563.5], [1.62702158E12, 6727.5], [1.62702218E12, 22717.5], [1.62702184E12, 29230.5], [1.62702201E12, 27475.5], [1.62702198E12, 13006.5], [1.62702215E12, 8209.5], [1.62702181E12, 17901.0], [1.62702164E12, 22717.5], [1.62702147E12, 624.0], [1.62702224E12, 29191.5], [1.62702206E12, 29230.5], [1.62702223E12, 29250.0], [1.62702189E12, 29133.0], [1.62702172E12, 26013.0], [1.62702155E12, 21333.0], [1.62702232E12, 39.0], [1.62702182E12, 22678.5], [1.62702199E12, 17901.0], [1.62702165E12, 27436.5], [1.62702148E12, 3568.5], [1.62702208E12, 26130.0], [1.62702225E12, 29230.5], [1.6270219E12, 26130.0], [1.62702207E12, 29191.5], [1.62702173E12, 21352.5], [1.62702156E12, 16224.0], [1.62702216E12, 13026.0], [1.6270223E12, 6747.0], [1.62702196E12, 3315.0], [1.62702213E12, 1911.0], [1.62702179E12, 8229.0], [1.62702162E12, 13065.0], [1.62702204E12, 29250.0], [1.62702221E12, 29230.5], [1.62702187E12, 29074.5], [1.6270217E12, 29191.5], [1.62702153E12, 23751.0], [1.62702214E12, 3295.5], [1.62702231E12, 1930.5], [1.6270218E12, 13084.5], [1.62702197E12, 8190.0], [1.62702163E12, 17823.0], [1.62702146E12, 936.0], [1.62702222E12, 29250.0], [1.62702188E12, 29152.5], [1.62702205E12, 29230.5], [1.62702171E12, 29113.5], [1.62702154E12, 25915.5]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62702232E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 11.88862559241706, "minX": 1.62702142E12, "maxY": 3990.0000000000005, "series": [{"data": [[1.62702151E12, 728.751565762005], [1.62702228E12, 21.692671394799046], [1.62702194E12, 13.265129682997108], [1.62702211E12, 20.033613445378144], [1.62702177E12, 12.262135922330097], [1.6270216E12, 16.704142011834332], [1.62702159E12, 23.44554455445545], [1.62702142E12, 3990.0000000000005], [1.62702202E12, 28.39333333333331], [1.62702219E12, 26.692907801418468], [1.62702185E12, 29.69666666666667], [1.62702168E12, 26.779333333333334], [1.62702212E12, 19.84438040345821], [1.62702229E12, 20.384873949579816], [1.62702178E12, 12.424418604651157], [1.62702195E12, 13.484848484848486], [1.62702161E12, 13.66983372921616], [1.62702144E12, 178.3125], [1.62702143E12, 95.46153846153847], [1.6270222E12, 28.563999999999982], [1.62702186E12, 29.034090909090878], [1.62702203E12, 64.0523560209424], [1.62702169E12, 25.780520346897934], [1.62702152E12, 900.1129032258069], [1.62702183E12, 30.036221590909093], [1.62702166E12, 17.020013342228197], [1.62702149E12, 900.8405172413799], [1.62702226E12, 25.213163799551218], [1.62702192E12, 11.918246445497624], [1.62702209E12, 23.37030247479375], [1.62702174E12, 18.928571428571452], [1.62702191E12, 22.1729185727356], [1.62702157E12, 16.921008403361334], [1.627022E12, 24.620068610634622], [1.62702217E12, 22.70992366412214], [1.62702167E12, 18.11215580926799], [1.6270215E12, 859.4558303886924], [1.6270221E12, 21.115839243498844], [1.62702227E12, 22.63611365719523], [1.62702176E12, 17.234957020057315], [1.62702193E12, 12.031879194630875], [1.62702175E12, 17.774030354131536], [1.62702158E12, 14.020289855072468], [1.62702218E12, 24.367381974248932], [1.62702184E12, 30.74516344229485], [1.62702201E12, 26.7977288857346], [1.62702198E12, 20.58620689655172], [1.62702215E12, 19.76484560570071], [1.62702181E12, 12.307189542483673], [1.62702164E12, 14.103862660944202], [1.62702147E12, 324.68750000000006], [1.62702224E12, 28.653974615898452], [1.62702206E12, 29.286190793862556], [1.62702223E12, 28.691333333333336], [1.62702189E12, 28.058232931726945], [1.62702172E12, 22.595952023987987], [1.62702155E12, 29.52376599634368], [1.62702232E12, 20.5], [1.62702182E12, 14.965606190885648], [1.62702199E12, 22.92047930283224], [1.62702165E12, 18.903340440653896], [1.62702148E12, 943.0327868852454], [1.62702208E12, 25.628358208955188], [1.62702225E12, 27.899266177451654], [1.6270219E12, 25.278358208955197], [1.62702207E12, 28.707414829659335], [1.62702173E12, 20.43926940639272], [1.62702156E12, 19.652644230769223], [1.62702216E12, 20.875748502993996], [1.6270223E12, 21.184971098265898], [1.62702196E12, 13.57647058823529], [1.62702213E12, 21.08163265306122], [1.62702179E12, 11.88862559241706], [1.62702162E12, 12.977611940298504], [1.62702204E12, 28.71399999999997], [1.62702221E12, 28.907271514342938], [1.62702187E12, 29.45003353454056], [1.6270217E12, 26.39612558450235], [1.62702153E12, 224.4072249589487], [1.62702214E12, 21.59763313609467], [1.62702231E12, 19.434343434343436], [1.6270218E12, 12.649776453055132], [1.62702197E12, 12.98809523809522], [1.62702163E12, 12.920131291028452], [1.62702146E12, 492.83333333333337], [1.62702222E12, 28.160000000000004], [1.62702188E12, 28.395986622073544], [1.62702205E12, 28.988659106070727], [1.62702171E12, 26.380442062960498], [1.62702154E12, 51.7148231753198]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62702232E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 11.736966824644549, "minX": 1.62702142E12, "maxY": 3988.818181818182, "series": [{"data": [[1.62702151E12, 715.4363256784964], [1.62702228E12, 21.51891252955082], [1.62702194E12, 13.089337175792503], [1.62702211E12, 19.857142857142886], [1.62702177E12, 12.09708737864078], [1.6270216E12, 16.47928994082841], [1.62702159E12, 23.138613861386144], [1.62702142E12, 3988.818181818182], [1.62702202E12, 28.14666666666667], [1.62702219E12, 26.456028368794325], [1.62702185E12, 29.465999999999973], [1.62702168E12, 26.526666666666653], [1.62702212E12, 19.70605187319883], [1.62702229E12, 20.211764705882345], [1.62702178E12, 12.255813953488373], [1.62702195E12, 13.272727272727273], [1.62702161E12, 13.51781472684086], [1.62702144E12, 177.4375], [1.62702143E12, 94.92307692307692], [1.6270222E12, 28.33333333333334], [1.62702186E12, 28.769385026737933], [1.62702203E12, 63.78115183246064], [1.62702169E12, 25.536357571714458], [1.62702152E12, 898.1814516129026], [1.62702183E12, 29.76988636363638], [1.62702166E12, 16.701801200800546], [1.62702149E12, 877.2758620689657], [1.62702226E12, 25.009723261032182], [1.62702192E12, 11.761848341232232], [1.62702209E12, 23.186067827681008], [1.62702174E12, 18.732142857142854], [1.62702191E12, 21.98078682525162], [1.62702157E12, 16.635294117647046], [1.627022E12, 24.381646655231556], [1.62702217E12, 22.508178844056747], [1.62702167E12, 17.84553391537946], [1.6270215E12, 856.024734982332], [1.6270221E12, 20.940898345153652], [1.62702227E12, 22.419798350137494], [1.62702176E12, 17.094555873925508], [1.62702193E12, 11.87583892617451], [1.62702175E12, 17.602023608768988], [1.62702158E12, 13.820289855072463], [1.62702218E12, 24.18111587982834], [1.62702184E12, 30.508338892595066], [1.62702201E12, 26.546486870120674], [1.62702198E12, 20.38080959520239], [1.62702215E12, 19.600950118764843], [1.62702181E12, 12.120915032679736], [1.62702164E12, 13.921888412017182], [1.62702147E12, 323.03125000000006], [1.62702224E12, 28.40748162992655], [1.62702206E12, 29.036024016010686], [1.62702223E12, 28.448000000000047], [1.62702189E12, 27.805890227577013], [1.62702172E12, 22.388305847076456], [1.62702155E12, 29.23491773308959], [1.62702232E12, 20.0], [1.62702182E12, 14.748925193465174], [1.62702199E12, 22.66013071895427], [1.62702165E12, 18.613361762615487], [1.62702148E12, 923.0928961748639], [1.62702208E12, 25.45373134328364], [1.62702225E12, 27.667778519012636], [1.6270219E12, 25.031343283582075], [1.62702207E12, 28.479625918503704], [1.62702173E12, 20.268493150684947], [1.62702156E12, 19.394230769230752], [1.62702216E12, 20.66616766467066], [1.6270223E12, 21.008670520231227], [1.62702196E12, 13.441176470588237], [1.62702213E12, 20.897959183673464], [1.62702179E12, 11.736966824644549], [1.62702162E12, 12.811940298507476], [1.62702204E12, 28.45], [1.62702221E12, 28.685123415610448], [1.62702187E12, 29.207914151576134], [1.6270217E12, 26.154976619906467], [1.62702153E12, 223.92939244663336], [1.62702214E12, 21.402366863905325], [1.62702231E12, 19.343434343434343], [1.6270218E12, 12.521609538002988], [1.62702197E12, 12.835714285714285], [1.62702163E12, 12.75054704595187], [1.62702146E12, 487.8333333333333], [1.62702222E12, 27.901999999999955], [1.62702188E12, 28.15585284280932], [1.62702205E12, 28.753168779186165], [1.62702171E12, 26.13931681178836], [1.62702154E12, 51.39202407825439]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62702232E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 10.71563981042654, "minX": 1.62702142E12, "maxY": 884.5846994535518, "series": [{"data": [[1.62702151E12, 690.7954070981206], [1.62702228E12, 18.36288416075648], [1.62702194E12, 12.118155619596552], [1.62702211E12, 16.630252100840345], [1.62702177E12, 11.06796116504854], [1.6270216E12, 15.272189349112418], [1.62702159E12, 21.861386138613852], [1.62702142E12, 110.72727272727272], [1.62702202E12, 23.983703703703693], [1.62702219E12, 22.478723404255344], [1.62702185E12, 25.17866666666662], [1.62702168E12, 22.882000000000026], [1.62702212E12, 16.570605187319888], [1.62702229E12, 17.07394957983191], [1.62702178E12, 11.273255813953485], [1.62702195E12, 12.28282828282828], [1.62702161E12, 12.439429928741095], [1.62702144E12, 166.6875], [1.62702143E12, 89.38461538461537], [1.6270222E12, 24.143999999999966], [1.62702186E12, 24.4725935828877], [1.62702203E12, 26.691099476439778], [1.62702169E12, 21.93395597064711], [1.62702152E12, 866.520161290322], [1.62702183E12, 25.53906250000003], [1.62702166E12, 14.991327551701136], [1.62702149E12, 841.4310344827584], [1.62702226E12, 21.183246073298427], [1.62702192E12, 10.761848341232234], [1.62702209E12, 19.551787351054074], [1.62702174E12, 15.988095238095243], [1.62702191E12, 18.613906678865494], [1.62702157E12, 15.361344537815121], [1.627022E12, 20.32418524871355], [1.62702217E12, 18.980370774263914], [1.62702167E12, 15.919408999328407], [1.6270215E12, 834.0388692579508], [1.6270221E12, 17.611111111111132], [1.62702227E12, 18.963336388634286], [1.62702176E12, 14.518624641833814], [1.62702193E12, 10.885906040268456], [1.62702175E12, 14.969645868465427], [1.62702158E12, 12.747826086956517], [1.62702218E12, 20.040343347639478], [1.62702184E12, 26.038025350233475], [1.62702201E12, 22.520227111426554], [1.62702198E12, 17.215892053972983], [1.62702215E12, 16.515439429928744], [1.62702181E12, 11.172113289760343], [1.62702164E12, 12.927038626609443], [1.62702147E12, 310.0625], [1.62702224E12, 24.04074816299262], [1.62702206E12, 24.638425617078028], [1.62702223E12, 24.222000000000016], [1.62702189E12, 23.455823293172685], [1.62702172E12, 19.108695652173918], [1.62702155E12, 25.140767824497274], [1.62702232E12, 18.5], [1.62702182E12, 13.466036113499563], [1.62702199E12, 19.221132897603496], [1.62702165E12, 17.137171286425033], [1.62702148E12, 884.5846994535518], [1.62702208E12, 21.667164179104443], [1.62702225E12, 23.51634422948634], [1.6270219E12, 21.234328358208938], [1.62702207E12, 24.19305277221109], [1.62702173E12, 17.327853881278493], [1.62702156E12, 17.943509615384592], [1.62702216E12, 17.526946107784454], [1.6270223E12, 17.852601156069362], [1.62702196E12, 12.423529411764708], [1.62702213E12, 17.58163265306123], [1.62702179E12, 10.71563981042654], [1.62702162E12, 11.679104477611942], [1.62702204E12, 24.218000000000004], [1.62702221E12, 24.35490326884591], [1.62702187E12, 24.865191146881276], [1.6270217E12, 22.36873747494989], [1.62702153E12, 215.8546798029558], [1.62702214E12, 18.02366863905325], [1.62702231E12, 16.262626262626267], [1.6270218E12, 11.402384500745159], [1.62702197E12, 11.785714285714285], [1.62702163E12, 11.69365426695844], [1.62702146E12, 469.4375], [1.62702222E12, 23.676666666666637], [1.62702188E12, 23.953846153846158], [1.62702205E12, 24.391594396264217], [1.62702171E12, 22.313462826523764], [1.62702154E12, 46.088036117381506]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62702232E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.62702142E12, "maxY": 7665.0, "series": [{"data": [[1.62702151E12, 1213.0], [1.62702228E12, 85.0], [1.62702194E12, 47.0], [1.62702211E12, 71.0], [1.62702177E12, 21.0], [1.6270216E12, 36.0], [1.62702159E12, 53.0], [1.62702142E12, 7665.0], [1.62702202E12, 74.0], [1.62702219E12, 165.0], [1.62702185E12, 96.0], [1.62702168E12, 74.0], [1.62702212E12, 51.0], [1.62702229E12, 39.0], [1.62702178E12, 44.0], [1.62702195E12, 50.0], [1.62702161E12, 55.0], [1.62702144E12, 202.0], [1.62702143E12, 116.0], [1.6270222E12, 314.0], [1.62702186E12, 82.0], [1.62702203E12, 7127.0], [1.62702169E12, 59.0], [1.62702152E12, 1877.0], [1.62702183E12, 100.0], [1.62702166E12, 124.0], [1.62702149E12, 1258.0], [1.62702226E12, 74.0], [1.62702192E12, 47.0], [1.62702209E12, 90.0], [1.62702174E12, 29.0], [1.62702191E12, 68.0], [1.62702157E12, 73.0], [1.627022E12, 78.0], [1.62702217E12, 55.0], [1.62702167E12, 59.0], [1.6270215E12, 1141.0], [1.6270221E12, 96.0], [1.62702227E12, 183.0], [1.62702176E12, 24.0], [1.62702193E12, 30.0], [1.62702175E12, 45.0], [1.62702158E12, 37.0], [1.62702218E12, 78.0], [1.62702184E12, 91.0], [1.62702201E12, 109.0], [1.62702198E12, 54.0], [1.62702215E12, 42.0], [1.62702181E12, 79.0], [1.62702164E12, 104.0], [1.62702147E12, 394.0], [1.62702224E12, 114.0], [1.62702206E12, 69.0], [1.62702223E12, 66.0], [1.62702189E12, 85.0], [1.62702172E12, 60.0], [1.62702155E12, 105.0], [1.62702232E12, 28.0], [1.62702182E12, 67.0], [1.62702199E12, 78.0], [1.62702165E12, 108.0], [1.62702148E12, 1400.0], [1.62702208E12, 67.0], [1.62702225E12, 74.0], [1.6270219E12, 71.0], [1.62702207E12, 94.0], [1.62702173E12, 71.0], [1.62702156E12, 81.0], [1.62702216E12, 182.0], [1.6270223E12, 66.0], [1.62702196E12, 31.0], [1.62702213E12, 74.0], [1.62702179E12, 47.0], [1.62702162E12, 57.0], [1.62702204E12, 109.0], [1.62702221E12, 79.0], [1.62702187E12, 91.0], [1.6270217E12, 69.0], [1.62702153E12, 1549.0], [1.62702214E12, 43.0], [1.62702231E12, 26.0], [1.6270218E12, 72.0], [1.62702197E12, 31.0], [1.62702163E12, 68.0], [1.62702146E12, 589.0], [1.62702222E12, 96.0], [1.62702188E12, 114.0], [1.62702205E12, 80.0], [1.62702171E12, 77.0], [1.62702154E12, 155.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62702151E12, 190.0], [1.62702228E12, 18.0], [1.62702194E12, 10.0], [1.62702211E12, 13.0], [1.62702177E12, 10.0], [1.6270216E12, 10.0], [1.62702159E12, 11.0], [1.62702142E12, 68.0], [1.62702202E12, 20.0], [1.62702219E12, 19.0], [1.62702185E12, 20.0], [1.62702168E12, 14.0], [1.62702212E12, 13.0], [1.62702229E12, 18.0], [1.62702178E12, 10.0], [1.62702195E12, 10.0], [1.62702161E12, 10.0], [1.62702144E12, 137.0], [1.62702143E12, 67.0], [1.6270222E12, 20.0], [1.62702186E12, 20.0], [1.62702203E12, 19.0], [1.62702169E12, 14.0], [1.62702152E12, 170.0], [1.62702183E12, 20.0], [1.62702166E12, 11.0], [1.62702149E12, 147.0], [1.62702226E12, 15.0], [1.62702192E12, 10.0], [1.62702209E12, 17.0], [1.62702174E12, 12.0], [1.62702191E12, 10.0], [1.62702157E12, 10.0], [1.627022E12, 19.0], [1.62702217E12, 18.0], [1.62702167E12, 11.0], [1.6270215E12, 242.0], [1.6270221E12, 13.0], [1.62702227E12, 14.0], [1.62702176E12, 11.0], [1.62702193E12, 10.0], [1.62702175E12, 12.0], [1.62702158E12, 10.0], [1.62702218E12, 19.0], [1.62702184E12, 20.0], [1.62702201E12, 19.0], [1.62702198E12, 18.0], [1.62702215E12, 13.0], [1.62702181E12, 10.0], [1.62702164E12, 10.0], [1.62702147E12, 45.0], [1.62702224E12, 15.0], [1.62702206E12, 20.0], [1.62702223E12, 15.0], [1.62702189E12, 15.0], [1.62702172E12, 13.0], [1.62702155E12, 12.0], [1.62702232E12, 13.0], [1.62702182E12, 10.0], [1.62702199E12, 18.0], [1.62702165E12, 10.0], [1.62702148E12, 428.0], [1.62702208E12, 19.0], [1.62702225E12, 16.0], [1.6270219E12, 14.0], [1.62702207E12, 20.0], [1.62702173E12, 12.0], [1.62702156E12, 10.0], [1.62702216E12, 18.0], [1.6270223E12, 18.0], [1.62702196E12, 10.0], [1.62702213E12, 14.0], [1.62702179E12, 10.0], [1.62702162E12, 10.0], [1.62702204E12, 20.0], [1.62702221E12, 19.0], [1.62702187E12, 20.0], [1.6270217E12, 14.0], [1.62702153E12, 16.0], [1.62702214E12, 13.0], [1.62702231E12, 13.0], [1.6270218E12, 10.0], [1.62702197E12, 10.0], [1.62702163E12, 10.0], [1.62702146E12, 369.0], [1.62702222E12, 15.0], [1.62702188E12, 18.0], [1.62702205E12, 20.0], [1.62702171E12, 13.0], [1.62702154E12, 16.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62702151E12, 1103.0], [1.62702228E12, 24.0], [1.62702194E12, 16.0], [1.62702211E12, 25.0], [1.62702177E12, 14.0], [1.6270216E12, 25.0], [1.62702159E12, 39.0], [1.62702142E12, 7388.800000000001], [1.62702202E12, 36.0], [1.62702219E12, 33.0], [1.62702185E12, 37.0], [1.62702168E12, 34.0], [1.62702212E12, 24.0], [1.62702229E12, 22.0], [1.62702178E12, 14.0], [1.62702195E12, 16.0], [1.62702161E12, 16.0], [1.62702144E12, 198.5], [1.62702143E12, 116.0], [1.6270222E12, 35.0], [1.62702186E12, 37.0], [1.62702203E12, 39.39999999999998], [1.62702169E12, 33.0], [1.62702152E12, 1313.5], [1.62702183E12, 37.0], [1.62702166E12, 22.0], [1.62702149E12, 1199.0], [1.62702226E12, 32.0], [1.62702192E12, 14.0], [1.62702209E12, 26.0], [1.62702174E12, 24.0], [1.62702191E12, 28.0], [1.62702157E12, 27.0], [1.627022E12, 27.0], [1.62702217E12, 27.0], [1.62702167E12, 25.0], [1.6270215E12, 1050.2], [1.6270221E12, 26.0], [1.62702227E12, 28.0], [1.62702176E12, 22.0], [1.62702193E12, 15.0], [1.62702175E12, 23.0], [1.62702158E12, 17.0], [1.62702218E12, 27.0], [1.62702184E12, 39.0], [1.62702201E12, 33.0], [1.62702198E12, 22.0], [1.62702215E12, 25.0], [1.62702181E12, 14.0], [1.62702164E12, 16.0], [1.62702147E12, 384.5], [1.62702224E12, 37.0], [1.62702206E12, 37.0], [1.62702223E12, 37.0], [1.62702189E12, 36.0], [1.62702172E12, 29.0], [1.62702155E12, 45.0], [1.62702232E12, 28.0], [1.62702182E12, 18.0], [1.62702199E12, 27.0], [1.62702165E12, 34.0], [1.62702148E12, 1315.0], [1.62702208E12, 31.0], [1.62702225E12, 36.0], [1.6270219E12, 32.0], [1.62702207E12, 36.0], [1.62702173E12, 26.0], [1.62702156E12, 32.0], [1.62702216E12, 22.0], [1.6270223E12, 24.0], [1.62702196E12, 16.0], [1.62702213E12, 26.0], [1.62702179E12, 13.0], [1.62702162E12, 16.0], [1.62702204E12, 36.0], [1.62702221E12, 36.0], [1.62702187E12, 37.0], [1.6270217E12, 35.0], [1.62702153E12, 824.5000000000007], [1.62702214E12, 26.0], [1.62702231E12, 24.0], [1.6270218E12, 16.0], [1.62702197E12, 16.0], [1.62702163E12, 15.0], [1.62702146E12, 573.1], [1.62702222E12, 37.0], [1.62702188E12, 35.0], [1.62702205E12, 37.0], [1.62702171E12, 35.0], [1.62702154E12, 78.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62702151E12, 1182.4], [1.62702228E12, 38.52999999999997], [1.62702194E12, 33.4399999999996], [1.62702211E12, 42.0], [1.62702177E12, 20.959999999999994], [1.6270216E12, 35.30000000000001], [1.62702159E12, 52.980000000000004], [1.62702142E12, 7665.0], [1.62702202E12, 47.0], [1.62702219E12, 49.0], [1.62702185E12, 53.0], [1.62702168E12, 43.99000000000001], [1.62702212E12, 28.0], [1.62702229E12, 30.039999999999964], [1.62702178E12, 35.97000000000011], [1.62702195E12, 50.0], [1.62702161E12, 29.559999999999945], [1.62702144E12, 202.0], [1.62702143E12, 116.0], [1.6270222E12, 46.99000000000001], [1.62702186E12, 48.0], [1.62702203E12, 118.39999999999941], [1.62702169E12, 42.0], [1.62702152E12, 1809.2099999999998], [1.62702183E12, 50.0], [1.62702166E12, 34.0], [1.62702149E12, 1248.6799999999998], [1.62702226E12, 43.0], [1.62702192E12, 23.649999999999864], [1.62702209E12, 42.0], [1.62702174E12, 27.0], [1.62702191E12, 36.23999999999978], [1.62702157E12, 64.03999999999996], [1.627022E12, 48.659999999999854], [1.62702217E12, 36.819999999999936], [1.62702167E12, 47.0], [1.6270215E12, 1129.6000000000004], [1.6270221E12, 40.52999999999997], [1.62702227E12, 33.0], [1.62702176E12, 24.0], [1.62702193E12, 22.059999999999945], [1.62702175E12, 25.059999999999945], [1.62702158E12, 27.780000000000143], [1.62702218E12, 39.0], [1.62702184E12, 54.0], [1.62702201E12, 46.80000000000018], [1.62702198E12, 31.32000000000005], [1.62702215E12, 31.779999999999973], [1.62702181E12, 21.0], [1.62702164E12, 31.339999999999918], [1.62702147E12, 394.0], [1.62702224E12, 49.0], [1.62702206E12, 51.0], [1.62702223E12, 52.99000000000001], [1.62702189E12, 52.0], [1.62702172E12, 37.0], [1.62702155E12, 73.09999999999991], [1.62702232E12, 28.0], [1.62702182E12, 35.0], [1.62702199E12, 39.809999999999945], [1.62702165E12, 53.0], [1.62702148E12, 1387.3999999999999], [1.62702208E12, 40.58999999999992], [1.62702225E12, 48.0], [1.6270219E12, 47.0], [1.62702207E12, 47.01999999999998], [1.62702173E12, 34.039999999999964], [1.62702156E12, 63.679999999999836], [1.62702216E12, 35.61999999999989], [1.6270223E12, 41.8299999999997], [1.62702196E12, 23.189999999999912], [1.62702213E12, 74.0], [1.62702179E12, 27.61999999999989], [1.62702162E12, 32.44999999999982], [1.62702204E12, 49.0], [1.62702221E12, 49.0], [1.62702187E12, 55.07999999999993], [1.6270217E12, 49.059999999999945], [1.62702153E12, 1381.5299999999993], [1.62702214E12, 35.300000000000125], [1.62702231E12, 26.0], [1.6270218E12, 29.279999999999973], [1.62702197E12, 21.0], [1.62702163E12, 34.85000000000002], [1.62702146E12, 589.0], [1.62702222E12, 48.99000000000001], [1.62702188E12, 49.039999999999964], [1.62702205E12, 47.0], [1.62702171E12, 52.0], [1.62702154E12, 105.40000000000009]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62702151E12, 1133.0], [1.62702228E12, 26.0], [1.62702194E12, 16.599999999999966], [1.62702211E12, 26.0], [1.62702177E12, 16.0], [1.6270216E12, 31.0], [1.62702159E12, 43.79999999999998], [1.62702142E12, 7665.0], [1.62702202E12, 38.0], [1.62702219E12, 36.0], [1.62702185E12, 42.0], [1.62702168E12, 37.0], [1.62702212E12, 25.0], [1.62702229E12, 23.0], [1.62702178E12, 16.0], [1.62702195E12, 17.0], [1.62702161E12, 18.0], [1.62702144E12, 202.0], [1.62702143E12, 116.0], [1.6270222E12, 39.0], [1.62702186E12, 41.0], [1.62702203E12, 61.19999999999993], [1.62702169E12, 36.0], [1.62702152E12, 1587.4499999999998], [1.62702183E12, 41.0], [1.62702166E12, 24.0], [1.62702149E12, 1225.05], [1.62702226E12, 34.0], [1.62702192E12, 15.0], [1.62702209E12, 28.0], [1.62702174E12, 25.0], [1.62702191E12, 30.0], [1.62702157E12, 36.0], [1.627022E12, 29.0], [1.62702217E12, 28.0], [1.62702167E12, 29.0], [1.6270215E12, 1084.8000000000002], [1.6270221E12, 27.0], [1.62702227E12, 29.0], [1.62702176E12, 23.0], [1.62702193E12, 15.149999999999977], [1.62702175E12, 23.0], [1.62702158E12, 19.0], [1.62702218E12, 28.0], [1.62702184E12, 42.0], [1.62702201E12, 36.0], [1.62702198E12, 24.0], [1.62702215E12, 25.899999999999977], [1.62702181E12, 15.0], [1.62702164E12, 18.0], [1.62702147E12, 390.75], [1.62702224E12, 41.0], [1.62702206E12, 41.0], [1.62702223E12, 40.950000000000045], [1.62702189E12, 40.0], [1.62702172E12, 31.0], [1.62702155E12, 54.0], [1.62702232E12, 28.0], [1.62702182E12, 26.0], [1.62702199E12, 28.0], [1.62702165E12, 42.0], [1.62702148E12, 1356.6], [1.62702208E12, 33.0], [1.62702225E12, 40.0], [1.6270219E12, 35.0], [1.62702207E12, 39.0], [1.62702173E12, 27.0], [1.62702156E12, 40.0], [1.62702216E12, 24.0], [1.6270223E12, 25.0], [1.62702196E12, 17.0], [1.62702213E12, 27.0], [1.62702179E12, 14.0], [1.62702162E12, 21.0], [1.62702204E12, 39.0], [1.62702221E12, 39.0], [1.62702187E12, 40.0], [1.6270217E12, 38.0], [1.62702153E12, 1096.05], [1.62702214E12, 28.0], [1.62702231E12, 25.0], [1.6270218E12, 18.0], [1.62702197E12, 18.94999999999999], [1.62702163E12, 20.0], [1.62702146E12, 580.75], [1.62702222E12, 39.0], [1.62702188E12, 39.0], [1.62702205E12, 40.0], [1.62702171E12, 39.0], [1.62702154E12, 86.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62702232E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 11.0, "minX": 1.0, "maxY": 2056.5, "series": [{"data": [[2.0, 2056.5], [3.0, 18.5], [4.0, 18.5], [5.0, 49.5], [6.0, 15.0], [8.0, 19.5], [9.0, 15.0], [10.0, 19.5], [11.0, 16.0], [12.0, 26.0], [13.0, 14.5], [14.0, 14.5], [15.0, 19.0], [16.0, 14.0], [17.0, 20.0], [18.0, 15.0], [19.0, 15.0], [20.0, 26.0], [21.0, 15.0], [22.0, 18.0], [23.0, 14.0], [24.0, 20.5], [25.0, 20.0], [26.0, 14.0], [27.0, 19.0], [28.0, 16.0], [29.0, 13.0], [30.0, 15.0], [31.0, 22.0], [32.0, 15.0], [33.0, 15.0], [34.0, 16.0], [35.0, 20.0], [37.0, 15.5], [36.0, 13.0], [38.0, 12.5], [39.0, 19.5], [40.0, 17.0], [41.0, 15.0], [43.0, 15.0], [42.0, 12.0], [45.0, 13.0], [44.0, 18.0], [46.0, 15.0], [48.0, 18.0], [49.0, 20.0], [51.0, 15.0], [50.0, 14.0], [53.0, 14.0], [52.0, 11.0], [54.0, 18.5], [55.0, 20.0], [57.0, 716.0], [56.0, 15.0], [58.0, 19.0], [59.0, 12.0], [61.0, 19.0], [60.0, 14.0], [63.0, 20.0], [64.0, 19.0], [66.0, 19.0], [65.0, 12.0], [67.0, 18.0], [71.0, 21.0], [69.0, 16.0], [70.0, 13.0], [68.0, 20.0], [74.0, 16.5], [72.0, 18.0], [75.0, 19.0], [73.0, 20.0], [79.0, 13.0], [78.0, 19.5], [82.0, 313.5], [83.0, 16.0], [80.0, 15.0], [81.0, 18.0], [84.0, 23.0], [85.0, 17.0], [87.0, 19.0], [86.0, 19.0], [89.0, 21.0], [90.0, 17.0], [88.0, 20.0], [91.0, 22.0], [92.0, 740.0], [93.0, 20.0], [95.0, 13.0], [94.0, 21.0], [97.0, 21.0], [96.0, 21.0], [98.0, 19.0], [99.0, 22.0], [101.0, 22.0], [103.0, 23.0], [100.0, 21.0], [102.0, 23.0], [106.0, 535.0], [104.0, 17.0], [107.0, 14.0], [105.0, 21.0], [111.0, 23.0], [109.0, 23.0], [110.0, 22.0], [108.0, 22.0], [115.0, 32.0], [113.0, 23.0], [114.0, 22.0], [112.0, 25.0], [119.0, 25.0], [116.0, 22.0], [117.0, 20.0], [118.0, 23.0], [123.0, 27.0], [120.0, 20.0], [121.0, 23.0], [122.0, 22.0], [127.0, 25.0], [124.0, 14.0], [125.0, 23.0], [126.0, 14.0], [128.0, 24.0], [135.0, 24.0], [134.0, 28.0], [131.0, 25.0], [129.0, 20.0], [132.0, 23.0], [130.0, 25.0], [133.0, 26.0], [141.0, 29.0], [142.0, 29.0], [143.0, 31.0], [140.0, 29.0], [137.0, 25.0], [139.0, 24.0], [136.0, 24.0], [138.0, 25.0], [144.0, 30.0], [151.0, 27.0], [147.0, 25.0], [149.0, 26.0], [148.0, 27.0], [150.0, 27.0], [145.0, 26.0], [146.0, 26.0], [152.0, 27.0], [153.0, 28.0], [174.0, 1203.0], [212.0, 901.5], [1.0, 21.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 212.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 11.0, "minX": 1.0, "maxY": 2056.5, "series": [{"data": [[2.0, 2056.5], [3.0, 18.0], [4.0, 18.0], [5.0, 48.5], [6.0, 15.0], [8.0, 19.0], [9.0, 14.5], [10.0, 19.5], [11.0, 16.0], [12.0, 25.5], [13.0, 14.0], [14.0, 14.0], [15.0, 19.0], [16.0, 14.0], [17.0, 20.0], [18.0, 15.0], [19.0, 15.0], [20.0, 26.0], [21.0, 14.5], [22.0, 18.0], [23.0, 14.0], [24.0, 20.5], [25.0, 20.0], [26.0, 14.0], [27.0, 19.0], [28.0, 16.0], [29.0, 13.0], [30.0, 15.0], [31.0, 22.0], [32.0, 15.0], [33.0, 15.0], [34.0, 16.0], [35.0, 20.0], [37.0, 15.0], [36.0, 13.0], [38.0, 12.5], [39.0, 19.0], [40.0, 17.0], [41.0, 15.0], [43.0, 14.0], [42.0, 12.0], [45.0, 13.0], [44.0, 18.0], [46.0, 15.0], [48.0, 18.0], [49.0, 20.0], [51.0, 15.0], [50.0, 14.0], [53.0, 14.0], [52.0, 11.0], [54.0, 18.0], [55.0, 20.0], [57.0, 716.0], [56.0, 15.0], [58.0, 19.0], [59.0, 11.0], [61.0, 18.0], [60.0, 13.5], [63.0, 20.0], [64.0, 19.0], [66.0, 19.0], [65.0, 12.0], [67.0, 18.0], [71.0, 21.0], [69.0, 15.0], [70.0, 13.0], [68.0, 20.0], [74.0, 16.0], [72.0, 17.5], [75.0, 19.0], [73.0, 20.0], [79.0, 13.0], [78.0, 19.0], [82.0, 313.0], [83.0, 16.0], [80.0, 15.0], [81.0, 18.0], [84.0, 23.0], [85.0, 16.0], [87.0, 19.0], [86.0, 19.0], [89.0, 21.0], [90.0, 16.5], [88.0, 20.0], [91.0, 21.0], [92.0, 710.0], [93.0, 20.0], [95.0, 13.0], [94.0, 21.0], [97.0, 20.0], [96.0, 21.0], [98.0, 19.0], [99.0, 22.0], [101.0, 22.0], [103.0, 22.0], [100.0, 21.0], [102.0, 22.0], [106.0, 534.5], [104.0, 17.0], [107.0, 14.0], [105.0, 21.0], [111.0, 22.0], [109.0, 23.0], [110.0, 22.0], [108.0, 22.0], [115.0, 32.0], [113.0, 22.0], [114.0, 22.0], [112.0, 25.0], [119.0, 24.0], [116.0, 22.0], [117.0, 19.5], [118.0, 22.5], [123.0, 27.0], [120.0, 19.0], [121.0, 23.0], [122.0, 22.0], [127.0, 24.0], [124.0, 14.0], [125.0, 23.0], [126.0, 14.0], [128.0, 24.0], [135.0, 24.0], [134.0, 28.0], [131.0, 25.0], [129.0, 20.0], [132.0, 23.0], [130.0, 25.0], [133.0, 25.5], [141.0, 29.0], [142.0, 29.0], [143.0, 31.0], [140.0, 29.0], [137.0, 25.0], [139.0, 24.0], [136.0, 24.0], [138.0, 25.0], [144.0, 29.0], [151.0, 27.0], [147.0, 25.0], [149.0, 26.0], [148.0, 27.0], [150.0, 27.0], [145.0, 26.0], [146.0, 25.0], [152.0, 27.0], [153.0, 28.0], [174.0, 1202.0], [212.0, 901.5], [1.0, 21.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 212.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.62702141E12, "maxY": 150.0, "series": [{"data": [[1.62702151E12, 47.3], [1.62702228E12, 84.5], [1.62702194E12, 34.7], [1.62702211E12, 59.5], [1.62702177E12, 10.2], [1.6270216E12, 17.0], [1.62702159E12, 10.1], [1.62702142E12, 0.6], [1.62702202E12, 135.2], [1.62702219E12, 141.1], [1.62702185E12, 149.9], [1.62702168E12, 150.0], [1.62702212E12, 34.7], [1.62702229E12, 59.5], [1.62702178E12, 17.2], [1.62702195E12, 9.9], [1.62702161E12, 42.1], [1.62702144E12, 1.6], [1.62702143E12, 1.3], [1.6270222E12, 150.0], [1.62702186E12, 149.7], [1.62702203E12, 95.3], [1.62702169E12, 150.0], [1.62702152E12, 64.6], [1.62702183E12, 140.8], [1.62702166E12, 149.8], [1.62702149E12, 23.2], [1.62702226E12, 133.6], [1.62702192E12, 84.4], [1.62702209E12, 109.0], [1.62702174E12, 84.1], [1.62702191E12, 108.9], [1.62702157E12, 59.5], [1.627022E12, 116.6], [1.62702217E12, 91.8], [1.62702167E12, 149.1], [1.6270215E12, 28.9], [1.6270221E12, 84.5], [1.62702227E12, 109.0], [1.62702176E12, 34.9], [1.62702193E12, 59.6], [1.62702175E12, 59.2], [1.62702158E12, 34.4], [1.62702141E12, 0.5], [1.62702218E12, 116.6], [1.62702184E12, 149.9], [1.62702201E12, 141.0], [1.62702198E12, 66.7], [1.62702215E12, 42.1], [1.62702181E12, 91.9], [1.62702164E12, 116.5], [1.62702147E12, 3.2], [1.62702224E12, 149.9], [1.62702206E12, 150.0], [1.62702223E12, 150.0], [1.62702189E12, 149.6], [1.62702172E12, 133.4], [1.62702155E12, 109.0], [1.62702232E12, 0.2], [1.62702182E12, 116.6], [1.62702199E12, 92.0], [1.62702165E12, 140.9], [1.62702148E12, 18.3], [1.62702208E12, 133.8], [1.62702225E12, 149.7], [1.6270219E12, 133.7], [1.62702207E12, 149.7], [1.62702173E12, 109.1], [1.62702156E12, 83.1], [1.62702216E12, 66.8], [1.6270223E12, 34.6], [1.62702196E12, 17.0], [1.62702213E12, 9.7], [1.62702179E12, 42.3], [1.62702162E12, 67.0], [1.62702204E12, 149.9], [1.62702221E12, 149.9], [1.62702187E12, 149.2], [1.6270217E12, 149.6], [1.62702153E12, 107.6], [1.62702214E12, 17.0], [1.62702231E12, 9.8], [1.6270218E12, 67.0], [1.62702197E12, 42.1], [1.62702163E12, 91.4], [1.62702146E12, 4.8], [1.62702222E12, 150.0], [1.62702188E12, 149.5], [1.62702205E12, 150.0], [1.62702171E12, 149.4], [1.62702154E12, 132.7]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62702232E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.62702142E12, "maxY": 150.0, "series": [{"data": [[1.62702151E12, 47.9], [1.62702228E12, 84.6], [1.62702194E12, 34.7], [1.62702211E12, 59.5], [1.62702177E12, 10.3], [1.6270216E12, 16.9], [1.62702159E12, 10.1], [1.62702142E12, 1.1], [1.62702202E12, 135.0], [1.62702219E12, 141.0], [1.62702185E12, 150.0], [1.62702168E12, 150.0], [1.62702212E12, 34.7], [1.62702229E12, 59.5], [1.62702178E12, 17.2], [1.62702195E12, 9.9], [1.62702161E12, 42.1], [1.62702144E12, 1.6], [1.62702143E12, 1.3], [1.6270222E12, 150.0], [1.62702186E12, 149.6], [1.62702203E12, 95.5], [1.62702169E12, 149.9], [1.62702152E12, 49.6], [1.62702183E12, 140.8], [1.62702166E12, 149.9], [1.62702149E12, 23.2], [1.62702226E12, 133.7], [1.62702192E12, 84.4], [1.62702209E12, 109.1], [1.62702174E12, 84.0], [1.62702191E12, 109.3], [1.62702157E12, 59.5], [1.627022E12, 116.6], [1.62702217E12, 91.7], [1.62702167E12, 148.9], [1.6270215E12, 28.3], [1.6270221E12, 84.6], [1.62702227E12, 109.1], [1.62702176E12, 34.9], [1.62702193E12, 59.6], [1.62702175E12, 59.3], [1.62702158E12, 34.5], [1.62702218E12, 116.5], [1.62702184E12, 149.9], [1.62702201E12, 140.9], [1.62702198E12, 66.7], [1.62702215E12, 42.1], [1.62702181E12, 91.8], [1.62702164E12, 116.5], [1.62702147E12, 3.2], [1.62702224E12, 149.7], [1.62702206E12, 149.9], [1.62702223E12, 150.0], [1.62702189E12, 149.4], [1.62702172E12, 133.4], [1.62702155E12, 109.4], [1.62702232E12, 0.2], [1.62702182E12, 116.3], [1.62702199E12, 91.8], [1.62702165E12, 140.7], [1.62702148E12, 18.3], [1.62702208E12, 134.0], [1.62702225E12, 149.9], [1.6270219E12, 134.0], [1.62702207E12, 149.7], [1.62702173E12, 109.5], [1.62702156E12, 83.2], [1.62702216E12, 66.8], [1.6270223E12, 34.6], [1.62702196E12, 17.0], [1.62702213E12, 9.8], [1.62702179E12, 42.2], [1.62702162E12, 67.0], [1.62702204E12, 150.0], [1.62702221E12, 149.9], [1.62702187E12, 149.1], [1.6270217E12, 149.7], [1.62702153E12, 121.8], [1.62702214E12, 16.9], [1.62702231E12, 9.9], [1.6270218E12, 67.1], [1.62702197E12, 42.0], [1.62702163E12, 91.4], [1.62702146E12, 4.8], [1.62702222E12, 150.0], [1.62702188E12, 149.5], [1.62702205E12, 149.9], [1.62702171E12, 149.3], [1.62702154E12, 132.9]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62702232E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.62702142E12, "maxY": 150.0, "series": [{"data": [[1.62702151E12, 47.9], [1.62702228E12, 84.6], [1.62702194E12, 34.7], [1.62702211E12, 59.5], [1.62702177E12, 10.3], [1.6270216E12, 16.9], [1.62702159E12, 10.1], [1.62702142E12, 1.1], [1.62702202E12, 135.0], [1.62702219E12, 141.0], [1.62702185E12, 150.0], [1.62702168E12, 150.0], [1.62702212E12, 34.7], [1.62702229E12, 59.5], [1.62702178E12, 17.2], [1.62702195E12, 9.9], [1.62702161E12, 42.1], [1.62702144E12, 1.6], [1.62702143E12, 1.3], [1.6270222E12, 150.0], [1.62702186E12, 149.6], [1.62702203E12, 95.5], [1.62702169E12, 149.9], [1.62702152E12, 49.6], [1.62702183E12, 140.8], [1.62702166E12, 149.9], [1.62702149E12, 23.2], [1.62702226E12, 133.7], [1.62702192E12, 84.4], [1.62702209E12, 109.1], [1.62702174E12, 84.0], [1.62702191E12, 109.3], [1.62702157E12, 59.5], [1.627022E12, 116.6], [1.62702217E12, 91.7], [1.62702167E12, 148.9], [1.6270215E12, 28.3], [1.6270221E12, 84.6], [1.62702227E12, 109.1], [1.62702176E12, 34.9], [1.62702193E12, 59.6], [1.62702175E12, 59.3], [1.62702158E12, 34.5], [1.62702218E12, 116.5], [1.62702184E12, 149.9], [1.62702201E12, 140.9], [1.62702198E12, 66.7], [1.62702215E12, 42.1], [1.62702181E12, 91.8], [1.62702164E12, 116.5], [1.62702147E12, 3.2], [1.62702224E12, 149.7], [1.62702206E12, 149.9], [1.62702223E12, 150.0], [1.62702189E12, 149.4], [1.62702172E12, 133.4], [1.62702155E12, 109.4], [1.62702232E12, 0.2], [1.62702182E12, 116.3], [1.62702199E12, 91.8], [1.62702165E12, 140.7], [1.62702148E12, 18.3], [1.62702208E12, 134.0], [1.62702225E12, 149.9], [1.6270219E12, 134.0], [1.62702207E12, 149.7], [1.62702173E12, 109.5], [1.62702156E12, 83.2], [1.62702216E12, 66.8], [1.6270223E12, 34.6], [1.62702196E12, 17.0], [1.62702213E12, 9.8], [1.62702179E12, 42.2], [1.62702162E12, 67.0], [1.62702204E12, 150.0], [1.62702221E12, 149.9], [1.62702187E12, 149.1], [1.6270217E12, 149.7], [1.62702153E12, 121.8], [1.62702214E12, 16.9], [1.62702231E12, 9.9], [1.6270218E12, 67.1], [1.62702197E12, 42.0], [1.62702163E12, 91.4], [1.62702146E12, 4.8], [1.62702222E12, 150.0], [1.62702188E12, 149.5], [1.62702205E12, 149.9], [1.62702171E12, 149.3], [1.62702154E12, 132.9]], "isOverall": false, "label": "Sunstar Home-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62702232E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.62702142E12, "maxY": 150.0, "series": [{"data": [[1.62702151E12, 47.9], [1.62702228E12, 84.6], [1.62702194E12, 34.7], [1.62702211E12, 59.5], [1.62702177E12, 10.3], [1.6270216E12, 16.9], [1.62702159E12, 10.1], [1.62702142E12, 1.1], [1.62702202E12, 135.0], [1.62702219E12, 141.0], [1.62702185E12, 150.0], [1.62702168E12, 150.0], [1.62702212E12, 34.7], [1.62702229E12, 59.5], [1.62702178E12, 17.2], [1.62702195E12, 9.9], [1.62702161E12, 42.1], [1.62702144E12, 1.6], [1.62702143E12, 1.3], [1.6270222E12, 150.0], [1.62702186E12, 149.6], [1.62702203E12, 95.5], [1.62702169E12, 149.9], [1.62702152E12, 49.6], [1.62702183E12, 140.8], [1.62702166E12, 149.9], [1.62702149E12, 23.2], [1.62702226E12, 133.7], [1.62702192E12, 84.4], [1.62702209E12, 109.1], [1.62702174E12, 84.0], [1.62702191E12, 109.3], [1.62702157E12, 59.5], [1.627022E12, 116.6], [1.62702217E12, 91.7], [1.62702167E12, 148.9], [1.6270215E12, 28.3], [1.6270221E12, 84.6], [1.62702227E12, 109.1], [1.62702176E12, 34.9], [1.62702193E12, 59.6], [1.62702175E12, 59.3], [1.62702158E12, 34.5], [1.62702218E12, 116.5], [1.62702184E12, 149.9], [1.62702201E12, 140.9], [1.62702198E12, 66.7], [1.62702215E12, 42.1], [1.62702181E12, 91.8], [1.62702164E12, 116.5], [1.62702147E12, 3.2], [1.62702224E12, 149.7], [1.62702206E12, 149.9], [1.62702223E12, 150.0], [1.62702189E12, 149.4], [1.62702172E12, 133.4], [1.62702155E12, 109.4], [1.62702232E12, 0.2], [1.62702182E12, 116.3], [1.62702199E12, 91.8], [1.62702165E12, 140.7], [1.62702148E12, 18.3], [1.62702208E12, 134.0], [1.62702225E12, 149.9], [1.6270219E12, 134.0], [1.62702207E12, 149.7], [1.62702173E12, 109.5], [1.62702156E12, 83.2], [1.62702216E12, 66.8], [1.6270223E12, 34.6], [1.62702196E12, 17.0], [1.62702213E12, 9.8], [1.62702179E12, 42.2], [1.62702162E12, 67.0], [1.62702204E12, 150.0], [1.62702221E12, 149.9], [1.62702187E12, 149.1], [1.6270217E12, 149.7], [1.62702153E12, 121.8], [1.62702214E12, 16.9], [1.62702231E12, 9.9], [1.6270218E12, 67.1], [1.62702197E12, 42.0], [1.62702163E12, 91.4], [1.62702146E12, 4.8], [1.62702222E12, 150.0], [1.62702188E12, 149.5], [1.62702205E12, 149.9], [1.62702171E12, 149.3], [1.62702154E12, 132.9]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62702232E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

