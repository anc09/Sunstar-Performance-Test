/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "maxY": 10663.0, "series": [{"data": [[0.0, 10.0], [0.1, 11.0], [0.2, 11.0], [0.3, 11.0], [0.4, 11.0], [0.5, 12.0], [0.6, 12.0], [0.7, 12.0], [0.8, 12.0], [0.9, 12.0], [1.0, 12.0], [1.1, 12.0], [1.2, 12.0], [1.3, 13.0], [1.4, 13.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 13.0], [1.9, 13.0], [2.0, 13.0], [2.1, 14.0], [2.2, 14.0], [2.3, 14.0], [2.4, 14.0], [2.5, 14.0], [2.6, 14.0], [2.7, 14.0], [2.8, 14.0], [2.9, 14.0], [3.0, 14.0], [3.1, 15.0], [3.2, 15.0], [3.3, 15.0], [3.4, 15.0], [3.5, 15.0], [3.6, 15.0], [3.7, 15.0], [3.8, 15.0], [3.9, 15.0], [4.0, 15.0], [4.1, 15.0], [4.2, 16.0], [4.3, 16.0], [4.4, 16.0], [4.5, 16.0], [4.6, 16.0], [4.7, 16.0], [4.8, 16.0], [4.9, 16.0], [5.0, 16.0], [5.1, 16.0], [5.2, 17.0], [5.3, 17.0], [5.4, 17.0], [5.5, 17.0], [5.6, 17.0], [5.7, 17.0], [5.8, 17.0], [5.9, 17.0], [6.0, 17.0], [6.1, 17.0], [6.2, 18.0], [6.3, 18.0], [6.4, 18.0], [6.5, 18.0], [6.6, 18.0], [6.7, 18.0], [6.8, 18.0], [6.9, 18.0], [7.0, 18.0], [7.1, 19.0], [7.2, 19.0], [7.3, 19.0], [7.4, 19.0], [7.5, 19.0], [7.6, 19.0], [7.7, 19.0], [7.8, 19.0], [7.9, 19.0], [8.0, 19.0], [8.1, 19.0], [8.2, 19.0], [8.3, 19.0], [8.4, 20.0], [8.5, 20.0], [8.6, 20.0], [8.7, 20.0], [8.8, 20.0], [8.9, 20.0], [9.0, 20.0], [9.1, 20.0], [9.2, 20.0], [9.3, 20.0], [9.4, 20.0], [9.5, 20.0], [9.6, 20.0], [9.7, 20.0], [9.8, 20.0], [9.9, 21.0], [10.0, 21.0], [10.1, 21.0], [10.2, 21.0], [10.3, 21.0], [10.4, 21.0], [10.5, 21.0], [10.6, 21.0], [10.7, 21.0], [10.8, 21.0], [10.9, 21.0], [11.0, 21.0], [11.1, 21.0], [11.2, 21.0], [11.3, 21.0], [11.4, 21.0], [11.5, 21.0], [11.6, 22.0], [11.7, 22.0], [11.8, 22.0], [11.9, 22.0], [12.0, 22.0], [12.1, 22.0], [12.2, 22.0], [12.3, 22.0], [12.4, 22.0], [12.5, 22.0], [12.6, 22.0], [12.7, 22.0], [12.8, 22.0], [12.9, 22.0], [13.0, 22.0], [13.1, 22.0], [13.2, 22.0], [13.3, 22.0], [13.4, 22.0], [13.5, 22.0], [13.6, 23.0], [13.7, 23.0], [13.8, 23.0], [13.9, 23.0], [14.0, 23.0], [14.1, 23.0], [14.2, 23.0], [14.3, 23.0], [14.4, 23.0], [14.5, 23.0], [14.6, 23.0], [14.7, 23.0], [14.8, 23.0], [14.9, 23.0], [15.0, 23.0], [15.1, 23.0], [15.2, 23.0], [15.3, 23.0], [15.4, 23.0], [15.5, 24.0], [15.6, 24.0], [15.7, 24.0], [15.8, 24.0], [15.9, 24.0], [16.0, 24.0], [16.1, 24.0], [16.2, 24.0], [16.3, 24.0], [16.4, 24.0], [16.5, 24.0], [16.6, 24.0], [16.7, 24.0], [16.8, 24.0], [16.9, 24.0], [17.0, 24.0], [17.1, 24.0], [17.2, 24.0], [17.3, 24.0], [17.4, 24.0], [17.5, 24.0], [17.6, 25.0], [17.7, 25.0], [17.8, 25.0], [17.9, 25.0], [18.0, 25.0], [18.1, 25.0], [18.2, 25.0], [18.3, 25.0], [18.4, 25.0], [18.5, 25.0], [18.6, 25.0], [18.7, 25.0], [18.8, 25.0], [18.9, 25.0], [19.0, 25.0], [19.1, 25.0], [19.2, 25.0], [19.3, 25.0], [19.4, 25.0], [19.5, 25.0], [19.6, 26.0], [19.7, 26.0], [19.8, 26.0], [19.9, 26.0], [20.0, 26.0], [20.1, 26.0], [20.2, 26.0], [20.3, 26.0], [20.4, 26.0], [20.5, 26.0], [20.6, 26.0], [20.7, 26.0], [20.8, 26.0], [20.9, 26.0], [21.0, 26.0], [21.1, 26.0], [21.2, 26.0], [21.3, 26.0], [21.4, 27.0], [21.5, 27.0], [21.6, 27.0], [21.7, 27.0], [21.8, 27.0], [21.9, 27.0], [22.0, 27.0], [22.1, 27.0], [22.2, 27.0], [22.3, 27.0], [22.4, 27.0], [22.5, 27.0], [22.6, 27.0], [22.7, 27.0], [22.8, 27.0], [22.9, 27.0], [23.0, 27.0], [23.1, 28.0], [23.2, 28.0], [23.3, 28.0], [23.4, 28.0], [23.5, 28.0], [23.6, 28.0], [23.7, 28.0], [23.8, 28.0], [23.9, 28.0], [24.0, 28.0], [24.1, 28.0], [24.2, 28.0], [24.3, 28.0], [24.4, 28.0], [24.5, 29.0], [24.6, 29.0], [24.7, 29.0], [24.8, 29.0], [24.9, 29.0], [25.0, 29.0], [25.1, 29.0], [25.2, 29.0], [25.3, 29.0], [25.4, 29.0], [25.5, 29.0], [25.6, 29.0], [25.7, 30.0], [25.8, 30.0], [25.9, 30.0], [26.0, 30.0], [26.1, 30.0], [26.2, 30.0], [26.3, 30.0], [26.4, 30.0], [26.5, 30.0], [26.6, 31.0], [26.7, 31.0], [26.8, 31.0], [26.9, 31.0], [27.0, 31.0], [27.1, 31.0], [27.2, 31.0], [27.3, 32.0], [27.4, 32.0], [27.5, 32.0], [27.6, 32.0], [27.7, 32.0], [27.8, 32.0], [27.9, 32.0], [28.0, 33.0], [28.1, 33.0], [28.2, 33.0], [28.3, 33.0], [28.4, 34.0], [28.5, 34.0], [28.6, 34.0], [28.7, 34.0], [28.8, 35.0], [28.9, 35.0], [29.0, 35.0], [29.1, 35.0], [29.2, 36.0], [29.3, 36.0], [29.4, 37.0], [29.5, 37.0], [29.6, 37.0], [29.7, 38.0], [29.8, 38.0], [29.9, 39.0], [30.0, 39.0], [30.1, 39.0], [30.2, 39.0], [30.3, 40.0], [30.4, 40.0], [30.5, 40.0], [30.6, 40.0], [30.7, 40.0], [30.8, 40.0], [30.9, 40.0], [31.0, 41.0], [31.1, 41.0], [31.2, 41.0], [31.3, 41.0], [31.4, 41.0], [31.5, 41.0], [31.6, 41.0], [31.7, 41.0], [31.8, 41.0], [31.9, 42.0], [32.0, 42.0], [32.1, 42.0], [32.2, 42.0], [32.3, 42.0], [32.4, 42.0], [32.5, 42.0], [32.6, 42.0], [32.7, 42.0], [32.8, 42.0], [32.9, 42.0], [33.0, 42.0], [33.1, 42.0], [33.2, 42.0], [33.3, 42.0], [33.4, 42.0], [33.5, 42.0], [33.6, 43.0], [33.7, 43.0], [33.8, 43.0], [33.9, 43.0], [34.0, 43.0], [34.1, 43.0], [34.2, 43.0], [34.3, 43.0], [34.4, 43.0], [34.5, 43.0], [34.6, 43.0], [34.7, 43.0], [34.8, 43.0], [34.9, 43.0], [35.0, 43.0], [35.1, 43.0], [35.2, 43.0], [35.3, 43.0], [35.4, 43.0], [35.5, 43.0], [35.6, 43.0], [35.7, 43.0], [35.8, 44.0], [35.9, 44.0], [36.0, 44.0], [36.1, 44.0], [36.2, 44.0], [36.3, 44.0], [36.4, 44.0], [36.5, 44.0], [36.6, 44.0], [36.7, 44.0], [36.8, 44.0], [36.9, 44.0], [37.0, 44.0], [37.1, 44.0], [37.2, 44.0], [37.3, 44.0], [37.4, 44.0], [37.5, 44.0], [37.6, 44.0], [37.7, 44.0], [37.8, 44.0], [37.9, 44.0], [38.0, 44.0], [38.1, 44.0], [38.2, 44.0], [38.3, 44.0], [38.4, 45.0], [38.5, 45.0], [38.6, 45.0], [38.7, 45.0], [38.8, 45.0], [38.9, 45.0], [39.0, 45.0], [39.1, 45.0], [39.2, 45.0], [39.3, 45.0], [39.4, 45.0], [39.5, 45.0], [39.6, 45.0], [39.7, 45.0], [39.8, 45.0], [39.9, 45.0], [40.0, 45.0], [40.1, 45.0], [40.2, 45.0], [40.3, 45.0], [40.4, 45.0], [40.5, 45.0], [40.6, 45.0], [40.7, 45.0], [40.8, 45.0], [40.9, 45.0], [41.0, 45.0], [41.1, 45.0], [41.2, 45.0], [41.3, 46.0], [41.4, 46.0], [41.5, 46.0], [41.6, 46.0], [41.7, 46.0], [41.8, 46.0], [41.9, 46.0], [42.0, 46.0], [42.1, 46.0], [42.2, 46.0], [42.3, 46.0], [42.4, 46.0], [42.5, 46.0], [42.6, 46.0], [42.7, 46.0], [42.8, 46.0], [42.9, 46.0], [43.0, 46.0], [43.1, 46.0], [43.2, 46.0], [43.3, 46.0], [43.4, 46.0], [43.5, 46.0], [43.6, 46.0], [43.7, 46.0], [43.8, 46.0], [43.9, 46.0], [44.0, 46.0], [44.1, 46.0], [44.2, 46.0], [44.3, 46.0], [44.4, 46.0], [44.5, 47.0], [44.6, 47.0], [44.7, 47.0], [44.8, 47.0], [44.9, 47.0], [45.0, 47.0], [45.1, 47.0], [45.2, 47.0], [45.3, 47.0], [45.4, 47.0], [45.5, 47.0], [45.6, 47.0], [45.7, 47.0], [45.8, 47.0], [45.9, 47.0], [46.0, 47.0], [46.1, 47.0], [46.2, 47.0], [46.3, 47.0], [46.4, 47.0], [46.5, 47.0], [46.6, 47.0], [46.7, 47.0], [46.8, 47.0], [46.9, 47.0], [47.0, 47.0], [47.1, 47.0], [47.2, 47.0], [47.3, 47.0], [47.4, 47.0], [47.5, 47.0], [47.6, 47.0], [47.7, 47.0], [47.8, 47.0], [47.9, 48.0], [48.0, 48.0], [48.1, 48.0], [48.2, 48.0], [48.3, 48.0], [48.4, 48.0], [48.5, 48.0], [48.6, 48.0], [48.7, 48.0], [48.8, 48.0], [48.9, 48.0], [49.0, 48.0], [49.1, 48.0], [49.2, 48.0], [49.3, 48.0], [49.4, 48.0], [49.5, 48.0], [49.6, 48.0], [49.7, 48.0], [49.8, 48.0], [49.9, 48.0], [50.0, 48.0], [50.1, 48.0], [50.2, 48.0], [50.3, 48.0], [50.4, 48.0], [50.5, 48.0], [50.6, 48.0], [50.7, 48.0], [50.8, 48.0], [50.9, 48.0], [51.0, 48.0], [51.1, 48.0], [51.2, 48.0], [51.3, 49.0], [51.4, 49.0], [51.5, 49.0], [51.6, 49.0], [51.7, 49.0], [51.8, 49.0], [51.9, 49.0], [52.0, 49.0], [52.1, 49.0], [52.2, 49.0], [52.3, 49.0], [52.4, 49.0], [52.5, 49.0], [52.6, 49.0], [52.7, 49.0], [52.8, 49.0], [52.9, 49.0], [53.0, 49.0], [53.1, 49.0], [53.2, 49.0], [53.3, 49.0], [53.4, 49.0], [53.5, 49.0], [53.6, 49.0], [53.7, 49.0], [53.8, 49.0], [53.9, 49.0], [54.0, 49.0], [54.1, 49.0], [54.2, 49.0], [54.3, 49.0], [54.4, 49.0], [54.5, 50.0], [54.6, 50.0], [54.7, 50.0], [54.8, 50.0], [54.9, 50.0], [55.0, 50.0], [55.1, 50.0], [55.2, 50.0], [55.3, 50.0], [55.4, 50.0], [55.5, 50.0], [55.6, 50.0], [55.7, 50.0], [55.8, 50.0], [55.9, 50.0], [56.0, 50.0], [56.1, 50.0], [56.2, 50.0], [56.3, 50.0], [56.4, 50.0], [56.5, 50.0], [56.6, 50.0], [56.7, 50.0], [56.8, 50.0], [56.9, 50.0], [57.0, 50.0], [57.1, 50.0], [57.2, 50.0], [57.3, 50.0], [57.4, 50.0], [57.5, 50.0], [57.6, 51.0], [57.7, 51.0], [57.8, 51.0], [57.9, 51.0], [58.0, 51.0], [58.1, 51.0], [58.2, 51.0], [58.3, 51.0], [58.4, 51.0], [58.5, 51.0], [58.6, 51.0], [58.7, 51.0], [58.8, 51.0], [58.9, 51.0], [59.0, 51.0], [59.1, 51.0], [59.2, 51.0], [59.3, 51.0], [59.4, 51.0], [59.5, 51.0], [59.6, 51.0], [59.7, 51.0], [59.8, 51.0], [59.9, 51.0], [60.0, 51.0], [60.1, 51.0], [60.2, 51.0], [60.3, 51.0], [60.4, 51.0], [60.5, 51.0], [60.6, 51.0], [60.7, 51.0], [60.8, 52.0], [60.9, 52.0], [61.0, 52.0], [61.1, 52.0], [61.2, 52.0], [61.3, 52.0], [61.4, 52.0], [61.5, 52.0], [61.6, 52.0], [61.7, 52.0], [61.8, 52.0], [61.9, 52.0], [62.0, 52.0], [62.1, 52.0], [62.2, 52.0], [62.3, 52.0], [62.4, 52.0], [62.5, 52.0], [62.6, 52.0], [62.7, 52.0], [62.8, 52.0], [62.9, 52.0], [63.0, 52.0], [63.1, 52.0], [63.2, 52.0], [63.3, 52.0], [63.4, 52.0], [63.5, 52.0], [63.6, 52.0], [63.7, 53.0], [63.8, 53.0], [63.9, 53.0], [64.0, 53.0], [64.1, 53.0], [64.2, 53.0], [64.3, 53.0], [64.4, 53.0], [64.5, 53.0], [64.6, 53.0], [64.7, 53.0], [64.8, 53.0], [64.9, 53.0], [65.0, 53.0], [65.1, 53.0], [65.2, 53.0], [65.3, 53.0], [65.4, 53.0], [65.5, 53.0], [65.6, 53.0], [65.7, 53.0], [65.8, 53.0], [65.9, 53.0], [66.0, 53.0], [66.1, 53.0], [66.2, 53.0], [66.3, 53.0], [66.4, 53.0], [66.5, 53.0], [66.6, 54.0], [66.7, 54.0], [66.8, 54.0], [66.9, 54.0], [67.0, 54.0], [67.1, 54.0], [67.2, 54.0], [67.3, 54.0], [67.4, 54.0], [67.5, 54.0], [67.6, 54.0], [67.7, 54.0], [67.8, 54.0], [67.9, 54.0], [68.0, 54.0], [68.1, 54.0], [68.2, 54.0], [68.3, 54.0], [68.4, 54.0], [68.5, 54.0], [68.6, 54.0], [68.7, 54.0], [68.8, 54.0], [68.9, 54.0], [69.0, 54.0], [69.1, 55.0], [69.2, 55.0], [69.3, 55.0], [69.4, 55.0], [69.5, 55.0], [69.6, 55.0], [69.7, 55.0], [69.8, 55.0], [69.9, 55.0], [70.0, 55.0], [70.1, 55.0], [70.2, 55.0], [70.3, 55.0], [70.4, 55.0], [70.5, 55.0], [70.6, 55.0], [70.7, 55.0], [70.8, 55.0], [70.9, 55.0], [71.0, 55.0], [71.1, 55.0], [71.2, 55.0], [71.3, 55.0], [71.4, 56.0], [71.5, 56.0], [71.6, 56.0], [71.7, 56.0], [71.8, 56.0], [71.9, 56.0], [72.0, 56.0], [72.1, 56.0], [72.2, 56.0], [72.3, 56.0], [72.4, 56.0], [72.5, 56.0], [72.6, 56.0], [72.7, 56.0], [72.8, 56.0], [72.9, 56.0], [73.0, 56.0], [73.1, 56.0], [73.2, 56.0], [73.3, 56.0], [73.4, 56.0], [73.5, 56.0], [73.6, 57.0], [73.7, 57.0], [73.8, 57.0], [73.9, 57.0], [74.0, 57.0], [74.1, 57.0], [74.2, 57.0], [74.3, 57.0], [74.4, 57.0], [74.5, 57.0], [74.6, 57.0], [74.7, 57.0], [74.8, 57.0], [74.9, 57.0], [75.0, 57.0], [75.1, 57.0], [75.2, 57.0], [75.3, 57.0], [75.4, 58.0], [75.5, 58.0], [75.6, 58.0], [75.7, 58.0], [75.8, 58.0], [75.9, 58.0], [76.0, 58.0], [76.1, 58.0], [76.2, 58.0], [76.3, 58.0], [76.4, 58.0], [76.5, 58.0], [76.6, 58.0], [76.7, 58.0], [76.8, 58.0], [76.9, 58.0], [77.0, 58.0], [77.1, 59.0], [77.2, 59.0], [77.3, 59.0], [77.4, 59.0], [77.5, 59.0], [77.6, 59.0], [77.7, 59.0], [77.8, 59.0], [77.9, 59.0], [78.0, 59.0], [78.1, 59.0], [78.2, 59.0], [78.3, 59.0], [78.4, 59.0], [78.5, 59.0], [78.6, 60.0], [78.7, 60.0], [78.8, 60.0], [78.9, 60.0], [79.0, 60.0], [79.1, 60.0], [79.2, 60.0], [79.3, 60.0], [79.4, 60.0], [79.5, 60.0], [79.6, 60.0], [79.7, 60.0], [79.8, 60.0], [79.9, 61.0], [80.0, 61.0], [80.1, 61.0], [80.2, 61.0], [80.3, 61.0], [80.4, 61.0], [80.5, 61.0], [80.6, 61.0], [80.7, 61.0], [80.8, 61.0], [80.9, 61.0], [81.0, 62.0], [81.1, 62.0], [81.2, 62.0], [81.3, 62.0], [81.4, 62.0], [81.5, 62.0], [81.6, 62.0], [81.7, 62.0], [81.8, 62.0], [81.9, 62.0], [82.0, 62.0], [82.1, 63.0], [82.2, 63.0], [82.3, 63.0], [82.4, 63.0], [82.5, 63.0], [82.6, 63.0], [82.7, 63.0], [82.8, 63.0], [82.9, 63.0], [83.0, 63.0], [83.1, 64.0], [83.2, 64.0], [83.3, 64.0], [83.4, 64.0], [83.5, 64.0], [83.6, 64.0], [83.7, 64.0], [83.8, 64.0], [83.9, 65.0], [84.0, 65.0], [84.1, 65.0], [84.2, 65.0], [84.3, 65.0], [84.4, 65.0], [84.5, 65.0], [84.6, 66.0], [84.7, 66.0], [84.8, 66.0], [84.9, 66.0], [85.0, 66.0], [85.1, 66.0], [85.2, 66.0], [85.3, 67.0], [85.4, 67.0], [85.5, 67.0], [85.6, 67.0], [85.7, 67.0], [85.8, 67.0], [85.9, 68.0], [86.0, 68.0], [86.1, 68.0], [86.2, 68.0], [86.3, 68.0], [86.4, 68.0], [86.5, 69.0], [86.6, 69.0], [86.7, 69.0], [86.8, 69.0], [86.9, 69.0], [87.0, 70.0], [87.1, 70.0], [87.2, 70.0], [87.3, 70.0], [87.4, 71.0], [87.5, 71.0], [87.6, 71.0], [87.7, 71.0], [87.8, 71.0], [87.9, 72.0], [88.0, 72.0], [88.1, 72.0], [88.2, 72.0], [88.3, 73.0], [88.4, 73.0], [88.5, 73.0], [88.6, 73.0], [88.7, 74.0], [88.8, 74.0], [88.9, 74.0], [89.0, 75.0], [89.1, 75.0], [89.2, 75.0], [89.3, 75.0], [89.4, 76.0], [89.5, 76.0], [89.6, 76.0], [89.7, 76.0], [89.8, 77.0], [89.9, 77.0], [90.0, 77.0], [90.1, 78.0], [90.2, 78.0], [90.3, 79.0], [90.4, 79.0], [90.5, 79.0], [90.6, 80.0], [90.7, 80.0], [90.8, 80.0], [90.9, 81.0], [91.0, 81.0], [91.1, 81.0], [91.2, 82.0], [91.3, 82.0], [91.4, 83.0], [91.5, 83.0], [91.6, 84.0], [91.7, 84.0], [91.8, 84.0], [91.9, 85.0], [92.0, 85.0], [92.1, 86.0], [92.2, 86.0], [92.3, 87.0], [92.4, 87.0], [92.5, 88.0], [92.6, 88.0], [92.7, 89.0], [92.8, 89.0], [92.9, 90.0], [93.0, 90.0], [93.1, 91.0], [93.2, 91.0], [93.3, 92.0], [93.4, 92.0], [93.5, 93.0], [93.6, 94.0], [93.7, 94.0], [93.8, 95.0], [93.9, 95.0], [94.0, 96.0], [94.1, 96.0], [94.2, 97.0], [94.3, 98.0], [94.4, 98.0], [94.5, 99.0], [94.6, 100.0], [94.7, 101.0], [94.8, 101.0], [94.9, 102.0], [95.0, 103.0], [95.1, 104.0], [95.2, 105.0], [95.3, 106.0], [95.4, 107.0], [95.5, 108.0], [95.6, 109.0], [95.7, 110.0], [95.8, 111.0], [95.9, 112.0], [96.0, 113.0], [96.1, 114.0], [96.2, 115.0], [96.3, 117.0], [96.4, 118.0], [96.5, 119.0], [96.6, 121.0], [96.7, 122.0], [96.8, 124.0], [96.9, 125.0], [97.0, 127.0], [97.1, 130.0], [97.2, 131.0], [97.3, 134.0], [97.4, 137.0], [97.5, 140.0], [97.6, 144.0], [97.7, 148.0], [97.8, 154.0], [97.9, 159.0], [98.0, 166.0], [98.1, 180.0], [98.2, 204.0], [98.3, 239.0], [98.4, 280.0], [98.5, 355.0], [98.6, 497.0], [98.7, 607.0], [98.8, 646.0], [98.9, 683.0], [99.0, 719.0], [99.1, 761.0], [99.2, 822.0], [99.3, 910.0], [99.4, 969.0], [99.5, 1048.0], [99.6, 1117.0], [99.7, 1231.0], [99.8, 1486.0], [99.9, 1825.0], [100.0, 10663.0]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 76632.0, "series": [{"data": [[0.0, 76632.0], [8800.0, 1.0], [9500.0, 1.0], [600.0, 224.0], [9400.0, 1.0], [9600.0, 1.0], [9700.0, 1.0], [10200.0, 3.0], [9900.0, 1.0], [10600.0, 1.0], [700.0, 166.0], [800.0, 101.0], [900.0, 127.0], [1000.0, 108.0], [1100.0, 78.0], [1200.0, 52.0], [1300.0, 27.0], [1400.0, 22.0], [1500.0, 42.0], [100.0, 2958.0], [1600.0, 18.0], [1700.0, 11.0], [1800.0, 32.0], [1900.0, 23.0], [2000.0, 8.0], [2100.0, 2.0], [200.0, 189.0], [300.0, 116.0], [5400.0, 4.0], [5500.0, 1.0], [6100.0, 2.0], [6000.0, 2.0], [6200.0, 2.0], [6500.0, 1.0], [400.0, 31.0], [7100.0, 2.0], [8000.0, 1.0], [500.0, 65.0]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 10600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 161.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 79926.0, "series": [{"data": [[0.0, 79926.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 970.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 161.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.62583778E12, "maxY": 1319.090909090909, "series": [{"data": [[1.62583854E12, 5.810679611650498], [1.62583778E12, 1319.090909090909], [1.62583837E12, 5.804511278195491], [1.62583795E12, 2.0], [1.6258382E12, 7.282416836388323], [1.62583863E12, 6.034482758620688], [1.62583846E12, 2.357702349869456], [1.62583786E12, 230.2902869757174], [1.62583829E12, 3.0], [1.62583803E12, 17.0], [1.62583812E12, 3.0], [1.62583794E12, 2.0], [1.62583853E12, 5.0], [1.62583836E12, 4.712671509281681], [1.62583819E12, 6.214138641043244], [1.62583785E12, 742.3014184397168], [1.62583862E12, 13.0], [1.62583802E12, 14.444293478260862], [1.62583845E12, 5.0], [1.62583828E12, 2.7811271297509803], [1.62583811E12, 3.7332053742802307], [1.62583793E12, 2.0], [1.62583852E12, 4.360699865410503], [1.62583835E12, 6.293762575452717], [1.62583818E12, 4.514955537590954], [1.62583784E12, 981.151041666667], [1.62583801E12, 12.296219931271468], [1.62583861E12, 13.0], [1.62583844E12, 9.91962174940897], [1.62583827E12, 3.423762376237626], [1.6258381E12, 6.0], [1.62583792E12, 3.4150197628458536], [1.62583851E12, 3.517171717171719], [1.62583834E12, 5.220430107526883], [1.62583817E12, 4.936427850655898], [1.62583783E12, 1094.3333333333333], [1.625838E12, 10.006472491909388], [1.6258386E12, 12.484929671801737], [1.62583843E12, 11.0], [1.62583826E12, 10.650592885375497], [1.62583809E12, 6.822722820763957], [1.62583791E12, 5.184236453201972], [1.62583807E12, 13.0], [1.62583867E12, 2.977777777777778], [1.6258385E12, 2.620408163265305], [1.62583782E12, 1165.5959595959596], [1.62583833E12, 4.475708502024295], [1.62583799E12, 7.809959349593499], [1.62583816E12, 3.214574898785425], [1.62583859E12, 11.0], [1.62583842E12, 11.0], [1.6258379E12, 13.296998420221163], [1.62583825E12, 11.182437031994551], [1.62583808E12, 13.0], [1.62583823E12, 11.0], [1.62583806E12, 12.89171122994652], [1.62583781E12, 1257.3150684931504], [1.62583866E12, 3.0], [1.62583798E12, 5.316285329744278], [1.62583849E12, 2.0], [1.62583832E12, 3.0], [1.62583815E12, 3.0], [1.62583789E12, 22.0], [1.62583858E12, 10.590909090909113], [1.62583841E12, 10.69158878504673], [1.62583824E12, 11.0], [1.62583839E12, 16.80063291139242], [1.62583822E12, 10.594522378089517], [1.62583797E12, 3.553752535496957], [1.62583865E12, 4.067307692307694], [1.62583848E12, 2.0], [1.62583831E12, 3.0], [1.62583814E12, 3.0], [1.62583788E12, 22.0], [1.62583805E12, 12.0], [1.62583857E12, 9.890447561790236], [1.6258384E12, 12.566176470588248], [1.62583855E12, 6.0], [1.62583838E12, 6.2760989010989015], [1.62583821E12, 9.994007989347526], [1.62583779E12, 1299.8928571428569], [1.62583796E12, 2.273469387755101], [1.62583864E12, 6.0], [1.62583847E12, 2.0], [1.6258383E12, 3.0], [1.62583813E12, 3.0], [1.62583787E12, 20.424877707896606], [1.62583804E12, 12.277815699658687], [1.62583856E12, 6.280054644808744]], "isOverall": false, "label": "bzm - Concurrency Thread Group-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62583867E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 20.899820574162707, "minX": 1.0, "maxY": 10287.0, "series": [{"data": [[2.0, 20.899820574162707], [3.0, 29.312409696580485], [4.0, 30.47207084468666], [5.0, 29.822015029223422], [6.0, 35.60207015526164], [7.0, 35.71448040885871], [8.0, 54.33246244284782], [9.0, 62.91849529780562], [10.0, 58.731921231176614], [11.0, 56.47733486832625], [12.0, 56.19529085872569], [13.0, 57.551454018671784], [14.0, 111.54044117647057], [15.0, 117.4961832061069], [16.0, 223.16666666666669], [17.0, 77.9663412992259], [18.0, 327.5], [19.0, 136.21428571428564], [20.0, 108.14285714285715], [21.0, 111.45594713656388], [22.0, 93.23912425362532], [23.0, 172.5], [25.0, 2741.0], [26.0, 193.39999999999998], [27.0, 91.0], [28.0, 370.59999999999997], [29.0, 334.0], [30.0, 213.66666666666666], [31.0, 304.0], [33.0, 844.5], [32.0, 236.53846153846155], [35.0, 73.30927835051546], [34.0, 504.5], [37.0, 1361.0], [36.0, 604.0], [39.0, 704.0], [46.0, 2103.0], [50.0, 2030.0], [74.0, 2093.0], [78.0, 2025.0], [91.0, 2079.0], [97.0, 1622.0], [107.0, 889.0], [105.0, 2020.0], [121.0, 2000.0], [143.0, 1294.0], [142.0, 1406.0], [141.0, 1418.0], [140.0, 1809.0], [139.0, 1817.0], [138.0, 1562.208791208791], [151.0, 1380.0], [150.0, 1266.0], [149.0, 1826.0], [148.0, 1826.0], [147.0, 1860.0], [146.0, 1868.0], [145.0, 677.0], [144.0, 1150.0], [159.0, 1790.0], [158.0, 1338.0], [157.0, 1563.5], [156.0, 1342.0], [154.0, 1357.0], [153.0, 675.0], [152.0, 1719.0], [167.0, 1691.0], [166.0, 1334.0], [165.0, 1749.0], [164.0, 1814.0], [163.0, 1693.0], [162.0, 1347.0], [161.0, 1351.0], [160.0, 1255.0], [175.0, 1130.0], [174.0, 1762.0], [173.0, 1152.0], [172.0, 1793.0], [171.0, 1224.0], [170.0, 1645.0], [169.0, 1801.0], [168.0, 1327.0], [182.0, 1270.0], [181.0, 1071.0], [180.0, 1738.0], [179.0, 1732.0], [178.0, 1659.0], [177.0, 614.0], [176.0, 1723.0], [190.0, 1173.0], [189.0, 931.0], [188.0, 958.0], [187.0, 1501.6666666666667], [185.0, 1407.5], [199.0, 974.0], [198.0, 1643.0], [197.0, 1635.0], [196.0, 981.0], [195.0, 1614.0], [194.0, 1607.0], [193.0, 1663.0], [192.0, 1390.0], [207.0, 1580.0], [206.0, 1244.0], [205.0, 1102.0], [204.0, 1663.0], [203.0, 1591.0], [202.0, 1242.0], [201.0, 1090.0], [200.0, 1626.0], [215.0, 1429.0], [214.0, 1556.0], [213.0, 1579.0], [212.0, 1578.0], [211.0, 1552.0], [210.0, 1645.0], [209.0, 1194.0], [208.0, 1218.0], [223.0, 978.0], [222.0, 393.0], [221.0, 471.0], [220.0, 447.0], [219.0, 789.0], [217.0, 1268.0], [216.0, 666.0], [231.0, 301.0], [230.0, 811.5], [228.0, 1079.0], [227.0, 331.0], [226.0, 316.0], [225.0, 397.0], [224.0, 317.0], [239.0, 563.0], [238.0, 475.0], [237.0, 563.0], [236.0, 977.0], [235.0, 353.0], [234.0, 573.0], [233.0, 953.0], [232.0, 590.0], [246.0, 893.0], [245.0, 956.0], [244.0, 458.0], [243.0, 1014.0], [242.0, 1017.0], [241.0, 921.0], [240.0, 340.0], [255.0, 448.5], [254.0, 405.0], [253.0, 891.0], [252.0, 523.0], [251.0, 534.0], [250.0, 1008.0], [248.0, 950.5], [271.0, 262.0], [269.0, 914.0], [259.0, 497.0], [258.0, 647.0], [256.0, 532.0], [267.0, 858.0], [266.0, 499.0], [265.0, 974.0], [264.0, 901.0], [262.0, 499.0], [261.0, 889.0], [260.0, 890.0], [285.0, 865.0], [286.0, 836.0], [284.0, 842.0], [275.0, 850.0], [274.0, 888.0], [273.0, 873.0], [272.0, 905.0], [283.0, 391.0], [282.0, 840.0], [281.0, 491.0], [280.0, 886.0], [279.0, 871.0], [278.0, 856.0], [277.0, 396.0], [276.0, 497.0], [302.0, 767.0], [303.0, 1195.0], [301.0, 680.0], [300.0, 884.0], [299.0, 756.0], [298.0, 844.0], [297.0, 648.0], [296.0, 748.0], [295.0, 921.0], [289.0, 874.0], [288.0, 840.0], [291.0, 837.0], [290.0, 827.0], [294.0, 843.0], [293.0, 940.0], [292.0, 857.0], [318.0, 658.0], [319.0, 986.0], [317.0, 614.0], [316.0, 637.0], [314.0, 719.0], [313.0, 720.0], [312.0, 707.0], [310.0, 714.0], [307.0, 633.0], [306.0, 735.5], [304.0, 929.0], [309.0, 626.0], [333.0, 706.0], [334.0, 1262.0], [332.0, 1235.0], [322.0, 785.5], [320.0, 658.0], [331.0, 685.0], [330.0, 641.0], [328.0, 972.0], [327.0, 763.0], [326.0, 901.0], [325.0, 620.0], [324.0, 1188.0], [348.0, 1013.0], [350.0, 755.0], [351.0, 1110.0], [349.0, 1289.0], [347.0, 1034.5], [345.0, 1121.0], [341.0, 1273.0], [340.0, 614.0], [339.0, 746.0], [338.0, 1048.0], [337.0, 1301.0], [336.0, 990.0], [366.0, 1098.0], [367.0, 1258.0], [365.0, 1269.0], [364.0, 1237.0], [363.0, 666.0], [362.0, 1256.5], [361.0, 903.0], [360.0, 868.0], [358.0, 1265.0], [352.0, 1010.0], [354.0, 925.5], [353.0, 993.0], [357.0, 949.0], [356.0, 950.5], [371.0, 731.0], [382.0, 956.0], [381.0, 1142.0], [370.0, 1226.0], [369.0, 728.0], [368.0, 690.0], [378.0, 958.0], [377.0, 1062.0], [376.0, 643.0], [375.0, 768.0], [374.0, 768.0], [373.0, 1079.0], [372.0, 917.0], [398.0, 1565.0], [399.0, 923.0], [397.0, 1591.0], [396.0, 1591.0], [394.0, 938.0], [393.0, 1330.0], [392.0, 1454.0], [391.0, 1173.0], [384.0, 867.0], [386.0, 1049.0], [385.0, 1228.0], [390.0, 895.0], [389.0, 934.0], [388.0, 867.0], [414.0, 1538.0], [415.0, 1573.0], [413.0, 1077.0], [412.0, 1580.0], [411.0, 1081.0], [410.0, 1483.5], [409.0, 1387.0], [408.0, 1586.0], [407.0, 1061.0], [401.0, 1540.0], [400.0, 1486.0], [403.0, 1085.0], [402.0, 1570.0], [406.0, 1581.0], [405.0, 1586.0], [404.0, 1395.0], [430.0, 1563.0], [431.0, 1513.0], [429.0, 1045.0], [428.0, 1554.0], [427.0, 1367.0], [426.0, 1525.0], [425.0, 1513.0], [424.0, 1549.0], [423.0, 1066.0], [417.0, 1571.0], [416.0, 1555.0], [419.0, 1524.0], [418.0, 1572.0], [422.0, 1545.0], [421.0, 899.0], [420.0, 1057.0], [446.0, 1052.5], [447.0, 489.0], [444.0, 990.0], [435.0, 565.0], [434.0, 1044.0], [433.0, 1516.0], [432.0, 1545.0], [443.0, 1494.0], [442.0, 991.0], [441.0, 1447.0], [439.0, 1341.0], [438.0, 1430.0], [437.0, 866.0], [436.0, 1349.0], [462.0, 1415.0], [463.0, 495.0], [461.0, 1385.0], [460.0, 1420.0], [459.0, 1254.0], [458.0, 1425.0], [457.0, 937.0], [456.0, 946.0], [455.0, 524.0], [449.0, 939.0], [448.0, 975.0], [451.0, 969.0], [450.0, 1456.0], [454.0, 935.0], [453.0, 942.0], [452.0, 477.0], [478.0, 414.0], [479.0, 577.0], [477.0, 582.0], [476.0, 425.0], [475.0, 829.0], [474.0, 1327.0], [473.0, 1283.0], [472.0, 871.0], [471.0, 886.0], [465.0, 918.0], [464.0, 492.0], [467.0, 892.0], [466.0, 904.0], [470.0, 1208.0], [469.0, 1363.0], [468.0, 883.0], [494.0, 337.0], [495.0, 1046.0], [493.0, 762.0], [492.0, 1094.0], [491.0, 772.0], [490.0, 787.0], [489.0, 790.0], [488.0, 1107.0], [487.0, 824.0], [481.0, 558.0], [480.0, 809.0], [483.0, 348.0], [482.0, 395.0], [486.0, 816.0], [485.0, 1235.0], [499.0, 861.65], [510.0, 708.5], [508.0, 731.0], [506.0, 743.0], [504.0, 722.0], [502.0, 701.5], [500.0, 750.5], [498.0, 1199.0], [497.0, 695.0], [496.0, 557.0], [542.0, 699.0], [543.0, 708.0], [541.0, 712.0], [540.0, 680.0], [539.0, 712.0], [536.0, 711.5], [526.0, 724.5], [513.0, 711.0], [512.0, 723.5], [517.0, 733.5], [515.0, 750.5], [519.0, 758.0], [518.0, 685.0], [524.0, 694.5], [522.0, 729.0], [520.0, 689.0], [532.0, 745.0], [531.0, 753.0], [530.0, 691.3333333333334], [570.0, 662.5], [563.0, 703.0], [573.0, 660.0], [575.0, 666.0], [562.0, 699.0], [561.0, 672.5], [571.0, 670.5], [568.0, 668.0], [551.0, 664.0], [549.0, 695.0], [546.0, 661.0], [545.0, 738.0], [544.0, 694.0], [559.0, 657.0], [558.0, 661.0], [557.0, 711.0], [556.0, 691.0], [555.0, 658.0], [554.0, 714.0], [553.0, 688.0], [552.0, 650.0], [567.0, 665.0], [566.0, 705.0], [565.0, 708.5], [600.0, 688.0], [604.0, 688.0], [605.0, 642.0], [593.0, 617.0], [592.0, 645.5], [595.0, 670.0], [594.0, 669.0], [603.0, 709.0], [602.0, 701.0], [601.0, 706.0], [589.0, 661.0], [576.0, 667.5], [579.0, 674.5], [577.0, 688.0], [581.0, 669.0], [580.0, 676.0], [583.0, 644.0], [582.0, 672.0], [588.0, 634.0], [587.0, 627.0], [586.0, 640.0], [585.0, 634.0], [584.0, 653.0], [599.0, 691.5], [598.0, 696.0], [597.0, 668.0], [596.0, 649.0], [637.0, 584.0], [627.0, 784.0], [639.0, 592.0], [624.0, 616.0], [626.0, 596.0], [625.0, 610.0], [636.0, 598.5], [634.0, 602.0], [633.0, 588.5], [615.0, 625.0], [614.0, 635.0], [613.0, 592.0], [610.0, 623.5], [608.0, 625.5], [622.0, 692.5], [620.0, 702.0], [618.0, 710.0], [616.0, 619.0], [631.0, 580.0], [630.0, 597.0], [629.0, 693.0], [670.0, 635.0], [671.0, 642.0], [656.0, 725.0], [659.0, 729.0], [657.0, 720.0], [669.0, 626.0], [668.0, 661.5], [667.0, 631.0], [666.0, 654.5], [664.0, 634.0], [647.0, 764.0], [646.0, 740.3333333333334], [643.0, 771.0], [642.0, 671.0], [641.0, 604.0], [655.0, 735.6666666666666], [654.0, 751.0], [651.0, 747.0], [650.0, 745.6666666666666], [662.0, 694.0], [661.0, 712.5], [696.0, 1191.0], [701.0, 1124.0], [702.0, 1067.0], [689.0, 611.0], [691.0, 610.0], [690.0, 613.3333333333334], [700.0, 1127.0], [699.0, 1115.5], [697.0, 1143.0], [687.0, 589.0], [672.0, 668.0], [674.0, 633.0], [673.0, 663.0], [676.0, 605.0], [675.0, 646.0], [678.0, 605.0], [677.0, 639.0], [686.0, 591.0], [685.0, 595.0], [684.0, 612.0], [683.0, 631.0], [681.0, 631.5], [680.0, 645.0], [695.0, 1203.0], [694.0, 156.0], [693.0, 198.0], [692.0, 607.0], [732.0, 1156.0], [735.0, 1155.0], [722.0, 1101.5], [720.0, 1086.5], [724.0, 1132.0], [723.0, 1144.0], [734.0, 1151.0], [733.0, 1044.0], [731.0, 1066.0], [730.0, 1129.0], [729.0, 1125.0], [728.0, 1072.0], [718.0, 1143.0], [704.0, 1134.0], [707.0, 1165.0], [705.0, 1119.0], [711.0, 1138.5], [709.0, 1130.5], [717.0, 1147.0], [716.0, 1135.0], [715.0, 1069.0], [713.0, 1100.0], [726.0, 1147.0], [725.0, 1058.0], [765.0, 977.5], [756.0, 1042.0], [766.0, 955.0], [753.0, 992.0], [752.0, 1061.0], [755.0, 1064.5], [754.0, 1082.0], [763.0, 1030.0], [761.0, 965.0], [760.0, 955.0], [743.0, 1059.0], [742.0, 1086.0], [741.0, 1051.0], [740.0, 1063.0], [739.0, 1059.5], [737.0, 1146.0], [736.0, 1127.0], [750.0, 1005.0], [749.0, 1125.0], [748.0, 1083.0], [747.0, 1087.0], [746.0, 1080.0], [745.0, 1117.0], [744.0, 1038.0], [759.0, 1018.0], [758.0, 967.0], [757.0, 997.0], [793.0, 692.0], [787.0, 662.0], [798.0, 569.8], [784.0, 758.0], [792.0, 596.5], [775.0, 894.0], [774.0, 867.0], [773.0, 891.0], [772.0, 911.0], [771.0, 973.0], [770.0, 1020.0], [769.0, 958.0], [768.0, 1005.0], [783.0, 777.0], [782.0, 859.0], [781.0, 857.0], [780.0, 809.0], [779.0, 839.0], [778.0, 818.0], [777.0, 821.0], [776.0, 856.0], [790.0, 700.0], [789.0, 702.0], [788.0, 720.0], [786.0, 724.0], [785.0, 724.0], [828.0, 126.0], [831.0, 118.0], [817.0, 521.0], [816.0, 497.0], [819.0, 487.0], [818.0, 554.0], [821.0, 339.0], [820.0, 412.0], [830.0, 120.0], [829.0, 123.0], [827.0, 224.0], [826.0, 236.0], [825.0, 296.0], [824.0, 363.0], [815.0, 510.5], [804.0, 579.5], [801.0, 589.6666666666666], [807.0, 579.0], [806.0, 537.3333333333334], [814.0, 553.0], [812.0, 538.3333333333334], [809.0, 491.0], [808.0, 612.0], [823.0, 369.0], [822.0, 395.0], [858.0, 375.2], [862.0, 353.5], [863.0, 363.0], [859.0, 362.5], [857.0, 373.0], [856.0, 368.0], [853.0, 393.0], [848.0, 394.0], [847.0, 386.5], [833.0, 118.0], [832.0, 116.0], [835.0, 109.0], [834.0, 115.0], [837.0, 105.0], [836.0, 107.0], [839.0, 398.0], [838.0, 95.0], [845.0, 393.6666666666667], [843.0, 384.0], [841.0, 377.0], [840.0, 376.0], [892.0, 355.0], [883.0, 362.0], [895.0, 353.0], [880.0, 345.0], [891.0, 348.0], [888.0, 358.0], [879.0, 321.0], [865.0, 367.0], [870.0, 362.0], [869.0, 356.3333333333333], [878.0, 333.0], [877.0, 329.0], [875.0, 346.0], [874.0, 359.0], [873.0, 346.0], [872.0, 343.0], [887.0, 364.0], [885.0, 359.0], [884.0, 369.0], [882.0, 324.5], [881.0, 318.0], [920.0, 234.0], [926.0, 256.0], [927.0, 228.0], [925.0, 247.0], [923.0, 233.0], [922.0, 251.0], [911.0, 278.0], [898.0, 349.5], [896.0, 350.3333333333333], [900.0, 349.0], [899.0, 358.0], [903.0, 343.5], [902.0, 339.5], [910.0, 330.0], [908.0, 345.0], [907.0, 347.0], [906.0, 347.0], [905.0, 335.0], [904.0, 343.0], [918.0, 243.0], [917.0, 262.0], [915.0, 254.0], [912.0, 242.0], [933.0, 225.5], [958.0, 1042.0], [959.0, 1266.0], [955.0, 1189.5], [954.0, 1171.0], [948.0, 1168.0], [947.0, 1230.0], [946.0, 1062.0], [945.0, 1220.0], [943.0, 1057.0], [928.0, 248.0], [930.0, 225.0], [929.0, 232.0], [932.0, 228.5], [931.0, 242.0], [935.0, 238.0], [941.0, 1240.0], [939.0, 1075.0], [938.0, 188.0], [937.0, 222.0], [936.0, 206.0], [990.0, 966.0], [991.0, 1129.0], [989.0, 1012.0], [988.0, 1002.0], [987.0, 1148.4], [966.0, 1257.0], [964.0, 1214.0], [962.0, 1239.5], [960.0, 1142.5], [975.0, 1223.0], [973.0, 1153.5], [971.0, 1252.0], [970.0, 1052.3333333333333], [968.0, 1225.5], [982.0, 1029.0], [981.0, 1084.5], [979.0, 1178.6666666666667], [976.0, 1058.0], [1011.0, 1042.5], [1023.0, 1027.0], [1021.0, 1109.0], [1019.0, 1105.5], [1017.0, 1032.5], [1007.0, 1088.0], [999.0, 972.0], [992.0, 939.0], [1006.0, 963.0], [1005.0, 969.0], [1004.0, 925.0], [1000.0, 947.0], [1015.0, 1049.5], [1014.0, 1055.5], [1012.0, 1022.5], [1009.0, 1025.0], [1008.0, 1090.0], [1084.0, 248.0], [1064.0, 861.0], [1056.0, 1048.0], [1058.0, 1066.0], [1060.0, 1026.0], [1062.0, 1033.0], [1066.0, 996.0], [1068.0, 962.0], [1070.0, 974.0], [1086.0, 210.0], [1082.0, 253.0], [1080.0, 254.33333333333334], [1074.0, 645.0], [1072.0, 887.0], [1036.0, 1074.0], [1030.0, 1007.5], [1028.0, 923.0], [1026.0, 902.0], [1024.0, 1139.0], [1054.0, 1073.0], [1052.0, 1096.0], [1046.0, 1007.5], [1042.0, 1121.0], [1040.0, 1061.0], [1144.0, 670.0], [1120.0, 722.0], [1124.0, 695.3333333333334], [1146.0, 683.0], [1142.0, 685.0], [1140.0, 668.0], [1118.0, 715.5], [1088.0, 204.0], [1090.0, 191.0], [1092.0, 159.0], [1094.0, 154.0], [1096.0, 149.0], [1098.0, 108.0], [1100.0, 167.0], [1102.0, 154.0], [1116.0, 695.0], [1114.0, 696.0], [1112.0, 90.0], [1110.0, 131.0], [1108.0, 136.0], [1106.0, 134.0], [1204.0, 245.0], [1206.0, 246.0], [1212.0, 170.5], [1184.0, 599.0], [1186.0, 558.0], [1188.0, 610.0], [1192.0, 250.0], [1214.0, 882.0], [1210.0, 173.0], [1208.0, 207.0], [1202.0, 281.0], [1200.0, 239.0], [1156.0, 646.0], [1160.0, 683.0], [1162.0, 637.0], [1164.0, 624.5], [1166.0, 619.0], [1182.0, 617.2], [1180.0, 643.0], [1178.0, 636.0], [1176.0, 659.0], [1174.0, 624.0], [1172.0, 635.0], [1170.0, 649.0], [1278.0, 655.0], [1274.0, 683.0], [1256.0, 790.0], [1250.0, 842.0], [1262.0, 814.5], [1258.0, 781.0], [1272.0, 685.0], [1270.0, 737.5], [1268.0, 742.0], [1266.0, 789.0], [1288.0, 295.0], [1316.0, 6085.0], [1324.0, 6206.0], [1322.0, 7186.0], [1318.0, 5443.0], [1314.0, 8030.0], [1312.0, 10213.0], [1282.0, 573.0], [1284.0, 525.0], [1286.0, 316.0], [1290.0, 293.5], [1292.0, 289.0], [1310.0, 207.0], [1308.0, 247.0], [1306.0, 240.0], [1304.0, 268.0], [1302.0, 275.0], [1300.0, 10287.0], [1298.0, 266.0], [1296.0, 282.0], [1085.0, 231.0], [1087.0, 204.0], [1057.0, 926.0], [1059.0, 1001.0], [1061.0, 1061.0], [1063.0, 865.0], [1065.0, 1006.0], [1067.0, 1031.0], [1069.0, 985.0], [1071.0, 981.0], [1083.0, 252.0], [1081.0, 241.0], [1079.0, 250.0], [1077.0, 259.0], [1073.0, 663.0], [1039.0, 1005.5], [1037.0, 948.0], [1035.0, 993.0], [1033.0, 1118.0], [1031.0, 937.0], [1027.0, 911.0], [1025.0, 981.0], [1055.0, 913.0], [1053.0, 1109.0], [1051.0, 977.5], [1049.0, 916.5], [1047.0, 920.0], [1045.0, 920.0], [1043.0, 916.0], [1041.0, 940.0], [1145.0, 644.0], [1149.0, 637.0], [1121.0, 725.0], [1127.0, 722.0], [1131.0, 702.0], [1129.0, 711.0], [1143.0, 680.5], [1141.0, 663.0], [1089.0, 201.0], [1091.0, 190.0], [1093.0, 171.0], [1095.0, 167.0], [1097.0, 129.0], [1099.0, 113.0], [1101.0, 154.0], [1103.0, 150.0], [1115.0, 719.0], [1113.0, 90.0], [1111.0, 104.0], [1109.0, 131.0], [1107.0, 133.0], [1105.0, 143.0], [1135.0, 688.0], [1133.0, 691.0], [1213.0, 834.0], [1187.0, 560.0], [1215.0, 825.0], [1185.0, 599.0], [1189.0, 302.0], [1195.0, 268.0], [1193.0, 187.0], [1199.0, 245.5], [1197.0, 252.75], [1211.0, 186.0], [1201.0, 230.0], [1183.0, 631.0], [1155.0, 685.0], [1159.0, 617.0], [1157.0, 663.0], [1161.0, 654.0], [1163.0, 648.0], [1165.0, 604.0], [1167.0, 634.0], [1179.0, 633.0], [1177.0, 610.0], [1175.0, 649.0], [1173.0, 659.0], [1169.0, 648.0], [1249.0, 818.1176470588234], [1259.0, 828.0], [1277.0, 656.5], [1275.0, 686.0], [1273.0, 693.0], [1267.0, 777.0], [1265.0, 788.6666666666666], [1317.0, 5523.0], [1321.0, 6381.5], [1323.0, 6188.0], [1319.0, 8884.0], [1315.0, 6109.0], [1313.0, 9595.0], [1311.0, 10231.0], [1281.0, 557.0], [1283.0, 543.0], [1285.0, 222.0], [1287.0, 310.0], [1291.0, 295.0], [1295.0, 274.0], [1293.0, 288.0], [1309.0, 240.0], [1307.0, 245.0], [1305.0, 257.5], [1303.0, 274.0], [1301.0, 267.0], [1297.0, 284.0], [1.0, 92.26315789473684]], "isOverall": false, "label": "Sunstar Home", "isController": false}, {"data": [[20.327177171620153, 64.10863959929335]], "isOverall": false, "label": "Sunstar Home-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1324.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 214.5, "minX": 1.62583778E12, "maxY": 1294533.9, "series": [{"data": [[1.62583854E12, 1064566.8], [1.62583778E12, 9464.4], [1.62583837E12, 1260081.9], [1.62583795E12, 64597.5], [1.6258382E12, 1268694.9], [1.62583863E12, 874219.5], [1.62583846E12, 659679.2], [1.62583786E12, 780247.2], [1.62583829E12, 447876.0], [1.62583803E12, 1294533.9], [1.62583812E12, 237718.8], [1.62583794E12, 235996.2], [1.62583853E12, 852687.0], [1.62583836E12, 1067150.7], [1.62583819E12, 1254914.1], [1.62583785E12, 242869.6], [1.62583862E12, 1088683.2], [1.62583802E12, 1267833.6], [1.62583845E12, 876701.6], [1.62583828E12, 657171.9], [1.62583811E12, 448737.3], [1.62583793E12, 447014.7], [1.62583852E12, 639945.9], [1.62583835E12, 856132.2], [1.62583818E12, 1065428.1], [1.62583784E12, 165350.4], [1.62583801E12, 1253191.5], [1.62583861E12, 1270417.5], [1.62583844E12, 1092869.8], [1.62583827E12, 869913.0], [1.6258381E12, 661478.4], [1.62583792E12, 653726.7], [1.62583851E12, 426345.6], [1.62583834E12, 640807.2], [1.62583817E12, 853548.3], [1.62583783E12, 33586.8], [1.625838E12, 1064566.8], [1.6258386E12, 1285920.9], [1.62583843E12, 1269408.8], [1.62583826E12, 1089544.5], [1.62583809E12, 879387.3], [1.62583791E12, 874219.5], [1.62583807E12, 1269556.2], [1.62583867E12, 38758.5], [1.6258385E12, 211018.4], [1.62583782E12, 85259.5], [1.62583833E12, 425482.2], [1.62583799E12, 847519.2], [1.62583816E12, 638223.3], [1.62583859E12, 1291950.0], [1.62583842E12, 1290077.6], [1.6258379E12, 1090405.8], [1.62583825E12, 1265249.7], [1.62583808E12, 1086960.6], [1.62583823E12, 1290227.4], [1.62583806E12, 1288504.8], [1.62583781E12, 62874.6], [1.62583866E12, 235134.9], [1.62583798E12, 639945.9], [1.62583849E12, 64590.0], [1.62583832E12, 211879.8], [1.62583815E12, 428933.0], [1.62583789E12, 1271263.0], [1.62583858E12, 1288504.8], [1.62583841E12, 1290077.6], [1.62583824E12, 1292811.3], [1.62583839E12, 544252.4], [1.62583822E12, 1289366.1], [1.62583797E12, 424620.9], [1.62583865E12, 447876.0], [1.62583848E12, 237691.2], [1.62583831E12, 56845.8], [1.62583814E12, 210164.2], [1.62583788E12, 1281465.6], [1.62583805E12, 1288504.8], [1.62583857E12, 1289366.1], [1.6258384E12, 1288246.4], [1.62583855E12, 1260943.2], [1.62583838E12, 1254052.8], [1.62583821E12, 1293672.6], [1.62583779E12, 24093.3], [1.62583796E12, 211018.5], [1.62583864E12, 664062.3], [1.62583847E12, 448685.2], [1.6258383E12, 232551.0], [1.62583813E12, 57707.1], [1.62583787E12, 1232377.2], [1.62583804E12, 1261804.5], [1.62583856E12, 1260943.2]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62583854E12, 24102.0], [1.62583778E12, 214.5], [1.62583837E12, 28528.5], [1.62583795E12, 1462.5], [1.6258382E12, 28723.5], [1.62583863E12, 19792.5], [1.62583846E12, 14937.0], [1.62583786E12, 17667.0], [1.62583829E12, 10140.0], [1.62583803E12, 29308.5], [1.62583812E12, 5382.0], [1.62583794E12, 5343.0], [1.62583853E12, 19305.0], [1.62583836E12, 24160.5], [1.62583819E12, 28411.5], [1.62583785E12, 5499.0], [1.62583862E12, 24648.0], [1.62583802E12, 28704.0], [1.62583845E12, 19851.0], [1.62583828E12, 14878.5], [1.62583811E12, 10159.5], [1.62583793E12, 10120.5], [1.62583852E12, 14488.5], [1.62583835E12, 19383.0], [1.62583818E12, 24121.5], [1.62583784E12, 3744.0], [1.62583801E12, 28372.5], [1.62583861E12, 28762.5], [1.62583844E12, 24745.5], [1.62583827E12, 19695.0], [1.6258381E12, 14976.0], [1.62583792E12, 14800.5], [1.62583851E12, 9652.5], [1.62583834E12, 14508.0], [1.62583817E12, 19324.5], [1.62583783E12, 760.5], [1.625838E12, 24102.0], [1.6258386E12, 29113.5], [1.62583843E12, 28743.0], [1.62583826E12, 24667.5], [1.62583809E12, 19909.5], [1.62583791E12, 19792.5], [1.62583807E12, 28743.0], [1.62583867E12, 877.5], [1.6258385E12, 4777.5], [1.62583782E12, 1930.5], [1.62583833E12, 9633.0], [1.62583799E12, 19188.0], [1.62583816E12, 14449.5], [1.62583859E12, 29250.0], [1.62583842E12, 29211.0], [1.6258379E12, 24687.0], [1.62583825E12, 28645.5], [1.62583808E12, 24609.0], [1.62583823E12, 29211.0], [1.62583806E12, 29172.0], [1.62583781E12, 1423.5], [1.62583866E12, 5323.5], [1.62583798E12, 14488.5], [1.62583849E12, 1462.5], [1.62583832E12, 4797.0], [1.62583815E12, 9711.0], [1.62583789E12, 28782.0], [1.62583858E12, 29172.0], [1.62583841E12, 29211.0], [1.62583824E12, 29269.5], [1.62583839E12, 12324.0], [1.62583822E12, 29191.5], [1.62583797E12, 9613.5], [1.62583865E12, 10140.0], [1.62583848E12, 5382.0], [1.62583831E12, 1287.0], [1.62583814E12, 4758.0], [1.62583788E12, 29016.0], [1.62583805E12, 29172.0], [1.62583857E12, 29191.5], [1.6258384E12, 29172.0], [1.62583855E12, 28548.0], [1.62583838E12, 28392.0], [1.62583821E12, 29289.0], [1.62583779E12, 546.0], [1.62583796E12, 4777.5], [1.62583864E12, 15034.5], [1.62583847E12, 10159.5], [1.6258383E12, 5265.0], [1.62583813E12, 1306.5], [1.62583787E12, 27904.5], [1.62583804E12, 28567.5], [1.62583856E12, 28548.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62583867E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 18.532110091743114, "minX": 1.62583778E12, "maxY": 6583.363636363637, "series": [{"data": [[1.62583854E12, 28.32524271844661], [1.62583778E12, 6583.363636363637], [1.62583837E12, 26.680792891319232], [1.62583795E12, 19.866666666666667], [1.6258382E12, 34.203665987780035], [1.62583863E12, 47.60295566502461], [1.62583846E12, 20.992167101827675], [1.62583786E12, 770.206401766005], [1.62583829E12, 19.26923076923076], [1.62583803E12, 60.36859614105122], [1.62583812E12, 45.387681159420296], [1.62583794E12, 18.72262773722628], [1.62583853E12, 26.36767676767679], [1.62583836E12, 24.34624697336562], [1.62583819E12, 26.43376801647222], [1.62583785E12, 692.9751773049643], [1.62583862E12, 52.33306962025309], [1.62583802E12, 78.0794836956522], [1.62583845E12, 22.198428290766206], [1.62583828E12, 18.532110091743114], [1.62583811E12, 45.59309021113246], [1.62583793E12, 19.092485549132977], [1.62583852E12, 27.048452220726805], [1.62583835E12, 40.900402414486955], [1.62583818E12, 24.38561034761519], [1.62583784E12, 832.8541666666671], [1.62583801E12, 63.812371134020616], [1.62583861E12, 55.903050847457585], [1.62583844E12, 46.911741528762825], [1.62583827E12, 21.553465346534633], [1.6258381E12, 46.845052083333265], [1.62583792E12, 30.09090909090909], [1.62583851E12, 28.052525252525264], [1.62583834E12, 47.41397849462365], [1.62583817E12, 23.193743693239117], [1.62583783E12, 178.12820512820514], [1.625838E12, 59.55501618122978], [1.6258386E12, 60.3844608171467], [1.62583843E12, 54.128900949796495], [1.62583826E12, 44.75810276679839], [1.62583809E12, 48.23800195886389], [1.62583791E12, 29.399014778325103], [1.62583807E12, 55.649932157394865], [1.62583867E12, 44.33333333333334], [1.6258385E12, 24.187755102040814], [1.62583782E12, 555.4646464646464], [1.62583833E12, 46.49392712550606], [1.62583799E12, 52.297764227642276], [1.62583816E12, 23.27935222672065], [1.62583859E12, 54.90266666666663], [1.62583842E12, 57.06608811748999], [1.6258379E12, 61.73854660347557], [1.62583825E12, 54.934649421375106], [1.62583808E12, 51.773375594294784], [1.62583823E12, 55.81174899866486], [1.62583806E12, 57.7032085561497], [1.62583781E12, 765.5616438356165], [1.62583866E12, 45.992673992673964], [1.62583798E12, 50.111709286675634], [1.62583849E12, 19.746666666666673], [1.62583832E12, 28.12601626016261], [1.62583815E12, 24.010040160642568], [1.62583789E12, 92.41327913279137], [1.62583858E12, 54.59692513368978], [1.62583841E12, 55.95660881174897], [1.62583824E12, 56.768154563624236], [1.62583839E12, 110.1867088607595], [1.62583822E12, 55.60721442885772], [1.62583797E12, 46.72413793103453], [1.62583865E12, 46.29807692307691], [1.62583848E12, 19.7608695652174], [1.62583831E12, 18.71212121212121], [1.62583814E12, 39.61065573770493], [1.62583788E12, 95.67405913978487], [1.62583805E12, 55.714572192513394], [1.62583857E12, 55.23513694054774], [1.6258384E12, 87.4010695187164], [1.62583855E12, 30.760245901639372], [1.62583838E12, 32.96085164835165], [1.62583821E12, 54.69840213049266], [1.62583779E12, 1673.4285714285709], [1.62583796E12, 28.281632653061223], [1.62583864E12, 47.031128404669246], [1.62583847E12, 20.746641074856054], [1.6258383E12, 22.825925925925922], [1.62583813E12, 46.88059701492537], [1.62583787E12, 111.47589098532482], [1.62583804E12, 59.7133105802048], [1.62583856E12, 35.28278688524589]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62583867E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 18.34469200524247, "minX": 1.62583778E12, "maxY": 6581.818181818182, "series": [{"data": [[1.62583854E12, 28.10598705501615], [1.62583778E12, 6581.818181818182], [1.62583837E12, 26.416267942583744], [1.62583795E12, 19.613333333333333], [1.6258382E12, 33.92803801765107], [1.62583863E12, 47.37733990147783], [1.62583846E12, 20.82898172323759], [1.62583786E12, 769.6059602649011], [1.62583829E12, 19.05192307692309], [1.62583803E12, 60.11177644710585], [1.62583812E12, 45.11594202898552], [1.62583794E12, 18.53284671532846], [1.62583853E12, 26.176767676767664], [1.62583836E12, 24.109765940274425], [1.62583819E12, 26.160603980782426], [1.62583785E12, 684.0921985815601], [1.62583862E12, 52.07832278481009], [1.62583802E12, 77.82336956521732], [1.62583845E12, 22.001964636542287], [1.62583828E12, 18.34469200524247], [1.62583811E12, 45.35316698656432], [1.62583793E12, 18.91714836223508], [1.62583852E12, 26.87213997308209], [1.62583835E12, 40.63682092555328], [1.62583818E12, 24.164915117219085], [1.62583784E12, 827.3854166666664], [1.62583801E12, 63.558075601374604], [1.62583861E12, 55.661016949152604], [1.62583844E12, 46.676910953506635], [1.62583827E12, 21.310891089108917], [1.6258381E12, 46.60286458333341], [1.62583792E12, 29.724637681159418], [1.62583851E12, 27.890909090909098], [1.62583834E12, 47.20833333333334], [1.62583817E12, 22.974772956609474], [1.62583783E12, 177.8205128205128], [1.625838E12, 59.301779935275064], [1.6258386E12, 60.11654387139986], [1.62583843E12, 53.864993215739524], [1.62583826E12, 44.492490118576995], [1.62583809E12, 48.03721841332025], [1.62583791E12, 29.121182266009836], [1.62583807E12, 55.377204884667584], [1.62583867E12, 44.24444444444445], [1.6258385E12, 24.012244897959203], [1.62583782E12, 553.89898989899], [1.62583833E12, 46.29757085020243], [1.62583799E12, 52.03353658536583], [1.62583816E12, 23.055330634278047], [1.62583859E12, 54.619999999999976], [1.62583842E12, 56.83978638184249], [1.6258379E12, 61.437598736176895], [1.62583825E12, 54.67256637168139], [1.62583808E12, 51.53803486529317], [1.62583823E12, 55.532042723631584], [1.62583806E12, 57.4217914438503], [1.62583781E12, 746.2465753424657], [1.62583866E12, 45.80586080586081], [1.62583798E12, 49.903095558546454], [1.62583849E12, 19.573333333333338], [1.62583832E12, 27.914634146341456], [1.62583815E12, 23.799196787148585], [1.62583789E12, 92.1266937669377], [1.62583858E12, 54.37500000000007], [1.62583841E12, 55.680240320427224], [1.62583824E12, 56.479680213191216], [1.62583839E12, 109.93987341772151], [1.62583822E12, 55.33132932531731], [1.62583797E12, 46.517241379310356], [1.62583865E12, 46.08461538461533], [1.62583848E12, 19.579710144927542], [1.62583831E12, 18.530303030303024], [1.62583814E12, 39.368852459016374], [1.62583788E12, 95.38104838709684], [1.62583805E12, 55.4425133689839], [1.62583857E12, 54.993319973279846], [1.6258384E12, 87.17780748663114], [1.62583855E12, 30.503415300546468], [1.62583838E12, 32.68612637362635], [1.62583821E12, 54.44074567243677], [1.62583779E12, 1672.7142857142858], [1.62583796E12, 28.089795918367344], [1.62583864E12, 46.813229571984394], [1.62583847E12, 20.589251439539336], [1.6258383E12, 22.63333333333333], [1.62583813E12, 46.671641791044784], [1.62583787E12, 111.06359189378054], [1.62583804E12, 59.458703071672396], [1.62583856E12, 34.999316939890676]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62583867E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 14.83617300131063, "minX": 1.62583778E12, "maxY": 789.6770833333335, "series": [{"data": [[1.62583854E12, 22.851941747572855], [1.62583778E12, 330.6363636363636], [1.62583837E12, 22.252904989747112], [1.62583795E12, 16.586666666666666], [1.6258382E12, 27.742023082145273], [1.62583863E12, 37.29950738916263], [1.62583846E12, 17.35900783289818], [1.62583786E12, 741.3785871964677], [1.62583829E12, 15.83461538461538], [1.62583803E12, 47.977378576181], [1.62583812E12, 34.844202898550705], [1.62583794E12, 15.35036496350365], [1.62583853E12, 21.439393939393934], [1.62583836E12, 20.147699757869248], [1.62583819E12, 21.914207275223063], [1.62583785E12, 647.8617021276598], [1.62583862E12, 41.30933544303803], [1.62583802E12, 65.49728260869567], [1.62583845E12, 18.439096267190582], [1.62583828E12, 14.83617300131063], [1.62583811E12, 35.33205374280234], [1.62583793E12, 15.757225433526], [1.62583852E12, 21.967698519515473], [1.62583835E12, 32.17002012072438], [1.62583818E12, 20.358124494745336], [1.62583784E12, 789.6770833333335], [1.62583801E12, 51.760137457044664], [1.62583861E12, 44.45152542372882], [1.62583844E12, 37.09298660362487], [1.62583827E12, 17.73762376237624], [1.6258381E12, 36.60677083333331], [1.62583792E12, 25.843214756258234], [1.62583851E12, 22.541414141414148], [1.62583834E12, 37.0725806451613], [1.62583817E12, 19.383451059535815], [1.62583783E12, 170.43589743589743], [1.625838E12, 47.369741100323644], [1.6258386E12, 47.918285331547295], [1.62583843E12, 42.916553595658165], [1.62583826E12, 35.25612648221346], [1.62583809E12, 37.51126346718907], [1.62583791E12, 24.81083743842365], [1.62583807E12, 43.968113975576614], [1.62583867E12, 35.04444444444443], [1.6258385E12, 19.71020408163265], [1.62583782E12, 536.2222222222222], [1.62583833E12, 35.961538461538446], [1.62583799E12, 40.77540650406509], [1.62583816E12, 19.518218623481783], [1.62583859E12, 43.422666666666636], [1.62583842E12, 45.14819759679579], [1.6258379E12, 51.379936808846765], [1.62583825E12, 43.369639210347124], [1.62583808E12, 40.546751188589546], [1.62583823E12, 44.22229639519364], [1.62583806E12, 45.51871657754013], [1.62583781E12, 704.945205479452], [1.62583866E12, 35.326007326007314], [1.62583798E12, 39.05921938088835], [1.62583849E12, 16.37333333333333], [1.62583832E12, 22.512195121951223], [1.62583815E12, 20.25100401606427], [1.62583789E12, 78.73306233062321], [1.62583858E12, 43.26871657754009], [1.62583841E12, 44.340453938584744], [1.62583824E12, 45.03930712858094], [1.62583839E12, 51.507911392405035], [1.62583822E12, 44.11356045424172], [1.62583797E12, 36.30223123732246], [1.62583865E12, 36.24615384615386], [1.62583848E12, 16.29347826086957], [1.62583831E12, 15.121212121212125], [1.62583814E12, 30.75409836065576], [1.62583788E12, 82.3077956989248], [1.62583805E12, 43.628342245989394], [1.62583857E12, 43.99799599198397], [1.6258384E12, 43.228609625668525], [1.62583855E12, 24.777322404371546], [1.62583838E12, 26.95879120879122], [1.62583821E12, 43.23102529960056], [1.62583779E12, 239.9642857142857], [1.62583796E12, 22.342857142857135], [1.62583864E12, 36.78599221789884], [1.62583847E12, 16.978886756237987], [1.6258383E12, 18.240740740740744], [1.62583813E12, 36.20895522388061], [1.62583787E12, 97.5960866526904], [1.62583804E12, 47.82252559726959], [1.62583856E12, 28.507513661202182]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62583867E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.62583778E12, "maxY": 10663.0, "series": [{"data": [[1.62583854E12, 212.0], [1.62583778E12, 8884.0], [1.62583837E12, 95.0], [1.62583795E12, 195.0], [1.6258382E12, 175.0], [1.62583863E12, 133.0], [1.62583846E12, 88.0], [1.62583786E12, 2110.0], [1.62583829E12, 451.0], [1.62583803E12, 239.0], [1.62583812E12, 117.0], [1.62583794E12, 115.0], [1.62583853E12, 109.0], [1.62583836E12, 195.0], [1.62583819E12, 126.0], [1.62583785E12, 1203.0], [1.62583862E12, 382.0], [1.62583802E12, 408.0], [1.62583845E12, 81.0], [1.62583828E12, 256.0], [1.62583811E12, 115.0], [1.62583793E12, 340.0], [1.62583852E12, 149.0], [1.62583835E12, 155.0], [1.62583818E12, 85.0], [1.62583784E12, 1266.0], [1.62583801E12, 684.0], [1.62583861E12, 421.0], [1.62583844E12, 190.0], [1.62583827E12, 326.0], [1.6258381E12, 136.0], [1.62583792E12, 184.0], [1.62583851E12, 274.0], [1.62583834E12, 280.0], [1.62583817E12, 117.0], [1.62583783E12, 261.0], [1.625838E12, 428.0], [1.6258386E12, 1014.0], [1.62583843E12, 198.0], [1.62583826E12, 164.0], [1.62583809E12, 313.0], [1.62583791E12, 199.0], [1.62583807E12, 230.0], [1.62583867E12, 77.0], [1.6258385E12, 183.0], [1.62583782E12, 740.0], [1.62583833E12, 219.0], [1.62583799E12, 385.0], [1.62583816E12, 75.0], [1.62583859E12, 169.0], [1.62583842E12, 454.0], [1.6258379E12, 314.0], [1.62583825E12, 215.0], [1.62583808E12, 193.0], [1.62583823E12, 293.0], [1.62583806E12, 509.0], [1.62583781E12, 882.0], [1.62583866E12, 121.0], [1.62583798E12, 151.0], [1.62583849E12, 30.0], [1.62583832E12, 212.0], [1.62583815E12, 57.0], [1.62583789E12, 245.0], [1.62583858E12, 213.0], [1.62583841E12, 220.0], [1.62583824E12, 293.0], [1.62583839E12, 7157.0], [1.62583822E12, 498.0], [1.62583797E12, 125.0], [1.62583865E12, 286.0], [1.62583848E12, 37.0], [1.62583831E12, 73.0], [1.62583814E12, 142.0], [1.62583788E12, 364.0], [1.62583805E12, 168.0], [1.62583857E12, 254.0], [1.6258384E12, 10663.0], [1.62583855E12, 253.0], [1.62583838E12, 205.0], [1.62583821E12, 187.0], [1.62583779E12, 10287.0], [1.62583796E12, 229.0], [1.62583864E12, 181.0], [1.62583847E12, 178.0], [1.6258383E12, 391.0], [1.62583813E12, 90.0], [1.62583787E12, 360.0], [1.62583804E12, 340.0], [1.62583856E12, 312.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62583854E12, 19.0], [1.62583778E12, 5443.0], [1.62583837E12, 15.0], [1.62583795E12, 11.0], [1.6258382E12, 14.0], [1.62583863E12, 39.0], [1.62583846E12, 13.0], [1.62583786E12, 44.0], [1.62583829E12, 10.0], [1.62583803E12, 40.0], [1.62583812E12, 38.0], [1.62583794E12, 11.0], [1.62583853E12, 19.0], [1.62583836E12, 14.0], [1.62583819E12, 15.0], [1.62583785E12, 95.0], [1.62583862E12, 40.0], [1.62583802E12, 41.0], [1.62583845E12, 13.0], [1.62583828E12, 10.0], [1.62583811E12, 38.0], [1.62583793E12, 10.0], [1.62583852E12, 18.0], [1.62583835E12, 13.0], [1.62583818E12, 14.0], [1.62583784E12, 188.0], [1.62583801E12, 42.0], [1.62583861E12, 40.0], [1.62583844E12, 14.0], [1.62583827E12, 11.0], [1.6258381E12, 38.0], [1.62583792E12, 11.0], [1.62583851E12, 19.0], [1.62583834E12, 38.0], [1.62583817E12, 13.0], [1.62583783E12, 90.0], [1.625838E12, 39.0], [1.6258386E12, 41.0], [1.62583843E12, 39.0], [1.62583826E12, 11.0], [1.62583809E12, 39.0], [1.62583791E12, 11.0], [1.62583807E12, 39.0], [1.62583867E12, 38.0], [1.6258385E12, 13.0], [1.62583782E12, 166.0], [1.62583833E12, 38.0], [1.62583799E12, 38.0], [1.62583816E12, 14.0], [1.62583859E12, 40.0], [1.62583842E12, 41.0], [1.6258379E12, 13.0], [1.62583825E12, 40.0], [1.62583808E12, 38.0], [1.62583823E12, 40.0], [1.62583806E12, 41.0], [1.62583781E12, 222.0], [1.62583866E12, 38.0], [1.62583798E12, 39.0], [1.62583849E12, 13.0], [1.62583832E12, 11.0], [1.62583815E12, 13.0], [1.62583789E12, 47.0], [1.62583858E12, 40.0], [1.62583841E12, 40.0], [1.62583824E12, 40.0], [1.62583839E12, 40.0], [1.62583822E12, 40.0], [1.62583797E12, 39.0], [1.62583865E12, 38.0], [1.62583848E12, 13.0], [1.62583831E12, 11.0], [1.62583814E12, 18.0], [1.62583788E12, 43.0], [1.62583805E12, 40.0], [1.62583857E12, 40.0], [1.6258384E12, 40.0], [1.62583855E12, 20.0], [1.62583838E12, 15.0], [1.62583821E12, 39.0], [1.62583779E12, 207.0], [1.62583796E12, 11.0], [1.62583864E12, 38.0], [1.62583847E12, 13.0], [1.6258383E12, 10.0], [1.62583813E12, 39.0], [1.62583787E12, 46.0], [1.62583804E12, 40.0], [1.62583856E12, 21.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62583854E12, 34.299999999999955], [1.62583778E12, 8713.2], [1.62583837E12, 35.0], [1.62583795E12, 35.20000000000002], [1.6258382E12, 57.0], [1.62583863E12, 54.0], [1.62583846E12, 26.0], [1.62583786E12, 1616.1000000000004], [1.62583829E12, 25.900000000000034], [1.62583803E12, 79.60000000000014], [1.62583812E12, 50.0], [1.62583794E12, 26.0], [1.62583853E12, 32.0], [1.62583836E12, 30.0], [1.62583819E12, 34.0], [1.62583785E12, 1119.0], [1.62583862E12, 60.0], [1.62583802E12, 106.0], [1.62583845E12, 28.0], [1.62583828E12, 26.0], [1.62583811E12, 49.80000000000001], [1.62583793E12, 25.0], [1.62583852E12, 34.0], [1.62583835E12, 51.0], [1.62583818E12, 31.0], [1.62583784E12, 1219.1000000000001], [1.62583801E12, 87.0], [1.62583861E12, 66.0], [1.62583844E12, 60.0], [1.62583827E12, 30.0], [1.6258381E12, 52.0], [1.62583792E12, 63.0], [1.62583851E12, 34.0], [1.62583834E12, 52.0], [1.62583817E12, 30.0], [1.62583783E12, 253.0], [1.625838E12, 83.0], [1.6258386E12, 72.0], [1.62583843E12, 64.0], [1.62583826E12, 59.0], [1.62583809E12, 55.0], [1.62583791E12, 53.0], [1.62583807E12, 67.0], [1.62583867E12, 48.8], [1.6258385E12, 30.400000000000006], [1.62583782E12, 714.0], [1.62583833E12, 52.0], [1.62583799E12, 67.0], [1.62583816E12, 30.0], [1.62583859E12, 65.0], [1.62583842E12, 69.0], [1.6258379E12, 93.0], [1.62583825E12, 65.0], [1.62583808E12, 60.0], [1.62583823E12, 66.0], [1.62583806E12, 70.0], [1.62583781E12, 849.2], [1.62583866E12, 52.0], [1.62583798E12, 61.0], [1.62583849E12, 25.0], [1.62583832E12, 46.0], [1.62583815E12, 30.0], [1.62583789E12, 127.0], [1.62583858E12, 65.0], [1.62583841E12, 67.10000000000014], [1.62583824E12, 68.0], [1.62583839E12, 94.0], [1.62583822E12, 66.0], [1.62583797E12, 54.0], [1.62583865E12, 50.0], [1.62583848E12, 25.0], [1.62583831E12, 25.0], [1.62583814E12, 51.5], [1.62583788E12, 131.10000000000014], [1.62583805E12, 67.0], [1.62583857E12, 66.0], [1.6258384E12, 66.0], [1.62583855E12, 39.0], [1.62583838E12, 52.0], [1.62583821E12, 65.0], [1.62583779E12, 10214.8], [1.62583796E12, 46.0], [1.62583864E12, 52.0], [1.62583847E12, 25.0], [1.6258383E12, 37.0], [1.62583813E12, 51.400000000000006], [1.62583787E12, 154.0], [1.62583804E12, 77.0], [1.62583856E12, 53.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62583854E12, 75.14999999999941], [1.62583778E12, 8884.0], [1.62583837E12, 50.0], [1.62583795E12, 195.0], [1.6258382E12, 82.0], [1.62583863E12, 80.36000000000013], [1.62583846E12, 39.320000000000164], [1.62583786E12, 2008.3699999999994], [1.62583829E12, 108.36999999999989], [1.62583803E12, 125.92000000000007], [1.62583812E12, 112.69000000000005], [1.62583794E12, 95.25], [1.62583853E12, 58.270000000000095], [1.62583836E12, 50.19999999999982], [1.62583819E12, 47.42000000000007], [1.62583785E12, 1179.38], [1.62583862E12, 91.34999999999991], [1.62583802E12, 223.80999999999995], [1.62583845E12, 37.0], [1.62583828E12, 107.08000000000004], [1.62583811E12, 87.45999999999981], [1.62583793E12, 139.99999999999886], [1.62583852E12, 74.23999999999978], [1.62583835E12, 81.14999999999986], [1.62583818E12, 49.61999999999989], [1.62583784E12, 1263.21], [1.62583801E12, 127.32000000000016], [1.62583861E12, 102.20000000000005], [1.62583844E12, 101.59999999999991], [1.62583827E12, 138.00999999999988], [1.6258381E12, 81.54999999999973], [1.62583792E12, 119.39999999999998], [1.62583851E12, 69.04000000000002], [1.62583834E12, 94.39999999999964], [1.62583817E12, 39.16000000000008], [1.62583783E12, 261.0], [1.625838E12, 132.62999999999988], [1.6258386E12, 221.41999999999962], [1.62583843E12, 92.0], [1.62583826E12, 96.33999999999992], [1.62583809E12, 86.55999999999995], [1.62583791E12, 116.5200000000001], [1.62583807E12, 99.5], [1.62583867E12, 77.0], [1.6258385E12, 77.07999999999998], [1.62583782E12, 740.0], [1.62583833E12, 99.35000000000008], [1.62583799E12, 107.0], [1.62583816E12, 40.0], [1.62583859E12, 100.98000000000002], [1.62583842E12, 125.01999999999998], [1.6258379E12, 147.3199999999997], [1.62583825E12, 105.89999999999986], [1.62583808E12, 95.0], [1.62583823E12, 110.01999999999998], [1.62583806E12, 114.11999999999989], [1.62583781E12, 882.0], [1.62583866E12, 111.59999999999991], [1.62583798E12, 105.47999999999956], [1.62583849E12, 30.0], [1.62583832E12, 90.59], [1.62583815E12, 44.02999999999997], [1.62583789E12, 171.23000000000002], [1.62583858E12, 95.0], [1.62583841E12, 99.01999999999998], [1.62583824E12, 103.0], [1.62583839E12, 270.15999999999394], [1.62583822E12, 94.0], [1.62583797E12, 99.30000000000001], [1.62583865E12, 97.94999999999982], [1.62583848E12, 31.38000000000011], [1.62583831E12, 73.0], [1.62583814E12, 82.10000000000002], [1.62583788E12, 181.0], [1.62583805E12, 110.02999999999997], [1.62583857E12, 104.07999999999993], [1.6258384E12, 105.14999999999986], [1.62583855E12, 86.69999999999982], [1.62583838E12, 78.29000000000019], [1.62583821E12, 98.85000000000014], [1.62583779E12, 10287.0], [1.62583796E12, 91.85999999999993], [1.62583864E12, 87.67999999999984], [1.62583847E12, 43.679999999999836], [1.6258383E12, 157.14000000000135], [1.62583813E12, 90.0], [1.62583787E12, 250.68000000000006], [1.62583804E12, 113.0], [1.62583856E12, 83.39999999999964]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62583854E12, 40.0], [1.62583778E12, 8884.0], [1.62583837E12, 38.0], [1.62583795E12, 52.800000000000026], [1.6258382E12, 64.0], [1.62583863E12, 58.0], [1.62583846E12, 27.0], [1.62583786E12, 1867.65], [1.62583829E12, 44.94999999999999], [1.62583803E12, 93.79999999999995], [1.62583812E12, 56.14999999999998], [1.62583794E12, 40.25], [1.62583853E12, 37.0], [1.62583836E12, 33.0], [1.62583819E12, 38.09999999999991], [1.62583785E12, 1144.0], [1.62583862E12, 66.0], [1.62583802E12, 117.0], [1.62583845E12, 30.0], [1.62583828E12, 37.799999999999955], [1.62583811E12, 56.89999999999998], [1.62583793E12, 39.0], [1.62583852E12, 40.0], [1.62583835E12, 55.25], [1.62583818E12, 34.0], [1.62583784E12, 1236.0], [1.62583801E12, 96.0], [1.62583861E12, 72.0], [1.62583844E12, 65.0], [1.62583827E12, 48.44999999999993], [1.6258381E12, 59.0], [1.62583792E12, 83.0], [1.62583851E12, 42.19999999999999], [1.62583834E12, 57.75], [1.62583817E12, 32.0], [1.62583783E12, 259.0], [1.625838E12, 93.0], [1.6258386E12, 84.0], [1.62583843E12, 68.0], [1.62583826E12, 64.70000000000005], [1.62583809E12, 62.89999999999998], [1.62583791E12, 63.19999999999993], [1.62583807E12, 73.0], [1.62583867E12, 51.0], [1.6258385E12, 40.099999999999966], [1.62583782E12, 730.0], [1.62583833E12, 61.25], [1.62583799E12, 80.0], [1.62583816E12, 31.0], [1.62583859E12, 72.0], [1.62583842E12, 78.0], [1.6258379E12, 105.0], [1.62583825E12, 72.0], [1.62583808E12, 66.84999999999991], [1.62583823E12, 73.0], [1.62583806E12, 78.0], [1.62583781E12, 855.3], [1.62583866E12, 64.30000000000001], [1.62583798E12, 70.0], [1.62583849E12, 25.200000000000003], [1.62583832E12, 53.0], [1.62583815E12, 32.0], [1.62583789E12, 144.0], [1.62583858E12, 72.0], [1.62583841E12, 75.0], [1.62583824E12, 74.0], [1.62583839E12, 118.35000000000002], [1.62583822E12, 72.0], [1.62583797E12, 62.899999999999864], [1.62583865E12, 57.849999999999966], [1.62583848E12, 25.0], [1.62583831E12, 60.39999999999998], [1.62583814E12, 60.25], [1.62583788E12, 144.0], [1.62583805E12, 75.0], [1.62583857E12, 73.09999999999991], [1.6258384E12, 72.0], [1.62583855E12, 46.75], [1.62583838E12, 58.0], [1.62583821E12, 70.0], [1.62583779E12, 10261.8], [1.62583796E12, 53.0], [1.62583864E12, 58.0], [1.62583847E12, 27.0], [1.6258383E12, 63.349999999999966], [1.62583813E12, 66.79999999999987], [1.62583787E12, 171.0], [1.62583804E12, 87.0], [1.62583856E12, 59.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62583867E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 13.0, "minX": 1.0, "maxY": 6085.0, "series": [{"data": [[2.0, 108.5], [3.0, 6085.0], [4.0, 20.0], [5.0, 32.0], [6.0, 20.0], [7.0, 45.0], [8.0, 40.5], [9.0, 17.0], [10.0, 18.0], [11.0, 40.0], [12.0, 20.0], [13.0, 20.0], [14.0, 43.0], [15.0, 46.0], [16.0, 20.0], [17.0, 19.0], [18.0, 16.0], [19.0, 42.0], [21.0, 16.0], [22.0, 43.0], [23.0, 24.0], [24.0, 18.0], [25.0, 87.0], [26.0, 23.0], [27.0, 40.5], [28.0, 48.0], [29.0, 19.0], [30.0, 40.5], [31.0, 23.0], [33.0, 41.0], [35.0, 39.0], [34.0, 26.5], [36.0, 40.0], [37.0, 32.5], [38.0, 42.0], [39.0, 41.5], [40.0, 17.0], [41.0, 29.0], [43.0, 15.0], [42.0, 26.0], [44.0, 42.0], [45.0, 13.0], [46.0, 29.0], [47.0, 42.0], [48.0, 39.0], [49.0, 27.0], [51.0, 38.5], [50.0, 24.0], [52.0, 43.5], [53.0, 42.0], [55.0, 40.0], [54.0, 27.0], [57.0, 43.0], [56.0, 25.0], [58.0, 27.0], [59.0, 28.0], [61.0, 41.0], [60.0, 40.0], [63.0, 38.0], [66.0, 40.0], [64.0, 27.0], [67.0, 39.0], [65.0, 40.0], [69.0, 30.0], [68.0, 27.0], [71.0, 22.0], [70.0, 45.0], [72.0, 45.5], [75.0, 31.0], [73.0, 22.0], [74.0, 43.0], [78.0, 44.0], [79.0, 43.0], [76.0, 43.0], [80.0, 29.0], [83.0, 44.0], [82.0, 23.0], [81.0, 46.0], [87.0, 23.0], [85.0, 22.0], [84.0, 21.0], [86.0, 46.0], [89.0, 26.0], [90.0, 44.0], [88.0, 44.0], [91.0, 23.0], [92.0, 19.5], [94.0, 23.0], [93.0, 43.0], [95.0, 43.0], [96.0, 43.0], [99.0, 44.0], [97.0, 45.0], [98.0, 40.0], [103.0, 29.0], [101.0, 23.0], [102.0, 23.0], [100.0, 40.0], [105.0, 43.0], [107.0, 42.0], [106.0, 39.5], [104.0, 46.0], [109.0, 42.0], [110.0, 24.0], [108.0, 46.0], [111.0, 46.0], [115.0, 26.0], [112.0, 25.5], [114.0, 48.0], [113.0, 20.0], [117.0, 55.0], [119.0, 41.0], [116.0, 48.5], [118.0, 25.0], [122.0, 48.0], [120.0, 33.5], [121.0, 32.0], [123.0, 47.0], [127.0, 53.0], [125.0, 47.5], [126.0, 50.0], [124.0, 23.0], [133.0, 45.5], [134.0, 61.0], [129.0, 48.0], [135.0, 50.0], [131.0, 52.0], [130.0, 41.0], [132.0, 23.0], [128.0, 47.0], [136.0, 53.0], [143.0, 54.0], [139.0, 49.0], [137.0, 28.0], [138.0, 53.0], [141.0, 54.0], [140.0, 48.0], [142.0, 49.0], [151.0, 53.0], [146.0, 62.0], [148.0, 53.0], [147.0, 54.0], [149.0, 52.0], [150.0, 51.0], [144.0, 50.0], [145.0, 56.0], [152.0, 53.0], [156.0, 100.0], [158.0, 101.0], [153.0, 54.0], [154.0, 61.0], [155.0, 55.0], [207.0, 1552.0], [1.0, 47.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 207.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 13.0, "minX": 1.0, "maxY": 6084.0, "series": [{"data": [[2.0, 108.5], [3.0, 6084.0], [4.0, 20.0], [5.0, 32.0], [6.0, 19.0], [7.0, 45.0], [8.0, 40.5], [9.0, 17.0], [10.0, 18.0], [11.0, 40.0], [12.0, 20.0], [13.0, 20.0], [14.0, 43.0], [15.0, 46.0], [16.0, 20.0], [17.0, 19.0], [18.0, 16.0], [19.0, 42.0], [21.0, 16.0], [22.0, 42.0], [23.0, 24.0], [24.0, 18.0], [25.0, 87.0], [26.0, 22.0], [27.0, 40.0], [28.0, 47.0], [29.0, 19.0], [30.0, 40.0], [31.0, 23.0], [33.0, 41.0], [35.0, 39.0], [34.0, 26.0], [36.0, 39.0], [37.0, 32.5], [38.0, 42.0], [39.0, 41.0], [40.0, 17.0], [41.0, 29.0], [43.0, 15.0], [42.0, 26.0], [44.0, 42.0], [45.0, 13.0], [46.0, 28.5], [47.0, 42.0], [48.0, 39.0], [49.0, 27.0], [51.0, 38.5], [50.0, 23.5], [52.0, 43.0], [53.0, 42.0], [55.0, 40.0], [54.0, 27.0], [57.0, 43.0], [56.0, 25.0], [58.0, 27.0], [59.0, 28.0], [61.0, 40.5], [60.0, 40.0], [63.0, 38.0], [66.0, 39.0], [64.0, 27.0], [67.0, 39.0], [65.0, 40.0], [69.0, 30.0], [68.0, 26.5], [71.0, 22.0], [70.0, 45.0], [72.0, 45.0], [75.0, 30.0], [73.0, 21.5], [74.0, 43.0], [78.0, 44.0], [79.0, 43.0], [76.0, 43.0], [80.0, 28.5], [83.0, 44.0], [82.0, 22.5], [81.0, 46.0], [87.0, 23.0], [85.0, 22.0], [84.0, 21.0], [86.0, 46.0], [89.0, 26.0], [90.0, 43.0], [88.0, 44.0], [91.0, 23.0], [92.0, 19.0], [94.0, 23.0], [93.0, 43.0], [95.0, 43.0], [96.0, 43.0], [99.0, 43.5], [97.0, 45.0], [98.0, 40.0], [103.0, 29.0], [101.0, 23.0], [102.0, 23.0], [100.0, 40.0], [105.0, 42.5], [107.0, 42.0], [106.0, 39.5], [104.0, 46.0], [109.0, 42.0], [110.0, 24.0], [108.0, 46.0], [111.0, 46.0], [115.0, 25.5], [112.0, 25.0], [114.0, 48.0], [113.0, 20.0], [117.0, 55.0], [119.0, 41.0], [116.0, 48.0], [118.0, 24.5], [122.0, 48.0], [120.0, 33.5], [121.0, 32.0], [123.0, 47.0], [127.0, 53.0], [125.0, 47.0], [126.0, 50.0], [124.0, 23.0], [133.0, 45.0], [134.0, 61.0], [129.0, 47.5], [135.0, 49.0], [131.0, 52.0], [130.0, 41.0], [132.0, 22.5], [128.0, 46.0], [136.0, 52.0], [143.0, 53.0], [139.0, 49.0], [137.0, 28.0], [138.0, 52.0], [141.0, 54.0], [140.0, 48.0], [142.0, 48.0], [151.0, 53.0], [146.0, 62.0], [148.0, 52.0], [147.0, 54.0], [149.0, 52.0], [150.0, 51.0], [144.0, 49.0], [145.0, 55.0], [152.0, 53.0], [156.0, 100.0], [158.0, 101.0], [153.0, 53.0], [154.0, 61.0], [155.0, 55.0], [207.0, 1552.0], [1.0, 47.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 207.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.62583777E12, "maxY": 150.0, "series": [{"data": [[1.62583854E12, 123.8], [1.62583778E12, 0.9], [1.62583837E12, 146.3], [1.62583795E12, 7.5], [1.6258382E12, 147.6], [1.62583863E12, 101.4], [1.62583846E12, 76.5], [1.62583786E12, 91.8], [1.62583829E12, 52.1], [1.62583803E12, 149.9], [1.62583812E12, 27.4], [1.62583777E12, 0.6], [1.62583794E12, 27.2], [1.62583853E12, 99.1], [1.62583836E12, 124.0], [1.62583819E12, 146.0], [1.62583785E12, 28.2], [1.62583862E12, 126.1], [1.62583802E12, 147.6], [1.62583845E12, 101.7], [1.62583828E12, 76.3], [1.62583811E12, 52.0], [1.62583793E12, 52.0], [1.62583852E12, 74.3], [1.62583835E12, 99.2], [1.62583818E12, 123.8], [1.62583784E12, 19.2], [1.62583801E12, 145.7], [1.62583861E12, 147.4], [1.62583844E12, 126.4], [1.62583827E12, 100.9], [1.6258381E12, 76.7], [1.62583792E12, 75.9], [1.62583851E12, 49.6], [1.62583834E12, 74.4], [1.62583817E12, 99.1], [1.62583783E12, 3.9], [1.625838E12, 123.4], [1.6258386E12, 149.3], [1.62583843E12, 147.5], [1.62583826E12, 125.9], [1.62583809E12, 101.7], [1.62583791E12, 101.3], [1.62583807E12, 147.4], [1.62583867E12, 4.4], [1.6258385E12, 24.6], [1.62583782E12, 9.9], [1.62583833E12, 49.7], [1.62583799E12, 98.7], [1.62583816E12, 74.2], [1.62583859E12, 149.9], [1.62583842E12, 149.7], [1.6258379E12, 125.7], [1.62583825E12, 146.9], [1.62583808E12, 126.3], [1.62583823E12, 149.9], [1.62583806E12, 149.5], [1.62583781E12, 7.3], [1.62583866E12, 27.2], [1.62583798E12, 74.4], [1.62583849E12, 7.5], [1.62583832E12, 24.7], [1.62583815E12, 49.7], [1.62583789E12, 147.2], [1.62583858E12, 149.8], [1.62583841E12, 149.8], [1.62583824E12, 150.0], [1.62583839E12, 63.7], [1.62583822E12, 149.8], [1.62583797E12, 49.5], [1.62583865E12, 51.9], [1.62583848E12, 27.5], [1.62583831E12, 6.6], [1.62583814E12, 24.6], [1.62583788E12, 149.2], [1.62583805E12, 149.7], [1.62583857E12, 149.7], [1.6258384E12, 149.1], [1.62583855E12, 146.2], [1.62583838E12, 146.1], [1.62583821E12, 150.0], [1.62583779E12, 2.4], [1.62583796E12, 24.7], [1.62583864E12, 77.0], [1.62583847E12, 52.1], [1.6258383E12, 26.8], [1.62583813E12, 6.7], [1.62583787E12, 143.1], [1.62583804E12, 146.4], [1.62583856E12, 146.9]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62583867E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.1, "minX": 1.62583778E12, "maxY": 150.3, "series": [{"data": [[1.62583854E12, 123.6], [1.62583778E12, 1.1], [1.62583837E12, 146.3], [1.62583795E12, 7.5], [1.6258382E12, 147.3], [1.62583863E12, 101.5], [1.62583846E12, 76.6], [1.62583786E12, 90.6], [1.62583829E12, 52.0], [1.62583803E12, 150.3], [1.62583812E12, 27.6], [1.62583794E12, 27.4], [1.62583853E12, 99.0], [1.62583836E12, 123.9], [1.62583819E12, 145.7], [1.62583785E12, 28.2], [1.62583862E12, 126.4], [1.62583802E12, 147.2], [1.62583845E12, 101.8], [1.62583828E12, 76.3], [1.62583811E12, 52.1], [1.62583793E12, 51.9], [1.62583852E12, 74.3], [1.62583835E12, 99.4], [1.62583818E12, 123.7], [1.62583784E12, 19.2], [1.62583801E12, 145.5], [1.62583861E12, 147.5], [1.62583844E12, 126.9], [1.62583827E12, 101.0], [1.6258381E12, 76.8], [1.62583792E12, 75.9], [1.62583851E12, 49.5], [1.62583834E12, 74.4], [1.62583817E12, 99.1], [1.62583783E12, 3.9], [1.625838E12, 123.6], [1.6258386E12, 149.3], [1.62583843E12, 147.4], [1.62583826E12, 126.5], [1.62583809E12, 102.1], [1.62583791E12, 101.5], [1.62583807E12, 147.4], [1.62583867E12, 4.5], [1.6258385E12, 24.5], [1.62583782E12, 9.9], [1.62583833E12, 49.4], [1.62583799E12, 98.4], [1.62583816E12, 74.1], [1.62583859E12, 150.0], [1.62583842E12, 149.8], [1.6258379E12, 126.6], [1.62583825E12, 146.9], [1.62583808E12, 126.2], [1.62583823E12, 149.8], [1.62583806E12, 149.6], [1.62583781E12, 7.3], [1.62583866E12, 27.3], [1.62583798E12, 74.3], [1.62583849E12, 7.5], [1.62583832E12, 24.6], [1.62583815E12, 49.8], [1.62583789E12, 147.6], [1.62583858E12, 149.6], [1.62583841E12, 149.8], [1.62583824E12, 150.1], [1.62583839E12, 63.2], [1.62583822E12, 149.7], [1.62583797E12, 49.3], [1.62583865E12, 52.0], [1.62583848E12, 27.6], [1.62583831E12, 6.6], [1.62583814E12, 24.4], [1.62583788E12, 148.8], [1.62583805E12, 149.6], [1.62583857E12, 149.7], [1.6258384E12, 149.6], [1.62583855E12, 146.4], [1.62583838E12, 145.6], [1.62583821E12, 150.2], [1.62583779E12, 2.8], [1.62583796E12, 24.5], [1.62583864E12, 77.1], [1.62583847E12, 52.1], [1.6258383E12, 27.0], [1.62583813E12, 6.7], [1.62583787E12, 143.1], [1.62583804E12, 146.5], [1.62583856E12, 146.4]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62583867E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.1, "minX": 1.62583778E12, "maxY": 150.3, "series": [{"data": [[1.62583854E12, 123.6], [1.62583778E12, 1.1], [1.62583837E12, 146.3], [1.62583795E12, 7.5], [1.6258382E12, 147.3], [1.62583863E12, 101.5], [1.62583846E12, 76.6], [1.62583786E12, 90.6], [1.62583829E12, 52.0], [1.62583803E12, 150.3], [1.62583812E12, 27.6], [1.62583794E12, 27.4], [1.62583853E12, 99.0], [1.62583836E12, 123.9], [1.62583819E12, 145.7], [1.62583785E12, 28.2], [1.62583862E12, 126.4], [1.62583802E12, 147.2], [1.62583845E12, 101.8], [1.62583828E12, 76.3], [1.62583811E12, 52.1], [1.62583793E12, 51.9], [1.62583852E12, 74.3], [1.62583835E12, 99.4], [1.62583818E12, 123.7], [1.62583784E12, 19.2], [1.62583801E12, 145.5], [1.62583861E12, 147.5], [1.62583844E12, 126.9], [1.62583827E12, 101.0], [1.6258381E12, 76.8], [1.62583792E12, 75.9], [1.62583851E12, 49.5], [1.62583834E12, 74.4], [1.62583817E12, 99.1], [1.62583783E12, 3.9], [1.625838E12, 123.6], [1.6258386E12, 149.3], [1.62583843E12, 147.4], [1.62583826E12, 126.5], [1.62583809E12, 102.1], [1.62583791E12, 101.5], [1.62583807E12, 147.4], [1.62583867E12, 4.5], [1.6258385E12, 24.5], [1.62583782E12, 9.9], [1.62583833E12, 49.4], [1.62583799E12, 98.4], [1.62583816E12, 74.1], [1.62583859E12, 150.0], [1.62583842E12, 149.8], [1.6258379E12, 126.6], [1.62583825E12, 146.9], [1.62583808E12, 126.2], [1.62583823E12, 149.8], [1.62583806E12, 149.6], [1.62583781E12, 7.3], [1.62583866E12, 27.3], [1.62583798E12, 74.3], [1.62583849E12, 7.5], [1.62583832E12, 24.6], [1.62583815E12, 49.8], [1.62583789E12, 147.6], [1.62583858E12, 149.6], [1.62583841E12, 149.8], [1.62583824E12, 150.1], [1.62583839E12, 63.2], [1.62583822E12, 149.7], [1.62583797E12, 49.3], [1.62583865E12, 52.0], [1.62583848E12, 27.6], [1.62583831E12, 6.6], [1.62583814E12, 24.4], [1.62583788E12, 148.8], [1.62583805E12, 149.6], [1.62583857E12, 149.7], [1.6258384E12, 149.6], [1.62583855E12, 146.4], [1.62583838E12, 145.6], [1.62583821E12, 150.2], [1.62583779E12, 2.8], [1.62583796E12, 24.5], [1.62583864E12, 77.1], [1.62583847E12, 52.1], [1.6258383E12, 27.0], [1.62583813E12, 6.7], [1.62583787E12, 143.1], [1.62583804E12, 146.5], [1.62583856E12, 146.4]], "isOverall": false, "label": "Sunstar Home-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62583867E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.1, "minX": 1.62583778E12, "maxY": 150.3, "series": [{"data": [[1.62583854E12, 123.6], [1.62583778E12, 1.1], [1.62583837E12, 146.3], [1.62583795E12, 7.5], [1.6258382E12, 147.3], [1.62583863E12, 101.5], [1.62583846E12, 76.6], [1.62583786E12, 90.6], [1.62583829E12, 52.0], [1.62583803E12, 150.3], [1.62583812E12, 27.6], [1.62583794E12, 27.4], [1.62583853E12, 99.0], [1.62583836E12, 123.9], [1.62583819E12, 145.7], [1.62583785E12, 28.2], [1.62583862E12, 126.4], [1.62583802E12, 147.2], [1.62583845E12, 101.8], [1.62583828E12, 76.3], [1.62583811E12, 52.1], [1.62583793E12, 51.9], [1.62583852E12, 74.3], [1.62583835E12, 99.4], [1.62583818E12, 123.7], [1.62583784E12, 19.2], [1.62583801E12, 145.5], [1.62583861E12, 147.5], [1.62583844E12, 126.9], [1.62583827E12, 101.0], [1.6258381E12, 76.8], [1.62583792E12, 75.9], [1.62583851E12, 49.5], [1.62583834E12, 74.4], [1.62583817E12, 99.1], [1.62583783E12, 3.9], [1.625838E12, 123.6], [1.6258386E12, 149.3], [1.62583843E12, 147.4], [1.62583826E12, 126.5], [1.62583809E12, 102.1], [1.62583791E12, 101.5], [1.62583807E12, 147.4], [1.62583867E12, 4.5], [1.6258385E12, 24.5], [1.62583782E12, 9.9], [1.62583833E12, 49.4], [1.62583799E12, 98.4], [1.62583816E12, 74.1], [1.62583859E12, 150.0], [1.62583842E12, 149.8], [1.6258379E12, 126.6], [1.62583825E12, 146.9], [1.62583808E12, 126.2], [1.62583823E12, 149.8], [1.62583806E12, 149.6], [1.62583781E12, 7.3], [1.62583866E12, 27.3], [1.62583798E12, 74.3], [1.62583849E12, 7.5], [1.62583832E12, 24.6], [1.62583815E12, 49.8], [1.62583789E12, 147.6], [1.62583858E12, 149.6], [1.62583841E12, 149.8], [1.62583824E12, 150.1], [1.62583839E12, 63.2], [1.62583822E12, 149.7], [1.62583797E12, 49.3], [1.62583865E12, 52.0], [1.62583848E12, 27.6], [1.62583831E12, 6.6], [1.62583814E12, 24.4], [1.62583788E12, 148.8], [1.62583805E12, 149.6], [1.62583857E12, 149.7], [1.6258384E12, 149.6], [1.62583855E12, 146.4], [1.62583838E12, 145.6], [1.62583821E12, 150.2], [1.62583779E12, 2.8], [1.62583796E12, 24.5], [1.62583864E12, 77.1], [1.62583847E12, 52.1], [1.6258383E12, 27.0], [1.62583813E12, 6.7], [1.62583787E12, 143.1], [1.62583804E12, 146.5], [1.62583856E12, 146.4]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62583867E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

