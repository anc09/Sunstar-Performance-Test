/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "maxY": 9319.0, "series": [{"data": [[0.0, 10.0], [0.1, 11.0], [0.2, 11.0], [0.3, 11.0], [0.4, 12.0], [0.5, 12.0], [0.6, 12.0], [0.7, 12.0], [0.8, 12.0], [0.9, 12.0], [1.0, 12.0], [1.1, 12.0], [1.2, 12.0], [1.3, 12.0], [1.4, 13.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 13.0], [1.9, 13.0], [2.0, 13.0], [2.1, 13.0], [2.2, 13.0], [2.3, 13.0], [2.4, 13.0], [2.5, 13.0], [2.6, 13.0], [2.7, 14.0], [2.8, 14.0], [2.9, 14.0], [3.0, 14.0], [3.1, 14.0], [3.2, 14.0], [3.3, 14.0], [3.4, 14.0], [3.5, 14.0], [3.6, 14.0], [3.7, 14.0], [3.8, 14.0], [3.9, 14.0], [4.0, 14.0], [4.1, 14.0], [4.2, 14.0], [4.3, 14.0], [4.4, 14.0], [4.5, 14.0], [4.6, 14.0], [4.7, 14.0], [4.8, 15.0], [4.9, 15.0], [5.0, 15.0], [5.1, 15.0], [5.2, 15.0], [5.3, 15.0], [5.4, 15.0], [5.5, 15.0], [5.6, 15.0], [5.7, 15.0], [5.8, 15.0], [5.9, 15.0], [6.0, 15.0], [6.1, 15.0], [6.2, 15.0], [6.3, 15.0], [6.4, 15.0], [6.5, 15.0], [6.6, 15.0], [6.7, 15.0], [6.8, 15.0], [6.9, 15.0], [7.0, 15.0], [7.1, 15.0], [7.2, 15.0], [7.3, 15.0], [7.4, 15.0], [7.5, 15.0], [7.6, 16.0], [7.7, 16.0], [7.8, 16.0], [7.9, 16.0], [8.0, 16.0], [8.1, 16.0], [8.2, 16.0], [8.3, 16.0], [8.4, 16.0], [8.5, 16.0], [8.6, 16.0], [8.7, 16.0], [8.8, 16.0], [8.9, 16.0], [9.0, 16.0], [9.1, 16.0], [9.2, 16.0], [9.3, 16.0], [9.4, 16.0], [9.5, 16.0], [9.6, 16.0], [9.7, 16.0], [9.8, 16.0], [9.9, 16.0], [10.0, 16.0], [10.1, 16.0], [10.2, 17.0], [10.3, 17.0], [10.4, 17.0], [10.5, 17.0], [10.6, 17.0], [10.7, 17.0], [10.8, 17.0], [10.9, 17.0], [11.0, 17.0], [11.1, 17.0], [11.2, 17.0], [11.3, 17.0], [11.4, 17.0], [11.5, 17.0], [11.6, 17.0], [11.7, 17.0], [11.8, 17.0], [11.9, 17.0], [12.0, 17.0], [12.1, 17.0], [12.2, 17.0], [12.3, 17.0], [12.4, 17.0], [12.5, 17.0], [12.6, 17.0], [12.7, 18.0], [12.8, 18.0], [12.9, 18.0], [13.0, 18.0], [13.1, 18.0], [13.2, 18.0], [13.3, 18.0], [13.4, 18.0], [13.5, 18.0], [13.6, 18.0], [13.7, 18.0], [13.8, 18.0], [13.9, 18.0], [14.0, 18.0], [14.1, 18.0], [14.2, 18.0], [14.3, 18.0], [14.4, 18.0], [14.5, 18.0], [14.6, 18.0], [14.7, 18.0], [14.8, 18.0], [14.9, 18.0], [15.0, 18.0], [15.1, 18.0], [15.2, 19.0], [15.3, 19.0], [15.4, 19.0], [15.5, 19.0], [15.6, 19.0], [15.7, 19.0], [15.8, 19.0], [15.9, 19.0], [16.0, 19.0], [16.1, 19.0], [16.2, 19.0], [16.3, 19.0], [16.4, 19.0], [16.5, 19.0], [16.6, 19.0], [16.7, 19.0], [16.8, 19.0], [16.9, 19.0], [17.0, 19.0], [17.1, 19.0], [17.2, 19.0], [17.3, 19.0], [17.4, 19.0], [17.5, 19.0], [17.6, 19.0], [17.7, 19.0], [17.8, 19.0], [17.9, 19.0], [18.0, 19.0], [18.1, 19.0], [18.2, 19.0], [18.3, 20.0], [18.4, 20.0], [18.5, 20.0], [18.6, 20.0], [18.7, 20.0], [18.8, 20.0], [18.9, 20.0], [19.0, 20.0], [19.1, 20.0], [19.2, 20.0], [19.3, 20.0], [19.4, 20.0], [19.5, 20.0], [19.6, 20.0], [19.7, 20.0], [19.8, 20.0], [19.9, 20.0], [20.0, 20.0], [20.1, 20.0], [20.2, 20.0], [20.3, 20.0], [20.4, 20.0], [20.5, 20.0], [20.6, 20.0], [20.7, 20.0], [20.8, 20.0], [20.9, 20.0], [21.0, 20.0], [21.1, 20.0], [21.2, 20.0], [21.3, 20.0], [21.4, 20.0], [21.5, 20.0], [21.6, 20.0], [21.7, 20.0], [21.8, 20.0], [21.9, 20.0], [22.0, 20.0], [22.1, 20.0], [22.2, 21.0], [22.3, 21.0], [22.4, 21.0], [22.5, 21.0], [22.6, 21.0], [22.7, 21.0], [22.8, 21.0], [22.9, 21.0], [23.0, 21.0], [23.1, 21.0], [23.2, 21.0], [23.3, 21.0], [23.4, 21.0], [23.5, 21.0], [23.6, 21.0], [23.7, 21.0], [23.8, 21.0], [23.9, 21.0], [24.0, 21.0], [24.1, 21.0], [24.2, 21.0], [24.3, 21.0], [24.4, 21.0], [24.5, 21.0], [24.6, 21.0], [24.7, 21.0], [24.8, 21.0], [24.9, 21.0], [25.0, 21.0], [25.1, 21.0], [25.2, 21.0], [25.3, 21.0], [25.4, 21.0], [25.5, 21.0], [25.6, 21.0], [25.7, 21.0], [25.8, 21.0], [25.9, 21.0], [26.0, 21.0], [26.1, 22.0], [26.2, 22.0], [26.3, 22.0], [26.4, 22.0], [26.5, 22.0], [26.6, 22.0], [26.7, 22.0], [26.8, 22.0], [26.9, 22.0], [27.0, 22.0], [27.1, 22.0], [27.2, 22.0], [27.3, 22.0], [27.4, 22.0], [27.5, 22.0], [27.6, 22.0], [27.7, 22.0], [27.8, 22.0], [27.9, 22.0], [28.0, 22.0], [28.1, 22.0], [28.2, 22.0], [28.3, 22.0], [28.4, 22.0], [28.5, 22.0], [28.6, 22.0], [28.7, 22.0], [28.8, 22.0], [28.9, 22.0], [29.0, 22.0], [29.1, 22.0], [29.2, 22.0], [29.3, 22.0], [29.4, 22.0], [29.5, 22.0], [29.6, 22.0], [29.7, 22.0], [29.8, 22.0], [29.9, 23.0], [30.0, 23.0], [30.1, 23.0], [30.2, 23.0], [30.3, 23.0], [30.4, 23.0], [30.5, 23.0], [30.6, 23.0], [30.7, 23.0], [30.8, 23.0], [30.9, 23.0], [31.0, 23.0], [31.1, 23.0], [31.2, 23.0], [31.3, 23.0], [31.4, 23.0], [31.5, 23.0], [31.6, 23.0], [31.7, 23.0], [31.8, 23.0], [31.9, 23.0], [32.0, 23.0], [32.1, 23.0], [32.2, 23.0], [32.3, 23.0], [32.4, 23.0], [32.5, 23.0], [32.6, 23.0], [32.7, 23.0], [32.8, 23.0], [32.9, 23.0], [33.0, 23.0], [33.1, 23.0], [33.2, 23.0], [33.3, 23.0], [33.4, 23.0], [33.5, 23.0], [33.6, 24.0], [33.7, 24.0], [33.8, 24.0], [33.9, 24.0], [34.0, 24.0], [34.1, 24.0], [34.2, 24.0], [34.3, 24.0], [34.4, 24.0], [34.5, 24.0], [34.6, 24.0], [34.7, 24.0], [34.8, 24.0], [34.9, 24.0], [35.0, 24.0], [35.1, 24.0], [35.2, 24.0], [35.3, 24.0], [35.4, 24.0], [35.5, 24.0], [35.6, 24.0], [35.7, 24.0], [35.8, 24.0], [35.9, 24.0], [36.0, 24.0], [36.1, 24.0], [36.2, 24.0], [36.3, 24.0], [36.4, 24.0], [36.5, 24.0], [36.6, 24.0], [36.7, 24.0], [36.8, 24.0], [36.9, 24.0], [37.0, 24.0], [37.1, 25.0], [37.2, 25.0], [37.3, 25.0], [37.4, 25.0], [37.5, 25.0], [37.6, 25.0], [37.7, 25.0], [37.8, 25.0], [37.9, 25.0], [38.0, 25.0], [38.1, 25.0], [38.2, 25.0], [38.3, 25.0], [38.4, 25.0], [38.5, 25.0], [38.6, 25.0], [38.7, 25.0], [38.8, 25.0], [38.9, 25.0], [39.0, 25.0], [39.1, 25.0], [39.2, 25.0], [39.3, 25.0], [39.4, 25.0], [39.5, 25.0], [39.6, 25.0], [39.7, 25.0], [39.8, 25.0], [39.9, 25.0], [40.0, 25.0], [40.1, 25.0], [40.2, 25.0], [40.3, 25.0], [40.4, 25.0], [40.5, 25.0], [40.6, 26.0], [40.7, 26.0], [40.8, 26.0], [40.9, 26.0], [41.0, 26.0], [41.1, 26.0], [41.2, 26.0], [41.3, 26.0], [41.4, 26.0], [41.5, 26.0], [41.6, 26.0], [41.7, 26.0], [41.8, 26.0], [41.9, 26.0], [42.0, 26.0], [42.1, 26.0], [42.2, 26.0], [42.3, 26.0], [42.4, 26.0], [42.5, 26.0], [42.6, 26.0], [42.7, 26.0], [42.8, 26.0], [42.9, 26.0], [43.0, 26.0], [43.1, 26.0], [43.2, 26.0], [43.3, 26.0], [43.4, 26.0], [43.5, 26.0], [43.6, 26.0], [43.7, 27.0], [43.8, 27.0], [43.9, 27.0], [44.0, 27.0], [44.1, 27.0], [44.2, 27.0], [44.3, 27.0], [44.4, 27.0], [44.5, 27.0], [44.6, 27.0], [44.7, 27.0], [44.8, 27.0], [44.9, 27.0], [45.0, 27.0], [45.1, 27.0], [45.2, 27.0], [45.3, 27.0], [45.4, 27.0], [45.5, 27.0], [45.6, 27.0], [45.7, 27.0], [45.8, 27.0], [45.9, 27.0], [46.0, 27.0], [46.1, 27.0], [46.2, 27.0], [46.3, 27.0], [46.4, 27.0], [46.5, 27.0], [46.6, 27.0], [46.7, 27.0], [46.8, 28.0], [46.9, 28.0], [47.0, 28.0], [47.1, 28.0], [47.2, 28.0], [47.3, 28.0], [47.4, 28.0], [47.5, 28.0], [47.6, 28.0], [47.7, 28.0], [47.8, 28.0], [47.9, 28.0], [48.0, 28.0], [48.1, 28.0], [48.2, 28.0], [48.3, 28.0], [48.4, 28.0], [48.5, 28.0], [48.6, 28.0], [48.7, 28.0], [48.8, 28.0], [48.9, 28.0], [49.0, 28.0], [49.1, 28.0], [49.2, 28.0], [49.3, 28.0], [49.4, 28.0], [49.5, 28.0], [49.6, 29.0], [49.7, 29.0], [49.8, 29.0], [49.9, 29.0], [50.0, 29.0], [50.1, 29.0], [50.2, 29.0], [50.3, 29.0], [50.4, 29.0], [50.5, 29.0], [50.6, 29.0], [50.7, 29.0], [50.8, 29.0], [50.9, 29.0], [51.0, 29.0], [51.1, 29.0], [51.2, 29.0], [51.3, 29.0], [51.4, 29.0], [51.5, 29.0], [51.6, 29.0], [51.7, 29.0], [51.8, 29.0], [51.9, 29.0], [52.0, 29.0], [52.1, 29.0], [52.2, 30.0], [52.3, 30.0], [52.4, 30.0], [52.5, 30.0], [52.6, 30.0], [52.7, 30.0], [52.8, 30.0], [52.9, 30.0], [53.0, 30.0], [53.1, 30.0], [53.2, 30.0], [53.3, 30.0], [53.4, 30.0], [53.5, 30.0], [53.6, 30.0], [53.7, 30.0], [53.8, 30.0], [53.9, 30.0], [54.0, 30.0], [54.1, 30.0], [54.2, 30.0], [54.3, 30.0], [54.4, 31.0], [54.5, 31.0], [54.6, 31.0], [54.7, 31.0], [54.8, 31.0], [54.9, 31.0], [55.0, 31.0], [55.1, 31.0], [55.2, 31.0], [55.3, 31.0], [55.4, 31.0], [55.5, 31.0], [55.6, 31.0], [55.7, 31.0], [55.8, 31.0], [55.9, 31.0], [56.0, 31.0], [56.1, 31.0], [56.2, 31.0], [56.3, 31.0], [56.4, 31.0], [56.5, 32.0], [56.6, 32.0], [56.7, 32.0], [56.8, 32.0], [56.9, 32.0], [57.0, 32.0], [57.1, 32.0], [57.2, 32.0], [57.3, 32.0], [57.4, 32.0], [57.5, 32.0], [57.6, 32.0], [57.7, 32.0], [57.8, 32.0], [57.9, 32.0], [58.0, 32.0], [58.1, 32.0], [58.2, 32.0], [58.3, 32.0], [58.4, 32.0], [58.5, 32.0], [58.6, 33.0], [58.7, 33.0], [58.8, 33.0], [58.9, 33.0], [59.0, 33.0], [59.1, 33.0], [59.2, 33.0], [59.3, 33.0], [59.4, 33.0], [59.5, 33.0], [59.6, 33.0], [59.7, 33.0], [59.8, 33.0], [59.9, 33.0], [60.0, 33.0], [60.1, 33.0], [60.2, 33.0], [60.3, 33.0], [60.4, 33.0], [60.5, 34.0], [60.6, 34.0], [60.7, 34.0], [60.8, 34.0], [60.9, 34.0], [61.0, 34.0], [61.1, 34.0], [61.2, 34.0], [61.3, 34.0], [61.4, 34.0], [61.5, 34.0], [61.6, 34.0], [61.7, 34.0], [61.8, 34.0], [61.9, 34.0], [62.0, 34.0], [62.1, 34.0], [62.2, 35.0], [62.3, 35.0], [62.4, 35.0], [62.5, 35.0], [62.6, 35.0], [62.7, 35.0], [62.8, 35.0], [62.9, 35.0], [63.0, 35.0], [63.1, 35.0], [63.2, 35.0], [63.3, 35.0], [63.4, 35.0], [63.5, 35.0], [63.6, 35.0], [63.7, 35.0], [63.8, 36.0], [63.9, 36.0], [64.0, 36.0], [64.1, 36.0], [64.2, 36.0], [64.3, 36.0], [64.4, 36.0], [64.5, 36.0], [64.6, 36.0], [64.7, 36.0], [64.8, 36.0], [64.9, 36.0], [65.0, 36.0], [65.1, 36.0], [65.2, 36.0], [65.3, 36.0], [65.4, 37.0], [65.5, 37.0], [65.6, 37.0], [65.7, 37.0], [65.8, 37.0], [65.9, 37.0], [66.0, 37.0], [66.1, 37.0], [66.2, 37.0], [66.3, 37.0], [66.4, 37.0], [66.5, 37.0], [66.6, 37.0], [66.7, 37.0], [66.8, 38.0], [66.9, 38.0], [67.0, 38.0], [67.1, 38.0], [67.2, 38.0], [67.3, 38.0], [67.4, 38.0], [67.5, 38.0], [67.6, 38.0], [67.7, 38.0], [67.8, 38.0], [67.9, 38.0], [68.0, 39.0], [68.1, 39.0], [68.2, 39.0], [68.3, 39.0], [68.4, 39.0], [68.5, 39.0], [68.6, 39.0], [68.7, 39.0], [68.8, 39.0], [68.9, 39.0], [69.0, 39.0], [69.1, 39.0], [69.2, 40.0], [69.3, 40.0], [69.4, 40.0], [69.5, 40.0], [69.6, 40.0], [69.7, 40.0], [69.8, 40.0], [69.9, 40.0], [70.0, 40.0], [70.1, 40.0], [70.2, 40.0], [70.3, 41.0], [70.4, 41.0], [70.5, 41.0], [70.6, 41.0], [70.7, 41.0], [70.8, 41.0], [70.9, 41.0], [71.0, 41.0], [71.1, 41.0], [71.2, 41.0], [71.3, 41.0], [71.4, 42.0], [71.5, 42.0], [71.6, 42.0], [71.7, 42.0], [71.8, 42.0], [71.9, 42.0], [72.0, 42.0], [72.1, 42.0], [72.2, 42.0], [72.3, 43.0], [72.4, 43.0], [72.5, 43.0], [72.6, 43.0], [72.7, 43.0], [72.8, 43.0], [72.9, 43.0], [73.0, 43.0], [73.1, 43.0], [73.2, 43.0], [73.3, 44.0], [73.4, 44.0], [73.5, 44.0], [73.6, 44.0], [73.7, 44.0], [73.8, 44.0], [73.9, 44.0], [74.0, 44.0], [74.1, 44.0], [74.2, 45.0], [74.3, 45.0], [74.4, 45.0], [74.5, 45.0], [74.6, 45.0], [74.7, 45.0], [74.8, 45.0], [74.9, 45.0], [75.0, 45.0], [75.1, 45.0], [75.2, 46.0], [75.3, 46.0], [75.4, 46.0], [75.5, 46.0], [75.6, 46.0], [75.7, 46.0], [75.8, 46.0], [75.9, 46.0], [76.0, 47.0], [76.1, 47.0], [76.2, 47.0], [76.3, 47.0], [76.4, 47.0], [76.5, 47.0], [76.6, 47.0], [76.7, 47.0], [76.8, 48.0], [76.9, 48.0], [77.0, 48.0], [77.1, 48.0], [77.2, 48.0], [77.3, 48.0], [77.4, 48.0], [77.5, 48.0], [77.6, 49.0], [77.7, 49.0], [77.8, 49.0], [77.9, 49.0], [78.0, 49.0], [78.1, 49.0], [78.2, 49.0], [78.3, 50.0], [78.4, 50.0], [78.5, 50.0], [78.6, 50.0], [78.7, 50.0], [78.8, 50.0], [78.9, 50.0], [79.0, 51.0], [79.1, 51.0], [79.2, 51.0], [79.3, 51.0], [79.4, 51.0], [79.5, 51.0], [79.6, 51.0], [79.7, 51.0], [79.8, 52.0], [79.9, 52.0], [80.0, 52.0], [80.1, 52.0], [80.2, 52.0], [80.3, 52.0], [80.4, 53.0], [80.5, 53.0], [80.6, 53.0], [80.7, 53.0], [80.8, 53.0], [80.9, 53.0], [81.0, 54.0], [81.1, 54.0], [81.2, 54.0], [81.3, 54.0], [81.4, 54.0], [81.5, 55.0], [81.6, 55.0], [81.7, 55.0], [81.8, 55.0], [81.9, 55.0], [82.0, 55.0], [82.1, 56.0], [82.2, 56.0], [82.3, 56.0], [82.4, 56.0], [82.5, 57.0], [82.6, 57.0], [82.7, 57.0], [82.8, 57.0], [82.9, 57.0], [83.0, 58.0], [83.1, 58.0], [83.2, 58.0], [83.3, 58.0], [83.4, 59.0], [83.5, 59.0], [83.6, 59.0], [83.7, 59.0], [83.8, 60.0], [83.9, 60.0], [84.0, 60.0], [84.1, 60.0], [84.2, 61.0], [84.3, 61.0], [84.4, 61.0], [84.5, 61.0], [84.6, 62.0], [84.7, 62.0], [84.8, 62.0], [84.9, 63.0], [85.0, 63.0], [85.1, 63.0], [85.2, 64.0], [85.3, 64.0], [85.4, 64.0], [85.5, 65.0], [85.6, 65.0], [85.7, 65.0], [85.8, 66.0], [85.9, 66.0], [86.0, 66.0], [86.1, 67.0], [86.2, 67.0], [86.3, 67.0], [86.4, 68.0], [86.5, 68.0], [86.6, 68.0], [86.7, 69.0], [86.8, 69.0], [86.9, 70.0], [87.0, 70.0], [87.1, 71.0], [87.2, 71.0], [87.3, 71.0], [87.4, 72.0], [87.5, 72.0], [87.6, 73.0], [87.7, 73.0], [87.8, 74.0], [87.9, 74.0], [88.0, 75.0], [88.1, 75.0], [88.2, 76.0], [88.3, 77.0], [88.4, 77.0], [88.5, 78.0], [88.6, 79.0], [88.7, 79.0], [88.8, 80.0], [88.9, 81.0], [89.0, 81.0], [89.1, 82.0], [89.2, 83.0], [89.3, 83.0], [89.4, 84.0], [89.5, 85.0], [89.6, 86.0], [89.7, 87.0], [89.8, 87.0], [89.9, 88.0], [90.0, 89.0], [90.1, 90.0], [90.2, 91.0], [90.3, 92.0], [90.4, 93.0], [90.5, 94.0], [90.6, 95.0], [90.7, 97.0], [90.8, 98.0], [90.9, 99.0], [91.0, 100.0], [91.1, 101.0], [91.2, 103.0], [91.3, 104.0], [91.4, 105.0], [91.5, 107.0], [91.6, 108.0], [91.7, 109.0], [91.8, 110.0], [91.9, 112.0], [92.0, 113.0], [92.1, 115.0], [92.2, 116.0], [92.3, 118.0], [92.4, 119.0], [92.5, 121.0], [92.6, 122.0], [92.7, 124.0], [92.8, 125.0], [92.9, 127.0], [93.0, 129.0], [93.1, 132.0], [93.2, 133.0], [93.3, 135.0], [93.4, 137.0], [93.5, 140.0], [93.6, 141.0], [93.7, 144.0], [93.8, 146.0], [93.9, 148.0], [94.0, 150.0], [94.1, 152.0], [94.2, 155.0], [94.3, 157.0], [94.4, 159.0], [94.5, 161.0], [94.6, 163.0], [94.7, 164.0], [94.8, 167.0], [94.9, 168.0], [95.0, 171.0], [95.1, 172.0], [95.2, 174.0], [95.3, 176.0], [95.4, 178.0], [95.5, 179.0], [95.6, 181.0], [95.7, 183.0], [95.8, 185.0], [95.9, 187.0], [96.0, 188.0], [96.1, 190.0], [96.2, 192.0], [96.3, 193.0], [96.4, 195.0], [96.5, 197.0], [96.6, 199.0], [96.7, 200.0], [96.8, 203.0], [96.9, 204.0], [97.0, 206.0], [97.1, 208.0], [97.2, 210.0], [97.3, 212.0], [97.4, 214.0], [97.5, 216.0], [97.6, 219.0], [97.7, 221.0], [97.8, 225.0], [97.9, 228.0], [98.0, 233.0], [98.1, 237.0], [98.2, 242.0], [98.3, 248.0], [98.4, 258.0], [98.5, 270.0], [98.6, 294.0], [98.7, 327.0], [98.8, 428.0], [98.9, 520.0], [99.0, 577.0], [99.1, 623.0], [99.2, 680.0], [99.3, 757.0], [99.4, 831.0], [99.5, 910.0], [99.6, 992.0], [99.7, 1060.0], [99.8, 1128.0], [99.9, 1227.0], [100.0, 9319.0]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 75731.0, "series": [{"data": [[0.0, 75731.0], [8900.0, 1.0], [9100.0, 1.0], [600.0, 153.0], [9300.0, 1.0], [700.0, 104.0], [800.0, 106.0], [900.0, 102.0], [1000.0, 128.0], [1100.0, 95.0], [1200.0, 74.0], [1300.0, 16.0], [100.0, 4742.0], [200.0, 1655.0], [3900.0, 1.0], [300.0, 117.0], [4900.0, 1.0], [5300.0, 3.0], [5200.0, 2.0], [5800.0, 2.0], [6000.0, 1.0], [5900.0, 1.0], [400.0, 86.0], [8100.0, 1.0], [500.0, 144.0]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 15.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 82333.0, "series": [{"data": [[0.0, 82333.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 920.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 15.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.62920246E12, "maxY": 1028.8, "series": [{"data": [[1.62920308E12, 11.281746031746033], [1.62920325E12, 6.83030303030303], [1.62920291E12, 6.08689839572193], [1.62920274E12, 7.225476839237049], [1.62920257E12, 27.815598149372132], [1.62920316E12, 2.0], [1.62920333E12, 5.0], [1.62920282E12, 2.0], [1.62920299E12, 2.0], [1.62920265E12, 2.0], [1.62920248E12, 996.608695652174], [1.62920326E12, 6.695130086724476], [1.62920292E12, 8.285140562248998], [1.62920309E12, 6.713520749665335], [1.62920275E12, 7.889333333333324], [1.62920258E12, 15.264849755415781], [1.62920334E12, 2.3918918918918917], [1.629203E12, 2.0], [1.62920317E12, 2.0], [1.62920283E12, 2.9658385093167707], [1.62920266E12, 2.9929824561403517], [1.62920249E12, 980.3333333333334], [1.6292031E12, 6.223239436619716], [1.62920327E12, 8.087306917394212], [1.62920293E12, 9.0], [1.62920276E12, 7.577840112201977], [1.62920259E12, 6.742018981880931], [1.62920336E12, 2.0], [1.62920318E12, 2.0], [1.62920335E12, 2.0], [1.62920284E12, 4.655477031802121], [1.62920301E12, 2.0], [1.62920267E12, 4.3570552147239265], [1.6292025E12, 893.8647058823536], [1.62920294E12, 5.328661527680446], [1.62920311E12, 8.0], [1.62920277E12, 5.0], [1.6292026E12, 4.693722943722944], [1.6292032E12, 3.0], [1.62920302E12, 3.168421052631578], [1.62920319E12, 2.1261538461538474], [1.62920285E12, 6.5306372549019605], [1.62920268E12, 6.52030217186024], [1.62920251E12, 703.7177033492818], [1.62920328E12, 9.0], [1.62920278E12, 3.9903743315508025], [1.62920295E12, 5.0], [1.62920261E12, 4.227338129496402], [1.62920304E12, 4.622889305816139], [1.62920321E12, 3.0], [1.62920286E12, 6.527255639097744], [1.62920303E12, 3.1990171990171983], [1.62920269E12, 8.627889060092459], [1.62920252E12, 488.4022556390981], [1.62920312E12, 8.780812324929963], [1.62920329E12, 9.0], [1.62920279E12, 3.0], [1.62920262E12, 2.0], [1.62920322E12, 3.634560906515584], [1.62920288E12, 8.792732166890973], [1.62920305E12, 5.416475972540037], [1.62920287E12, 7.006097560975611], [1.6292027E12, 10.185338865836789], [1.62920253E12, 97.65699208443279], [1.6292033E12, 8.350140056022404], [1.62920296E12, 4.4803400637619575], [1.62920313E12, 5.6302521008403295], [1.62920263E12, 2.0], [1.62920246E12, 1028.8], [1.62920306E12, 6.794630872483232], [1.62920323E12, 5.5449695121951175], [1.62920289E12, 7.915106951871656], [1.62920272E12, 10.339430894308917], [1.62920271E12, 9.874409182984474], [1.62920254E12, 26.22885572139304], [1.62920314E12, 4.0], [1.62920331E12, 5.0], [1.6292028E12, 2.899328859060403], [1.62920297E12, 2.0], [1.62920247E12, 1015.1999999999999], [1.62920324E12, 6.404486743711761], [1.6292029E12, 6.903807615230466], [1.62920307E12, 10.032310177705982], [1.62920273E12, 7.605263157894737], [1.62920256E12, 32.87151597552682], [1.62920255E12, 30.959973315543696], [1.62920332E12, 5.0], [1.62920298E12, 2.0], [1.62920315E12, 3.297258297258297], [1.62920281E12, 2.0], [1.62920264E12, 2.0]], "isOverall": false, "label": "bzm - Concurrency Thread Group-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62920336E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 22.167965511523807, "minX": 1.0, "maxY": 8182.0, "series": [{"data": [[2.0, 22.167965511523807], [3.0, 22.565691927512436], [4.0, 27.790774015203933], [5.0, 27.614553800459014], [6.0, 33.16139791183309], [7.0, 36.0633292451778], [8.0, 39.44200130438835], [9.0, 36.41237373737379], [10.0, 46.45359692476659], [11.0, 66.40069686411154], [12.0, 58.52281368821296], [13.0, 39.9178321678322], [14.0, 112.35433070866141], [15.0, 159.01672240802668], [16.0, 46.61904761904761], [17.0, 135.13138686131387], [18.0, 111.39597315436237], [19.0, 86.28129713423819], [20.0, 159.536231884058], [21.0, 130.85714285714283], [22.0, 169.49612403100778], [23.0, 292.1818181818182], [24.0, 189.85714285714286], [25.0, 34.0], [26.0, 134.17791411042938], [27.0, 176.01298701298703], [28.0, 199.44585987261144], [29.0, 183.08280254777068], [30.0, 151.38081395348817], [31.0, 168.62256809338496], [33.0, 248.74999999999997], [32.0, 204.72635135135138], [35.0, 344.57142857142856], [34.0, 197.39349775784737], [37.0, 133.99808429118778], [36.0, 220.85119047619048], [39.0, 1235.0], [38.0, 608.0], [41.0, 1269.0], [40.0, 1284.0], [43.0, 1282.0], [42.0, 1298.0], [45.0, 1283.0], [44.0, 1249.0], [47.0, 587.0], [46.0, 1258.5], [51.0, 581.0], [50.0, 1236.0], [53.0, 1247.0], [52.0, 1269.0], [55.0, 591.0], [54.0, 1192.0], [57.0, 1252.0], [56.0, 1258.5], [59.0, 1255.0], [58.0, 577.0], [61.0, 583.0], [60.0, 587.0], [63.0, 1245.0], [62.0, 582.0], [67.0, 574.0], [66.0, 581.0], [65.0, 1260.0], [64.0, 573.0], [71.0, 1142.0], [70.0, 1150.0], [69.0, 1091.0], [68.0, 572.0], [74.0, 1165.0], [73.0, 1186.0], [72.0, 1199.0], [79.0, 1117.0], [78.0, 1146.0], [77.0, 1125.0], [76.0, 959.5], [83.0, 1164.0], [82.0, 1087.0], [81.0, 1161.0], [80.0, 462.0], [87.0, 491.0], [85.0, 1144.0], [84.0, 1100.0], [91.0, 1126.0], [90.0, 1126.0], [89.0, 1108.5], [88.0, 1041.0], [95.0, 1052.0], [94.0, 1041.0], [93.0, 1076.0], [92.0, 1062.0], [99.0, 1056.0], [98.0, 1040.0], [97.0, 1035.0], [96.0, 1053.0], [103.0, 977.0], [102.0, 861.0], [100.0, 1062.0], [106.0, 1016.0], [105.0, 1084.0], [104.0, 1040.0], [111.0, 649.0], [110.0, 990.0], [109.0, 1045.5], [108.0, 381.0], [115.0, 988.0], [114.0, 966.0], [113.0, 838.0], [119.0, 957.5], [117.0, 596.0], [116.0, 595.0], [123.0, 313.0], [122.0, 916.0], [121.0, 972.0], [120.0, 931.0], [127.0, 906.0], [126.0, 880.0], [125.0, 923.0], [124.0, 930.0], [135.0, 936.0], [134.0, 941.0], [133.0, 883.0], [132.0, 903.0], [131.0, 883.0], [130.0, 907.0], [129.0, 931.0], [128.0, 963.0], [143.0, 311.0], [142.0, 571.0], [141.0, 624.0], [140.0, 837.0], [139.0, 831.0], [138.0, 819.0], [137.0, 860.0], [136.0, 866.0], [151.0, 851.0], [150.0, 286.5], [148.0, 270.0], [147.0, 295.0], [146.0, 283.0], [145.0, 301.0], [144.0, 306.0], [156.0, 799.0], [155.0, 802.0], [153.0, 270.0], [152.0, 284.0], [167.0, 834.0], [166.0, 804.0], [165.0, 819.0], [164.0, 462.0], [175.0, 668.0], [174.0, 719.0], [173.0, 702.0], [172.0, 744.0], [171.0, 734.5], [170.0, 413.1666666666667], [169.0, 233.0], [168.0, 805.0], [183.0, 683.0], [182.0, 687.0], [181.0, 682.0], [180.0, 695.0], [179.0, 704.0], [178.0, 758.0], [176.0, 691.0], [191.0, 659.5], [190.0, 611.0], [189.0, 674.0], [188.0, 642.0], [187.0, 712.0], [186.0, 686.5], [185.0, 679.0], [199.0, 625.5], [197.0, 658.0], [196.0, 696.0], [195.0, 653.0], [194.0, 665.5], [192.0, 616.0], [207.0, 578.0], [206.0, 600.0], [205.0, 649.0], [204.0, 661.0], [203.0, 658.0], [202.0, 680.0], [201.0, 649.0], [200.0, 611.0], [215.0, 580.0], [214.0, 623.0], [213.0, 619.0], [212.0, 593.0], [211.0, 625.0], [210.0, 657.0], [209.0, 565.0], [208.0, 583.0], [223.0, 541.0], [222.0, 508.0], [221.0, 492.0], [220.0, 514.0], [219.0, 554.0], [218.0, 518.0], [217.0, 531.0], [216.0, 513.0], [230.0, 461.0], [229.0, 504.0], [228.0, 538.0], [227.0, 473.0], [226.0, 539.0], [225.0, 551.0], [224.0, 469.0], [239.0, 493.0], [238.0, 441.0], [237.0, 446.0], [236.0, 439.0], [235.0, 430.0], [234.0, 523.0], [233.0, 520.0], [232.0, 478.5], [246.0, 493.0], [245.0, 568.0], [244.0, 456.0], [243.0, 420.0], [242.0, 480.0], [241.0, 457.0], [240.0, 428.0], [255.0, 546.0], [252.0, 602.5], [251.0, 531.5], [249.0, 534.0], [269.0, 522.8], [270.0, 518.0], [268.0, 589.0], [266.0, 503.5], [264.0, 519.5], [262.0, 542.5], [261.0, 656.0], [260.0, 532.5], [259.0, 487.0], [286.0, 554.0], [287.0, 682.0], [285.0, 687.0], [284.0, 467.0], [283.0, 454.0], [282.0, 471.0], [281.0, 490.0], [280.0, 464.6666666666667], [279.0, 431.0], [274.0, 480.0], [273.0, 440.0], [278.0, 432.0], [277.0, 510.0], [300.0, 554.0], [303.0, 405.0], [302.0, 364.5], [301.0, 440.0], [295.0, 656.0], [289.0, 410.0], [288.0, 534.0], [294.0, 520.0], [292.0, 552.0], [291.0, 689.0], [290.0, 430.0], [318.0, 654.0], [319.0, 640.0], [317.0, 617.3333333333334], [307.0, 294.0], [306.0, 436.0], [305.0, 313.0], [304.0, 519.0], [315.0, 632.0], [313.0, 616.0], [312.0, 324.0], [311.0, 356.0], [310.0, 455.0], [309.0, 436.0], [308.0, 298.0], [323.0, 633.0], [335.0, 576.5], [334.0, 592.5], [331.0, 637.0], [329.0, 622.0], [326.0, 591.0], [325.0, 639.0], [322.0, 651.0], [321.0, 611.0], [320.0, 632.0], [350.0, 563.0], [351.0, 556.0], [349.0, 540.0], [348.0, 574.0], [347.0, 554.0], [345.0, 571.0], [344.0, 585.5], [343.0, 594.0], [338.0, 578.3333333333334], [342.0, 567.0], [340.0, 604.5], [366.0, 429.0], [367.0, 409.0], [365.0, 412.0], [364.0, 471.5], [362.0, 551.0], [361.0, 513.0], [360.0, 551.0], [359.0, 568.0], [352.0, 532.0], [354.0, 519.0], [353.0, 540.0], [358.0, 549.0], [357.0, 569.0], [356.0, 571.0], [381.0, 955.0], [383.0, 716.0], [380.0, 688.0], [371.0, 381.0], [370.0, 401.0], [369.0, 422.0], [368.0, 412.0], [379.0, 607.0], [378.0, 652.0], [377.0, 727.0], [376.0, 729.0], [375.0, 694.0], [374.0, 356.0], [373.0, 416.0], [372.0, 383.0], [398.0, 760.5], [397.0, 796.0], [395.0, 1027.0], [393.0, 766.0], [394.0, 639.0], [392.0, 929.0], [391.0, 640.0], [388.0, 871.0], [386.0, 803.0], [384.0, 839.5], [414.0, 791.0], [413.0, 720.5], [411.0, 1014.0], [409.0, 734.0], [406.0, 1027.5], [405.0, 697.0], [403.0, 796.3333333333334], [400.0, 880.6666666666666], [428.0, 866.5], [430.0, 901.0], [431.0, 921.0], [429.0, 746.0], [426.0, 854.0], [425.0, 1030.5], [423.0, 743.0], [421.0, 663.5], [419.0, 813.0], [418.0, 757.0], [417.0, 650.3333333333334], [446.0, 759.0], [447.0, 842.0], [445.0, 857.0], [444.0, 905.6666666666666], [443.0, 777.0], [441.0, 999.5], [440.0, 1132.0], [439.0, 867.0], [435.0, 498.0], [433.0, 807.0], [438.0, 710.0], [437.0, 794.0], [462.0, 1102.0], [463.0, 1040.0], [461.0, 780.0], [460.0, 1114.0], [459.0, 800.0], [458.0, 1081.0], [457.0, 1086.0], [456.0, 1067.0], [455.0, 725.0], [449.0, 840.0], [448.0, 755.0], [451.0, 833.0], [450.0, 1017.0], [454.0, 813.0], [453.0, 1176.0], [452.0, 838.0], [477.0, 546.0], [479.0, 740.0], [476.0, 682.0], [467.0, 1000.0], [466.0, 1001.0], [465.0, 775.0], [464.0, 1001.0], [475.0, 1020.0], [474.0, 1009.0], [473.0, 641.0], [472.0, 1007.5], [470.0, 1103.0], [469.0, 1112.0], [468.0, 989.0], [494.0, 732.0], [495.0, 757.0], [493.0, 779.0], [492.0, 883.0], [491.0, 897.0], [490.0, 784.0], [488.0, 884.0], [487.0, 587.0], [481.0, 820.0], [480.0, 562.0], [483.0, 525.0], [482.0, 652.0], [486.0, 909.0], [485.0, 788.0], [484.0, 783.0], [508.0, 830.0], [510.0, 1183.0], [511.0, 827.0], [509.0, 1140.0], [507.0, 1061.0], [504.0, 1240.6666666666667], [501.0, 983.3333333333334], [496.0, 781.0], [498.0, 897.1333333333332], [497.0, 795.0], [540.0, 1082.0], [541.0, 1080.0], [529.0, 928.0], [539.0, 1101.0], [538.0, 758.0], [537.0, 1165.0], [536.0, 1115.0], [527.0, 969.0], [513.0, 939.0], [518.0, 1121.0], [517.0, 1065.25], [526.0, 926.5], [525.0, 796.0], [523.0, 1043.0], [522.0, 1171.0], [521.0, 1048.0], [535.0, 752.0], [534.0, 784.0], [533.0, 1097.0], [531.0, 915.6666666666666], [569.0, 946.0], [574.0, 833.0], [575.0, 763.0], [561.0, 1028.0], [560.0, 1095.0], [563.0, 1086.0], [562.0, 927.3333333333334], [573.0, 842.0], [572.0, 863.0], [571.0, 875.0], [568.0, 1000.3333333333334], [551.0, 1079.5], [549.0, 1060.0], [548.0, 1055.5], [547.0, 1082.0], [546.0, 1058.0], [559.0, 1108.0], [558.0, 1083.0], [557.0, 1102.0], [556.0, 1065.0], [555.0, 1060.0], [554.0, 1101.5], [552.0, 725.0], [565.0, 1050.0], [564.0, 1081.0], [602.0, 1257.0], [596.0, 182.0], [604.0, 1208.0], [593.0, 200.0], [601.0, 1331.0], [583.0, 229.0], [582.0, 243.0], [581.0, 243.0], [580.0, 255.0], [579.0, 359.0], [578.0, 661.0], [577.0, 657.0], [576.0, 671.0], [591.0, 210.0], [590.0, 213.0], [589.0, 212.0], [588.0, 230.0], [587.0, 227.0], [586.0, 215.0], [585.0, 235.0], [584.0, 237.0], [599.0, 1316.0], [598.0, 1316.0], [597.0, 1122.0], [595.0, 188.0], [594.0, 199.5], [635.0, 1204.0], [639.0, 1105.5], [634.0, 1259.0], [615.0, 1112.0], [613.0, 1003.0], [612.0, 1344.0], [611.0, 1331.0], [610.0, 1141.5], [608.0, 1027.0], [631.0, 1143.0], [626.0, 1229.0], [625.0, 1253.0], [624.0, 978.0], [622.0, 1213.0], [619.0, 1307.0], [617.0, 1045.0], [616.0, 1223.6], [667.0, 1045.5], [657.0, 972.0], [670.0, 1166.0], [671.0, 1199.5], [656.0, 980.0], [668.0, 1063.5], [665.0, 1168.0], [647.0, 1091.0], [646.0, 1285.5], [645.0, 1169.0], [643.0, 1170.0], [642.0, 1167.75], [640.0, 1157.0], [655.0, 1183.0], [653.0, 1181.0], [652.0, 1139.5], [651.0, 1173.5], [648.0, 1179.5], [663.0, 1248.0], [662.0, 1145.0], [658.0, 1208.0], [697.0, 699.0], [702.0, 1251.0], [703.0, 555.0], [688.0, 993.0], [690.0, 965.0], [689.0, 1057.0], [693.0, 982.0], [692.0, 999.0], [701.0, 590.5], [699.0, 226.0], [698.0, 411.0], [696.0, 744.0], [679.0, 1160.75], [678.0, 1196.0], [677.0, 1242.0], [676.0, 1064.5], [675.0, 1202.0], [673.0, 1120.5], [686.0, 1125.0], [685.0, 1086.0], [684.0, 914.0], [683.0, 898.0], [682.0, 1191.0], [681.0, 1172.0], [680.0, 1121.0], [695.0, 738.6666666666666], [694.0, 982.0], [723.0, 824.3333333333334], [734.0, 456.0], [735.0, 1235.0], [721.0, 575.5], [733.0, 523.0], [730.0, 869.5], [728.0, 485.0], [709.0, 579.0], [707.0, 577.0], [706.0, 594.0], [719.0, 583.0], [717.0, 604.0], [714.0, 551.0], [712.0, 573.6666666666666], [727.0, 546.0], [725.0, 567.0], [724.0, 1286.0], [761.0, 1088.0], [765.0, 1001.0], [767.0, 1028.0], [755.0, 1005.5], [754.0, 1040.0], [764.0, 1025.0], [763.0, 1019.5], [762.0, 1079.0], [760.0, 1021.0], [743.0, 1107.0], [741.0, 1150.0], [740.0, 1183.0], [737.0, 1227.0], [736.0, 1167.0], [749.0, 1041.0], [748.0, 1093.0], [747.0, 1054.0], [746.0, 1064.0], [745.0, 1050.0], [744.0, 1169.0], [759.0, 1043.5], [756.0, 1077.0], [796.0, 757.0], [799.0, 742.0], [784.0, 868.0], [786.0, 842.0], [785.0, 862.0], [789.0, 844.0], [787.0, 895.0], [798.0, 711.0], [797.0, 736.0], [795.0, 805.5], [794.0, 834.0], [793.0, 826.0], [792.0, 764.0], [783.0, 792.0], [769.0, 1012.0], [768.0, 966.0], [771.0, 965.0], [770.0, 1021.0], [773.0, 797.0], [772.0, 935.0], [775.0, 1006.0], [774.0, 981.0], [782.0, 895.0], [781.0, 904.0], [780.0, 897.0], [779.0, 907.0], [778.0, 936.0], [777.0, 923.0], [776.0, 1003.0], [791.0, 839.0], [790.0, 797.0], [825.0, 798.0], [830.0, 726.0], [831.0, 729.0], [818.0, 827.6666666666666], [817.0, 838.5], [829.0, 794.0], [828.0, 759.0], [827.0, 727.0], [824.0, 735.0], [807.0, 833.0], [806.0, 861.0], [805.0, 584.0], [804.0, 579.5], [803.0, 513.0], [802.0, 589.0], [801.0, 523.0], [800.0, 671.0], [814.0, 813.0], [813.0, 851.0], [811.0, 856.0], [810.0, 847.5], [809.0, 826.0], [823.0, 789.5], [821.0, 774.5], [846.0, 720.0], [849.0, 712.0], [848.0, 749.0], [847.0, 693.0], [834.0, 723.0], [833.0, 762.5], [836.0, 721.0], [835.0, 777.0], [845.0, 717.0], [844.0, 688.0], [843.0, 710.5], [841.0, 744.0], [839.0, 727.5], [837.0, 727.0], [884.0, 1155.0], [893.0, 1112.5], [881.0, 621.3846153846155], [891.0, 1085.0], [889.0, 1045.0], [888.0, 992.0], [879.0, 637.0], [867.0, 740.0], [877.0, 645.5], [876.0, 689.0], [875.0, 667.0], [887.0, 1087.0], [886.0, 1062.0], [885.0, 1052.0], [883.0, 322.0], [882.0, 590.0], [920.0, 1013.0], [926.0, 892.0], [927.0, 900.5], [925.0, 1010.0], [923.0, 958.0], [921.0, 1014.0], [911.0, 1085.0], [896.0, 1074.0], [898.0, 1012.0], [897.0, 1072.0], [900.0, 1012.0], [899.0, 1015.0], [903.0, 998.0], [901.0, 977.0], [910.0, 981.0], [909.0, 957.5], [906.0, 1205.0], [905.0, 1092.0], [904.0, 1129.5], [916.0, 989.5], [914.0, 982.0], [913.0, 969.0], [912.0, 1079.0], [953.0, 826.0], [957.0, 853.0], [958.0, 877.0], [946.0, 1067.5], [944.0, 1072.0], [949.0, 897.0], [948.0, 927.5], [956.0, 907.0], [955.0, 839.0], [954.0, 1041.0], [952.0, 927.0], [935.0, 1069.0], [934.0, 933.0], [933.0, 937.0], [932.0, 954.0], [931.0, 975.0], [930.0, 982.0], [929.0, 951.0], [928.0, 980.0], [943.0, 978.6666666666666], [942.0, 1079.0], [940.0, 1075.0], [938.0, 937.0], [937.0, 935.0], [936.0, 1085.0], [951.0, 910.0], [950.0, 949.0], [989.0, 352.0], [991.0, 422.0], [979.0, 441.5], [977.0, 411.5], [988.0, 471.0], [987.0, 438.5], [986.0, 529.0], [985.0, 410.0], [975.0, 585.0], [960.0, 745.0], [963.0, 842.0], [961.0, 812.0], [973.0, 686.0], [972.0, 755.0], [971.0, 798.0], [970.0, 802.0], [969.0, 763.0], [968.0, 810.25], [983.0, 410.0], [982.0, 307.0], [981.0, 552.0], [980.0, 423.0], [1016.0, 205.0], [1020.0, 199.0], [1023.0, 5261.0], [1008.0, 242.0], [1011.0, 204.0], [1010.0, 230.0], [1022.0, 8182.0], [1021.0, 3979.0], [1019.0, 199.0], [1018.0, 196.0], [1017.0, 198.0], [1007.0, 331.5], [993.0, 454.0], [995.0, 480.0], [994.0, 329.0], [999.0, 377.5], [997.0, 407.0], [1005.0, 364.0], [1004.0, 387.0], [1003.0, 427.0], [1002.0, 421.0], [1001.0, 417.0], [1000.0, 432.0], [1014.0, 210.0], [1012.0, 209.0], [1032.0, 1140.6], [1024.0, 5837.0], [1029.0, 6014.0], [1027.0, 178.0], [1025.0, 5302.0], [1.0, 57.39285714285714]], "isOverall": false, "label": "Sunstar Home", "isController": false}, {"data": [[14.830595186626471, 53.746265071815834]], "isOverall": false, "label": "Sunstar Home-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1032.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 175.5, "minX": 1.62920246E12, "maxY": 1120951.4, "series": [{"data": [[1.62920308E12, 1120117.3], [1.62920325E12, 1100338.0], [1.62920291E12, 1108386.4], [1.62920274E12, 1087641.2], [1.62920257E12, 1120951.4], [1.62920316E12, 332574.3], [1.62920333E12, 514115.2], [1.62920282E12, 64458.3], [1.62920299E12, 147439.1], [1.62920265E12, 240051.6], [1.62920248E12, 17041.9], [1.62920326E12, 1110459.2], [1.62920292E12, 1106904.6], [1.62920309E12, 1106904.6], [1.62920275E12, 1111350.0], [1.62920258E12, 1060227.9], [1.62920334E12, 328915.2], [1.629203E12, 65199.2], [1.62920317E12, 148140.0], [1.62920283E12, 238583.0], [1.62920266E12, 422313.0], [1.62920249E12, 6667.9], [1.6292031E12, 1052078.0], [1.62920327E12, 1103051.2], [1.62920293E12, 1111350.0], [1.62920276E12, 1056523.4], [1.62920259E12, 858712.2], [1.62920336E12, 8889.6], [1.62920318E12, 65189.5], [1.62920335E12, 148160.0], [1.62920284E12, 419349.4], [1.62920301E12, 240051.6], [1.62920267E12, 603833.5], [1.6292025E12, 125940.9], [1.62920294E12, 1057264.3], [1.62920311E12, 1108386.4], [1.62920277E12, 883893.7], [1.6292026E12, 684591.6], [1.6292032E12, 422370.0], [1.62920302E12, 422313.0], [1.62920319E12, 240774.0], [1.62920285E12, 604574.4], [1.62920268E12, 784613.1], [1.62920251E12, 154827.2], [1.62920328E12, 1108977.6], [1.62920278E12, 692741.5], [1.62920295E12, 883893.7], [1.62920261E12, 514925.5], [1.62920304E12, 789799.4], [1.62920321E12, 606879.0], [1.62920286E12, 788330.2], [1.62920303E12, 603092.6], [1.62920269E12, 961688.2], [1.62920252E12, 197052.8], [1.62920312E12, 1058005.2], [1.62920329E12, 1107496.0], [1.62920279E12, 513443.7], [1.62920262E12, 330441.4], [1.62920322E12, 784719.0], [1.62920288E12, 1100977.4], [1.62920305E12, 971319.9], [1.62920287E12, 972060.8], [1.6292027E12, 1071341.4], [1.62920253E12, 561538.3], [1.6292033E12, 1057862.4], [1.62920296E12, 697186.9], [1.62920313E12, 881637.7], [1.62920263E12, 145957.3], [1.62920246E12, 7399.3], [1.62920306E12, 1103941.0], [1.62920323E12, 972192.0], [1.62920289E12, 1108386.4], [1.62920272E12, 1093568.4], [1.62920271E12, 1097272.9], [1.62920254E12, 1042305.6], [1.62920314E12, 699220.8], [1.62920331E12, 881554.8], [1.6292028E12, 331182.3], [1.62920297E12, 513443.7], [1.62920247E12, 11110.5], [1.62920324E12, 1090011.0], [1.6292029E12, 1109127.3], [1.62920307E12, 458572.7], [1.62920273E12, 1098013.8], [1.62920256E12, 1089716.8], [1.62920255E12, 1110459.2], [1.62920332E12, 697833.6], [1.62920298E12, 332664.1], [1.62920315E12, 513305.1], [1.62920281E12, 147439.1], [1.62920264E12, 65940.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62920308E12, 29484.0], [1.62920325E12, 28957.5], [1.62920291E12, 29172.0], [1.62920274E12, 28626.0], [1.62920257E12, 29503.5], [1.62920316E12, 8755.5], [1.62920333E12, 13533.0], [1.62920282E12, 1696.5], [1.62920299E12, 3880.5], [1.62920265E12, 6318.0], [1.62920248E12, 448.5], [1.62920326E12, 29230.5], [1.62920292E12, 29133.0], [1.62920309E12, 29133.0], [1.62920275E12, 29250.0], [1.62920258E12, 27904.5], [1.62920334E12, 8658.0], [1.629203E12, 1716.0], [1.62920317E12, 3900.0], [1.62920283E12, 6279.0], [1.62920266E12, 11115.0], [1.62920249E12, 175.5], [1.6292031E12, 27690.0], [1.62920327E12, 29035.5], [1.62920293E12, 29250.0], [1.62920276E12, 27807.0], [1.62920259E12, 22600.5], [1.62920336E12, 234.0], [1.62920318E12, 1716.0], [1.62920335E12, 3900.0], [1.62920284E12, 11037.0], [1.62920301E12, 6318.0], [1.62920267E12, 15892.5], [1.6292025E12, 3315.0], [1.62920294E12, 27826.5], [1.62920311E12, 29172.0], [1.62920277E12, 23263.5], [1.6292026E12, 18018.0], [1.6292032E12, 11115.0], [1.62920302E12, 11115.0], [1.62920319E12, 6337.5], [1.62920285E12, 15912.0], [1.62920268E12, 20650.5], [1.62920251E12, 4075.5], [1.62920328E12, 29191.5], [1.62920278E12, 18232.5], [1.62920295E12, 23263.5], [1.62920261E12, 13552.5], [1.62920304E12, 20787.0], [1.62920321E12, 15970.5], [1.62920286E12, 20748.0], [1.62920303E12, 15873.0], [1.62920269E12, 25311.0], [1.62920252E12, 5187.0], [1.62920312E12, 27846.0], [1.62920329E12, 29152.5], [1.62920279E12, 13513.5], [1.62920262E12, 8697.0], [1.62920322E12, 20650.5], [1.62920288E12, 28977.0], [1.62920305E12, 25564.5], [1.62920287E12, 25584.0], [1.6292027E12, 28197.0], [1.62920253E12, 14781.0], [1.6292033E12, 27846.0], [1.62920296E12, 18349.5], [1.62920313E12, 23205.0], [1.62920263E12, 3841.5], [1.62920246E12, 195.0], [1.62920306E12, 29055.0], [1.62920323E12, 25584.0], [1.62920289E12, 29172.0], [1.62920272E12, 28782.0], [1.62920271E12, 28879.5], [1.62920254E12, 27436.5], [1.62920314E12, 18408.0], [1.62920331E12, 23205.0], [1.6292028E12, 8716.5], [1.62920297E12, 13513.5], [1.62920247E12, 292.5], [1.62920324E12, 28684.5], [1.6292029E12, 29191.5], [1.62920307E12, 12070.5], [1.62920273E12, 28899.0], [1.62920256E12, 28684.5], [1.62920255E12, 29230.5], [1.62920332E12, 18369.0], [1.62920298E12, 8755.5], [1.62920315E12, 13513.5], [1.62920281E12, 3880.5], [1.62920264E12, 1735.5]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62920336E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 18.43145743145742, "minX": 1.62920246E12, "maxY": 2829.5, "series": [{"data": [[1.62920308E12, 61.57738095238096], [1.62920325E12, 33.68148148148156], [1.62920291E12, 29.990641711229937], [1.62920274E12, 35.987057220708465], [1.62920257E12, 131.07799074686054], [1.62920316E12, 20.265033407572425], [1.62920333E12, 26.14697406340058], [1.62920282E12, 20.241379310344822], [1.62920299E12, 21.185929648241196], [1.62920265E12, 22.114197530864203], [1.62920248E12, 410.78260869565213], [1.62920326E12, 33.92661774516346], [1.62920292E12, 30.938420348058916], [1.62920309E12, 31.810575635876813], [1.62920275E12, 33.947333333333376], [1.62920258E12, 75.37386443046815], [1.62920334E12, 23.47522522522523], [1.629203E12, 21.670454545454543], [1.62920317E12, 21.230000000000015], [1.62920283E12, 43.14906832298135], [1.62920266E12, 22.298245614035086], [1.62920249E12, 423.1111111111111], [1.6292031E12, 36.72605633802813], [1.62920327E12, 34.811282740094036], [1.62920293E12, 32.98733333333334], [1.62920276E12, 29.971949509116413], [1.62920259E12, 41.552200172562586], [1.62920336E12, 24.333333333333332], [1.62920318E12, 21.06818181818181], [1.62920335E12, 23.84499999999999], [1.62920284E12, 52.715547703180206], [1.62920301E12, 22.592592592592588], [1.62920267E12, 27.4196319018405], [1.6292025E12, 842.947058823529], [1.62920294E12, 28.3882270497547], [1.62920311E12, 36.53676470588231], [1.62920277E12, 24.95641240569992], [1.6292026E12, 30.558441558441615], [1.6292032E12, 19.508771929824594], [1.62920302E12, 25.601754385964913], [1.62920319E12, 21.384615384615373], [1.62920285E12, 53.82965686274512], [1.62920268E12, 28.230406043437206], [1.62920251E12, 973.3444976076557], [1.62920328E12, 34.26185704742824], [1.62920278E12, 21.6385026737968], [1.62920295E12, 24.16512992455992], [1.62920261E12, 20.22014388489211], [1.62920304E12, 27.66041275797372], [1.62920321E12, 19.72283272283274], [1.62920286E12, 45.524436090225535], [1.62920303E12, 25.264127764127753], [1.62920269E12, 50.62942989214174], [1.62920252E12, 851.9812030075187], [1.62920312E12, 35.372549019607916], [1.62920329E12, 33.83277591973247], [1.62920279E12, 18.43145743145742], [1.62920262E12, 23.36322869955157], [1.62920322E12, 22.150141643059484], [1.62920288E12, 41.78600269178996], [1.62920305E12, 26.565980167810846], [1.62920287E12, 34.031249999999986], [1.6292027E12, 55.07952973720613], [1.62920253E12, 382.4393139841686], [1.6292033E12, 31.955182072829093], [1.62920296E12, 23.454835281615292], [1.62920313E12, 25.79663865546221], [1.62920263E12, 19.954314720812185], [1.62920246E12, 2829.5], [1.62920306E12, 33.456375838926206], [1.62920323E12, 25.647865853658505], [1.62920289E12, 35.292112299465195], [1.62920272E12, 46.92547425474257], [1.62920271E12, 47.99864956110734], [1.62920254E12, 165.55934612651032], [1.62920314E12, 23.080508474576302], [1.62920331E12, 26.773109243697462], [1.6292028E12, 26.76286353467561], [1.62920297E12, 21.265512265512267], [1.62920247E12, 993.2], [1.62920324E12, 32.821889870836124], [1.6292029E12, 32.27788911155644], [1.62920307E12, 100.21486268174469], [1.62920273E12, 38.01686909581647], [1.62920256E12, 193.78314072059814], [1.62920255E12, 164.54769846564344], [1.62920332E12, 27.298301486199556], [1.62920298E12, 21.51002227171492], [1.62920315E12, 21.62337662337659], [1.62920281E12, 21.09547738693466], [1.62920264E12, 21.157303370786508]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62920336E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 18.230880230880235, "minX": 1.62920246E12, "maxY": 2810.7000000000003, "series": [{"data": [[1.62920308E12, 61.226851851852004], [1.62920325E12, 33.350168350168296], [1.62920291E12, 29.600267379679128], [1.62920274E12, 35.679836512261524], [1.62920257E12, 130.5928618638469], [1.62920316E12, 20.062360801781736], [1.62920333E12, 25.925072046109495], [1.62920282E12, 20.091954022988503], [1.62920299E12, 21.015075376884415], [1.62920265E12, 21.938271604938276], [1.62920248E12, 410.1304347826087], [1.62920326E12, 33.624416277518336], [1.62920292E12, 30.59170013386882], [1.62920309E12, 31.359437751004005], [1.62920275E12, 33.57799999999997], [1.62920258E12, 75.08036338225011], [1.62920334E12, 23.256756756756747], [1.629203E12, 21.522727272727277], [1.62920317E12, 21.014999999999993], [1.62920283E12, 42.944099378881965], [1.62920266E12, 22.05789473684212], [1.62920249E12, 422.44444444444446], [1.6292031E12, 36.2809859154929], [1.62920327E12, 34.4976494291471], [1.62920293E12, 32.5526666666666], [1.62920276E12, 29.543478260869577], [1.62920259E12, 41.245038826574586], [1.62920336E12, 24.249999999999996], [1.62920318E12, 20.90909090909091], [1.62920335E12, 23.649999999999995], [1.62920284E12, 52.51060070671375], [1.62920301E12, 22.39197530864197], [1.62920267E12, 27.190184049079754], [1.6292025E12, 829.9764705882353], [1.62920294E12, 28.03644008409249], [1.62920311E12, 36.158422459893124], [1.62920277E12, 24.689857502095556], [1.6292026E12, 30.26082251082246], [1.6292032E12, 19.292982456140354], [1.62920302E12, 25.424561403508786], [1.62920319E12, 21.218461538461536], [1.62920285E12, 53.6164215686274], [1.62920268E12, 28.02927289896125], [1.62920251E12, 965.2966507177032], [1.62920328E12, 33.968603874415464], [1.62920278E12, 21.429946524064146], [1.62920295E12, 23.915339480301796], [1.62920261E12, 20.004316546762585], [1.62920304E12, 27.445590994371504], [1.62920321E12, 19.47985347985348], [1.62920286E12, 45.21710526315796], [1.62920303E12, 25.035626535626538], [1.62920269E12, 50.34437596302], [1.62920252E12, 843.5375939849622], [1.62920312E12, 35.02450980392158], [1.62920329E12, 33.51705685618733], [1.62920279E12, 18.230880230880235], [1.62920262E12, 23.159192825112115], [1.62920322E12, 21.899905571293676], [1.62920288E12, 41.468371467025484], [1.62920305E12, 26.31655225019068], [1.62920287E12, 33.796493902438954], [1.6292027E12, 54.81120331950199], [1.62920253E12, 380.18601583113445], [1.6292033E12, 31.658963585434183], [1.62920296E12, 23.231668437832084], [1.62920313E12, 25.526890756302503], [1.62920263E12, 19.761421319796963], [1.62920246E12, 2810.7000000000003], [1.62920306E12, 33.17382550335569], [1.62920323E12, 25.3544207317073], [1.62920289E12, 34.97459893048128], [1.62920272E12, 46.516260162601654], [1.62920271E12, 47.6576637407157], [1.62920254E12, 165.01776830135051], [1.62920314E12, 22.87923728813561], [1.62920331E12, 26.54537815126051], [1.6292028E12, 26.57718120805371], [1.62920297E12, 21.07936507936507], [1.62920247E12, 992.6000000000004], [1.62920324E12, 32.42488103331069], [1.6292029E12, 31.893119572478284], [1.62920307E12, 99.88368336025842], [1.62920273E12, 37.579622132253746], [1.62920256E12, 193.2148198504421], [1.62920255E12, 164.22615076717813], [1.62920332E12, 27.06900212314224], [1.62920298E12, 21.34298440979956], [1.62920315E12, 21.411255411255393], [1.62920281E12, 20.92462311557789], [1.62920264E12, 21.033707865168545]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62920336E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 16.219336219336224, "minX": 1.62920246E12, "maxY": 920.4976076555026, "series": [{"data": [[1.62920308E12, 38.98677248677253], [1.62920325E12, 29.719191919191875], [1.62920291E12, 26.27874331550799], [1.62920274E12, 32.19959128065397], [1.62920257E12, 124.11896893588874], [1.62920316E12, 17.006681514476604], [1.62920333E12, 21.97982708933717], [1.62920282E12, 17.08045977011494], [1.62920299E12, 17.79899497487436], [1.62920265E12, 19.00617283950618], [1.62920248E12, 372.9565217391304], [1.62920326E12, 29.14009339559709], [1.62920292E12, 27.091700133868784], [1.62920309E12, 27.990629183400248], [1.62920275E12, 30.249999999999954], [1.62920258E12, 69.60866526904275], [1.62920334E12, 19.677927927927897], [1.629203E12, 18.45454545454545], [1.62920317E12, 17.954999999999988], [1.62920283E12, 34.44099378881989], [1.62920266E12, 18.873684210526303], [1.62920249E12, 400.66666666666663], [1.6292031E12, 32.230985915492944], [1.62920327E12, 29.76830087306918], [1.62920293E12, 29.219333333333314], [1.62920276E12, 26.390603085553987], [1.62920259E12, 37.00949094046592], [1.62920336E12, 20.249999999999996], [1.62920318E12, 17.93181818181819], [1.62920335E12, 19.855], [1.62920284E12, 42.3356890459364], [1.62920301E12, 18.959876543209873], [1.62920267E12, 23.650306748466267], [1.6292025E12, 781.641176470588], [1.62920294E12, 25.12894183601963], [1.62920311E12, 32.169117647058904], [1.62920277E12, 22.210393964794626], [1.6292026E12, 27.2867965367965], [1.6292032E12, 17.27368421052632], [1.62920302E12, 21.52280701754383], [1.62920319E12, 18.27692307692308], [1.62920285E12, 42.980392156862735], [1.62920268E12, 24.170915958451403], [1.62920251E12, 920.4976076555026], [1.62920328E12, 29.243152972611878], [1.62920278E12, 19.234224598930503], [1.62920295E12, 20.890192791282477], [1.62920261E12, 17.827338129496415], [1.62920304E12, 23.460600375234502], [1.62920321E12, 17.490842490842496], [1.62920286E12, 37.58458646616542], [1.62920303E12, 21.22727272727275], [1.62920269E12, 45.5654853620956], [1.62920252E12, 806.0300751879698], [1.62920312E12, 31.313725490196028], [1.62920329E12, 28.973913043478284], [1.62920279E12, 16.219336219336224], [1.62920262E12, 20.630044843049333], [1.62920322E12, 19.679886685552415], [1.62920288E12, 36.16083445491251], [1.62920305E12, 22.592677345537744], [1.62920287E12, 29.040396341463353], [1.6292027E12, 49.896265560166015], [1.62920253E12, 362.48284960422114], [1.6292033E12, 27.388655462184907], [1.62920296E12, 19.918172157279493], [1.62920313E12, 22.668067226890773], [1.62920263E12, 17.614213197969534], [1.62920246E12, 354.2], [1.62920306E12, 28.70201342281881], [1.62920323E12, 22.500762195121954], [1.62920289E12, 30.79411764705878], [1.62920272E12, 42.67140921409212], [1.62920271E12, 42.91087103308576], [1.62920254E12, 157.85927505330483], [1.62920314E12, 19.434322033898304], [1.62920331E12, 22.575630252100854], [1.6292028E12, 23.46532438478748], [1.62920297E12, 17.98268398268398], [1.62920247E12, 179.93333333333334], [1.62920324E12, 29.27736233854521], [1.6292029E12, 28.61990647962595], [1.62920307E12, 50.292407108239104], [1.62920273E12, 33.948717948717906], [1.62920256E12, 185.8089734874236], [1.62920255E12, 157.60173448966012], [1.62920332E12, 22.806794055201724], [1.62920298E12, 18.10022271714921], [1.62920315E12, 18.262626262626252], [1.62920281E12, 17.86934673366834], [1.62920264E12, 18.820224719101127]], "isOverall": false, "label": "Sunstar Home", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62920336E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.62920246E12, "maxY": 9319.0, "series": [{"data": [[1.62920308E12, 9319.0], [1.62920325E12, 447.0], [1.62920291E12, 373.0], [1.62920274E12, 319.0], [1.62920257E12, 447.0], [1.62920316E12, 54.0], [1.62920333E12, 279.0], [1.62920282E12, 29.0], [1.62920299E12, 32.0], [1.62920265E12, 144.0], [1.62920248E12, 529.0], [1.62920326E12, 86.0], [1.62920292E12, 409.0], [1.62920309E12, 366.0], [1.62920275E12, 239.0], [1.62920258E12, 181.0], [1.62920334E12, 97.0], [1.629203E12, 53.0], [1.62920317E12, 92.0], [1.62920283E12, 324.0], [1.62920266E12, 92.0], [1.62920249E12, 552.0], [1.6292031E12, 663.0], [1.62920327E12, 104.0], [1.62920293E12, 252.0], [1.62920276E12, 386.0], [1.62920259E12, 256.0], [1.62920336E12, 39.0], [1.62920318E12, 37.0], [1.62920335E12, 82.0], [1.62920284E12, 214.0], [1.62920301E12, 49.0], [1.62920267E12, 124.0], [1.6292025E12, 1205.0], [1.62920294E12, 258.0], [1.62920311E12, 715.0], [1.62920277E12, 452.0], [1.6292026E12, 232.0], [1.6292032E12, 219.0], [1.62920302E12, 241.0], [1.62920319E12, 141.0], [1.62920285E12, 278.0], [1.62920268E12, 92.0], [1.62920251E12, 1344.0], [1.62920328E12, 176.0], [1.62920278E12, 237.0], [1.62920295E12, 330.0], [1.62920261E12, 182.0], [1.62920304E12, 901.0], [1.62920321E12, 265.0], [1.62920286E12, 316.0], [1.62920303E12, 121.0], [1.62920269E12, 145.0], [1.62920252E12, 1284.0], [1.62920312E12, 487.0], [1.62920329E12, 93.0], [1.62920279E12, 209.0], [1.62920262E12, 476.0], [1.62920322E12, 534.0], [1.62920288E12, 207.0], [1.62920305E12, 70.0], [1.62920287E12, 150.0], [1.6292027E12, 129.0], [1.62920253E12, 1333.0], [1.6292033E12, 141.0], [1.62920296E12, 87.0], [1.62920313E12, 247.0], [1.62920263E12, 104.0], [1.62920246E12, 6014.0], [1.62920306E12, 141.0], [1.62920323E12, 397.0], [1.62920289E12, 235.0], [1.62920272E12, 366.0], [1.62920271E12, 244.0], [1.62920254E12, 317.0], [1.62920314E12, 71.0], [1.62920331E12, 75.0], [1.6292028E12, 480.0], [1.62920297E12, 68.0], [1.62920247E12, 8182.0], [1.62920324E12, 239.0], [1.6292029E12, 358.0], [1.62920307E12, 5918.0], [1.62920273E12, 362.0], [1.62920256E12, 408.0], [1.62920255E12, 337.0], [1.62920332E12, 167.0], [1.62920298E12, 60.0], [1.62920315E12, 91.0], [1.62920281E12, 48.0], [1.62920264E12, 151.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62920308E12, 13.0], [1.62920325E12, 12.0], [1.62920291E12, 12.0], [1.62920274E12, 11.0], [1.62920257E12, 26.0], [1.62920316E12, 13.0], [1.62920333E12, 18.0], [1.62920282E12, 13.0], [1.62920299E12, 14.0], [1.62920265E12, 12.0], [1.62920248E12, 318.0], [1.62920326E12, 16.0], [1.62920292E12, 12.0], [1.62920309E12, 12.0], [1.62920275E12, 11.0], [1.62920258E12, 22.0], [1.62920334E12, 18.0], [1.629203E12, 14.0], [1.62920317E12, 14.0], [1.62920283E12, 14.0], [1.62920266E12, 14.0], [1.62920249E12, 307.0], [1.6292031E12, 11.0], [1.62920327E12, 16.0], [1.62920293E12, 12.0], [1.62920276E12, 11.0], [1.62920259E12, 11.0], [1.62920336E12, 20.0], [1.62920318E12, 13.0], [1.62920335E12, 19.0], [1.62920284E12, 39.0], [1.62920301E12, 14.0], [1.62920267E12, 14.0], [1.6292025E12, 322.0], [1.62920294E12, 12.0], [1.62920311E12, 13.0], [1.62920277E12, 10.0], [1.6292026E12, 11.0], [1.6292032E12, 10.0], [1.62920302E12, 19.0], [1.62920319E12, 11.0], [1.62920285E12, 40.0], [1.62920268E12, 14.0], [1.62920251E12, 226.0], [1.62920328E12, 16.0], [1.62920278E12, 10.0], [1.62920295E12, 11.0], [1.62920261E12, 11.0], [1.62920304E12, 14.0], [1.62920321E12, 10.0], [1.62920286E12, 21.0], [1.62920303E12, 18.0], [1.62920269E12, 15.0], [1.62920252E12, 182.0], [1.62920312E12, 11.0], [1.62920329E12, 16.0], [1.62920279E12, 10.0], [1.62920262E12, 11.0], [1.62920322E12, 10.0], [1.62920288E12, 21.0], [1.62920305E12, 14.0], [1.62920287E12, 20.0], [1.6292027E12, 16.0], [1.62920253E12, 24.0], [1.6292033E12, 15.0], [1.62920296E12, 13.0], [1.62920313E12, 11.0], [1.62920263E12, 11.0], [1.62920246E12, 178.0], [1.62920306E12, 15.0], [1.62920323E12, 11.0], [1.62920289E12, 13.0], [1.62920272E12, 12.0], [1.62920271E12, 12.0], [1.62920254E12, 56.0], [1.62920314E12, 13.0], [1.62920331E12, 14.0], [1.6292028E12, 11.0], [1.62920297E12, 13.0], [1.62920247E12, 196.0], [1.62920324E12, 12.0], [1.6292029E12, 11.0], [1.62920307E12, 13.0], [1.62920273E12, 11.0], [1.62920256E12, 33.0], [1.62920255E12, 35.0], [1.62920332E12, 18.0], [1.62920298E12, 14.0], [1.62920315E12, 13.0], [1.62920281E12, 14.0], [1.62920264E12, 12.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62920308E12, 88.0], [1.62920325E12, 50.0], [1.62920291E12, 43.0], [1.62920274E12, 60.0], [1.62920257E12, 223.60000000000014], [1.62920316E12, 25.0], [1.62920333E12, 32.0], [1.62920282E12, 25.0], [1.62920299E12, 26.0], [1.62920265E12, 27.0], [1.62920248E12, 504.20000000000005], [1.62920326E12, 47.0], [1.62920292E12, 49.0], [1.62920309E12, 48.0], [1.62920275E12, 53.0], [1.62920258E12, 111.0], [1.62920334E12, 27.0], [1.629203E12, 27.0], [1.62920317E12, 26.0], [1.62920283E12, 61.0], [1.62920266E12, 28.0], [1.62920249E12, 552.0], [1.6292031E12, 57.0], [1.62920327E12, 48.0], [1.62920293E12, 53.0], [1.62920276E12, 46.0], [1.62920259E12, 64.0], [1.62920336E12, 36.000000000000014], [1.62920318E12, 26.0], [1.62920335E12, 29.0], [1.62920284E12, 63.0], [1.62920301E12, 27.0], [1.62920267E12, 44.0], [1.6292025E12, 1074.7], [1.62920294E12, 43.0], [1.62920311E12, 54.0], [1.62920277E12, 37.0], [1.6292026E12, 51.0], [1.6292032E12, 26.0], [1.62920302E12, 33.0], [1.62920319E12, 27.0], [1.62920285E12, 65.30000000000007], [1.62920268E12, 42.0], [1.62920251E12, 1253.0], [1.62920328E12, 47.0], [1.62920278E12, 32.39999999999998], [1.62920295E12, 31.600000000000136], [1.62920261E12, 30.0], [1.62920304E12, 33.30000000000007], [1.62920321E12, 27.0], [1.62920286E12, 65.0], [1.62920303E12, 31.0], [1.62920269E12, 75.10000000000014], [1.62920252E12, 1151.6000000000001], [1.62920312E12, 56.0], [1.62920329E12, 48.0], [1.62920279E12, 26.0], [1.62920262E12, 38.30000000000001], [1.62920322E12, 32.0], [1.62920288E12, 59.0], [1.62920305E12, 35.0], [1.62920287E12, 44.0], [1.6292027E12, 79.0], [1.62920253E12, 963.3000000000001], [1.6292033E12, 44.0], [1.62920296E12, 30.0], [1.62920313E12, 40.0], [1.62920263E12, 33.0], [1.62920246E12, 5996.3], [1.62920306E12, 47.0], [1.62920323E12, 38.0], [1.62920289E12, 54.0], [1.62920272E12, 80.0], [1.62920271E12, 81.0], [1.62920254E12, 213.0], [1.62920314E12, 30.0], [1.62920331E12, 35.0], [1.6292028E12, 34.19999999999999], [1.62920297E12, 26.0], [1.62920247E12, 5660.200000000002], [1.62920324E12, 50.0], [1.6292029E12, 52.0], [1.62920307E12, 152.0], [1.62920273E12, 60.0], [1.62920256E12, 246.79999999999995], [1.62920255E12, 218.0], [1.62920332E12, 33.0], [1.62920298E12, 27.0], [1.62920315E12, 27.0], [1.62920281E12, 27.0], [1.62920264E12, 30.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62920308E12, 178.47999999999956], [1.62920325E12, 104.8400000000006], [1.62920291E12, 141.05999999999995], [1.62920274E12, 135.23999999999978], [1.62920257E12, 311.8599999999999], [1.62920316E12, 31.0], [1.62920333E12, 94.49999999999955], [1.62920282E12, 29.0], [1.62920299E12, 32.0], [1.62920265E12, 84.5], [1.62920248E12, 529.0], [1.62920326E12, 61.0], [1.62920292E12, 113.24999999999977], [1.62920309E12, 104.04999999999995], [1.62920275E12, 133.98000000000002], [1.62920258E12, 148.0], [1.62920334E12, 78.65000000000003], [1.629203E12, 53.0], [1.62920317E12, 38.97000000000003], [1.62920283E12, 113.15999999999985], [1.62920266E12, 40.289999999999964], [1.62920249E12, 552.0], [1.6292031E12, 204.3199999999997], [1.62920327E12, 71.09999999999991], [1.62920293E12, 107.95000000000005], [1.62920276E12, 122.92000000000007], [1.62920259E12, 113.0], [1.62920336E12, 39.0], [1.62920318E12, 37.0], [1.62920335E12, 48.950000000000045], [1.62920284E12, 111.33000000000004], [1.62920301E12, 43.5], [1.62920267E12, 81.88000000000022], [1.6292025E12, 1202.1599999999999], [1.62920294E12, 108.36000000000035], [1.62920311E12, 132.05999999999995], [1.62920277E12, 130.29999999999973], [1.6292026E12, 121.0], [1.6292032E12, 118.28999999999996], [1.62920302E12, 72.28999999999996], [1.62920319E12, 103.10000000000059], [1.62920285E12, 118.83000000000004], [1.62920268E12, 67.0], [1.62920251E12, 1331.0], [1.62920328E12, 67.01999999999998], [1.62920278E12, 100.91999999999996], [1.62920295E12, 103.41999999999962], [1.62920261E12, 93.07999999999993], [1.62920304E12, 69.32999999999993], [1.62920321E12, 144.5999999999999], [1.62920286E12, 153.54999999999882], [1.62920303E12, 63.0], [1.62920269E12, 99.02999999999997], [1.62920252E12, 1254.6499999999999], [1.62920312E12, 146.42000000000007], [1.62920329E12, 69.03999999999996], [1.62920279E12, 88.05999999999995], [1.62920262E12, 149.42999999999915], [1.62920322E12, 118.00000000000182], [1.62920288E12, 84.12999999999988], [1.62920305E12, 45.0], [1.62920287E12, 75.86999999999989], [1.6292027E12, 101.0], [1.62920253E12, 1291.23], [1.6292033E12, 82.71000000000004], [1.62920296E12, 64.9000000000002], [1.62920313E12, 117.08999999999992], [1.62920263E12, 91.26000000000013], [1.62920246E12, 6014.0], [1.62920306E12, 68.0], [1.62920323E12, 104.86999999999989], [1.62920289E12, 102.20999999999981], [1.62920272E12, 120.0], [1.62920271E12, 122.36000000000013], [1.62920254E12, 270.84000000000015], [1.62920314E12, 39.09999999999991], [1.62920331E12, 52.08999999999992], [1.6292028E12, 175.2799999999993], [1.62920297E12, 37.0], [1.62920247E12, 8182.0], [1.62920324E12, 130.39999999999986], [1.6292029E12, 143.03999999999996], [1.62920307E12, 314.39999999999986], [1.62920273E12, 135.0], [1.62920256E12, 316.28], [1.62920255E12, 276.0], [1.62920332E12, 76.56999999999994], [1.62920298E12, 39.0], [1.62920315E12, 33.11999999999989], [1.62920281E12, 37.0], [1.62920264E12, 151.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62920308E12, 105.0], [1.62920325E12, 59.0], [1.62920291E12, 53.0], [1.62920274E12, 69.0], [1.62920257E12, 247.0], [1.62920316E12, 26.0], [1.62920333E12, 38.25], [1.62920282E12, 28.0], [1.62920299E12, 27.0], [1.62920265E12, 32.5], [1.62920248E12, 525.0], [1.62920326E12, 51.0], [1.62920292E12, 61.25], [1.62920309E12, 60.0], [1.62920275E12, 62.0], [1.62920258E12, 124.0], [1.62920334E12, 29.75], [1.629203E12, 33.39999999999998], [1.62920317E12, 28.0], [1.62920283E12, 69.0], [1.62920266E12, 31.0], [1.62920249E12, 552.0], [1.6292031E12, 90.95000000000005], [1.62920327E12, 56.0], [1.62920293E12, 65.95000000000005], [1.62920276E12, 59.0], [1.62920259E12, 74.0], [1.62920336E12, 39.0], [1.62920318E12, 34.099999999999994], [1.62920335E12, 35.94999999999999], [1.62920284E12, 73.64999999999998], [1.62920301E12, 30.0], [1.62920267E12, 57.0], [1.6292025E12, 1099.0], [1.62920294E12, 55.0], [1.62920311E12, 64.0], [1.62920277E12, 50.0], [1.6292026E12, 60.75], [1.6292032E12, 42.0], [1.62920302E12, 39.0], [1.62920319E12, 32.0], [1.62920285E12, 79.0], [1.62920268E12, 52.0], [1.62920251E12, 1305.0], [1.62920328E12, 53.0], [1.62920278E12, 49.0], [1.62920295E12, 36.0], [1.62920261E12, 38.19999999999993], [1.62920304E12, 40.0], [1.62920321E12, 41.0], [1.62920286E12, 80.75], [1.62920303E12, 34.0], [1.62920269E12, 83.0], [1.62920252E12, 1210.85], [1.62920312E12, 78.09999999999991], [1.62920329E12, 55.0], [1.62920279E12, 40.0], [1.62920262E12, 64.0], [1.62920322E12, 44.0], [1.62920288E12, 65.0], [1.62920305E12, 38.0], [1.62920287E12, 52.34999999999991], [1.6292027E12, 84.0], [1.62920253E12, 1164.05], [1.6292033E12, 53.549999999999955], [1.62920296E12, 34.0], [1.62920313E12, 54.450000000000045], [1.62920263E12, 55.39999999999998], [1.62920246E12, 6014.0], [1.62920306E12, 52.0], [1.62920323E12, 54.34999999999991], [1.62920289E12, 63.0], [1.62920272E12, 91.0], [1.62920271E12, 90.0], [1.62920254E12, 228.5999999999999], [1.62920314E12, 32.0], [1.62920331E12, 39.0], [1.6292028E12, 64.7999999999999], [1.62920297E12, 28.0], [1.62920247E12, 8182.0], [1.62920324E12, 62.0], [1.6292029E12, 67.0], [1.62920307E12, 194.0], [1.62920273E12, 71.0], [1.62920256E12, 265.39999999999986], [1.62920255E12, 234.0], [1.62920332E12, 40.84999999999991], [1.62920298E12, 28.5], [1.62920315E12, 29.0], [1.62920281E12, 28.0], [1.62920264E12, 46.5]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62920336E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 15.0, "minX": 1.0, "maxY": 6080.5, "series": [{"data": [[2.0, 6080.5], [3.0, 19.0], [4.0, 19.5], [6.0, 21.5], [7.0, 20.0], [8.0, 18.0], [9.0, 22.0], [11.0, 20.0], [12.0, 20.0], [13.0, 21.0], [14.0, 15.0], [16.0, 20.0], [17.0, 21.0], [18.0, 20.0], [19.0, 21.0], [21.0, 21.0], [22.0, 20.0], [23.0, 20.0], [24.0, 20.0], [26.0, 20.0], [27.0, 21.0], [28.0, 22.5], [29.0, 21.0], [30.0, 47.5], [31.0, 21.0], [33.0, 20.0], [32.0, 20.0], [34.0, 23.0], [35.0, 22.0], [37.0, 20.0], [36.0, 22.0], [39.0, 20.0], [38.0, 23.5], [41.0, 21.0], [43.0, 22.0], [42.0, 19.0], [44.0, 21.0], [45.0, 16.0], [46.0, 22.0], [47.0, 20.0], [49.0, 19.5], [48.0, 24.0], [51.0, 22.0], [50.0, 17.0], [53.0, 26.0], [52.0, 23.0], [54.0, 41.5], [55.0, 21.0], [57.0, 20.0], [56.0, 18.0], [58.0, 21.0], [59.0, 24.0], [61.0, 20.0], [60.0, 20.0], [63.0, 21.0], [62.0, 49.5], [64.0, 25.5], [66.0, 22.0], [65.0, 20.5], [70.0, 20.0], [69.0, 21.0], [71.0, 22.0], [72.0, 24.0], [73.0, 17.0], [75.0, 23.0], [74.0, 27.0], [77.0, 202.0], [78.0, 22.0], [76.0, 19.5], [79.0, 19.0], [83.0, 22.0], [81.0, 18.0], [82.0, 27.0], [80.0, 22.0], [87.0, 23.0], [85.0, 26.0], [84.0, 16.0], [86.0, 22.0], [91.0, 22.0], [88.0, 22.0], [89.0, 24.0], [93.0, 24.0], [92.0, 23.0], [95.0, 21.0], [94.0, 47.5], [99.0, 25.0], [96.0, 133.0], [97.0, 24.0], [98.0, 23.0], [102.0, 36.0], [100.0, 25.0], [101.0, 23.0], [103.0, 22.0], [106.0, 25.0], [104.0, 21.0], [107.0, 33.0], [105.0, 24.0], [111.0, 28.0], [110.0, 26.0], [108.0, 25.0], [109.0, 26.0], [113.0, 27.0], [114.0, 28.0], [115.0, 24.0], [112.0, 18.0], [117.0, 25.0], [116.0, 24.0], [118.0, 23.5], [119.0, 22.0], [122.0, 30.0], [123.0, 21.0], [121.0, 26.0], [120.0, 25.5], [124.0, 48.0], [125.0, 28.0], [127.0, 22.0], [126.0, 27.0], [135.0, 32.0], [133.0, 29.0], [132.0, 37.0], [130.0, 33.0], [128.0, 29.0], [129.0, 40.5], [134.0, 22.0], [131.0, 25.0], [142.0, 42.0], [136.0, 61.0], [138.0, 27.0], [140.0, 118.0], [137.0, 37.0], [143.0, 29.0], [141.0, 39.0], [139.0, 29.0], [147.0, 38.0], [144.0, 59.0], [146.0, 40.0], [150.0, 32.0], [151.0, 32.0], [145.0, 39.0], [149.0, 30.0], [148.0, 31.0], [154.0, 85.0], [156.0, 118.0], [157.0, 159.0], [153.0, 40.0], [155.0, 75.0], [158.0, 94.0], [152.0, 31.0], [160.0, 39.0], [169.0, 50.0], [1.0, 23.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 169.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 15.0, "minX": 1.0, "maxY": 6080.0, "series": [{"data": [[2.0, 6080.0], [3.0, 19.0], [4.0, 19.0], [6.0, 21.5], [7.0, 20.0], [8.0, 18.0], [9.0, 22.0], [11.0, 20.0], [12.0, 19.5], [13.0, 21.0], [14.0, 15.0], [16.0, 19.5], [17.0, 21.0], [18.0, 20.0], [19.0, 21.0], [21.0, 21.0], [22.0, 20.0], [23.0, 20.0], [24.0, 19.5], [26.0, 20.0], [27.0, 21.0], [28.0, 22.0], [29.0, 21.0], [30.0, 47.0], [31.0, 21.0], [33.0, 20.0], [32.0, 20.0], [34.0, 23.0], [35.0, 22.0], [37.0, 20.0], [36.0, 22.0], [39.0, 20.0], [38.0, 23.0], [41.0, 21.0], [43.0, 21.0], [42.0, 19.0], [44.0, 21.0], [45.0, 16.0], [46.0, 22.0], [47.0, 20.0], [49.0, 19.0], [48.0, 24.0], [51.0, 22.0], [50.0, 17.0], [53.0, 26.0], [52.0, 23.0], [54.0, 41.5], [55.0, 21.0], [57.0, 20.0], [56.0, 18.0], [58.0, 21.0], [59.0, 23.5], [61.0, 20.0], [60.0, 20.0], [63.0, 21.0], [62.0, 49.0], [64.0, 25.0], [66.0, 22.0], [65.0, 20.0], [70.0, 20.0], [69.0, 21.0], [71.0, 22.0], [72.0, 23.5], [73.0, 16.0], [75.0, 23.0], [74.0, 27.0], [77.0, 201.0], [78.0, 22.0], [76.0, 19.0], [79.0, 19.0], [83.0, 22.0], [81.0, 18.0], [82.0, 27.0], [80.0, 22.0], [87.0, 23.0], [85.0, 26.0], [84.0, 15.0], [86.0, 22.0], [91.0, 22.0], [88.0, 22.0], [89.0, 24.0], [93.0, 24.0], [92.0, 23.0], [95.0, 21.0], [94.0, 47.0], [99.0, 24.0], [96.0, 132.5], [97.0, 24.0], [98.0, 22.5], [102.0, 36.0], [100.0, 25.0], [101.0, 23.0], [103.0, 22.0], [106.0, 25.0], [104.0, 20.5], [107.0, 32.0], [105.0, 24.0], [111.0, 28.0], [110.0, 26.0], [108.0, 25.0], [109.0, 26.0], [113.0, 26.0], [114.0, 27.5], [115.0, 23.0], [112.0, 18.0], [117.0, 25.0], [116.0, 24.0], [118.0, 23.0], [119.0, 22.0], [122.0, 30.0], [123.0, 20.0], [121.0, 26.0], [120.0, 25.0], [124.0, 48.0], [125.0, 28.0], [127.0, 21.5], [126.0, 27.0], [135.0, 32.0], [133.0, 28.0], [132.0, 37.0], [130.0, 33.0], [128.0, 29.0], [129.0, 40.0], [134.0, 22.0], [131.0, 24.0], [142.0, 42.0], [136.0, 61.0], [138.0, 27.0], [140.0, 117.0], [137.0, 36.0], [143.0, 29.0], [141.0, 39.0], [139.0, 28.0], [147.0, 38.0], [144.0, 58.0], [146.0, 40.0], [150.0, 32.0], [151.0, 31.0], [145.0, 38.0], [149.0, 30.0], [148.0, 30.0], [154.0, 84.0], [156.0, 117.5], [157.0, 159.0], [153.0, 39.0], [155.0, 74.0], [158.0, 93.5], [152.0, 30.0], [160.0, 38.5], [169.0, 49.0], [1.0, 23.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 169.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.2, "minX": 1.62920246E12, "maxY": 149.9, "series": [{"data": [[1.62920308E12, 149.2], [1.62920325E12, 148.4], [1.62920291E12, 149.7], [1.62920274E12, 146.7], [1.62920257E12, 149.3], [1.62920316E12, 44.9], [1.62920333E12, 69.3], [1.62920282E12, 8.7], [1.62920299E12, 19.8], [1.62920265E12, 32.4], [1.62920248E12, 3.2], [1.62920326E12, 149.8], [1.62920292E12, 149.3], [1.62920309E12, 149.2], [1.62920275E12, 149.8], [1.62920258E12, 142.6], [1.62920334E12, 44.4], [1.629203E12, 8.9], [1.62920317E12, 19.9], [1.62920283E12, 32.4], [1.62920266E12, 57.0], [1.6292031E12, 142.0], [1.62920327E12, 149.0], [1.62920293E12, 149.9], [1.62920276E12, 142.5], [1.62920259E12, 115.1], [1.62920336E12, 1.2], [1.62920318E12, 8.9], [1.62920335E12, 19.9], [1.62920284E12, 56.8], [1.62920301E12, 32.4], [1.62920267E12, 81.6], [1.6292025E12, 17.0], [1.62920294E12, 142.7], [1.62920311E12, 149.8], [1.62920277E12, 119.2], [1.6292026E12, 92.5], [1.6292032E12, 57.1], [1.62920302E12, 57.0], [1.62920319E12, 32.4], [1.62920285E12, 81.6], [1.62920268E12, 106.0], [1.62920251E12, 20.9], [1.62920328E12, 149.5], [1.62920278E12, 93.5], [1.62920295E12, 119.2], [1.62920261E12, 69.5], [1.62920304E12, 106.6], [1.62920321E12, 81.9], [1.62920286E12, 106.5], [1.62920303E12, 81.5], [1.62920269E12, 130.3], [1.62920252E12, 26.6], [1.62920312E12, 142.6], [1.62920329E12, 149.6], [1.62920279E12, 69.4], [1.62920262E12, 44.5], [1.62920322E12, 106.2], [1.62920288E12, 148.8], [1.62920305E12, 131.2], [1.62920287E12, 131.2], [1.6292027E12, 144.4], [1.62920253E12, 77.1], [1.6292033E12, 142.7], [1.62920296E12, 94.0], [1.62920313E12, 118.9], [1.62920263E12, 19.7], [1.62920246E12, 1.2], [1.62920306E12, 149.1], [1.62920323E12, 131.3], [1.62920289E12, 149.6], [1.62920272E12, 147.4], [1.62920271E12, 148.5], [1.62920254E12, 142.3], [1.62920314E12, 94.3], [1.62920331E12, 118.9], [1.6292028E12, 44.5], [1.62920297E12, 69.2], [1.62920247E12, 1.3], [1.62920324E12, 147.3], [1.6292029E12, 149.5], [1.62920307E12, 64.1], [1.62920273E12, 148.1], [1.62920256E12, 148.2], [1.62920255E12, 149.3], [1.62920332E12, 94.1], [1.62920298E12, 44.9], [1.62920315E12, 69.2], [1.62920281E12, 19.8], [1.62920264E12, 8.9]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62920336E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.62920246E12, "maxY": 151.3, "series": [{"data": [[1.62920308E12, 151.2], [1.62920325E12, 148.5], [1.62920291E12, 149.6], [1.62920274E12, 146.8], [1.62920257E12, 151.3], [1.62920316E12, 44.9], [1.62920333E12, 69.4], [1.62920282E12, 8.7], [1.62920299E12, 19.9], [1.62920265E12, 32.4], [1.62920248E12, 2.3], [1.62920326E12, 149.9], [1.62920292E12, 149.4], [1.62920309E12, 149.4], [1.62920275E12, 150.0], [1.62920258E12, 143.1], [1.62920334E12, 44.4], [1.629203E12, 8.8], [1.62920317E12, 20.0], [1.62920283E12, 32.2], [1.62920266E12, 57.0], [1.62920249E12, 0.9], [1.6292031E12, 142.0], [1.62920327E12, 148.9], [1.62920293E12, 150.0], [1.62920276E12, 142.6], [1.62920259E12, 115.9], [1.62920336E12, 1.2], [1.62920318E12, 8.8], [1.62920335E12, 20.0], [1.62920284E12, 56.6], [1.62920301E12, 32.4], [1.62920267E12, 81.5], [1.6292025E12, 17.0], [1.62920294E12, 142.7], [1.62920311E12, 149.6], [1.62920277E12, 119.3], [1.6292026E12, 92.4], [1.6292032E12, 57.0], [1.62920302E12, 57.0], [1.62920319E12, 32.5], [1.62920285E12, 81.6], [1.62920268E12, 105.9], [1.62920251E12, 20.9], [1.62920328E12, 149.7], [1.62920278E12, 93.5], [1.62920295E12, 119.3], [1.62920261E12, 69.5], [1.62920304E12, 106.6], [1.62920321E12, 81.9], [1.62920286E12, 106.4], [1.62920303E12, 81.4], [1.62920269E12, 129.8], [1.62920252E12, 26.6], [1.62920312E12, 142.8], [1.62920329E12, 149.5], [1.62920279E12, 69.3], [1.62920262E12, 44.6], [1.62920322E12, 105.9], [1.62920288E12, 148.6], [1.62920305E12, 131.1], [1.62920287E12, 131.2], [1.6292027E12, 144.6], [1.62920253E12, 75.8], [1.6292033E12, 142.8], [1.62920296E12, 94.1], [1.62920313E12, 119.0], [1.62920263E12, 19.7], [1.62920246E12, 1.0], [1.62920306E12, 149.0], [1.62920323E12, 131.2], [1.62920289E12, 149.6], [1.62920272E12, 147.6], [1.62920271E12, 148.1], [1.62920254E12, 140.7], [1.62920314E12, 94.4], [1.62920331E12, 119.0], [1.6292028E12, 44.7], [1.62920297E12, 69.3], [1.62920247E12, 1.5], [1.62920324E12, 147.1], [1.6292029E12, 149.7], [1.62920307E12, 61.9], [1.62920273E12, 148.2], [1.62920256E12, 147.1], [1.62920255E12, 149.9], [1.62920332E12, 94.2], [1.62920298E12, 44.9], [1.62920315E12, 69.3], [1.62920281E12, 19.9], [1.62920264E12, 8.9]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62920336E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.62920246E12, "maxY": 151.3, "series": [{"data": [[1.62920308E12, 151.2], [1.62920325E12, 148.5], [1.62920291E12, 149.6], [1.62920274E12, 146.8], [1.62920257E12, 151.3], [1.62920316E12, 44.9], [1.62920333E12, 69.4], [1.62920282E12, 8.7], [1.62920299E12, 19.9], [1.62920265E12, 32.4], [1.62920248E12, 2.3], [1.62920326E12, 149.9], [1.62920292E12, 149.4], [1.62920309E12, 149.4], [1.62920275E12, 150.0], [1.62920258E12, 143.1], [1.62920334E12, 44.4], [1.629203E12, 8.8], [1.62920317E12, 20.0], [1.62920283E12, 32.2], [1.62920266E12, 57.0], [1.62920249E12, 0.9], [1.6292031E12, 142.0], [1.62920327E12, 148.9], [1.62920293E12, 150.0], [1.62920276E12, 142.6], [1.62920259E12, 115.9], [1.62920336E12, 1.2], [1.62920318E12, 8.8], [1.62920335E12, 20.0], [1.62920284E12, 56.6], [1.62920301E12, 32.4], [1.62920267E12, 81.5], [1.6292025E12, 17.0], [1.62920294E12, 142.7], [1.62920311E12, 149.6], [1.62920277E12, 119.3], [1.6292026E12, 92.4], [1.6292032E12, 57.0], [1.62920302E12, 57.0], [1.62920319E12, 32.5], [1.62920285E12, 81.6], [1.62920268E12, 105.9], [1.62920251E12, 20.9], [1.62920328E12, 149.7], [1.62920278E12, 93.5], [1.62920295E12, 119.3], [1.62920261E12, 69.5], [1.62920304E12, 106.6], [1.62920321E12, 81.9], [1.62920286E12, 106.4], [1.62920303E12, 81.4], [1.62920269E12, 129.8], [1.62920252E12, 26.6], [1.62920312E12, 142.8], [1.62920329E12, 149.5], [1.62920279E12, 69.3], [1.62920262E12, 44.6], [1.62920322E12, 105.9], [1.62920288E12, 148.6], [1.62920305E12, 131.1], [1.62920287E12, 131.2], [1.6292027E12, 144.6], [1.62920253E12, 75.8], [1.6292033E12, 142.8], [1.62920296E12, 94.1], [1.62920313E12, 119.0], [1.62920263E12, 19.7], [1.62920246E12, 1.0], [1.62920306E12, 149.0], [1.62920323E12, 131.2], [1.62920289E12, 149.6], [1.62920272E12, 147.6], [1.62920271E12, 148.1], [1.62920254E12, 140.7], [1.62920314E12, 94.4], [1.62920331E12, 119.0], [1.6292028E12, 44.7], [1.62920297E12, 69.3], [1.62920247E12, 1.5], [1.62920324E12, 147.1], [1.6292029E12, 149.7], [1.62920307E12, 61.9], [1.62920273E12, 148.2], [1.62920256E12, 147.1], [1.62920255E12, 149.9], [1.62920332E12, 94.2], [1.62920298E12, 44.9], [1.62920315E12, 69.3], [1.62920281E12, 19.9], [1.62920264E12, 8.9]], "isOverall": false, "label": "Sunstar Home-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62920336E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.62920246E12, "maxY": 151.3, "series": [{"data": [[1.62920308E12, 151.2], [1.62920325E12, 148.5], [1.62920291E12, 149.6], [1.62920274E12, 146.8], [1.62920257E12, 151.3], [1.62920316E12, 44.9], [1.62920333E12, 69.4], [1.62920282E12, 8.7], [1.62920299E12, 19.9], [1.62920265E12, 32.4], [1.62920248E12, 2.3], [1.62920326E12, 149.9], [1.62920292E12, 149.4], [1.62920309E12, 149.4], [1.62920275E12, 150.0], [1.62920258E12, 143.1], [1.62920334E12, 44.4], [1.629203E12, 8.8], [1.62920317E12, 20.0], [1.62920283E12, 32.2], [1.62920266E12, 57.0], [1.62920249E12, 0.9], [1.6292031E12, 142.0], [1.62920327E12, 148.9], [1.62920293E12, 150.0], [1.62920276E12, 142.6], [1.62920259E12, 115.9], [1.62920336E12, 1.2], [1.62920318E12, 8.8], [1.62920335E12, 20.0], [1.62920284E12, 56.6], [1.62920301E12, 32.4], [1.62920267E12, 81.5], [1.6292025E12, 17.0], [1.62920294E12, 142.7], [1.62920311E12, 149.6], [1.62920277E12, 119.3], [1.6292026E12, 92.4], [1.6292032E12, 57.0], [1.62920302E12, 57.0], [1.62920319E12, 32.5], [1.62920285E12, 81.6], [1.62920268E12, 105.9], [1.62920251E12, 20.9], [1.62920328E12, 149.7], [1.62920278E12, 93.5], [1.62920295E12, 119.3], [1.62920261E12, 69.5], [1.62920304E12, 106.6], [1.62920321E12, 81.9], [1.62920286E12, 106.4], [1.62920303E12, 81.4], [1.62920269E12, 129.8], [1.62920252E12, 26.6], [1.62920312E12, 142.8], [1.62920329E12, 149.5], [1.62920279E12, 69.3], [1.62920262E12, 44.6], [1.62920322E12, 105.9], [1.62920288E12, 148.6], [1.62920305E12, 131.1], [1.62920287E12, 131.2], [1.6292027E12, 144.6], [1.62920253E12, 75.8], [1.6292033E12, 142.8], [1.62920296E12, 94.1], [1.62920313E12, 119.0], [1.62920263E12, 19.7], [1.62920246E12, 1.0], [1.62920306E12, 149.0], [1.62920323E12, 131.2], [1.62920289E12, 149.6], [1.62920272E12, 147.6], [1.62920271E12, 148.1], [1.62920254E12, 140.7], [1.62920314E12, 94.4], [1.62920331E12, 119.0], [1.6292028E12, 44.7], [1.62920297E12, 69.3], [1.62920247E12, 1.5], [1.62920324E12, 147.1], [1.6292029E12, 149.7], [1.62920307E12, 61.9], [1.62920273E12, 148.2], [1.62920256E12, 147.1], [1.62920255E12, 149.9], [1.62920332E12, 94.2], [1.62920298E12, 44.9], [1.62920315E12, 69.3], [1.62920281E12, 19.9], [1.62920264E12, 8.9]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62920336E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

