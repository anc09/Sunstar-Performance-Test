/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "maxY": 180549.0, "series": [{"data": [[0.0, 10.0], [0.1, 12.0], [0.2, 12.0], [0.3, 12.0], [0.4, 12.0], [0.5, 12.0], [0.6, 12.0], [0.7, 13.0], [0.8, 13.0], [0.9, 13.0], [1.0, 13.0], [1.1, 13.0], [1.2, 13.0], [1.3, 13.0], [1.4, 13.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 13.0], [1.9, 14.0], [2.0, 14.0], [2.1, 14.0], [2.2, 14.0], [2.3, 14.0], [2.4, 14.0], [2.5, 14.0], [2.6, 14.0], [2.7, 14.0], [2.8, 14.0], [2.9, 14.0], [3.0, 14.0], [3.1, 14.0], [3.2, 14.0], [3.3, 14.0], [3.4, 14.0], [3.5, 14.0], [3.6, 15.0], [3.7, 15.0], [3.8, 15.0], [3.9, 15.0], [4.0, 15.0], [4.1, 15.0], [4.2, 15.0], [4.3, 15.0], [4.4, 15.0], [4.5, 15.0], [4.6, 15.0], [4.7, 15.0], [4.8, 15.0], [4.9, 15.0], [5.0, 15.0], [5.1, 15.0], [5.2, 15.0], [5.3, 15.0], [5.4, 15.0], [5.5, 15.0], [5.6, 16.0], [5.7, 16.0], [5.8, 16.0], [5.9, 16.0], [6.0, 16.0], [6.1, 16.0], [6.2, 16.0], [6.3, 16.0], [6.4, 16.0], [6.5, 16.0], [6.6, 16.0], [6.7, 16.0], [6.8, 16.0], [6.9, 16.0], [7.0, 16.0], [7.1, 16.0], [7.2, 16.0], [7.3, 16.0], [7.4, 16.0], [7.5, 16.0], [7.6, 16.0], [7.7, 16.0], [7.8, 17.0], [7.9, 17.0], [8.0, 17.0], [8.1, 17.0], [8.2, 17.0], [8.3, 17.0], [8.4, 17.0], [8.5, 17.0], [8.6, 17.0], [8.7, 17.0], [8.8, 17.0], [8.9, 17.0], [9.0, 17.0], [9.1, 17.0], [9.2, 17.0], [9.3, 17.0], [9.4, 17.0], [9.5, 17.0], [9.6, 17.0], [9.7, 17.0], [9.8, 17.0], [9.9, 17.0], [10.0, 17.0], [10.1, 18.0], [10.2, 18.0], [10.3, 18.0], [10.4, 18.0], [10.5, 18.0], [10.6, 18.0], [10.7, 18.0], [10.8, 18.0], [10.9, 18.0], [11.0, 18.0], [11.1, 18.0], [11.2, 18.0], [11.3, 18.0], [11.4, 18.0], [11.5, 18.0], [11.6, 18.0], [11.7, 18.0], [11.8, 18.0], [11.9, 18.0], [12.0, 18.0], [12.1, 18.0], [12.2, 18.0], [12.3, 19.0], [12.4, 19.0], [12.5, 19.0], [12.6, 19.0], [12.7, 19.0], [12.8, 19.0], [12.9, 19.0], [13.0, 19.0], [13.1, 19.0], [13.2, 19.0], [13.3, 19.0], [13.4, 19.0], [13.5, 19.0], [13.6, 19.0], [13.7, 19.0], [13.8, 19.0], [13.9, 19.0], [14.0, 19.0], [14.1, 19.0], [14.2, 19.0], [14.3, 20.0], [14.4, 20.0], [14.5, 20.0], [14.6, 20.0], [14.7, 20.0], [14.8, 20.0], [14.9, 20.0], [15.0, 20.0], [15.1, 20.0], [15.2, 20.0], [15.3, 20.0], [15.4, 20.0], [15.5, 20.0], [15.6, 20.0], [15.7, 20.0], [15.8, 20.0], [15.9, 20.0], [16.0, 20.0], [16.1, 21.0], [16.2, 21.0], [16.3, 21.0], [16.4, 21.0], [16.5, 21.0], [16.6, 21.0], [16.7, 21.0], [16.8, 21.0], [16.9, 21.0], [17.0, 21.0], [17.1, 21.0], [17.2, 21.0], [17.3, 21.0], [17.4, 21.0], [17.5, 21.0], [17.6, 21.0], [17.7, 21.0], [17.8, 21.0], [17.9, 21.0], [18.0, 21.0], [18.1, 21.0], [18.2, 21.0], [18.3, 22.0], [18.4, 22.0], [18.5, 22.0], [18.6, 22.0], [18.7, 22.0], [18.8, 22.0], [18.9, 22.0], [19.0, 22.0], [19.1, 22.0], [19.2, 22.0], [19.3, 22.0], [19.4, 22.0], [19.5, 22.0], [19.6, 22.0], [19.7, 22.0], [19.8, 22.0], [19.9, 22.0], [20.0, 22.0], [20.1, 22.0], [20.2, 22.0], [20.3, 22.0], [20.4, 22.0], [20.5, 22.0], [20.6, 22.0], [20.7, 22.0], [20.8, 23.0], [20.9, 23.0], [21.0, 23.0], [21.1, 23.0], [21.2, 23.0], [21.3, 23.0], [21.4, 23.0], [21.5, 23.0], [21.6, 23.0], [21.7, 23.0], [21.8, 23.0], [21.9, 23.0], [22.0, 23.0], [22.1, 23.0], [22.2, 23.0], [22.3, 23.0], [22.4, 23.0], [22.5, 23.0], [22.6, 23.0], [22.7, 23.0], [22.8, 23.0], [22.9, 23.0], [23.0, 23.0], [23.1, 23.0], [23.2, 24.0], [23.3, 24.0], [23.4, 24.0], [23.5, 24.0], [23.6, 24.0], [23.7, 24.0], [23.8, 24.0], [23.9, 24.0], [24.0, 24.0], [24.1, 24.0], [24.2, 24.0], [24.3, 24.0], [24.4, 24.0], [24.5, 24.0], [24.6, 24.0], [24.7, 24.0], [24.8, 24.0], [24.9, 24.0], [25.0, 24.0], [25.1, 24.0], [25.2, 24.0], [25.3, 24.0], [25.4, 24.0], [25.5, 24.0], [25.6, 24.0], [25.7, 25.0], [25.8, 25.0], [25.9, 25.0], [26.0, 25.0], [26.1, 25.0], [26.2, 25.0], [26.3, 25.0], [26.4, 25.0], [26.5, 25.0], [26.6, 25.0], [26.7, 25.0], [26.8, 25.0], [26.9, 25.0], [27.0, 25.0], [27.1, 25.0], [27.2, 25.0], [27.3, 25.0], [27.4, 25.0], [27.5, 25.0], [27.6, 25.0], [27.7, 25.0], [27.8, 25.0], [27.9, 25.0], [28.0, 25.0], [28.1, 26.0], [28.2, 26.0], [28.3, 26.0], [28.4, 26.0], [28.5, 26.0], [28.6, 26.0], [28.7, 26.0], [28.8, 26.0], [28.9, 26.0], [29.0, 26.0], [29.1, 26.0], [29.2, 26.0], [29.3, 26.0], [29.4, 26.0], [29.5, 26.0], [29.6, 26.0], [29.7, 26.0], [29.8, 26.0], [29.9, 26.0], [30.0, 26.0], [30.1, 26.0], [30.2, 27.0], [30.3, 27.0], [30.4, 27.0], [30.5, 27.0], [30.6, 27.0], [30.7, 27.0], [30.8, 27.0], [30.9, 27.0], [31.0, 27.0], [31.1, 27.0], [31.2, 27.0], [31.3, 27.0], [31.4, 27.0], [31.5, 27.0], [31.6, 27.0], [31.7, 27.0], [31.8, 27.0], [31.9, 27.0], [32.0, 27.0], [32.1, 27.0], [32.2, 28.0], [32.3, 28.0], [32.4, 28.0], [32.5, 28.0], [32.6, 28.0], [32.7, 28.0], [32.8, 28.0], [32.9, 28.0], [33.0, 28.0], [33.1, 28.0], [33.2, 28.0], [33.3, 28.0], [33.4, 28.0], [33.5, 28.0], [33.6, 28.0], [33.7, 28.0], [33.8, 28.0], [33.9, 29.0], [34.0, 29.0], [34.1, 29.0], [34.2, 29.0], [34.3, 29.0], [34.4, 29.0], [34.5, 29.0], [34.6, 29.0], [34.7, 29.0], [34.8, 29.0], [34.9, 29.0], [35.0, 29.0], [35.1, 29.0], [35.2, 29.0], [35.3, 29.0], [35.4, 29.0], [35.5, 30.0], [35.6, 30.0], [35.7, 30.0], [35.8, 30.0], [35.9, 30.0], [36.0, 30.0], [36.1, 30.0], [36.2, 30.0], [36.3, 30.0], [36.4, 30.0], [36.5, 30.0], [36.6, 30.0], [36.7, 30.0], [36.8, 30.0], [36.9, 30.0], [37.0, 31.0], [37.1, 31.0], [37.2, 31.0], [37.3, 31.0], [37.4, 31.0], [37.5, 31.0], [37.6, 31.0], [37.7, 31.0], [37.8, 31.0], [37.9, 31.0], [38.0, 31.0], [38.1, 31.0], [38.2, 31.0], [38.3, 32.0], [38.4, 32.0], [38.5, 32.0], [38.6, 32.0], [38.7, 32.0], [38.8, 32.0], [38.9, 32.0], [39.0, 32.0], [39.1, 32.0], [39.2, 32.0], [39.3, 32.0], [39.4, 32.0], [39.5, 33.0], [39.6, 33.0], [39.7, 33.0], [39.8, 33.0], [39.9, 33.0], [40.0, 33.0], [40.1, 33.0], [40.2, 33.0], [40.3, 33.0], [40.4, 33.0], [40.5, 33.0], [40.6, 33.0], [40.7, 33.0], [40.8, 34.0], [40.9, 34.0], [41.0, 34.0], [41.1, 34.0], [41.2, 34.0], [41.3, 34.0], [41.4, 34.0], [41.5, 34.0], [41.6, 34.0], [41.7, 34.0], [41.8, 35.0], [41.9, 35.0], [42.0, 35.0], [42.1, 35.0], [42.2, 35.0], [42.3, 35.0], [42.4, 35.0], [42.5, 35.0], [42.6, 35.0], [42.7, 35.0], [42.8, 36.0], [42.9, 36.0], [43.0, 36.0], [43.1, 36.0], [43.2, 36.0], [43.3, 36.0], [43.4, 36.0], [43.5, 36.0], [43.6, 36.0], [43.7, 36.0], [43.8, 37.0], [43.9, 37.0], [44.0, 37.0], [44.1, 37.0], [44.2, 37.0], [44.3, 37.0], [44.4, 37.0], [44.5, 37.0], [44.6, 37.0], [44.7, 37.0], [44.8, 38.0], [44.9, 38.0], [45.0, 38.0], [45.1, 38.0], [45.2, 38.0], [45.3, 38.0], [45.4, 38.0], [45.5, 38.0], [45.6, 39.0], [45.7, 39.0], [45.8, 39.0], [45.9, 39.0], [46.0, 39.0], [46.1, 39.0], [46.2, 39.0], [46.3, 39.0], [46.4, 40.0], [46.5, 40.0], [46.6, 40.0], [46.7, 40.0], [46.8, 40.0], [46.9, 40.0], [47.0, 40.0], [47.1, 41.0], [47.2, 41.0], [47.3, 41.0], [47.4, 41.0], [47.5, 41.0], [47.6, 41.0], [47.7, 42.0], [47.8, 42.0], [47.9, 42.0], [48.0, 42.0], [48.1, 42.0], [48.2, 42.0], [48.3, 42.0], [48.4, 43.0], [48.5, 43.0], [48.6, 43.0], [48.7, 43.0], [48.8, 43.0], [48.9, 43.0], [49.0, 44.0], [49.1, 44.0], [49.2, 44.0], [49.3, 44.0], [49.4, 44.0], [49.5, 45.0], [49.6, 45.0], [49.7, 45.0], [49.8, 45.0], [49.9, 45.0], [50.0, 45.0], [50.1, 46.0], [50.2, 46.0], [50.3, 46.0], [50.4, 46.0], [50.5, 46.0], [50.6, 46.0], [50.7, 46.0], [50.8, 47.0], [50.9, 47.0], [51.0, 47.0], [51.1, 47.0], [51.2, 47.0], [51.3, 47.0], [51.4, 47.0], [51.5, 47.0], [51.6, 48.0], [51.7, 48.0], [51.8, 48.0], [51.9, 48.0], [52.0, 48.0], [52.1, 48.0], [52.2, 48.0], [52.3, 49.0], [52.4, 49.0], [52.5, 49.0], [52.6, 49.0], [52.7, 49.0], [52.8, 49.0], [52.9, 49.0], [53.0, 49.0], [53.1, 50.0], [53.2, 50.0], [53.3, 50.0], [53.4, 50.0], [53.5, 50.0], [53.6, 50.0], [53.7, 50.0], [53.8, 50.0], [53.9, 51.0], [54.0, 51.0], [54.1, 51.0], [54.2, 51.0], [54.3, 51.0], [54.4, 51.0], [54.5, 51.0], [54.6, 51.0], [54.7, 51.0], [54.8, 52.0], [54.9, 52.0], [55.0, 52.0], [55.1, 52.0], [55.2, 52.0], [55.3, 52.0], [55.4, 52.0], [55.5, 52.0], [55.6, 52.0], [55.7, 52.0], [55.8, 53.0], [55.9, 53.0], [56.0, 53.0], [56.1, 53.0], [56.2, 53.0], [56.3, 53.0], [56.4, 53.0], [56.5, 53.0], [56.6, 53.0], [56.7, 54.0], [56.8, 54.0], [56.9, 54.0], [57.0, 54.0], [57.1, 54.0], [57.2, 54.0], [57.3, 54.0], [57.4, 54.0], [57.5, 55.0], [57.6, 55.0], [57.7, 55.0], [57.8, 55.0], [57.9, 55.0], [58.0, 55.0], [58.1, 55.0], [58.2, 55.0], [58.3, 55.0], [58.4, 55.0], [58.5, 56.0], [58.6, 56.0], [58.7, 56.0], [58.8, 56.0], [58.9, 56.0], [59.0, 56.0], [59.1, 56.0], [59.2, 56.0], [59.3, 56.0], [59.4, 57.0], [59.5, 57.0], [59.6, 57.0], [59.7, 57.0], [59.8, 57.0], [59.9, 57.0], [60.0, 57.0], [60.1, 57.0], [60.2, 57.0], [60.3, 58.0], [60.4, 58.0], [60.5, 58.0], [60.6, 58.0], [60.7, 58.0], [60.8, 58.0], [60.9, 58.0], [61.0, 58.0], [61.1, 58.0], [61.2, 59.0], [61.3, 59.0], [61.4, 59.0], [61.5, 59.0], [61.6, 59.0], [61.7, 59.0], [61.8, 59.0], [61.9, 59.0], [62.0, 59.0], [62.1, 60.0], [62.2, 60.0], [62.3, 60.0], [62.4, 60.0], [62.5, 60.0], [62.6, 60.0], [62.7, 60.0], [62.8, 60.0], [62.9, 60.0], [63.0, 60.0], [63.1, 61.0], [63.2, 61.0], [63.3, 61.0], [63.4, 61.0], [63.5, 61.0], [63.6, 61.0], [63.7, 61.0], [63.8, 61.0], [63.9, 62.0], [64.0, 62.0], [64.1, 62.0], [64.2, 62.0], [64.3, 62.0], [64.4, 62.0], [64.5, 62.0], [64.6, 62.0], [64.7, 62.0], [64.8, 63.0], [64.9, 63.0], [65.0, 63.0], [65.1, 63.0], [65.2, 63.0], [65.3, 63.0], [65.4, 63.0], [65.5, 63.0], [65.6, 64.0], [65.7, 64.0], [65.8, 64.0], [65.9, 64.0], [66.0, 64.0], [66.1, 64.0], [66.2, 64.0], [66.3, 65.0], [66.4, 65.0], [66.5, 65.0], [66.6, 65.0], [66.7, 65.0], [66.8, 65.0], [66.9, 65.0], [67.0, 66.0], [67.1, 66.0], [67.2, 66.0], [67.3, 66.0], [67.4, 66.0], [67.5, 66.0], [67.6, 67.0], [67.7, 67.0], [67.8, 67.0], [67.9, 67.0], [68.0, 67.0], [68.1, 67.0], [68.2, 67.0], [68.3, 68.0], [68.4, 68.0], [68.5, 68.0], [68.6, 68.0], [68.7, 68.0], [68.8, 68.0], [68.9, 69.0], [69.0, 69.0], [69.1, 69.0], [69.2, 69.0], [69.3, 69.0], [69.4, 69.0], [69.5, 70.0], [69.6, 70.0], [69.7, 70.0], [69.8, 70.0], [69.9, 70.0], [70.0, 71.0], [70.1, 71.0], [70.2, 71.0], [70.3, 71.0], [70.4, 71.0], [70.5, 71.0], [70.6, 72.0], [70.7, 72.0], [70.8, 72.0], [70.9, 72.0], [71.0, 72.0], [71.1, 73.0], [71.2, 73.0], [71.3, 73.0], [71.4, 73.0], [71.5, 73.0], [71.6, 74.0], [71.7, 74.0], [71.8, 74.0], [71.9, 74.0], [72.0, 74.0], [72.1, 75.0], [72.2, 75.0], [72.3, 75.0], [72.4, 75.0], [72.5, 76.0], [72.6, 76.0], [72.7, 76.0], [72.8, 76.0], [72.9, 76.0], [73.0, 77.0], [73.1, 77.0], [73.2, 77.0], [73.3, 77.0], [73.4, 78.0], [73.5, 78.0], [73.6, 78.0], [73.7, 78.0], [73.8, 79.0], [73.9, 79.0], [74.0, 79.0], [74.1, 79.0], [74.2, 80.0], [74.3, 80.0], [74.4, 80.0], [74.5, 80.0], [74.6, 81.0], [74.7, 81.0], [74.8, 81.0], [74.9, 82.0], [75.0, 82.0], [75.1, 82.0], [75.2, 83.0], [75.3, 83.0], [75.4, 83.0], [75.5, 83.0], [75.6, 84.0], [75.7, 84.0], [75.8, 84.0], [75.9, 85.0], [76.0, 85.0], [76.1, 85.0], [76.2, 86.0], [76.3, 86.0], [76.4, 86.0], [76.5, 87.0], [76.6, 87.0], [76.7, 87.0], [76.8, 87.0], [76.9, 88.0], [77.0, 88.0], [77.1, 88.0], [77.2, 89.0], [77.3, 89.0], [77.4, 89.0], [77.5, 90.0], [77.6, 90.0], [77.7, 91.0], [77.8, 91.0], [77.9, 91.0], [78.0, 92.0], [78.1, 92.0], [78.2, 92.0], [78.3, 93.0], [78.4, 93.0], [78.5, 93.0], [78.6, 94.0], [78.7, 94.0], [78.8, 95.0], [78.9, 95.0], [79.0, 95.0], [79.1, 96.0], [79.2, 96.0], [79.3, 97.0], [79.4, 97.0], [79.5, 98.0], [79.6, 98.0], [79.7, 99.0], [79.8, 99.0], [79.9, 99.0], [80.0, 100.0], [80.1, 100.0], [80.2, 101.0], [80.3, 101.0], [80.4, 102.0], [80.5, 102.0], [80.6, 103.0], [80.7, 103.0], [80.8, 103.0], [80.9, 104.0], [81.0, 104.0], [81.1, 104.0], [81.2, 105.0], [81.3, 106.0], [81.4, 106.0], [81.5, 107.0], [81.6, 107.0], [81.7, 108.0], [81.8, 108.0], [81.9, 108.0], [82.0, 109.0], [82.1, 109.0], [82.2, 110.0], [82.3, 110.0], [82.4, 111.0], [82.5, 111.0], [82.6, 112.0], [82.7, 112.0], [82.8, 112.0], [82.9, 113.0], [83.0, 114.0], [83.1, 114.0], [83.2, 115.0], [83.3, 115.0], [83.4, 116.0], [83.5, 116.0], [83.6, 116.0], [83.7, 117.0], [83.8, 117.0], [83.9, 118.0], [84.0, 118.0], [84.1, 119.0], [84.2, 119.0], [84.3, 120.0], [84.4, 120.0], [84.5, 121.0], [84.6, 121.0], [84.7, 122.0], [84.8, 122.0], [84.9, 123.0], [85.0, 123.0], [85.1, 124.0], [85.2, 124.0], [85.3, 125.0], [85.4, 125.0], [85.5, 126.0], [85.6, 127.0], [85.7, 127.0], [85.8, 127.0], [85.9, 128.0], [86.0, 128.0], [86.1, 129.0], [86.2, 129.0], [86.3, 130.0], [86.4, 131.0], [86.5, 131.0], [86.6, 132.0], [86.7, 132.0], [86.8, 133.0], [86.9, 134.0], [87.0, 134.0], [87.1, 135.0], [87.2, 135.0], [87.3, 136.0], [87.4, 137.0], [87.5, 137.0], [87.6, 138.0], [87.7, 138.0], [87.8, 139.0], [87.9, 140.0], [88.0, 140.0], [88.1, 141.0], [88.2, 141.0], [88.3, 142.0], [88.4, 143.0], [88.5, 143.0], [88.6, 144.0], [88.7, 145.0], [88.8, 145.0], [88.9, 146.0], [89.0, 147.0], [89.1, 148.0], [89.2, 148.0], [89.3, 149.0], [89.4, 150.0], [89.5, 151.0], [89.6, 151.0], [89.7, 152.0], [89.8, 153.0], [89.9, 153.0], [90.0, 154.0], [90.1, 155.0], [90.2, 156.0], [90.3, 157.0], [90.4, 158.0], [90.5, 159.0], [90.6, 160.0], [90.7, 160.0], [90.8, 161.0], [90.9, 162.0], [91.0, 163.0], [91.1, 164.0], [91.2, 165.0], [91.3, 166.0], [91.4, 167.0], [91.5, 169.0], [91.6, 170.0], [91.7, 171.0], [91.8, 173.0], [91.9, 174.0], [92.0, 175.0], [92.1, 176.0], [92.2, 177.0], [92.3, 179.0], [92.4, 180.0], [92.5, 182.0], [92.6, 183.0], [92.7, 185.0], [92.8, 186.0], [92.9, 188.0], [93.0, 189.0], [93.1, 191.0], [93.2, 193.0], [93.3, 195.0], [93.4, 197.0], [93.5, 199.0], [93.6, 200.0], [93.7, 203.0], [93.8, 204.0], [93.9, 207.0], [94.0, 209.0], [94.1, 211.0], [94.2, 213.0], [94.3, 216.0], [94.4, 219.0], [94.5, 221.0], [94.6, 224.0], [94.7, 226.0], [94.8, 229.0], [94.9, 232.0], [95.0, 235.0], [95.1, 238.0], [95.2, 242.0], [95.3, 246.0], [95.4, 250.0], [95.5, 254.0], [95.6, 260.0], [95.7, 268.0], [95.8, 278.0], [95.9, 287.0], [96.0, 309.0], [96.1, 345.0], [96.2, 422.0], [96.3, 452.0], [96.4, 475.0], [96.5, 496.0], [96.6, 514.0], [96.7, 569.0], [96.8, 636.0], [96.9, 692.0], [97.0, 749.0], [97.1, 809.0], [97.2, 861.0], [97.3, 893.0], [97.4, 934.0], [97.5, 965.0], [97.6, 995.0], [97.7, 1018.0], [97.8, 1047.0], [97.9, 1081.0], [98.0, 1166.0], [98.1, 1196.0], [98.2, 1251.0], [98.3, 1341.0], [98.4, 1429.0], [98.5, 1560.0], [98.6, 1746.0], [98.7, 1800.0], [98.8, 1856.0], [98.9, 2051.0], [99.0, 2245.0], [99.1, 2513.0], [99.2, 60087.0], [99.3, 60254.0], [99.4, 60595.0], [99.5, 60706.0], [99.6, 60922.0], [99.7, 61336.0], [99.8, 61623.0], [99.9, 120401.0]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 44522.0, "series": [{"data": [[0.0, 44522.0], [600.0, 96.0], [700.0, 102.0], [180000.0, 2.0], [180400.0, 1.0], [800.0, 134.0], [900.0, 161.0], [1000.0, 173.0], [1100.0, 99.0], [1200.0, 78.0], [1300.0, 69.0], [1400.0, 43.0], [1500.0, 37.0], [1600.0, 27.0], [1700.0, 76.0], [1800.0, 73.0], [1900.0, 26.0], [2000.0, 28.0], [2100.0, 31.0], [2200.0, 20.0], [2300.0, 16.0], [2400.0, 27.0], [2500.0, 10.0], [2600.0, 1.0], [180100.0, 4.0], [180500.0, 1.0], [4100.0, 1.0], [120100.0, 7.0], [120700.0, 7.0], [121100.0, 1.0], [120300.0, 8.0], [120500.0, 3.0], [120900.0, 2.0], [7900.0, 1.0], [180200.0, 1.0], [13300.0, 1.0], [19100.0, 1.0], [100.0, 7596.0], [29300.0, 1.0], [180300.0, 1.0], [50400.0, 1.0], [200.0, 1347.0], [58300.0, 1.0], [61000.0, 14.0], [60300.0, 6.0], [60100.0, 47.0], [60000.0, 46.0], [60400.0, 37.0], [60200.0, 10.0], [60600.0, 48.0], [60700.0, 46.0], [60800.0, 13.0], [60900.0, 19.0], [60500.0, 7.0], [61100.0, 13.0], [61300.0, 12.0], [61200.0, 8.0], [61400.0, 30.0], [61600.0, 8.0], [61700.0, 9.0], [61500.0, 18.0], [61800.0, 7.0], [300.0, 114.0], [400.0, 199.0], [120400.0, 19.0], [121000.0, 1.0], [120000.0, 15.0], [120200.0, 2.0], [120600.0, 3.0], [120800.0, 10.0], [500.0, 114.0]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 180500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 195.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 53613.0, "series": [{"data": [[0.0, 53613.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 195.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 502.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1402.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.62920802E12, "maxY": 1829.1857923497278, "series": [{"data": [[1.62920803E12, 1438.8575063613232], [1.6292088E12, 28.0], [1.62920837E12, 37.82998324958127], [1.62920871E12, 17.0], [1.62920854E12, 15.091001011122342], [1.62920845E12, 25.0], [1.62920879E12, 32.5472673559822], [1.62920862E12, 17.0], [1.62920881E12, 28.0], [1.62920864E12, 17.0], [1.62920804E12, 1034.4832535885175], [1.62920855E12, 16.603896103896144], [1.62920838E12, 19.791871058164013], [1.62920872E12, 17.0], [1.62920812E12, 21.08], [1.62920863E12, 17.0], [1.62920846E12, 20.30520117762512], [1.62920865E12, 17.0], [1.62920848E12, 13.0], [1.62920882E12, 18.729411764705922], [1.62920839E12, 26.5839464882943], [1.62920805E12, 608.3202764976959], [1.62920873E12, 17.0], [1.62920856E12, 18.874226804123744], [1.62920847E12, 12.877124183006535], [1.62920849E12, 13.0], [1.62920832E12, 30.0], [1.62920883E12, 14.0], [1.62920866E12, 17.0], [1.62920806E12, 355.80882352941165], [1.62920857E12, 25.20749063670412], [1.6292084E12, 29.86576271186438], [1.62920874E12, 17.189596167008876], [1.62920814E12, 7.5], [1.62920831E12, 29.72950819672132], [1.62920833E12, 29.99586776859504], [1.62920816E12, 6.0], [1.62920867E12, 17.0], [1.6292085E12, 13.0], [1.62920807E12, 272.9000000000002], [1.62920884E12, 14.0], [1.62920841E12, 34.0], [1.62920875E12, 18.0], [1.62920858E12, 26.0], [1.62920851E12, 13.0], [1.62920834E12, 29.99795918367348], [1.62920885E12, 14.0], [1.62920868E12, 17.0], [1.62920808E12, 145.7828947368421], [1.62920859E12, 26.0], [1.62920842E12, 35.18829858776062], [1.62920876E12, 21.242758620689642], [1.62920818E12, 4.0], [1.62920835E12, 32.34871099050205], [1.62920869E12, 17.0], [1.62920852E12, 13.0], [1.62920886E12, 13.150943396226413], [1.62920843E12, 40.84694577899788], [1.62920809E12, 68.5], [1.62920877E12, 26.5818791946309], [1.6292086E12, 26.0], [1.62920802E12, 1829.1857923497278], [1.62920819E12, 3.0], [1.62920853E12, 13.631720430107519], [1.62920836E12, 36.925576519916206], [1.6292087E12, 17.0], [1.6292081E12, 50.70588235294118], [1.62920861E12, 14.233870967741934], [1.62920844E12, 37.81346801346788], [1.62920878E12, 27.28676470588236]], "isOverall": false, "label": "bzm - Concurrency Thread Group-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62920886E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 33.53908045977015, "minX": 3.0, "maxY": 180260.33333333334, "series": [{"data": [[3.0, 180260.33333333334], [4.0, 150278.0], [5.0, 90132.0], [6.0, 90196.0], [7.0, 60100.5], [8.0, 89228.5], [9.0, 69784.0], [10.0, 62517.5], [11.0, 64431.0], [12.0, 349.39869281045776], [13.0, 204.49346120313874], [14.0, 231.8569771936606], [15.0, 294.8958641063515], [16.0, 33.53908045977015], [17.0, 123.15012085635419], [18.0, 249.54060509554148], [19.0, 204.5520762423418], [20.0, 521.8283828382839], [21.0, 911.0872483221482], [22.0, 351.95777777777784], [23.0, 209.27549947423742], [24.0, 496.3642384105962], [25.0, 195.263775676557], [26.0, 129.71206455422137], [27.0, 99.20516021639625], [28.0, 225.848051727072], [29.0, 728.1333333333333], [30.0, 174.38364167478082], [31.0, 902.5442477876104], [33.0, 395.43936731107186], [32.0, 1354.9500713266752], [34.0, 209.3262380538664], [35.0, 432.683417085427], [37.0, 1097.8985507246375], [36.0, 304.1925391095064], [39.0, 575.7134146341466], [38.0, 195.69359756097583], [41.0, 5680.454545454545], [40.0, 3199.3500000000017], [43.0, 623.8333333333335], [42.0, 3948.8125], [45.0, 387.79581993569053], [44.0, 4636.851851851851], [47.0, 12174.400000000001], [46.0, 286.70202020202026], [48.0, 10196.750000000002], [49.0, 210.37058823529415], [51.0, 6475.999999999999], [50.0, 8804.961038961035], [53.0, 24184.6], [52.0, 1172.991150442478], [55.0, 24176.799999999996], [54.0, 40186.33333333333], [57.0, 9395.461538461535], [56.0, 165.29999999999998], [59.0, 24194.799999999996], [58.0, 17331.999999999996], [60.0, 60230.0], [61.0, 1724.2594936708858], [63.0, 60213.5], [62.0, 48187.0], [67.0, 120408.0], [66.0, 120416.0], [65.0, 120422.0], [64.0, 4059.7333333333354], [71.0, 120219.0], [70.0, 120077.0], [69.0, 60749.0], [68.0, 60721.0], [75.0, 120112.0], [74.0, 120067.0], [73.0, 120076.0], [72.0, 120077.0], [79.0, 120088.0], [78.0, 120100.0], [77.0, 120114.0], [76.0, 120214.0], [83.0, 121060.0], [82.0, 120074.0], [81.0, 120081.0], [80.0, 120101.0], [87.0, 120432.0], [86.0, 120153.0], [85.0, 120745.0], [84.0, 121183.0], [90.0, 60931.0], [89.0, 61155.0], [88.0, 61635.0], [95.0, 61511.0], [94.0, 60913.0], [93.0, 61623.0], [92.0, 60924.0], [99.0, 61581.0], [98.0, 61588.0], [97.0, 61233.0], [96.0, 61362.0], [103.0, 61122.0], [102.0, 61511.0], [101.0, 61553.0], [100.0, 61198.0], [106.0, 61598.0], [110.0, 61189.5], [109.0, 61884.0], [108.0, 61724.0], [115.0, 61185.0], [114.0, 61518.0], [113.0, 61491.0], [112.0, 61341.0], [119.0, 61511.0], [118.0, 61554.0], [117.0, 61544.0], [116.0, 61179.0], [123.0, 61543.0], [122.0, 61456.0], [121.0, 61855.0], [120.0, 61533.0], [127.0, 61473.0], [126.0, 61164.0], [125.0, 61498.0], [124.0, 61076.0], [135.0, 61803.0], [134.0, 61826.0], [133.0, 61491.0], [131.0, 61454.0], [130.0, 61530.0], [129.0, 60842.0], [128.0, 61441.0], [142.0, 61494.0], [141.0, 61630.0], [140.0, 61792.0], [139.0, 61818.0], [138.0, 61792.0], [137.0, 61523.0], [136.0, 61432.0], [151.0, 61475.0], [150.0, 61106.0], [149.0, 61110.0], [147.0, 61438.0], [146.0, 61586.0], [144.0, 61768.0], [159.0, 61558.0], [157.0, 61409.0], [156.0, 61043.5], [154.0, 61432.0], [153.0, 61744.0], [152.0, 61412.0], [167.0, 61384.0], [166.0, 61342.0], [165.0, 61444.0], [164.0, 61425.0], [163.0, 61462.0], [161.0, 61441.0], [160.0, 61467.0], [175.0, 61336.0], [174.0, 61331.0], [173.0, 61378.0], [171.0, 61232.5], [170.0, 61716.0], [168.0, 61746.0], [183.0, 61644.0], [182.0, 61297.0], [181.0, 61663.0], [180.0, 61646.0], [178.0, 61691.0], [177.0, 61330.0], [176.0, 61676.0], [191.0, 61387.0], [190.0, 61398.0], [188.0, 61423.0], [187.0, 61426.0], [186.0, 61440.0], [185.0, 61476.0], [184.0, 61275.0], [199.0, 60689.0], [198.0, 60670.0], [197.0, 60705.0], [196.0, 60698.0], [195.0, 60724.0], [194.0, 60801.0], [193.0, 60899.0], [192.0, 61417.0], [207.0, 60506.0], [206.0, 60478.0], [205.0, 60683.0], [204.0, 60670.0], [203.0, 60688.0], [202.0, 60676.0], [201.0, 60659.0], [200.0, 60659.0], [215.0, 60183.0], [214.0, 60109.0], [213.0, 60191.0], [212.0, 60278.0], [211.0, 60141.0], [210.0, 60176.0], [209.0, 60390.0], [208.0, 60466.0], [223.0, 60831.0], [222.0, 60788.0], [221.0, 60120.0], [219.0, 60133.0], [217.0, 60174.5], [229.0, 60708.0], [228.0, 60771.0], [224.0, 60714.0], [238.0, 60705.0], [237.0, 60781.0], [236.0, 60835.0], [235.0, 60716.0], [234.0, 60735.0], [233.0, 60841.0], [232.0, 60786.0], [245.0, 60711.5], [243.0, 60776.0], [242.0, 60806.5], [240.0, 60734.5], [255.0, 60682.0], [254.0, 60740.0], [253.0, 60687.0], [252.0, 60661.5], [250.0, 60768.0], [249.0, 60828.0], [248.0, 60749.5], [270.0, 60713.0], [271.0, 60715.0], [269.0, 60743.0], [268.0, 60652.0], [267.0, 60651.0], [266.0, 60699.0], [265.0, 60651.0], [263.0, 60700.0], [257.0, 60689.0], [256.0, 60723.2], [259.0, 60722.0], [258.0, 60533.0], [262.0, 60754.0], [260.0, 60741.0], [285.0, 60658.0], [287.0, 60680.5], [284.0, 60690.0], [273.0, 60675.5], [283.0, 60644.0], [282.0, 60694.0], [281.0, 60781.0], [280.0, 60693.0], [279.0, 60706.0], [278.0, 60693.5], [277.0, 60692.0], [302.0, 60646.0], [303.0, 60597.0], [301.0, 60634.0], [300.0, 60651.0], [299.0, 60675.0], [298.0, 60653.5], [296.0, 60761.0], [295.0, 60670.0], [289.0, 60683.5], [291.0, 60678.0], [290.0, 60686.0], [294.0, 60685.0], [293.0, 60678.0], [292.0, 60669.0], [317.0, 60277.0], [319.0, 60266.0], [316.0, 60277.0], [307.0, 60430.0], [306.0, 60507.0], [305.0, 60615.0], [304.0, 60595.0], [315.0, 60127.0], [314.0, 60137.0], [313.0, 60136.0], [312.0, 60129.5], [310.0, 60171.0], [309.0, 60298.0], [308.0, 60318.0], [323.0, 60483.0], [334.0, 60999.0], [333.0, 60480.5], [322.0, 61135.0], [321.0, 60252.0], [331.0, 60489.0], [330.0, 60741.5], [328.0, 60484.0], [327.0, 60478.0], [326.0, 60493.0], [325.0, 60510.0], [324.0, 60488.0], [339.0, 60485.0], [350.0, 60454.0], [351.0, 60474.0], [348.0, 61006.5], [346.0, 60625.0], [344.0, 60467.0], [342.0, 60460.0], [341.0, 61004.0], [340.0, 61021.0], [338.0, 61027.0], [337.0, 60791.0], [336.0, 61022.0], [367.0, 60559.25], [362.0, 60973.0], [361.0, 60993.0], [360.0, 60441.0], [359.0, 61030.0], [353.0, 60437.0], [352.0, 60932.0], [358.0, 60763.0], [357.0, 60735.5], [355.0, 60430.0], [354.0, 60462.0], [382.0, 60836.0], [383.0, 60797.0], [381.0, 60829.0], [380.0, 60884.0], [379.0, 60401.0], [378.0, 60922.0], [377.0, 60956.0], [376.0, 60913.0], [375.0, 60934.0], [369.0, 60939.0], [368.0, 60938.0], [371.0, 60432.0], [370.0, 60981.0], [374.0, 60961.0], [373.0, 60946.0], [372.0, 60427.0], [397.0, 969.0], [398.0, 1006.0], [396.0, 965.0], [387.0, 60461.0], [386.0, 60600.0], [385.0, 60605.0], [384.0, 60701.0], [395.0, 1222.0], [394.0, 904.0], [393.0, 960.0], [392.0, 967.0], [391.0, 1039.0], [390.0, 1119.0], [389.0, 60247.0], [388.0, 60465.0], [414.0, 1838.0], [409.0, 952.0], [406.0, 1206.0], [403.0, 1066.5], [402.0, 1267.0], [401.0, 1179.0], [430.0, 1386.5], [428.0, 1411.0], [427.0, 955.0], [425.0, 1088.0], [424.0, 1168.0], [419.0, 1796.0], [446.0, 1766.0], [447.0, 1860.0], [445.0, 1789.0], [444.0, 1561.8571428571431], [442.0, 1206.5], [441.0, 1767.0], [440.0, 1083.0], [437.0, 1520.0], [434.0, 1204.5], [432.0, 1388.5], [436.0, 1812.0], [462.0, 1829.0], [463.0, 1205.0], [461.0, 1827.0], [450.0, 1825.5], [448.0, 1766.0], [459.0, 1483.5], [457.0, 1795.0], [456.0, 1816.0], [455.0, 1830.0], [454.0, 1806.5], [452.0, 1786.0], [478.0, 1791.0], [479.0, 1199.0], [477.0, 1197.0], [476.0, 1469.5], [475.0, 1803.0], [474.0, 1492.5], [472.0, 1490.5], [470.0, 1758.0], [465.0, 1789.5], [467.0, 1766.0], [466.0, 1767.0], [469.0, 1812.0], [468.0, 1840.0], [494.0, 1736.0], [495.0, 1767.0], [493.0, 1828.0], [492.0, 1754.0], [491.0, 1747.0], [490.0, 1765.0], [489.0, 1824.0], [488.0, 1806.0], [487.0, 1737.0], [481.0, 1799.0], [480.0, 1784.0], [483.0, 1801.0], [482.0, 1781.0], [486.0, 1203.0], [485.0, 1804.0], [484.0, 1738.0], [510.0, 1798.0], [511.0, 1738.0], [509.0, 1163.0], [508.0, 1737.0], [507.0, 1785.0], [506.0, 1725.0], [505.0, 1807.0], [504.0, 1817.0], [503.0, 1817.0], [497.0, 1738.0], [496.0, 1825.0], [499.0, 1777.5], [498.0, 1761.0], [502.0, 1732.0], [501.0, 1782.0], [500.0, 1171.0], [540.0, 999.0], [528.0, 1637.5], [530.0, 1689.0], [532.0, 1610.0], [542.0, 1579.0], [538.0, 1596.0], [536.0, 1624.0], [526.0, 1730.0], [512.0, 1733.0], [514.0, 1177.0], [516.0, 1180.0], [518.0, 1365.0], [524.0, 1141.0], [522.0, 1166.0], [520.0, 1180.0], [534.0, 1555.0], [572.0, 1071.0], [560.0, 894.0], [562.0, 1457.0], [564.0, 1473.0], [574.0, 900.0], [570.0, 1054.0], [568.0, 1458.0], [544.0, 1556.0], [546.0, 1528.0], [548.0, 956.0], [550.0, 920.0], [558.0, 268.0], [556.0, 1502.0], [554.0, 1541.0], [552.0, 1560.0], [566.0, 1436.0], [604.0, 523.0], [594.0, 494.0], [606.0, 504.0], [592.0, 515.5], [602.0, 504.0], [582.0, 752.0], [580.0, 789.0], [578.0, 843.0], [576.0, 901.0], [590.0, 529.0], [588.0, 509.0], [586.0, 520.0], [598.0, 529.0], [596.0, 496.0], [632.0, 488.5], [638.0, 497.0], [636.0, 498.5], [634.0, 481.0], [614.0, 478.5], [612.0, 521.5], [610.0, 499.5], [608.0, 508.0], [622.0, 498.0], [620.0, 517.0], [618.0, 485.0], [630.0, 482.0], [628.0, 481.5], [626.0, 485.0], [624.0, 507.0], [666.0, 862.0], [670.0, 863.0], [658.0, 859.0], [656.0, 870.0], [660.0, 879.0], [664.0, 848.0], [646.0, 495.0], [644.0, 481.5], [642.0, 518.0], [640.0, 472.0], [654.0, 891.0], [652.0, 880.0], [650.0, 501.0], [648.0, 473.0], [662.0, 887.0], [700.0, 782.0], [688.0, 783.0], [690.0, 863.0], [692.0, 875.0], [698.0, 660.0], [696.0, 852.0], [678.0, 797.0], [676.0, 893.0], [686.0, 835.5], [684.0, 876.0], [682.0, 862.0], [680.0, 893.0], [694.0, 789.0], [732.0, 694.0], [734.0, 665.0], [720.0, 722.0], [722.0, 697.0], [724.0, 657.0], [730.0, 627.0], [728.0, 632.0], [710.0, 722.0], [708.0, 727.0], [706.0, 735.0], [704.0, 810.0], [718.0, 733.0], [716.0, 708.0], [714.0, 771.0], [712.0, 771.0], [726.0, 647.0], [764.0, 532.0], [752.0, 724.0], [754.0, 709.0], [756.0, 726.0], [766.0, 639.0], [762.0, 523.0], [760.0, 712.0], [736.0, 690.0], [738.0, 597.0], [740.0, 638.0], [742.0, 463.0], [748.0, 556.0], [746.0, 303.0], [744.0, 420.0], [758.0, 716.0], [796.0, 647.0], [798.0, 625.0], [788.0, 667.0], [784.0, 632.5], [786.0, 625.0], [772.0, 508.0], [770.0, 519.0], [782.0, 616.0], [780.0, 636.0], [778.0, 584.0], [776.0, 641.0], [790.0, 481.0], [828.0, 1017.0], [818.0, 506.0], [820.0, 375.0], [830.0, 1436.0], [826.0, 995.0], [824.0, 1073.0], [800.0, 462.0], [804.0, 467.0], [806.0, 500.0], [814.0, 510.0], [812.0, 537.0], [810.0, 580.0], [808.0, 623.0], [822.0, 538.0], [862.0, 1468.0], [848.0, 986.0], [860.0, 1384.5], [858.0, 1235.0], [856.0, 1181.5], [854.0, 1399.0], [850.0, 1501.0], [892.0, 1417.0], [894.0, 1309.0], [880.0, 1407.0], [882.0, 1433.0], [890.0, 1372.0], [888.0, 1446.0], [866.0, 1018.0], [878.0, 1399.0], [876.0, 1124.5], [872.0, 1353.0], [886.0, 1454.0], [884.0, 1344.0], [920.0, 1330.0], [926.0, 1367.0], [912.0, 1283.0], [914.0, 1370.0], [924.0, 1372.0], [910.0, 1333.0], [896.0, 1351.0], [898.0, 1286.0], [902.0, 1306.0], [906.0, 1355.0], [904.0, 1408.0], [916.0, 1230.0], [954.0, 1235.0], [958.0, 1251.5], [946.0, 1305.5], [948.0, 1305.0], [956.0, 1298.0], [934.0, 1236.0], [932.0, 1362.0], [930.0, 1363.0], [928.0, 1354.0], [942.0, 1253.0], [940.0, 1305.0], [938.0, 1321.0], [936.0, 1214.0], [950.0, 1319.5], [988.0, 1081.0], [990.0, 1031.0], [976.0, 60404.0], [978.0, 60390.0], [980.0, 60434.0], [986.0, 1013.0], [984.0, 1084.0], [966.0, 1202.0], [964.0, 1299.0], [962.0, 1325.0], [960.0, 1327.0], [974.0, 60398.0], [972.0, 1149.0], [970.0, 1180.0], [968.0, 1253.0], [982.0, 1024.0], [1020.0, 1010.0], [1022.0, 648.0], [1008.0, 1082.0], [1010.0, 1005.0], [1012.0, 1066.0], [1018.0, 1072.0], [1016.0, 1025.0], [996.0, 1046.0], [1004.0, 1014.0], [1000.0, 1059.0], [1014.0, 1044.0], [1032.0, 981.0], [1072.0, 743.0], [1076.0, 265.0], [1084.0, 492.0], [1080.0, 653.0], [1028.0, 600.0], [1036.0, 592.0], [1052.0, 781.0], [1048.0, 824.0], [1044.0, 965.0], [1040.0, 954.0], [1136.0, 716.0], [1144.0, 621.0], [1128.0, 730.0], [1120.0, 756.0], [1124.0, 736.0], [1132.0, 621.0], [1100.0, 520.0], [1096.0, 534.0], [1092.0, 319.0], [1088.0, 147.0], [1116.0, 613.0], [1112.0, 818.0], [1108.0, 528.0], [1104.0, 438.0], [1208.0, 642.5], [1212.0, 796.0], [1192.0, 1003.0], [1184.0, 432.0], [1188.0, 1048.0], [1196.0, 941.0], [1204.0, 439.0], [1200.0, 915.0], [1152.0, 727.0], [1156.0, 704.0], [1160.0, 662.0], [1164.0, 535.0], [1180.0, 1177.0], [1176.0, 1130.0], [1172.0, 528.0], [1272.0, 1176.0], [1268.0, 1173.0], [1248.0, 1638.5], [1256.0, 1164.0], [1260.0, 1188.5], [1276.0, 1164.0], [1264.0, 1200.0], [1216.0, 501.0], [1220.0, 473.5], [1228.0, 494.0], [1240.0, 444.0], [1236.0, 493.0], [1232.0, 428.0], [1336.0, 1743.5], [1340.0, 1006.0], [1312.0, 1904.0], [1316.0, 1965.0], [1320.0, 1933.0], [1324.0, 1964.5], [1332.0, 1855.0], [1328.0, 1843.0], [1292.0, 1184.5], [1284.0, 1194.0], [1280.0, 1973.0], [1300.0, 1179.0], [1296.0, 2005.0], [1396.0, 1823.0], [1376.0, 2325.0], [1380.0, 2264.0], [1384.0, 2233.0], [1404.0, 629.0], [1392.0, 2241.0], [1348.0, 2411.0], [1356.0, 2157.5], [1372.0, 1825.0], [1368.0, 2325.0], [1364.0, 991.0], [1360.0, 1960.0], [1456.0, 1329.5], [1464.0, 1891.0], [1468.0, 1865.0], [1440.0, 1940.0], [1444.0, 1236.0], [1448.0, 1236.0], [1420.0, 1959.0], [1416.0, 2007.0], [1412.0, 1401.0], [1408.0, 1629.0], [1436.0, 1234.0], [1432.0, 1290.5], [1428.0, 1965.0], [1424.0, 2053.0], [1524.0, 841.0], [1528.0, 827.0], [1532.0, 927.0], [1516.0, 860.0], [1520.0, 983.0], [1484.0, 1623.0], [1480.0, 1673.0], [1476.0, 1691.0], [1472.0, 1646.0], [1500.0, 996.0], [1496.0, 939.0], [1492.0, 1007.0], [1488.0, 1124.0], [1596.0, 1106.0], [1588.0, 1164.0], [1568.0, 1202.0], [1572.0, 1192.0], [1576.0, 1079.0], [1580.0, 759.5], [1584.0, 1122.0], [1536.0, 854.0], [1544.0, 496.5], [1548.0, 492.0], [1564.0, 454.0], [1560.0, 433.0], [1556.0, 471.0], [1552.0, 508.0], [1660.0, 272.0], [1636.0, 345.0], [1632.0, 841.0], [1640.0, 280.0], [1656.0, 243.0], [1652.0, 269.0], [1648.0, 282.0], [1612.0, 927.0], [1608.0, 879.5], [1604.0, 865.0], [1600.0, 1042.0], [1624.0, 861.0], [1620.0, 884.0], [1720.0, 1010.0], [1716.0, 1000.0], [1700.0, 1051.0], [1704.0, 1013.0], [1708.0, 931.0], [1724.0, 1003.0], [1712.0, 1017.0], [1668.0, 244.5], [1672.0, 1060.0], [1676.0, 1074.0], [1692.0, 1029.0], [1688.0, 1021.0], [1684.0, 1040.0], [1784.0, 852.0], [1780.0, 835.0], [1768.0, 818.0], [1772.0, 879.0], [1788.0, 820.0], [1776.0, 897.0], [1740.0, 887.0], [1728.0, 1018.0], [1756.0, 850.0], [1752.0, 952.0], [1748.0, 960.0], [1744.0, 1007.0], [1840.0, 1005.0], [1848.0, 1057.0], [1828.0, 1018.0], [1852.0, 1014.0], [1824.0, 446.0], [1832.0, 1040.0], [1804.0, 899.3333333333334], [1796.0, 499.0], [1792.0, 505.5], [1820.0, 1091.0], [1816.0, 1068.5], [1812.0, 478.0], [1912.0, 1618.3333333333333], [1896.0, 2246.0], [1900.0, 1530.0], [1916.0, 1705.0], [1904.0, 1718.6666666666667], [1868.0, 1856.0], [1860.0, 884.0], [1856.0, 950.0], [1980.0, 2084.0], [1952.0, 2467.0], [1956.0, 1472.0], [1960.0, 2097.0], [1964.0, 2469.0], [1972.0, 2169.0], [1928.0, 2484.0], [1924.0, 2179.5], [1920.0, 1963.0], [1948.0, 2009.5], [2000.0, 1567.5714285714287], [1081.0, 604.0], [1085.0, 568.0], [1057.0, 764.0], [1061.0, 797.6666666666666], [1065.0, 815.0], [1069.0, 789.5], [1077.0, 589.0], [1073.0, 735.0], [1025.0, 1059.0], [1029.0, 973.0], [1037.0, 1020.0], [1053.0, 825.0], [1049.0, 916.0], [1045.0, 558.0], [1041.0, 957.0], [1149.0, 788.3333333333334], [1121.0, 735.0], [1125.0, 756.0], [1129.0, 761.0], [1133.0, 724.0], [1145.0, 596.0], [1101.0, 476.0], [1097.0, 561.0], [1093.0, 472.0], [1089.0, 504.0], [1117.0, 640.0], [1113.0, 760.0], [1109.0, 526.0], [1105.0, 539.0], [1213.0, 734.0], [1185.0, 425.0], [1189.0, 995.0], [1193.0, 376.0], [1197.0, 482.0], [1209.0, 897.0], [1201.0, 446.0], [1153.0, 1207.0], [1157.0, 710.0], [1161.0, 656.0], [1165.0, 700.0], [1181.0, 1177.0], [1177.0, 521.0], [1169.0, 690.5], [1221.0, 494.0], [1265.0, 1165.5], [1249.0, 1993.0], [1253.0, 1600.5], [1217.0, 471.0], [1225.0, 489.5], [1241.0, 431.0], [1237.0, 452.0], [1233.0, 461.0], [1341.0, 1840.0], [1313.0, 2065.0], [1317.0, 2089.0], [1321.0, 1866.0], [1325.0, 2487.0], [1337.0, 2466.0], [1329.0, 2516.0], [1293.0, 1941.0], [1289.0, 1647.0], [1285.0, 1182.0], [1309.0, 1931.0], [1305.0, 1917.0], [1301.0, 2102.0], [1297.0, 1156.0], [1401.0, 2180.0], [1405.0, 1406.0], [1377.0, 2305.0], [1381.0, 2406.0], [1385.0, 2229.0], [1389.0, 1700.0], [1397.0, 2311.0], [1349.0, 2378.0], [1353.0, 2438.0], [1357.0, 1938.0], [1373.0, 1845.0], [1369.0, 1752.0], [1365.0, 2436.0], [1361.0, 2472.0], [1469.0, 1830.0], [1441.0, 1925.0], [1445.0, 1872.0], [1449.0, 1856.0], [1453.0, 1881.5], [1465.0, 1859.0], [1461.0, 1571.0], [1457.0, 1205.0], [1421.0, 2002.0], [1417.0, 1511.0], [1413.0, 2104.0], [1409.0, 2027.0], [1437.0, 1371.0], [1433.0, 1657.5], [1429.0, 1377.0], [1425.0, 1422.0], [1533.0, 913.0], [1505.0, 1013.0], [1509.0, 947.3333333333334], [1513.0, 927.0], [1517.0, 929.0], [1529.0, 888.0], [1521.0, 891.0], [1485.0, 1563.0], [1481.0, 1650.0], [1477.0, 1686.0], [1473.0, 1687.0], [1501.0, 1021.5], [1497.0, 1047.0], [1489.0, 1159.0], [1593.0, 1103.0], [1597.0, 313.0], [1569.0, 1184.0], [1573.0, 1180.0], [1577.0, 1181.0], [1581.0, 402.0], [1589.0, 1160.0], [1585.0, 1152.0], [1537.0, 555.0], [1541.0, 521.0], [1545.0, 483.0], [1549.0, 463.0], [1565.0, 1093.0], [1561.0, 1218.0], [1557.0, 1225.0], [1661.0, 274.0], [1633.0, 846.5], [1637.0, 316.0], [1641.0, 283.0], [1645.0, 284.0], [1649.0, 287.5], [1613.0, 958.0], [1609.0, 963.0], [1601.0, 940.0], [1629.0, 892.0], [1625.0, 861.0], [1621.0, 783.0], [1617.0, 881.0], [1713.0, 1004.0], [1721.0, 978.0], [1697.0, 1037.0], [1701.0, 990.0], [1705.0, 1029.0], [1709.0, 1004.0], [1665.0, 245.5], [1669.0, 243.0], [1673.0, 1047.0], [1689.0, 1077.0], [1685.0, 979.0], [1785.0, 714.0], [1769.0, 867.2500000000001], [1773.0, 795.0], [1789.0, 818.0], [1781.0, 831.0], [1777.0, 864.0], [1741.0, 940.0], [1737.0, 953.5], [1733.0, 931.5], [1757.0, 890.0], [1753.0, 985.0], [1749.0, 981.0], [1745.0, 953.0], [1845.0, 1058.0], [1853.0, 1043.0], [1825.0, 1042.0], [1829.0, 988.0], [1837.0, 1049.5], [1797.0, 501.0], [1821.0, 1033.0], [1817.0, 1088.0], [1813.0, 1048.0], [1909.0, 1525.0], [1897.0, 1552.0], [1901.0, 1548.0], [1913.0, 1751.0], [1869.0, 2245.0], [1865.0, 2155.5], [1861.0, 956.0], [1857.0, 984.0], [1885.0, 2504.0], [1881.0, 1560.0], [1877.0, 2243.5], [1873.0, 1547.0], [1973.0, 2437.0], [1961.0, 486.0], [1981.0, 1785.0], [1977.0, 1824.6666666666667], [1969.0, 2284.0], [1925.0, 2133.0], [1921.0, 1634.6666666666665], [1945.0, 2496.0], [1941.0, 2487.0], [1997.0, 424.0], [1993.0, 2072.0], [1989.0, 2110.0], [1985.0, 1469.0], [541.0, 1588.0], [543.0, 1605.0], [529.0, 1655.0], [531.0, 1661.0], [533.0, 1010.0], [539.0, 958.0], [537.0, 1595.0], [513.0, 1167.0], [515.0, 877.0], [519.0, 1189.0], [525.0, 1706.0], [523.0, 1690.0], [521.0, 1776.0], [535.0, 1001.0], [573.0, 1029.0], [575.0, 894.0], [561.0, 908.0], [563.0, 882.0], [565.0, 1483.0], [571.0, 1084.0], [569.0, 1339.0], [559.0, 932.0], [545.0, 949.0], [547.0, 1534.0], [549.0, 969.0], [551.0, 1532.0], [557.0, 1483.0], [555.0, 1501.0], [553.0, 1572.0], [567.0, 1401.0], [583.0, 781.0], [603.0, 509.0], [605.0, 492.0], [593.0, 527.0], [581.0, 742.0], [579.0, 839.0], [577.0, 821.0], [589.0, 511.0], [587.0, 514.0], [595.0, 495.0], [639.0, 470.0], [615.0, 526.0], [613.0, 529.0], [619.0, 490.0], [617.0, 491.0], [667.0, 869.0], [665.0, 889.5], [671.0, 859.0], [659.0, 876.5], [669.0, 861.5], [647.0, 510.0], [645.0, 513.0], [641.0, 511.0], [655.0, 910.0], [653.0, 917.0], [651.0, 443.0], [649.0, 455.5], [663.0, 908.0], [701.0, 740.0], [697.0, 810.0], [703.0, 801.5], [689.0, 865.0], [691.0, 878.0], [693.0, 793.0], [699.0, 801.0], [679.0, 854.0], [677.0, 853.0], [675.0, 888.0], [673.0, 771.0], [687.0, 871.0], [685.0, 860.0], [683.0, 889.0], [681.0, 815.0], [695.0, 786.0], [729.0, 609.0], [733.0, 640.0], [721.0, 762.0], [723.0, 704.0], [725.0, 673.0], [731.0, 631.0], [711.0, 721.0], [709.0, 813.0], [707.0, 761.0], [705.0, 770.0], [719.0, 783.0], [717.0, 730.0], [715.0, 707.0], [727.0, 645.0], [765.0, 668.0], [767.0, 510.0], [753.0, 558.0], [755.0, 536.0], [757.0, 721.0], [763.0, 658.0], [761.0, 654.0], [751.0, 635.5], [737.0, 616.0], [739.0, 678.0], [741.0, 475.0], [743.0, 450.0], [749.0, 712.0], [747.0, 201.0], [745.0, 292.0], [759.0, 525.0], [793.0, 592.0], [799.0, 478.0], [787.0, 637.0], [795.0, 610.3333333333334], [775.0, 572.5], [773.0, 498.0], [771.0, 668.0], [769.0, 651.5], [791.0, 661.0], [789.0, 606.0], [829.0, 1343.0], [831.0, 1012.0], [817.0, 542.0], [819.0, 505.0], [821.0, 490.0], [827.0, 431.0], [825.0, 449.0], [815.0, 511.0], [803.0, 559.5], [801.0, 466.0], [805.0, 622.0], [807.0, 469.0], [813.0, 524.0], [811.0, 547.0], [809.0, 639.0], [823.0, 530.0], [863.0, 1431.0], [849.0, 990.0], [861.0, 1488.0], [847.0, 1011.0], [841.0, 1014.0], [853.0, 984.0], [851.0, 980.0], [865.0, 1228.3333333333333], [895.0, 1433.0], [881.0, 1367.0], [889.0, 1424.0], [879.0, 1395.0], [871.0, 954.0], [869.0, 1028.6875], [877.0, 1417.0], [875.0, 1386.0], [873.0, 1145.0], [885.0, 1405.0], [883.0, 1384.0], [923.0, 1274.0], [927.0, 1333.0], [913.0, 1296.0], [925.0, 1344.0], [897.0, 1310.0], [901.0, 1424.0], [899.0, 1291.0], [903.0, 1383.0], [909.0, 1374.0], [907.0, 1283.0], [905.0, 1330.5], [919.0, 1312.0], [917.0, 1259.0], [915.0, 1347.0], [955.0, 1340.0], [959.0, 1320.0], [947.0, 1228.0], [957.0, 1246.0], [953.0, 1197.5], [935.0, 1302.0], [933.0, 1335.0], [931.0, 1247.0], [943.0, 1248.0], [939.0, 1339.0], [937.0, 1251.0], [951.0, 1284.0], [985.0, 1096.0], [991.0, 1066.5], [977.0, 60388.0], [979.0, 60363.0], [981.0, 1047.0], [989.0, 1095.0], [967.0, 1276.0], [965.0, 1190.0], [963.0, 1274.0], [961.0, 1201.0], [975.0, 60407.0], [973.0, 60436.0], [971.0, 1178.0], [969.0, 1186.0], [983.0, 1031.0], [1011.0, 1053.0], [1021.0, 993.0], [1013.0, 1033.0], [1019.0, 652.0], [1017.0, 970.0], [1007.0, 1030.0], [1005.0, 1016.0], [1015.0, 1060.0], [1082.0, 600.0], [1058.0, 793.0], [1070.0, 793.0], [1086.0, 601.0], [1078.0, 613.0], [1074.0, 729.0], [1026.0, 857.3333333333334], [1030.0, 985.0], [1034.0, 759.5], [1038.0, 587.0], [1054.0, 791.0], [1050.0, 893.0], [1046.0, 889.0], [1042.0, 571.0], [1150.0, 609.0], [1126.0, 1255.0], [1130.0, 618.0], [1134.0, 1218.0], [1146.0, 671.0], [1142.0, 1254.0], [1102.0, 510.0], [1098.0, 452.0], [1094.0, 569.0], [1090.0, 502.0], [1114.0, 809.0], [1110.0, 442.0], [1106.0, 493.0], [1202.0, 917.0], [1214.0, 581.0], [1186.0, 1020.0], [1190.0, 376.0], [1194.0, 974.0], [1198.0, 348.0], [1154.0, 719.0], [1158.0, 577.0], [1162.0, 574.0], [1182.0, 943.0], [1178.0, 512.0], [1174.0, 613.0], [1170.0, 533.0], [1278.0, 1168.5], [1250.0, 1184.0], [1258.0, 635.0], [1262.0, 1988.0], [1274.0, 1655.0], [1266.0, 1182.0], [1222.0, 496.0], [1226.0, 500.0], [1230.0, 475.0], [1246.0, 929.5], [1238.0, 427.0], [1234.0, 432.0], [1342.0, 1064.0], [1314.0, 2201.0], [1318.0, 1108.0], [1322.0, 1044.0], [1326.0, 2513.0], [1338.0, 1913.0], [1334.0, 2444.0], [1330.0, 1085.0], [1294.0, 1166.0], [1290.0, 2155.0], [1282.0, 1160.5], [1310.0, 2226.0], [1306.0, 2526.0], [1302.0, 1171.0], [1298.0, 2158.0], [1398.0, 2214.0], [1378.0, 2394.0], [1382.0, 1663.0], [1386.0, 2328.0], [1390.0, 2259.5], [1394.0, 2320.0], [1346.0, 1957.0], [1350.0, 1856.0], [1354.0, 2090.5], [1358.0, 1884.0], [1374.0, 2314.0], [1370.0, 1784.0], [1366.0, 2464.0], [1362.0, 967.0], [1466.0, 1350.0], [1442.0, 1810.0], [1450.0, 1821.0], [1470.0, 1324.0], [1462.0, 1784.0], [1458.0, 1820.0], [1422.0, 2082.0], [1418.0, 1492.0], [1414.0, 1498.0], [1410.0, 1584.0], [1438.0, 428.0], [1434.0, 1461.0], [1426.0, 1484.0], [1534.0, 773.5], [1506.0, 912.0], [1510.0, 896.0], [1514.0, 940.0], [1518.0, 964.0], [1530.0, 946.0], [1526.0, 912.5], [1522.0, 976.0], [1486.0, 1423.0], [1482.0, 1710.0], [1478.0, 1608.0], [1474.0, 1684.0], [1502.0, 892.0], [1498.0, 975.0], [1494.0, 1017.5], [1490.0, 1011.0], [1594.0, 1122.0], [1586.0, 1148.0], [1570.0, 1178.0], [1578.0, 367.0], [1582.0, 1048.0], [1598.0, 1093.0], [1538.0, 487.0], [1542.0, 404.0], [1566.0, 1179.0], [1562.0, 1204.0], [1558.0, 497.0], [1554.0, 466.5], [1614.0, 915.0], [1650.0, 290.0], [1654.0, 268.5], [1634.0, 703.0], [1658.0, 273.0], [1610.0, 828.0], [1606.0, 957.0], [1602.0, 1014.0], [1630.0, 887.0], [1626.0, 893.0], [1622.0, 863.0], [1618.0, 792.0], [1718.0, 1003.5], [1726.0, 1016.5], [1698.0, 1019.0], [1702.0, 946.0], [1706.0, 1043.0], [1710.0, 997.0], [1714.0, 1042.0], [1666.0, 251.5], [1670.0, 60141.0], [1674.0, 1060.0], [1694.0, 1047.5], [1686.0, 1061.0], [1682.0, 986.0], [1786.0, 776.0], [1790.0, 644.0], [1770.0, 800.0], [1774.0, 857.5], [1782.0, 888.0], [1778.0, 811.0], [1742.0, 883.0], [1734.0, 954.0], [1730.0, 967.0], [1754.0, 937.0], [1750.0, 902.0], [1746.0, 968.0], [1850.0, 992.0], [1826.0, 996.0], [1830.0, 988.0], [1854.0, 975.6666666666667], [1842.0, 974.0], [1798.0, 1136.0], [1822.0, 1057.0], [1818.0, 1080.0], [1810.0, 1061.0], [1890.0, 2410.0], [1918.0, 1699.0], [1894.0, 2234.0], [1902.0, 1801.0], [1862.0, 60105.0], [1858.0, 889.0], [1874.0, 2161.0], [1982.0, 1472.0], [1954.0, 2104.0], [1978.0, 2105.0], [1962.0, 477.0], [1970.0, 2188.0], [1922.0, 2123.0], [1950.0, 2474.0], [1998.0, 1439.8333333333335], [1083.0, 645.0], [1087.0, 468.0], [1059.0, 833.0], [1063.0, 826.5], [1067.0, 776.5], [1071.0, 691.0], [1079.0, 605.0], [1075.0, 636.0], [1055.0, 766.0], [1027.0, 599.0], [1031.0, 938.0], [1035.0, 996.0], [1039.0, 587.0], [1051.0, 834.0], [1047.0, 831.0], [1043.0, 898.0], [1147.0, 750.0], [1143.0, 600.0], [1151.0, 1187.0], [1123.0, 703.5], [1131.0, 740.0], [1135.0, 1238.0], [1139.0, 744.0], [1103.0, 496.0], [1099.0, 565.0], [1095.0, 474.0], [1119.0, 478.0], [1115.0, 566.0], [1111.0, 176.0], [1107.0, 548.0], [1207.0, 893.0], [1211.0, 384.0], [1187.0, 1028.0], [1191.0, 1052.0], [1195.0, 995.0], [1199.0, 935.0], [1203.0, 916.0], [1183.0, 434.0], [1155.0, 581.0], [1159.0, 710.0], [1163.0, 675.0], [1167.0, 604.5], [1179.0, 536.0], [1175.0, 639.0], [1171.0, 533.0], [1271.0, 1188.0], [1251.0, 1206.0], [1275.0, 1610.0], [1279.0, 1158.0], [1255.0, 1173.0], [1263.0, 1172.0], [1267.0, 1181.0], [1247.0, 1222.0], [1219.0, 469.0], [1223.0, 466.0], [1227.0, 493.0], [1231.0, 452.0], [1243.0, 653.5], [1239.0, 469.0], [1235.0, 420.0], [1339.0, 2462.0], [1331.0, 1034.0], [1343.0, 2425.0], [1315.0, 2619.0], [1319.0, 1904.0], [1327.0, 1864.0], [1335.0, 2519.0], [1295.0, 1942.0], [1287.0, 1666.5], [1311.0, 1880.0], [1307.0, 2037.0], [1303.0, 1174.0], [1299.0, 1168.0], [1395.0, 2223.0], [1399.0, 2197.0], [1383.0, 2328.0], [1379.0, 2314.5], [1387.0, 2282.0], [1391.0, 1746.0], [1375.0, 2396.0], [1347.0, 2487.0], [1351.0, 1929.0], [1359.0, 2376.0], [1371.0, 2342.0], [1363.0, 2375.0], [1467.0, 1797.0], [1459.0, 1243.0], [1471.0, 1639.0], [1443.0, 1251.0], [1447.0, 1359.3333333333333], [1451.0, 1786.0], [1455.0, 1837.0], [1463.0, 1231.0], [1423.0, 1420.0], [1419.0, 2076.5], [1411.0, 1456.5], [1439.0, 470.0], [1435.0, 1392.0], [1431.0, 2016.0], [1427.0, 1403.0], [1531.0, 916.0], [1523.0, 912.0], [1535.0, 893.0], [1507.0, 1015.0], [1511.0, 808.0], [1515.0, 962.0], [1519.0, 902.0], [1527.0, 845.0], [1487.0, 1375.0], [1483.0, 1697.0], [1479.0, 1746.0], [1503.0, 883.0], [1495.0, 1065.0], [1491.0, 1057.0], [1595.0, 1095.0], [1599.0, 1086.0], [1571.0, 1181.0], [1575.0, 1136.5], [1583.0, 1143.0], [1591.0, 1115.0], [1587.0, 1123.0], [1567.0, 448.0], [1539.0, 430.0], [1547.0, 471.0], [1551.0, 828.0], [1563.0, 1105.0], [1559.0, 1249.0], [1555.0, 449.0], [1663.0, 245.0], [1659.0, 251.0], [1635.0, 366.0], [1639.0, 305.0], [1643.0, 284.0], [1647.0, 288.0], [1655.0, 253.0], [1651.0, 274.0], [1615.0, 894.5], [1611.0, 934.0], [1607.0, 962.0], [1631.0, 859.0], [1627.0, 855.0], [1623.0, 907.0], [1619.0, 899.0], [1719.0, 974.0], [1715.0, 1016.0], [1703.0, 1033.0], [1707.0, 1046.0], [1723.0, 955.0], [1695.0, 1016.0], [1671.0, 1132.0], [1675.0, 974.0], [1691.0, 983.0], [1687.0, 1055.0], [1683.0, 1058.0], [1779.0, 840.0], [1787.0, 699.0], [1771.0, 896.0], [1775.0, 841.6666666666666], [1783.0, 806.0], [1743.0, 886.0], [1739.0, 961.6666666666666], [1731.0, 979.5], [1755.0, 890.0], [1751.0, 966.0], [1747.0, 938.0], [1851.0, 1016.0], [1855.0, 940.0], [1827.0, 1022.0], [1831.0, 1066.0], [1835.0, 1046.0], [1839.0, 1048.5], [1847.0, 1050.0], [1807.0, 1074.0], [1799.0, 1096.0], [1795.0, 786.5], [1823.0, 1004.0], [1819.0, 1078.0], [1815.0, 1084.0], [1811.0, 597.0], [1871.0, 1554.0], [1907.0, 1825.5], [1915.0, 1794.5], [1919.0, 1726.6666666666667], [1891.0, 1705.0], [1899.0, 1704.5], [1859.0, 885.0], [1887.0, 2270.0], [1879.0, 1856.0], [1875.0, 1886.0], [1975.0, 514.0], [1971.0, 2185.0], [1931.0, 2123.0], [1927.0, 2170.0], [1923.0, 2154.0], [1939.0, 2517.0], [1995.0, 1783.0], [1991.0, 1291.6666666666667]], "isOverall": false, "label": "Sunstar Search", "isController": false}, {"data": [[58.793868466398635, 728.4543904365335]], "isOverall": false, "label": "Sunstar Search-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 20.7, "minX": 1.62920802E12, "maxY": 4294521.9, "series": [{"data": [[1.62920803E12, 137639.8], [1.6292088E12, 4200176.2], [1.62920837E12, 3411612.2], [1.62920871E12, 2125831.2], [1.62920854E12, 2825843.9], [1.62920845E12, 3623017.6], [1.62920879E12, 3868734.4], [1.62920862E12, 4214517.5], [1.62920881E12, 3628729.2], [1.62920864E12, 2905874.1], [1.62920804E12, 197879.0], [1.62920855E12, 3520184.2], [1.62920838E12, 4077367.1], [1.62920872E12, 2823012.4], [1.62920812E12, 71432.5], [1.62920863E12, 3611627.2], [1.62920846E12, 2911578.9], [1.62920865E12, 2185834.5], [1.62920848E12, 1480081.4], [1.62920882E12, 2914420.2], [1.62920839E12, 4271663.5], [1.62920805E12, 285622.5], [1.62920873E12, 3537337.4], [1.62920856E12, 4157371.5], [1.62920847E12, 2185834.5], [1.62920849E12, 777185.0], [1.62920832E12, 191439.1], [1.62920883E12, 2191533.5], [1.62920866E12, 1474366.8], [1.62920806E12, 194296.4], [1.62920857E12, 3814495.5], [1.6292084E12, 4214517.5], [1.62920874E12, 4174515.3], [1.62920814E12, 5714.6], [1.62920831E12, 348590.6], [1.62920833E12, 691465.0], [1.62920816E12, 2857.3], [1.62920867E12, 780042.9], [1.6292085E12, 194296.4], [1.62920807E12, 285730.0], [1.62920884E12, 1488647.7], [1.62920841E12, 4263091.6], [1.62920875E12, 4283092.7], [1.62920858E12, 4294521.9], [1.62920851E12, 694321.9], [1.62920834E12, 1400070.8], [1.62920885E12, 780042.9], [1.62920868E12, 168580.7], [1.62920808E12, 434309.6], [1.62920859E12, 4277378.1], [1.62920842E12, 4248805.1], [1.62920876E12, 4143052.2], [1.62920818E12, 8571.9], [1.62920835E12, 2105815.5], [1.62920869E12, 688609.3], [1.62920852E12, 1411500.0], [1.62920886E12, 133759.2], [1.62920843E12, 4163057.9], [1.62920809E12, 5714.6], [1.62920877E12, 4257321.4], [1.6292086E12, 4283092.7], [1.62920802E12, 77248.4], [1.62920819E12, 5714.6], [1.62920853E12, 2125819.6], [1.62920836E12, 2725837.2], [1.6292087E12, 1414363.5], [1.6292081E12, 97148.2], [1.62920861E12, 4251662.4], [1.62920844E12, 4243032.7], [1.62920878E12, 4274463.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62920803E12, 8262.7], [1.6292088E12, 30901.2], [1.62920837E12, 25097.1], [1.62920871E12, 15639.3], [1.62920854E12, 20788.5], [1.62920845E12, 26654.3], [1.62920879E12, 28459.0], [1.62920862E12, 31005.4], [1.62920881E12, 26693.9], [1.62920864E12, 21375.2], [1.62920804E12, 8782.8], [1.62920855E12, 25896.2], [1.62920838E12, 29997.3], [1.62920872E12, 20769.5], [1.62920812E12, 521.4], [1.62920863E12, 26570.1], [1.62920846E12, 21420.9], [1.62920865E12, 16086.0], [1.62920848E12, 10886.2], [1.62920882E12, 21443.7], [1.62920839E12, 31423.2], [1.62920805E12, 9124.2], [1.62920873E12, 26023.1], [1.62920856E12, 30585.5], [1.62920847E12, 16080.3], [1.62920849E12, 5717.1], [1.62920832E12, 1406.3], [1.62920883E12, 16120.0], [1.62920866E12, 10843.7], [1.62920806E12, 1434.8], [1.62920857E12, 28064.5], [1.6292084E12, 31006.9], [1.62920874E12, 30710.2], [1.62920814E12, 41.8], [1.62920831E12, 2564.1], [1.62920833E12, 5089.5], [1.62920816E12, 20.7], [1.62920867E12, 5743.6], [1.6292085E12, 1430.2], [1.62920807E12, 2099.7], [1.62920884E12, 10948.9], [1.62920841E12, 31361.6], [1.62920875E12, 31508.6], [1.62920858E12, 31596.4], [1.62920851E12, 5103.1], [1.62920834E12, 10298.1], [1.62920885E12, 5740.0], [1.62920868E12, 1239.6], [1.62920808E12, 3191.6], [1.62920859E12, 31465.1], [1.62920842E12, 31255.6], [1.62920876E12, 30479.9], [1.62920818E12, 63.4], [1.62920835E12, 15491.4], [1.62920869E12, 5065.8], [1.62920852E12, 10384.4], [1.62920886E12, 966.9], [1.62920843E12, 30627.9], [1.62920809E12, 41.2], [1.62920877E12, 31318.0], [1.6292086E12, 31511.5], [1.62920802E12, 7693.0], [1.62920819E12, 43.8], [1.62920853E12, 15636.3], [1.62920836E12, 20052.8], [1.6292087E12, 10402.5], [1.6292081E12, 718.9], [1.62920861E12, 31271.5], [1.62920844E12, 31212.7], [1.62920878E12, 31447.7]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62920886E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 20.135658914728694, "minX": 1.62920802E12, "maxY": 180426.0, "series": [{"data": [[1.62920803E12, 1405.636132315522], [1.6292088E12, 120.26258503401367], [1.62920837E12, 1309.5854271356798], [1.62920871E12, 179.33198924731175], [1.62920854E12, 88.06167846309414], [1.62920845E12, 96.01735015772879], [1.62920879E12, 260.59084194977896], [1.62920862E12, 72.36745762711854], [1.62920881E12, 64.24724409448831], [1.62920864E12, 140.0934119960669], [1.62920804E12, 2056.3157894736837], [1.62920855E12, 78.34253246753252], [1.62920838E12, 164.35949544498948], [1.62920872E12, 80.35323886639688], [1.62920812E12, 120762.19999999998], [1.62920863E12, 70.09810126582276], [1.62920846E12, 204.91560353287502], [1.62920865E12, 176.2183006535946], [1.62920848E12, 135.32818532818573], [1.62920882E12, 273.28039215686255], [1.62920839E12, 109.83879598662217], [1.62920805E12, 990.1198156682032], [1.62920873E12, 22.302907915993554], [1.62920856E12, 122.37663230240535], [1.62920847E12, 100.16078431372551], [1.62920849E12, 23.827205882352946], [1.62920832E12, 63.16417910447767], [1.62920883E12, 26.78748370273793], [1.62920866E12, 20.135658914728694], [1.62920806E12, 60701.485294117665], [1.62920857E12, 201.15056179775252], [1.6292084E12, 198.77423728813554], [1.62920874E12, 67.58316221765912], [1.62920814E12, 120128.5], [1.62920831E12, 1047.672131147541], [1.62920833E12, 54.18181818181819], [1.62920816E12, 180372.0], [1.62920867E12, 901.1135531135532], [1.6292085E12, 2684.7647058823527], [1.62920807E12, 60635.43000000002], [1.62920884E12, 256.15163147792697], [1.62920841E12, 134.9282841823055], [1.62920875E12, 191.14743162108076], [1.62920858E12, 40.45508982035927], [1.62920851E12, 520.40329218107], [1.62920834E12, 56.2938775510204], [1.62920885E12, 242.75457875457874], [1.62920868E12, 23.881355932203387], [1.62920808E12, 68224.31578947367], [1.62920859E12, 77.4836339345355], [1.62920842E12, 294.0289172831208], [1.62920876E12, 183.94689655172402], [1.62920818E12, 180426.0], [1.62920835E12, 61.0067842605156], [1.62920869E12, 21.157676348547714], [1.62920852E12, 146.8866396761133], [1.62920886E12, 5737.018867924528], [1.62920843E12, 205.18119423472896], [1.62920809E12, 60735.0], [1.62920877E12, 72.70000000000002], [1.6292086E12, 197.98132088058708], [1.62920802E12, 1515.6420765027326], [1.62920819E12, 180116.0], [1.62920853E12, 267.47715053763426], [1.62920836E12, 250.30817610062903], [1.6292087E12, 140.48686868686858], [1.6292081E12, 104742.23529411767], [1.62920861E12, 33.3104838709678], [1.62920844E12, 113.63367003367028], [1.62920878E12, 231.21724598930473]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62920886E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 20.017441860465123, "minX": 1.62920802E12, "maxY": 180426.0, "series": [{"data": [[1.62920803E12, 1405.2569974554704], [1.6292088E12, 119.19931972789115], [1.62920837E12, 1308.9070351758787], [1.62920871E12, 179.18279569892476], [1.62920854E12, 87.71081900909996], [1.62920845E12, 95.57334384858044], [1.62920879E12, 259.33013293943867], [1.62920862E12, 72.13694915254243], [1.62920881E12, 63.17637795275594], [1.62920864E12, 139.9439528023601], [1.62920804E12, 2056.244019138757], [1.62920855E12, 77.98295454545456], [1.62920838E12, 164.17449194113507], [1.62920872E12, 80.20546558704454], [1.62920812E12, 120762.04], [1.62920863E12, 69.93829113924052], [1.62920846E12, 204.68302257114803], [1.62920865E12, 176.10457516339852], [1.62920848E12, 135.20656370656386], [1.62920882E12, 272.7450980392153], [1.62920839E12, 109.64481605351168], [1.62920805E12, 990.0207373271888], [1.62920873E12, 22.13408723747976], [1.62920856E12, 121.96563573883152], [1.62920847E12, 99.96732026143798], [1.62920849E12, 23.595588235294112], [1.62920832E12, 62.17910447761192], [1.62920883E12, 26.485006518904818], [1.62920866E12, 20.017441860465123], [1.62920806E12, 60701.32352941177], [1.62920857E12, 200.39550561797762], [1.6292084E12, 198.6000000000002], [1.62920874E12, 67.36960985626283], [1.62920814E12, 120128.5], [1.62920831E12, 1046.778688524591], [1.62920833E12, 53.17355371900826], [1.62920816E12, 180371.0], [1.62920867E12, 900.9853479853481], [1.6292085E12, 2684.529411764705], [1.62920807E12, 60635.22000000001], [1.62920884E12, 255.84644913627636], [1.62920841E12, 134.58780160857927], [1.62920875E12, 190.9146097398264], [1.62920858E12, 40.00399201596802], [1.62920851E12, 520.1769547325104], [1.62920834E12, 55.35714285714281], [1.62920885E12, 242.57875457875457], [1.62920868E12, 23.711864406779657], [1.62920808E12, 68224.07894736843], [1.62920859E12, 77.00935203740806], [1.62920842E12, 293.8426361802288], [1.62920876E12, 183.0641379310345], [1.62920818E12, 180426.0], [1.62920835E12, 60.006784260515595], [1.62920869E12, 21.049792531120335], [1.62920852E12, 146.62955465587032], [1.62920886E12, 2289.8113207547167], [1.62920843E12, 204.3596431022647], [1.62920809E12, 60735.0], [1.62920877E12, 71.6946308724831], [1.6292086E12, 197.4929953302201], [1.62920802E12, 1486.6502732240444], [1.62920819E12, 180116.0], [1.62920853E12, 267.15994623655905], [1.62920836E12, 249.25366876310244], [1.6292087E12, 140.35353535353548], [1.6292081E12, 104742.08823529411], [1.62920861E12, 33.016129032258036], [1.62920844E12, 112.68552188552185], [1.62920878E12, 230.18449197860966]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62920886E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 14.129032258064525, "minX": 1.62920802E12, "maxY": 1362.0203562340973, "series": [{"data": [[1.62920803E12, 1362.0203562340973], [1.6292088E12, 61.01768707482987], [1.62920837E12, 89.59128978224453], [1.62920871E12, 14.129032258064525], [1.62920854E12, 21.527805864509617], [1.62920845E12, 41.382492113564645], [1.62920879E12, 109.01698670605616], [1.62920862E12, 26.222372881355987], [1.62920881E12, 48.70236220472439], [1.62920864E12, 17.69911504424779], [1.62920804E12, 890.7918660287095], [1.62920855E12, 23.015422077922082], [1.62920838E12, 73.67063770147162], [1.62920872E12, 15.778340080971697], [1.62920812E12, 743.3599999999999], [1.62920863E12, 18.19224683544299], [1.62920846E12, 22.75564278704616], [1.62920865E12, 15.300653594771267], [1.62920848E12, 15.326254826254829], [1.62920882E12, 28.750980392156873], [1.62920839E12, 103.03812709030124], [1.62920805E12, 964.65668202765], [1.62920873E12, 18.124394184168015], [1.62920856E12, 33.09759450171819], [1.62920847E12, 17.644444444444435], [1.62920849E12, 18.26470588235294], [1.62920832E12, 45.08955223880598], [1.62920883E12, 20.72620599739246], [1.62920866E12, 16.201550387596896], [1.62920806E12, 676.7058823529411], [1.62920857E12, 57.64344569288393], [1.6292084E12, 110.23932203389805], [1.62920874E12, 21.699520876112278], [1.62920814E12, 105.0], [1.62920831E12, 46.06557377049181], [1.62920833E12, 38.54545454545455], [1.62920816E12, 350.0], [1.62920867E12, 17.487179487179485], [1.6292085E12, 29.088235294117652], [1.62920807E12, 605.5300000000002], [1.62920884E12, 19.95009596928983], [1.62920841E12, 127.46246648793557], [1.62920875E12, 25.856571047364866], [1.62920858E12, 33.377910844976675], [1.62920851E12, 20.30864197530865], [1.62920834E12, 41.532653061224494], [1.62920885E12, 17.1941391941392], [1.62920868E12, 17.86440677966102], [1.62920808E12, 1093.5197368421047], [1.62920859E12, 30.582498329993278], [1.62920842E12, 124.99865501008757], [1.62920876E12, 46.52344827586204], [1.62920818E12, 401.6666666666667], [1.62920835E12, 46.268656716417894], [1.62920869E12, 16.506224066390036], [1.62920852E12, 19.809716599190295], [1.62920886E12, 22.320754716981124], [1.62920843E12, 195.73781743308163], [1.62920809E12, 718.5], [1.62920877E12, 57.3798657718121], [1.6292086E12, 30.88659106070716], [1.62920802E12, 1070.3333333333328], [1.62920819E12, 103.0], [1.62920853E12, 19.802419354838737], [1.62920836E12, 47.01781970649895], [1.6292087E12, 15.131313131313139], [1.6292081E12, 600.0882352941177], [1.62920861E12, 27.190860215053775], [1.62920844E12, 104.20538720538725], [1.62920878E12, 55.13235294117641]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62920886E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.62920802E12, "maxY": 180549.0, "series": [{"data": [[1.62920803E12, 2466.0], [1.6292088E12, 60037.0], [1.62920837E12, 180164.0], [1.62920871E12, 60058.0], [1.62920854E12, 60031.0], [1.62920845E12, 60171.0], [1.62920879E12, 120026.0], [1.62920862E12, 60066.0], [1.62920881E12, 345.0], [1.62920864E12, 60052.0], [1.62920804E12, 60436.0], [1.62920855E12, 60037.0], [1.62920838E12, 60112.0], [1.62920872E12, 60026.0], [1.62920812E12, 120909.0], [1.62920863E12, 60109.0], [1.62920846E12, 60176.0], [1.62920865E12, 120038.0], [1.62920848E12, 60089.0], [1.62920882E12, 60087.0], [1.62920839E12, 495.0], [1.62920805E12, 917.0], [1.62920873E12, 333.0], [1.62920856E12, 120081.0], [1.62920847E12, 60169.0], [1.62920849E12, 57.0], [1.62920832E12, 111.0], [1.62920883E12, 102.0], [1.62920866E12, 243.0], [1.62920806E12, 61135.0], [1.62920857E12, 60051.0], [1.6292084E12, 60080.0], [1.62920874E12, 60037.0], [1.62920814E12, 120158.0], [1.62920831E12, 120070.0], [1.62920833E12, 136.0], [1.62920816E12, 180372.0], [1.62920867E12, 60050.0], [1.6292085E12, 60249.0], [1.62920807E12, 60852.0], [1.62920884E12, 60099.0], [1.62920841E12, 445.0], [1.62920875E12, 180086.0], [1.62920858E12, 292.0], [1.62920851E12, 120144.0], [1.62920834E12, 200.0], [1.62920885E12, 60089.0], [1.62920868E12, 53.0], [1.62920808E12, 121183.0], [1.62920859E12, 60046.0], [1.62920842E12, 60123.0], [1.62920876E12, 120032.0], [1.62920818E12, 180549.0], [1.62920835E12, 188.0], [1.62920869E12, 114.0], [1.62920852E12, 60024.0], [1.62920886E12, 60117.0], [1.62920843E12, 405.0], [1.62920809E12, 60749.0], [1.62920877E12, 214.0], [1.6292086E12, 60049.0], [1.62920802E12, 60141.0], [1.62920819E12, 180123.0], [1.62920853E12, 120049.0], [1.62920836E12, 180063.0], [1.6292087E12, 60064.0], [1.6292081E12, 120488.0], [1.62920861E12, 227.0], [1.62920844E12, 451.0], [1.62920878E12, 120034.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62920803E12, 473.0], [1.6292088E12, 45.0], [1.62920837E12, 14.0], [1.62920871E12, 10.0], [1.62920854E12, 19.0], [1.62920845E12, 21.0], [1.62920879E12, 47.0], [1.62920862E12, 12.0], [1.62920881E12, 44.0], [1.62920864E12, 12.0], [1.62920804E12, 943.0], [1.62920855E12, 16.0], [1.62920838E12, 15.0], [1.62920872E12, 11.0], [1.62920812E12, 120372.0], [1.62920863E12, 11.0], [1.62920846E12, 11.0], [1.62920865E12, 11.0], [1.62920848E12, 11.0], [1.62920882E12, 20.0], [1.62920839E12, 16.0], [1.62920805E12, 201.0], [1.62920873E12, 12.0], [1.62920856E12, 18.0], [1.62920847E12, 11.0], [1.62920849E12, 13.0], [1.62920832E12, 45.0], [1.62920883E12, 19.0], [1.62920866E12, 11.0], [1.62920806E12, 60247.0], [1.62920857E12, 18.0], [1.6292084E12, 33.0], [1.62920874E12, 12.0], [1.62920814E12, 120099.0], [1.62920831E12, 45.0], [1.62920833E12, 42.0], [1.62920816E12, 180372.0], [1.62920867E12, 12.0], [1.6292085E12, 21.0], [1.62920807E12, 60118.0], [1.62920884E12, 19.0], [1.62920841E12, 27.0], [1.62920875E12, 12.0], [1.62920858E12, 17.0], [1.62920851E12, 20.0], [1.62920834E12, 42.0], [1.62920885E12, 12.0], [1.62920868E12, 12.0], [1.62920808E12, 60109.0], [1.62920859E12, 16.0], [1.62920842E12, 23.0], [1.62920876E12, 13.0], [1.62920818E12, 180243.0], [1.62920835E12, 42.0], [1.62920869E12, 13.0], [1.62920852E12, 18.0], [1.62920886E12, 15.0], [1.62920843E12, 59.0], [1.62920809E12, 60721.0], [1.62920877E12, 46.0], [1.6292086E12, 17.0], [1.62920802E12, 251.0], [1.62920819E12, 180109.0], [1.62920853E12, 19.0], [1.62920836E12, 43.0], [1.6292087E12, 11.0], [1.6292081E12, 61095.0], [1.62920861E12, 13.0], [1.62920844E12, 24.0], [1.62920878E12, 42.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62920803E12, 2122.600000000001], [1.6292088E12, 108.0], [1.62920837E12, 233.0], [1.62920871E12, 22.0], [1.62920854E12, 33.0], [1.62920845E12, 81.0], [1.62920879E12, 230.5], [1.62920862E12, 48.0], [1.62920881E12, 81.0], [1.62920864E12, 31.0], [1.62920804E12, 60389.4], [1.62920855E12, 39.0], [1.62920838E12, 121.0], [1.62920872E12, 25.0], [1.62920812E12, 120898.8], [1.62920863E12, 32.0], [1.62920846E12, 55.0], [1.62920865E12, 26.0], [1.62920848E12, 26.0], [1.62920882E12, 61.0], [1.62920839E12, 144.0], [1.62920805E12, 862.6], [1.62920873E12, 31.100000000000136], [1.62920856E12, 61.0], [1.62920847E12, 37.0], [1.62920849E12, 31.0], [1.62920832E12, 85.20000000000002], [1.62920883E12, 33.0], [1.62920866E12, 27.0], [1.62920806E12, 61011.1], [1.62920857E12, 117.0], [1.6292084E12, 154.0], [1.62920874E12, 38.799999999999955], [1.62920814E12, 120158.0], [1.62920831E12, 83.7], [1.62920833E12, 63.0], [1.62920816E12, 180372.0], [1.62920867E12, 27.0], [1.6292085E12, 47.1], [1.62920807E12, 60785.5], [1.62920884E12, 31.0], [1.62920841E12, 177.0], [1.62920875E12, 52.0], [1.62920858E12, 63.0], [1.62920851E12, 31.0], [1.62920834E12, 68.90000000000003], [1.62920885E12, 29.0], [1.62920868E12, 37.0], [1.62920808E12, 120076.7], [1.62920859E12, 51.200000000000045], [1.62920842E12, 183.20000000000005], [1.62920876E12, 89.0], [1.62920818E12, 180549.0], [1.62920835E12, 81.0], [1.62920869E12, 29.0], [1.62920852E12, 30.0], [1.62920886E12, 57.40000000000012], [1.62920843E12, 260.0], [1.62920809E12, 60749.0], [1.62920877E12, 100.0], [1.6292086E12, 54.0], [1.62920802E12, 54207.70000000013], [1.62920819E12, 180123.0], [1.62920853E12, 31.0], [1.62920836E12, 79.0], [1.6292087E12, 28.0], [1.6292081E12, 120433.0], [1.62920861E12, 48.0], [1.62920844E12, 194.0], [1.62920878E12, 95.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62920803E12, 2466.0], [1.6292088E12, 212.3799999999992], [1.62920837E12, 60137.05], [1.62920871E12, 79.39999999999964], [1.62920854E12, 55.10000000000002], [1.62920845E12, 112.0], [1.62920879E12, 642.8000000000002], [1.62920862E12, 80.20000000000005], [1.62920881E12, 132.8699999999999], [1.62920864E12, 76.81999999999994], [1.62920804E12, 60436.0], [1.62920855E12, 72.34000000000015], [1.62920838E12, 178.44000000000005], [1.62920872E12, 103.10000000000014], [1.62920812E12, 120909.0], [1.62920863E12, 68.39999999999964], [1.62920846E12, 114.19999999999982], [1.62920865E12, 88.74000000000035], [1.62920848E12, 97.0], [1.62920882E12, 101.78999999999996], [1.62920839E12, 182.0], [1.62920805E12, 917.0], [1.62920873E12, 74.0], [1.62920856E12, 80.44000000000005], [1.62920847E12, 87.76000000000045], [1.62920849E12, 45.88999999999987], [1.62920832E12, 111.0], [1.62920883E12, 56.0], [1.62920866E12, 76.63999999999987], [1.62920806E12, 61135.0], [1.62920857E12, 344.2800000000002], [1.6292084E12, 208.72000000000003], [1.62920874E12, 95.75999999999976], [1.62920814E12, 120158.0], [1.62920831E12, 92481.49999999952], [1.62920833E12, 102.70999999999998], [1.62920816E12, 180372.0], [1.62920867E12, 60039.82], [1.6292085E12, 60249.0], [1.62920807E12, 60851.89], [1.62920884E12, 57.559999999999945], [1.62920841E12, 227.06999999999994], [1.62920875E12, 99.0], [1.62920858E12, 104.96000000000004], [1.62920851E12, 71.28000000000003], [1.62920834E12, 103.08999999999997], [1.62920885E12, 117.81999999999994], [1.62920868E12, 53.0], [1.62920808E12, 121117.81], [1.62920859E12, 78.0], [1.62920842E12, 261.9599999999991], [1.62920876E12, 136.96000000000004], [1.62920818E12, 180549.0], [1.62920835E12, 117.24000000000001], [1.62920869E12, 81.5399999999998], [1.62920852E12, 68.40000000000055], [1.62920886E12, 60117.0], [1.62920843E12, 332.4200000000001], [1.62920809E12, 60749.0], [1.62920877E12, 141.08999999999992], [1.6292086E12, 91.0], [1.62920802E12, 60141.0], [1.62920819E12, 180123.0], [1.62920853E12, 54.0], [1.62920836E12, 126.80000000000018], [1.6292087E12, 64.28000000000014], [1.6292081E12, 120488.0], [1.62920861E12, 79.3299999999997], [1.62920844E12, 260.1400000000001], [1.62920878E12, 145.05999999999995]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62920803E12, 2364.2999999999997], [1.6292088E12, 133.0], [1.62920837E12, 340.25], [1.62920871E12, 31.75], [1.62920854E12, 38.0], [1.62920845E12, 92.0], [1.62920879E12, 310.25], [1.62920862E12, 55.0], [1.62920881E12, 94.0], [1.62920864E12, 40.0], [1.62920804E12, 60406.55], [1.62920855E12, 45.0], [1.62920838E12, 134.0], [1.62920872E12, 31.549999999999955], [1.62920812E12, 120907.2], [1.62920863E12, 41.0], [1.62920846E12, 67.0], [1.62920865E12, 34.69999999999993], [1.62920848E12, 35.049999999999955], [1.62920882E12, 69.0], [1.62920839E12, 153.0], [1.62920805E12, 877.4], [1.62920873E12, 42.0], [1.62920856E12, 68.0], [1.62920847E12, 50.0], [1.62920849E12, 34.349999999999966], [1.62920832E12, 97.6], [1.62920883E12, 37.59999999999991], [1.62920866E12, 34.14999999999998], [1.62920806E12, 61026.4], [1.62920857E12, 143.0], [1.6292084E12, 169.0], [1.62920874E12, 49.0], [1.62920814E12, 120158.0], [1.62920831E12, 101.19999999999993], [1.62920833E12, 69.69999999999999], [1.62920816E12, 180372.0], [1.62920867E12, 37.30000000000001], [1.6292085E12, 33094.84999999983], [1.62920807E12, 60830.85], [1.62920884E12, 35.0], [1.62920841E12, 190.0], [1.62920875E12, 62.0], [1.62920858E12, 73.0], [1.62920851E12, 38.0], [1.62920834E12, 78.89999999999998], [1.62920885E12, 34.0], [1.62920868E12, 42.0], [1.62920808E12, 120127.65], [1.62920859E12, 58.09999999999991], [1.62920842E12, 200.5999999999999], [1.62920876E12, 100.0], [1.62920818E12, 180549.0], [1.62920835E12, 92.10000000000002], [1.62920869E12, 35.89999999999998], [1.62920852E12, 34.0], [1.62920886E12, 39095.19999999992], [1.62920843E12, 280.0999999999999], [1.62920809E12, 60749.0], [1.62920877E12, 111.45000000000005], [1.6292086E12, 61.0], [1.62920802E12, 60139.2], [1.62920819E12, 180123.0], [1.62920853E12, 36.0], [1.62920836E12, 93.0], [1.6292087E12, 33.0], [1.6292081E12, 120470.75], [1.62920861E12, 54.0], [1.62920844E12, 222.70000000000005], [1.62920878E12, 110.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62920886E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 14.0, "minX": 1.0, "maxY": 120100.0, "series": [{"data": [[2.0, 60735.0], [3.0, 22.5], [4.0, 33.0], [5.0, 30592.5], [6.0, 82.0], [7.0, 51.5], [8.0, 43.0], [9.0, 120100.0], [10.0, 25.0], [11.0, 53.0], [12.0, 26.0], [13.0, 52.0], [14.0, 62.5], [15.0, 40.0], [16.0, 29.0], [17.0, 21.0], [18.0, 20.0], [19.0, 27.0], [20.0, 56.5], [21.0, 42.5], [22.0, 26.0], [23.0, 22.0], [24.0, 26.0], [25.0, 53.0], [26.0, 46.0], [27.0, 20.0], [28.0, 53.0], [29.0, 27.0], [30.0, 21.0], [31.0, 19.0], [33.0, 20.0], [32.0, 22.0], [34.0, 25.0], [35.0, 17.0], [36.0, 28.0], [37.0, 51.0], [39.0, 21.0], [40.0, 21.0], [41.0, 21.0], [42.0, 44.5], [43.0, 23.0], [45.0, 20.0], [44.0, 22.0], [47.0, 53.5], [46.0, 22.0], [48.0, 20.0], [49.0, 23.0], [50.0, 21.0], [52.0, 43.0], [53.0, 38.0], [55.0, 23.0], [54.0, 21.0], [57.0, 54.0], [56.0, 21.0], [59.0, 22.0], [58.0, 21.0], [60.0, 21.0], [61.0, 26.0], [63.0, 22.0], [65.0, 19.0], [66.0, 42.0], [68.0, 22.0], [71.0, 18.0], [69.0, 21.0], [70.0, 25.0], [72.0, 1038.0], [73.0, 22.0], [74.0, 26.0], [75.0, 21.0], [76.0, 18.0], [79.0, 51.0], [78.0, 24.0], [80.0, 26.0], [82.0, 18.0], [83.0, 25.0], [81.0, 14.0], [87.0, 24.0], [85.0, 50.5], [84.0, 24.0], [86.0, 16.0], [89.0, 99.0], [90.0, 21.0], [91.0, 26.0], [88.0, 23.0], [92.0, 74.0], [94.0, 22.0], [95.0, 48.0], [93.0, 27.0], [98.0, 25.0], [97.0, 19.0], [96.0, 25.0], [99.0, 26.0], [102.0, 52.5], [103.0, 23.0], [100.0, 23.0], [105.0, 25.0], [106.0, 121.0], [104.0, 26.0], [110.0, 47.0], [111.0, 48.0], [108.0, 18.0], [109.0, 17.0], [112.0, 25.0], [113.0, 26.0], [114.0, 26.0], [118.0, 31.0], [117.0, 45.0], [116.0, 93.0], [120.0, 47.0], [123.0, 25.0], [121.0, 33.0], [122.0, 19.0], [125.0, 52.0], [126.0, 30.5], [127.0, 32.0], [124.0, 50.5], [130.0, 21.0], [131.0, 56.0], [129.0, 74.0], [133.0, 63.0], [132.0, 47.0], [135.0, 34.0], [134.0, 32.5], [128.0, 55.5], [143.0, 60.0], [141.0, 128.0], [140.0, 111.0], [137.0, 70.0], [142.0, 46.0], [139.0, 69.0], [138.0, 58.0], [147.0, 60.0], [145.0, 90.0], [146.0, 85.0], [144.0, 112.0], [150.0, 36.0], [149.0, 40.0], [151.0, 43.0], [148.0, 61.0], [158.0, 97.0], [152.0, 60.0], [155.0, 77.0], [153.0, 64.0], [159.0, 121.0], [154.0, 59.0], [156.0, 66.0], [165.0, 122.0], [162.0, 164.5], [163.0, 108.0], [161.0, 116.0], [171.0, 195.0], [1.0, 30182.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[130.0, 821.0], [8.0, 19196.0], [138.0, 1821.5], [143.0, 1309.0], [36.0, 274.0], [158.0, 1913.0], [180.0, 1607.5], [48.0, 932.0], [14.0, 868.5], [4.0, 303.0], [68.0, 505.0], [72.0, 1031.0], [76.0, 600.5], [89.0, 1584.0], [92.0, 789.0], [98.0, 908.0], [101.0, 710.0], [120.0, 966.0], [30.0, 469.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 180.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 120100.0, "series": [{"data": [[2.0, 60735.0], [3.0, 22.0], [4.0, 33.0], [5.0, 30591.5], [6.0, 81.0], [7.0, 50.5], [8.0, 42.0], [9.0, 120100.0], [10.0, 25.0], [11.0, 52.0], [12.0, 26.0], [13.0, 51.0], [14.0, 61.0], [15.0, 40.0], [16.0, 28.0], [17.0, 20.5], [18.0, 20.0], [19.0, 27.0], [20.0, 55.5], [21.0, 42.0], [22.0, 26.0], [23.0, 22.0], [24.0, 26.0], [25.0, 52.0], [26.0, 45.5], [27.0, 20.0], [28.0, 52.5], [29.0, 27.0], [30.0, 21.0], [31.0, 19.0], [33.0, 19.5], [32.0, 22.0], [34.0, 25.0], [35.0, 17.0], [36.0, 28.0], [37.0, 50.0], [39.0, 21.0], [40.0, 21.0], [41.0, 21.0], [42.0, 43.5], [43.0, 23.0], [45.0, 20.0], [44.0, 21.0], [47.0, 52.5], [46.0, 21.5], [48.0, 20.0], [49.0, 23.0], [50.0, 21.0], [52.0, 42.5], [53.0, 37.5], [55.0, 22.0], [54.0, 20.5], [57.0, 53.0], [56.0, 21.0], [59.0, 22.0], [58.0, 21.0], [60.0, 21.0], [61.0, 25.0], [63.0, 22.0], [65.0, 19.0], [66.0, 41.5], [68.0, 21.0], [71.0, 18.0], [69.0, 21.0], [70.0, 24.5], [72.0, 1037.0], [73.0, 22.0], [74.0, 25.0], [75.0, 21.0], [76.0, 18.0], [79.0, 50.0], [78.0, 24.0], [80.0, 26.0], [82.0, 18.0], [83.0, 25.0], [81.0, 14.0], [87.0, 24.0], [85.0, 50.0], [84.0, 24.0], [86.0, 16.0], [89.0, 98.0], [90.0, 21.0], [91.0, 26.0], [88.0, 22.0], [92.0, 73.0], [94.0, 22.0], [95.0, 47.0], [93.0, 26.5], [98.0, 24.0], [97.0, 19.0], [96.0, 24.0], [99.0, 25.0], [102.0, 51.5], [103.0, 23.0], [100.0, 23.0], [105.0, 25.0], [106.0, 121.0], [104.0, 25.0], [110.0, 47.0], [111.0, 48.0], [108.0, 18.0], [109.0, 16.0], [112.0, 25.0], [113.0, 26.0], [114.0, 26.0], [118.0, 30.0], [117.0, 44.5], [116.0, 93.0], [120.0, 45.5], [123.0, 25.0], [121.0, 33.0], [122.0, 19.0], [125.0, 50.0], [126.0, 30.0], [127.0, 31.0], [124.0, 50.0], [130.0, 21.0], [131.0, 55.0], [129.0, 74.0], [133.0, 63.0], [132.0, 46.0], [135.0, 34.0], [134.0, 32.0], [128.0, 55.5], [143.0, 59.0], [141.0, 128.0], [140.0, 111.0], [137.0, 69.0], [142.0, 46.0], [139.0, 69.0], [138.0, 58.0], [147.0, 59.0], [145.0, 90.0], [146.0, 84.0], [144.0, 111.0], [150.0, 35.0], [149.0, 40.0], [151.0, 42.0], [148.0, 60.0], [158.0, 96.0], [152.0, 59.0], [155.0, 77.0], [153.0, 62.0], [159.0, 120.5], [154.0, 58.0], [156.0, 65.0], [165.0, 122.0], [162.0, 164.5], [163.0, 107.0], [161.0, 116.0], [171.0, 195.0], [1.0, 30182.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[130.0, 821.0], [8.0, 0.0], [138.0, 1731.0], [143.0, 1309.0], [36.0, 274.0], [158.0, 1913.0], [180.0, 1607.5], [48.0, 932.0], [14.0, 868.5], [4.0, 303.0], [68.0, 505.0], [72.0, 1031.0], [76.0, 600.0], [89.0, 1584.0], [92.0, 789.0], [98.0, 908.0], [101.0, 710.0], [120.0, 966.0], [30.0, 469.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 180.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62920796E12, "maxY": 149.9, "series": [{"data": [[1.62920803E12, 39.5], [1.6292088E12, 147.3], [1.62920837E12, 117.4], [1.62920871E12, 74.2], [1.62920854E12, 99.3], [1.62920845E12, 126.2], [1.62920879E12, 135.3], [1.62920862E12, 147.3], [1.62920881E12, 126.6], [1.62920864E12, 101.6], [1.62920804E12, 46.0], [1.62920855E12, 123.5], [1.62920838E12, 143.5], [1.62920872E12, 99.1], [1.62920863E12, 126.4], [1.62920846E12, 101.5], [1.62920865E12, 76.4], [1.62920848E12, 51.9], [1.62920882E12, 101.1], [1.62920839E12, 149.3], [1.62920805E12, 39.3], [1.62920873E12, 124.0], [1.62920856E12, 145.7], [1.62920796E12, 2.0], [1.62920847E12, 76.4], [1.62920849E12, 27.1], [1.62920832E12, 6.9], [1.62920883E12, 76.8], [1.62920866E12, 51.9], [1.62920857E12, 133.5], [1.6292084E12, 147.7], [1.62920874E12, 146.0], [1.62920831E12, 13.9], [1.62920833E12, 24.3], [1.62920867E12, 26.8], [1.6292085E12, 6.5], [1.62920884E12, 52.0], [1.62920841E12, 149.6], [1.62920875E12, 149.7], [1.62920858E12, 149.9], [1.62920798E12, 3.4], [1.629208E12, 10.0], [1.62920851E12, 24.6], [1.62920834E12, 49.4], [1.62920885E12, 27.3], [1.62920868E12, 6.0], [1.62920859E12, 149.6], [1.62920842E12, 149.2], [1.62920876E12, 145.8], [1.62920818E12, 0.1], [1.62920835E12, 74.0], [1.62920801E12, 9.8], [1.62920869E12, 24.2], [1.62920852E12, 49.4], [1.62920886E12, 4.5], [1.62920843E12, 146.9], [1.62920877E12, 149.0], [1.6292086E12, 149.7], [1.62920802E12, 50.0], [1.62920819E12, 0.3], [1.62920853E12, 74.4], [1.62920836E12, 95.9], [1.6292087E12, 49.6], [1.62920861E12, 149.0], [1.62920844E12, 146.1], [1.62920878E12, 149.6]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62920886E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62920802E12, "maxY": 150.3, "series": [{"data": [[1.62920886E12, 0.6]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.62920803E12, 4.1], [1.6292088E12, 147.0], [1.62920837E12, 119.4], [1.62920871E12, 74.4], [1.62920854E12, 98.9], [1.62920845E12, 126.8], [1.62920879E12, 135.4], [1.62920862E12, 147.5], [1.62920881E12, 127.0], [1.62920864E12, 101.7], [1.62920804E12, 6.2], [1.62920855E12, 123.2], [1.62920838E12, 142.7], [1.62920872E12, 98.8], [1.62920812E12, 2.5], [1.62920863E12, 126.4], [1.62920846E12, 101.9], [1.62920865E12, 76.5], [1.62920848E12, 51.8], [1.62920882E12, 102.0], [1.62920839E12, 149.5], [1.62920805E12, 9.3], [1.62920873E12, 123.8], [1.62920856E12, 145.5], [1.62920847E12, 76.5], [1.62920849E12, 27.2], [1.62920832E12, 6.7], [1.62920883E12, 76.7], [1.62920866E12, 51.6], [1.62920806E12, 6.8], [1.62920857E12, 133.5], [1.6292084E12, 147.5], [1.62920874E12, 146.1], [1.62920814E12, 0.2], [1.62920831E12, 12.2], [1.62920833E12, 24.2], [1.62920816E12, 0.1], [1.62920867E12, 27.3], [1.6292085E12, 6.8], [1.62920807E12, 10.0], [1.62920884E12, 52.1], [1.62920841E12, 149.2], [1.62920875E12, 149.9], [1.62920858E12, 150.3], [1.62920851E12, 24.3], [1.62920834E12, 49.0], [1.62920885E12, 27.3], [1.62920868E12, 5.9], [1.62920808E12, 15.2], [1.62920859E12, 149.7], [1.62920842E12, 148.7], [1.62920876E12, 145.0], [1.62920818E12, 0.3], [1.62920835E12, 73.7], [1.62920869E12, 24.1], [1.62920852E12, 49.4], [1.62920886E12, 4.6], [1.62920843E12, 145.7], [1.62920809E12, 0.2], [1.62920877E12, 149.0], [1.6292086E12, 149.9], [1.62920802E12, 2.0], [1.62920819E12, 0.2], [1.62920853E12, 74.4], [1.62920836E12, 95.4], [1.6292087E12, 49.5], [1.6292081E12, 3.4], [1.62920861E12, 148.8], [1.62920844E12, 148.5], [1.62920878E12, 149.6]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.62920802E12, 34.6], [1.62920803E12, 35.2], [1.62920804E12, 35.6], [1.62920805E12, 34.1]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.62920886E12, 0.1]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62920886E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62920802E12, "maxY": 150.3, "series": [{"data": [[1.62920802E12, 34.6], [1.62920803E12, 35.2], [1.62920804E12, 35.6], [1.62920805E12, 34.1], [1.62920886E12, 0.7]], "isOverall": false, "label": "Sunstar Search-failure", "isController": false}, {"data": [[1.62920803E12, 4.1], [1.6292088E12, 147.0], [1.62920837E12, 119.4], [1.62920871E12, 74.4], [1.62920854E12, 98.9], [1.62920845E12, 126.8], [1.62920879E12, 135.4], [1.62920862E12, 147.5], [1.62920881E12, 127.0], [1.62920864E12, 101.7], [1.62920804E12, 6.2], [1.62920855E12, 123.2], [1.62920838E12, 142.7], [1.62920872E12, 98.8], [1.62920812E12, 2.5], [1.62920863E12, 126.4], [1.62920846E12, 101.9], [1.62920865E12, 76.5], [1.62920848E12, 51.8], [1.62920882E12, 102.0], [1.62920839E12, 149.5], [1.62920805E12, 9.3], [1.62920873E12, 123.8], [1.62920856E12, 145.5], [1.62920847E12, 76.5], [1.62920849E12, 27.2], [1.62920832E12, 6.7], [1.62920883E12, 76.7], [1.62920866E12, 51.6], [1.62920806E12, 6.8], [1.62920857E12, 133.5], [1.6292084E12, 147.5], [1.62920874E12, 146.1], [1.62920814E12, 0.2], [1.62920831E12, 12.2], [1.62920833E12, 24.2], [1.62920816E12, 0.1], [1.62920867E12, 27.3], [1.6292085E12, 6.8], [1.62920807E12, 10.0], [1.62920884E12, 52.1], [1.62920841E12, 149.2], [1.62920875E12, 149.9], [1.62920858E12, 150.3], [1.62920851E12, 24.3], [1.62920834E12, 49.0], [1.62920885E12, 27.3], [1.62920868E12, 5.9], [1.62920808E12, 15.2], [1.62920859E12, 149.7], [1.62920842E12, 148.7], [1.62920876E12, 145.0], [1.62920818E12, 0.3], [1.62920835E12, 73.7], [1.62920869E12, 24.1], [1.62920852E12, 49.4], [1.62920886E12, 4.6], [1.62920843E12, 145.7], [1.62920809E12, 0.2], [1.62920877E12, 149.0], [1.6292086E12, 149.9], [1.62920802E12, 2.0], [1.62920819E12, 0.2], [1.62920853E12, 74.4], [1.62920836E12, 95.4], [1.6292087E12, 49.5], [1.6292081E12, 3.4], [1.62920861E12, 148.8], [1.62920844E12, 148.5], [1.62920878E12, 149.6]], "isOverall": false, "label": "Sunstar Search-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62920886E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62920802E12, "maxY": 150.3, "series": [{"data": [[1.62920803E12, 4.1], [1.6292088E12, 147.0], [1.62920837E12, 119.4], [1.62920871E12, 74.4], [1.62920854E12, 98.9], [1.62920845E12, 126.8], [1.62920879E12, 135.4], [1.62920862E12, 147.5], [1.62920881E12, 127.0], [1.62920864E12, 101.7], [1.62920804E12, 6.2], [1.62920855E12, 123.2], [1.62920838E12, 142.7], [1.62920872E12, 98.8], [1.62920812E12, 2.5], [1.62920863E12, 126.4], [1.62920846E12, 101.9], [1.62920865E12, 76.5], [1.62920848E12, 51.8], [1.62920882E12, 102.0], [1.62920839E12, 149.5], [1.62920805E12, 9.3], [1.62920873E12, 123.8], [1.62920856E12, 145.5], [1.62920847E12, 76.5], [1.62920849E12, 27.2], [1.62920832E12, 6.7], [1.62920883E12, 76.7], [1.62920866E12, 51.6], [1.62920806E12, 6.8], [1.62920857E12, 133.5], [1.6292084E12, 147.5], [1.62920874E12, 146.1], [1.62920814E12, 0.2], [1.62920831E12, 12.2], [1.62920833E12, 24.2], [1.62920816E12, 0.1], [1.62920867E12, 27.3], [1.6292085E12, 6.8], [1.62920807E12, 10.0], [1.62920884E12, 52.1], [1.62920841E12, 149.2], [1.62920875E12, 149.9], [1.62920858E12, 150.3], [1.62920851E12, 24.3], [1.62920834E12, 49.0], [1.62920885E12, 27.3], [1.62920868E12, 5.9], [1.62920808E12, 15.2], [1.62920859E12, 149.7], [1.62920842E12, 148.7], [1.62920876E12, 145.0], [1.62920818E12, 0.3], [1.62920835E12, 73.7], [1.62920869E12, 24.1], [1.62920852E12, 49.4], [1.62920886E12, 4.6], [1.62920843E12, 145.7], [1.62920809E12, 0.2], [1.62920877E12, 149.0], [1.6292086E12, 149.9], [1.62920802E12, 2.0], [1.62920819E12, 0.2], [1.62920853E12, 74.4], [1.62920836E12, 95.4], [1.6292087E12, 49.5], [1.6292081E12, 3.4], [1.62920861E12, 148.8], [1.62920844E12, 148.5], [1.62920878E12, 149.6]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.62920802E12, 34.6], [1.62920803E12, 35.2], [1.62920804E12, 35.6], [1.62920805E12, 34.1], [1.62920886E12, 0.7]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62920886E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

