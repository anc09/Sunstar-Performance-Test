/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "maxY": 180422.0, "series": [{"data": [[0.0, 10.0], [0.1, 10.0], [0.2, 11.0], [0.3, 11.0], [0.4, 11.0], [0.5, 11.0], [0.6, 11.0], [0.7, 12.0], [0.8, 12.0], [0.9, 12.0], [1.0, 12.0], [1.1, 12.0], [1.2, 12.0], [1.3, 12.0], [1.4, 12.0], [1.5, 12.0], [1.6, 12.0], [1.7, 12.0], [1.8, 12.0], [1.9, 12.0], [2.0, 12.0], [2.1, 12.0], [2.2, 12.0], [2.3, 12.0], [2.4, 12.0], [2.5, 12.0], [2.6, 12.0], [2.7, 12.0], [2.8, 12.0], [2.9, 12.0], [3.0, 13.0], [3.1, 13.0], [3.2, 13.0], [3.3, 13.0], [3.4, 13.0], [3.5, 13.0], [3.6, 13.0], [3.7, 13.0], [3.8, 13.0], [3.9, 13.0], [4.0, 13.0], [4.1, 13.0], [4.2, 13.0], [4.3, 13.0], [4.4, 13.0], [4.5, 13.0], [4.6, 13.0], [4.7, 13.0], [4.8, 13.0], [4.9, 13.0], [5.0, 13.0], [5.1, 13.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 13.0], [5.6, 13.0], [5.7, 13.0], [5.8, 13.0], [5.9, 13.0], [6.0, 13.0], [6.1, 13.0], [6.2, 13.0], [6.3, 13.0], [6.4, 13.0], [6.5, 13.0], [6.6, 13.0], [6.7, 13.0], [6.8, 13.0], [6.9, 13.0], [7.0, 13.0], [7.1, 13.0], [7.2, 13.0], [7.3, 13.0], [7.4, 13.0], [7.5, 14.0], [7.6, 14.0], [7.7, 14.0], [7.8, 14.0], [7.9, 14.0], [8.0, 14.0], [8.1, 14.0], [8.2, 14.0], [8.3, 14.0], [8.4, 14.0], [8.5, 14.0], [8.6, 14.0], [8.7, 14.0], [8.8, 14.0], [8.9, 14.0], [9.0, 14.0], [9.1, 14.0], [9.2, 14.0], [9.3, 14.0], [9.4, 14.0], [9.5, 14.0], [9.6, 14.0], [9.7, 14.0], [9.8, 14.0], [9.9, 14.0], [10.0, 14.0], [10.1, 14.0], [10.2, 14.0], [10.3, 14.0], [10.4, 14.0], [10.5, 14.0], [10.6, 14.0], [10.7, 14.0], [10.8, 14.0], [10.9, 15.0], [11.0, 15.0], [11.1, 15.0], [11.2, 15.0], [11.3, 15.0], [11.4, 15.0], [11.5, 15.0], [11.6, 15.0], [11.7, 15.0], [11.8, 15.0], [11.9, 15.0], [12.0, 15.0], [12.1, 15.0], [12.2, 15.0], [12.3, 15.0], [12.4, 15.0], [12.5, 15.0], [12.6, 15.0], [12.7, 15.0], [12.8, 15.0], [12.9, 15.0], [13.0, 15.0], [13.1, 15.0], [13.2, 16.0], [13.3, 16.0], [13.4, 16.0], [13.5, 16.0], [13.6, 16.0], [13.7, 16.0], [13.8, 16.0], [13.9, 16.0], [14.0, 16.0], [14.1, 16.0], [14.2, 16.0], [14.3, 16.0], [14.4, 16.0], [14.5, 16.0], [14.6, 16.0], [14.7, 16.0], [14.8, 16.0], [14.9, 17.0], [15.0, 17.0], [15.1, 17.0], [15.2, 17.0], [15.3, 17.0], [15.4, 17.0], [15.5, 17.0], [15.6, 17.0], [15.7, 17.0], [15.8, 17.0], [15.9, 17.0], [16.0, 17.0], [16.1, 17.0], [16.2, 17.0], [16.3, 17.0], [16.4, 17.0], [16.5, 17.0], [16.6, 18.0], [16.7, 18.0], [16.8, 18.0], [16.9, 18.0], [17.0, 18.0], [17.1, 18.0], [17.2, 18.0], [17.3, 18.0], [17.4, 18.0], [17.5, 18.0], [17.6, 18.0], [17.7, 18.0], [17.8, 18.0], [17.9, 18.0], [18.0, 18.0], [18.1, 18.0], [18.2, 18.0], [18.3, 18.0], [18.4, 18.0], [18.5, 18.0], [18.6, 18.0], [18.7, 18.0], [18.8, 18.0], [18.9, 18.0], [19.0, 19.0], [19.1, 19.0], [19.2, 19.0], [19.3, 19.0], [19.4, 19.0], [19.5, 19.0], [19.6, 19.0], [19.7, 19.0], [19.8, 19.0], [19.9, 19.0], [20.0, 19.0], [20.1, 19.0], [20.2, 19.0], [20.3, 19.0], [20.4, 19.0], [20.5, 19.0], [20.6, 19.0], [20.7, 19.0], [20.8, 19.0], [20.9, 19.0], [21.0, 19.0], [21.1, 19.0], [21.2, 19.0], [21.3, 19.0], [21.4, 19.0], [21.5, 19.0], [21.6, 19.0], [21.7, 19.0], [21.8, 19.0], [21.9, 19.0], [22.0, 19.0], [22.1, 20.0], [22.2, 20.0], [22.3, 20.0], [22.4, 20.0], [22.5, 20.0], [22.6, 20.0], [22.7, 20.0], [22.8, 20.0], [22.9, 20.0], [23.0, 20.0], [23.1, 20.0], [23.2, 20.0], [23.3, 20.0], [23.4, 20.0], [23.5, 20.0], [23.6, 20.0], [23.7, 20.0], [23.8, 20.0], [23.9, 20.0], [24.0, 20.0], [24.1, 20.0], [24.2, 20.0], [24.3, 20.0], [24.4, 20.0], [24.5, 20.0], [24.6, 20.0], [24.7, 20.0], [24.8, 20.0], [24.9, 20.0], [25.0, 20.0], [25.1, 20.0], [25.2, 20.0], [25.3, 20.0], [25.4, 21.0], [25.5, 21.0], [25.6, 21.0], [25.7, 21.0], [25.8, 21.0], [25.9, 21.0], [26.0, 21.0], [26.1, 21.0], [26.2, 21.0], [26.3, 21.0], [26.4, 21.0], [26.5, 21.0], [26.6, 21.0], [26.7, 21.0], [26.8, 21.0], [26.9, 21.0], [27.0, 21.0], [27.1, 21.0], [27.2, 21.0], [27.3, 21.0], [27.4, 21.0], [27.5, 21.0], [27.6, 21.0], [27.7, 21.0], [27.8, 21.0], [27.9, 21.0], [28.0, 21.0], [28.1, 21.0], [28.2, 21.0], [28.3, 21.0], [28.4, 21.0], [28.5, 22.0], [28.6, 22.0], [28.7, 22.0], [28.8, 22.0], [28.9, 22.0], [29.0, 22.0], [29.1, 22.0], [29.2, 22.0], [29.3, 22.0], [29.4, 22.0], [29.5, 22.0], [29.6, 22.0], [29.7, 22.0], [29.8, 22.0], [29.9, 22.0], [30.0, 22.0], [30.1, 22.0], [30.2, 22.0], [30.3, 22.0], [30.4, 22.0], [30.5, 22.0], [30.6, 22.0], [30.7, 22.0], [30.8, 22.0], [30.9, 22.0], [31.0, 22.0], [31.1, 22.0], [31.2, 22.0], [31.3, 22.0], [31.4, 23.0], [31.5, 23.0], [31.6, 23.0], [31.7, 23.0], [31.8, 23.0], [31.9, 23.0], [32.0, 23.0], [32.1, 23.0], [32.2, 23.0], [32.3, 23.0], [32.4, 23.0], [32.5, 23.0], [32.6, 23.0], [32.7, 23.0], [32.8, 23.0], [32.9, 23.0], [33.0, 23.0], [33.1, 23.0], [33.2, 23.0], [33.3, 23.0], [33.4, 23.0], [33.5, 23.0], [33.6, 23.0], [33.7, 23.0], [33.8, 23.0], [33.9, 24.0], [34.0, 24.0], [34.1, 24.0], [34.2, 24.0], [34.3, 24.0], [34.4, 24.0], [34.5, 24.0], [34.6, 24.0], [34.7, 24.0], [34.8, 24.0], [34.9, 24.0], [35.0, 24.0], [35.1, 24.0], [35.2, 24.0], [35.3, 24.0], [35.4, 24.0], [35.5, 24.0], [35.6, 24.0], [35.7, 24.0], [35.8, 24.0], [35.9, 24.0], [36.0, 24.0], [36.1, 24.0], [36.2, 25.0], [36.3, 25.0], [36.4, 25.0], [36.5, 25.0], [36.6, 25.0], [36.7, 25.0], [36.8, 25.0], [36.9, 25.0], [37.0, 25.0], [37.1, 25.0], [37.2, 25.0], [37.3, 25.0], [37.4, 25.0], [37.5, 25.0], [37.6, 25.0], [37.7, 25.0], [37.8, 25.0], [37.9, 25.0], [38.0, 25.0], [38.1, 25.0], [38.2, 25.0], [38.3, 25.0], [38.4, 26.0], [38.5, 26.0], [38.6, 26.0], [38.7, 26.0], [38.8, 26.0], [38.9, 26.0], [39.0, 26.0], [39.1, 26.0], [39.2, 26.0], [39.3, 26.0], [39.4, 26.0], [39.5, 26.0], [39.6, 26.0], [39.7, 26.0], [39.8, 26.0], [39.9, 26.0], [40.0, 26.0], [40.1, 26.0], [40.2, 27.0], [40.3, 27.0], [40.4, 27.0], [40.5, 27.0], [40.6, 27.0], [40.7, 27.0], [40.8, 27.0], [40.9, 27.0], [41.0, 27.0], [41.1, 27.0], [41.2, 27.0], [41.3, 27.0], [41.4, 27.0], [41.5, 27.0], [41.6, 27.0], [41.7, 28.0], [41.8, 28.0], [41.9, 28.0], [42.0, 28.0], [42.1, 28.0], [42.2, 28.0], [42.3, 28.0], [42.4, 28.0], [42.5, 28.0], [42.6, 28.0], [42.7, 28.0], [42.8, 28.0], [42.9, 29.0], [43.0, 29.0], [43.1, 29.0], [43.2, 29.0], [43.3, 29.0], [43.4, 29.0], [43.5, 29.0], [43.6, 29.0], [43.7, 30.0], [43.8, 30.0], [43.9, 30.0], [44.0, 30.0], [44.1, 30.0], [44.2, 30.0], [44.3, 31.0], [44.4, 31.0], [44.5, 31.0], [44.6, 31.0], [44.7, 31.0], [44.8, 31.0], [44.9, 32.0], [45.0, 32.0], [45.1, 32.0], [45.2, 32.0], [45.3, 33.0], [45.4, 33.0], [45.5, 33.0], [45.6, 33.0], [45.7, 34.0], [45.8, 34.0], [45.9, 34.0], [46.0, 35.0], [46.1, 35.0], [46.2, 35.0], [46.3, 36.0], [46.4, 36.0], [46.5, 37.0], [46.6, 37.0], [46.7, 37.0], [46.8, 38.0], [46.9, 38.0], [47.0, 38.0], [47.1, 38.0], [47.2, 38.0], [47.3, 38.0], [47.4, 39.0], [47.5, 39.0], [47.6, 39.0], [47.7, 39.0], [47.8, 39.0], [47.9, 39.0], [48.0, 39.0], [48.1, 39.0], [48.2, 39.0], [48.3, 39.0], [48.4, 40.0], [48.5, 40.0], [48.6, 40.0], [48.7, 40.0], [48.8, 40.0], [48.9, 40.0], [49.0, 40.0], [49.1, 40.0], [49.2, 40.0], [49.3, 40.0], [49.4, 40.0], [49.5, 40.0], [49.6, 40.0], [49.7, 40.0], [49.8, 40.0], [49.9, 41.0], [50.0, 41.0], [50.1, 41.0], [50.2, 41.0], [50.3, 41.0], [50.4, 41.0], [50.5, 41.0], [50.6, 41.0], [50.7, 41.0], [50.8, 41.0], [50.9, 41.0], [51.0, 41.0], [51.1, 41.0], [51.2, 41.0], [51.3, 41.0], [51.4, 41.0], [51.5, 41.0], [51.6, 41.0], [51.7, 41.0], [51.8, 41.0], [51.9, 41.0], [52.0, 41.0], [52.1, 41.0], [52.2, 41.0], [52.3, 41.0], [52.4, 41.0], [52.5, 42.0], [52.6, 42.0], [52.7, 42.0], [52.8, 42.0], [52.9, 42.0], [53.0, 42.0], [53.1, 42.0], [53.2, 42.0], [53.3, 42.0], [53.4, 42.0], [53.5, 42.0], [53.6, 42.0], [53.7, 42.0], [53.8, 42.0], [53.9, 42.0], [54.0, 42.0], [54.1, 42.0], [54.2, 42.0], [54.3, 42.0], [54.4, 42.0], [54.5, 42.0], [54.6, 42.0], [54.7, 42.0], [54.8, 42.0], [54.9, 42.0], [55.0, 42.0], [55.1, 42.0], [55.2, 42.0], [55.3, 42.0], [55.4, 42.0], [55.5, 43.0], [55.6, 43.0], [55.7, 43.0], [55.8, 43.0], [55.9, 43.0], [56.0, 43.0], [56.1, 43.0], [56.2, 43.0], [56.3, 43.0], [56.4, 43.0], [56.5, 43.0], [56.6, 43.0], [56.7, 43.0], [56.8, 43.0], [56.9, 43.0], [57.0, 43.0], [57.1, 43.0], [57.2, 43.0], [57.3, 43.0], [57.4, 43.0], [57.5, 43.0], [57.6, 43.0], [57.7, 43.0], [57.8, 43.0], [57.9, 43.0], [58.0, 43.0], [58.1, 43.0], [58.2, 43.0], [58.3, 43.0], [58.4, 43.0], [58.5, 43.0], [58.6, 43.0], [58.7, 43.0], [58.8, 43.0], [58.9, 43.0], [59.0, 43.0], [59.1, 44.0], [59.2, 44.0], [59.3, 44.0], [59.4, 44.0], [59.5, 44.0], [59.6, 44.0], [59.7, 44.0], [59.8, 44.0], [59.9, 44.0], [60.0, 44.0], [60.1, 44.0], [60.2, 44.0], [60.3, 44.0], [60.4, 44.0], [60.5, 44.0], [60.6, 44.0], [60.7, 44.0], [60.8, 44.0], [60.9, 44.0], [61.0, 44.0], [61.1, 44.0], [61.2, 44.0], [61.3, 44.0], [61.4, 44.0], [61.5, 44.0], [61.6, 44.0], [61.7, 44.0], [61.8, 44.0], [61.9, 44.0], [62.0, 44.0], [62.1, 44.0], [62.2, 44.0], [62.3, 44.0], [62.4, 44.0], [62.5, 44.0], [62.6, 44.0], [62.7, 44.0], [62.8, 44.0], [62.9, 45.0], [63.0, 45.0], [63.1, 45.0], [63.2, 45.0], [63.3, 45.0], [63.4, 45.0], [63.5, 45.0], [63.6, 45.0], [63.7, 45.0], [63.8, 45.0], [63.9, 45.0], [64.0, 45.0], [64.1, 45.0], [64.2, 45.0], [64.3, 45.0], [64.4, 45.0], [64.5, 45.0], [64.6, 45.0], [64.7, 45.0], [64.8, 45.0], [64.9, 45.0], [65.0, 45.0], [65.1, 45.0], [65.2, 45.0], [65.3, 45.0], [65.4, 45.0], [65.5, 45.0], [65.6, 45.0], [65.7, 45.0], [65.8, 45.0], [65.9, 45.0], [66.0, 45.0], [66.1, 45.0], [66.2, 45.0], [66.3, 45.0], [66.4, 45.0], [66.5, 45.0], [66.6, 45.0], [66.7, 45.0], [66.8, 46.0], [66.9, 46.0], [67.0, 46.0], [67.1, 46.0], [67.2, 46.0], [67.3, 46.0], [67.4, 46.0], [67.5, 46.0], [67.6, 46.0], [67.7, 46.0], [67.8, 46.0], [67.9, 46.0], [68.0, 46.0], [68.1, 46.0], [68.2, 46.0], [68.3, 46.0], [68.4, 46.0], [68.5, 46.0], [68.6, 46.0], [68.7, 46.0], [68.8, 46.0], [68.9, 46.0], [69.0, 46.0], [69.1, 46.0], [69.2, 46.0], [69.3, 46.0], [69.4, 46.0], [69.5, 46.0], [69.6, 46.0], [69.7, 46.0], [69.8, 46.0], [69.9, 46.0], [70.0, 46.0], [70.1, 46.0], [70.2, 46.0], [70.3, 47.0], [70.4, 47.0], [70.5, 47.0], [70.6, 47.0], [70.7, 47.0], [70.8, 47.0], [70.9, 47.0], [71.0, 47.0], [71.1, 47.0], [71.2, 47.0], [71.3, 47.0], [71.4, 47.0], [71.5, 47.0], [71.6, 47.0], [71.7, 47.0], [71.8, 47.0], [71.9, 47.0], [72.0, 47.0], [72.1, 47.0], [72.2, 47.0], [72.3, 47.0], [72.4, 47.0], [72.5, 47.0], [72.6, 47.0], [72.7, 47.0], [72.8, 47.0], [72.9, 47.0], [73.0, 47.0], [73.1, 47.0], [73.2, 47.0], [73.3, 47.0], [73.4, 47.0], [73.5, 48.0], [73.6, 48.0], [73.7, 48.0], [73.8, 48.0], [73.9, 48.0], [74.0, 48.0], [74.1, 48.0], [74.2, 48.0], [74.3, 48.0], [74.4, 48.0], [74.5, 48.0], [74.6, 48.0], [74.7, 48.0], [74.8, 48.0], [74.9, 48.0], [75.0, 48.0], [75.1, 48.0], [75.2, 48.0], [75.3, 48.0], [75.4, 48.0], [75.5, 48.0], [75.6, 48.0], [75.7, 48.0], [75.8, 48.0], [75.9, 48.0], [76.0, 49.0], [76.1, 49.0], [76.2, 49.0], [76.3, 49.0], [76.4, 49.0], [76.5, 49.0], [76.6, 49.0], [76.7, 49.0], [76.8, 49.0], [76.9, 49.0], [77.0, 49.0], [77.1, 49.0], [77.2, 49.0], [77.3, 49.0], [77.4, 49.0], [77.5, 49.0], [77.6, 49.0], [77.7, 49.0], [77.8, 49.0], [77.9, 49.0], [78.0, 49.0], [78.1, 49.0], [78.2, 49.0], [78.3, 50.0], [78.4, 50.0], [78.5, 50.0], [78.6, 50.0], [78.7, 50.0], [78.8, 50.0], [78.9, 50.0], [79.0, 50.0], [79.1, 50.0], [79.2, 50.0], [79.3, 50.0], [79.4, 50.0], [79.5, 50.0], [79.6, 50.0], [79.7, 50.0], [79.8, 50.0], [79.9, 50.0], [80.0, 50.0], [80.1, 50.0], [80.2, 51.0], [80.3, 51.0], [80.4, 51.0], [80.5, 51.0], [80.6, 51.0], [80.7, 51.0], [80.8, 51.0], [80.9, 51.0], [81.0, 51.0], [81.1, 51.0], [81.2, 51.0], [81.3, 51.0], [81.4, 51.0], [81.5, 51.0], [81.6, 51.0], [81.7, 51.0], [81.8, 51.0], [81.9, 52.0], [82.0, 52.0], [82.1, 52.0], [82.2, 52.0], [82.3, 52.0], [82.4, 52.0], [82.5, 52.0], [82.6, 52.0], [82.7, 52.0], [82.8, 52.0], [82.9, 52.0], [83.0, 52.0], [83.1, 52.0], [83.2, 52.0], [83.3, 53.0], [83.4, 53.0], [83.5, 53.0], [83.6, 53.0], [83.7, 53.0], [83.8, 53.0], [83.9, 53.0], [84.0, 53.0], [84.1, 53.0], [84.2, 53.0], [84.3, 53.0], [84.4, 54.0], [84.5, 54.0], [84.6, 54.0], [84.7, 54.0], [84.8, 54.0], [84.9, 54.0], [85.0, 54.0], [85.1, 54.0], [85.2, 54.0], [85.3, 54.0], [85.4, 55.0], [85.5, 55.0], [85.6, 55.0], [85.7, 55.0], [85.8, 55.0], [85.9, 55.0], [86.0, 55.0], [86.1, 55.0], [86.2, 56.0], [86.3, 56.0], [86.4, 56.0], [86.5, 56.0], [86.6, 56.0], [86.7, 56.0], [86.8, 56.0], [86.9, 57.0], [87.0, 57.0], [87.1, 57.0], [87.2, 57.0], [87.3, 57.0], [87.4, 58.0], [87.5, 58.0], [87.6, 58.0], [87.7, 58.0], [87.8, 58.0], [87.9, 58.0], [88.0, 59.0], [88.1, 59.0], [88.2, 59.0], [88.3, 59.0], [88.4, 60.0], [88.5, 60.0], [88.6, 60.0], [88.7, 61.0], [88.8, 61.0], [88.9, 61.0], [89.0, 61.0], [89.1, 62.0], [89.2, 62.0], [89.3, 63.0], [89.4, 63.0], [89.5, 63.0], [89.6, 64.0], [89.7, 64.0], [89.8, 64.0], [89.9, 65.0], [90.0, 65.0], [90.1, 66.0], [90.2, 66.0], [90.3, 67.0], [90.4, 67.0], [90.5, 68.0], [90.6, 69.0], [90.7, 70.0], [90.8, 70.0], [90.9, 71.0], [91.0, 72.0], [91.1, 73.0], [91.2, 74.0], [91.3, 74.0], [91.4, 75.0], [91.5, 76.0], [91.6, 78.0], [91.7, 79.0], [91.8, 80.0], [91.9, 81.0], [92.0, 83.0], [92.1, 85.0], [92.2, 87.0], [92.3, 88.0], [92.4, 90.0], [92.5, 92.0], [92.6, 95.0], [92.7, 97.0], [92.8, 98.0], [92.9, 100.0], [93.0, 102.0], [93.1, 104.0], [93.2, 107.0], [93.3, 111.0], [93.4, 113.0], [93.5, 117.0], [93.6, 124.0], [93.7, 133.0], [93.8, 140.0], [93.9, 150.0], [94.0, 160.0], [94.1, 173.0], [94.2, 192.0], [94.3, 215.0], [94.4, 236.0], [94.5, 267.0], [94.6, 305.0], [94.7, 329.0], [94.8, 346.0], [94.9, 357.0], [95.0, 373.0], [95.1, 393.0], [95.2, 416.0], [95.3, 443.0], [95.4, 471.0], [95.5, 495.0], [95.6, 526.0], [95.7, 545.0], [95.8, 568.0], [95.9, 583.0], [96.0, 602.0], [96.1, 618.0], [96.2, 641.0], [96.3, 658.0], [96.4, 673.0], [96.5, 684.0], [96.6, 696.0], [96.7, 708.0], [96.8, 722.0], [96.9, 740.0], [97.0, 758.0], [97.1, 778.0], [97.2, 796.0], [97.3, 813.0], [97.4, 838.0], [97.5, 866.0], [97.6, 908.0], [97.7, 942.0], [97.8, 968.0], [97.9, 989.0], [98.0, 1003.0], [98.1, 1017.0], [98.2, 1030.0], [98.3, 1047.0], [98.4, 1066.0], [98.5, 1091.0], [98.6, 1134.0], [98.7, 1191.0], [98.8, 1229.0], [98.9, 1257.0], [99.0, 1381.0], [99.1, 1515.0], [99.2, 4658.0], [99.3, 18957.0], [99.4, 60025.0], [99.5, 60043.0], [99.6, 60056.0], [99.7, 120046.0], [99.8, 120074.0], [99.9, 120740.0]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 54498.0, "series": [{"data": [[0.0, 54498.0], [180000.0, 46.0], [180100.0, 6.0], [120700.0, 3.0], [120300.0, 1.0], [180200.0, 2.0], [100.0, 814.0], [33100.0, 1.0], [35300.0, 1.0], [37700.0, 1.0], [40300.0, 1.0], [42900.0, 1.0], [43100.0, 1.0], [44700.0, 2.0], [46500.0, 1.0], [180300.0, 1.0], [49300.0, 1.0], [50500.0, 1.0], [200.0, 211.0], [51500.0, 1.0], [51700.0, 1.0], [53700.0, 1.0], [55300.0, 1.0], [55900.0, 1.0], [57900.0, 1.0], [59700.0, 1.0], [60100.0, 8.0], [60300.0, 3.0], [60500.0, 1.0], [300.0, 321.0], [400.0, 221.0], [500.0, 281.0], [600.0, 379.0], [700.0, 345.0], [180400.0, 1.0], [800.0, 210.0], [900.0, 229.0], [1000.0, 330.0], [1100.0, 113.0], [1200.0, 124.0], [1300.0, 48.0], [1400.0, 35.0], [1500.0, 33.0], [1600.0, 21.0], [1700.0, 4.0], [1800.0, 6.0], [1900.0, 3.0], [2000.0, 2.0], [4600.0, 3.0], [4500.0, 1.0], [4400.0, 1.0], [4700.0, 1.0], [5000.0, 2.0], [4900.0, 1.0], [5300.0, 3.0], [5400.0, 2.0], [5800.0, 1.0], [6100.0, 1.0], [6400.0, 1.0], [6800.0, 2.0], [6900.0, 1.0], [6700.0, 1.0], [7500.0, 1.0], [120100.0, 18.0], [7800.0, 1.0], [8500.0, 2.0], [8300.0, 1.0], [8900.0, 2.0], [9200.0, 1.0], [9300.0, 1.0], [10000.0, 2.0], [9900.0, 2.0], [10200.0, 2.0], [9800.0, 1.0], [10300.0, 3.0], [10500.0, 1.0], [10400.0, 1.0], [13500.0, 1.0], [13400.0, 1.0], [13900.0, 1.0], [14000.0, 1.0], [14200.0, 1.0], [14400.0, 1.0], [14600.0, 1.0], [14500.0, 2.0], [14700.0, 1.0], [14800.0, 1.0], [15000.0, 3.0], [17400.0, 1.0], [17600.0, 1.0], [18000.0, 2.0], [18100.0, 1.0], [18600.0, 1.0], [18900.0, 1.0], [19600.0, 1.0], [21000.0, 1.0], [21100.0, 1.0], [21300.0, 1.0], [21600.0, 1.0], [22400.0, 1.0], [23100.0, 1.0], [23700.0, 1.0], [23600.0, 1.0], [24100.0, 1.0], [24500.0, 1.0], [26000.0, 2.0], [26100.0, 1.0], [26500.0, 1.0], [26900.0, 1.0], [27700.0, 2.0], [28900.0, 1.0], [29400.0, 1.0], [30800.0, 2.0], [31500.0, 3.0], [30900.0, 1.0], [33000.0, 1.0], [34400.0, 1.0], [35600.0, 1.0], [37600.0, 1.0], [39000.0, 1.0], [40200.0, 1.0], [41800.0, 1.0], [47400.0, 2.0], [49200.0, 1.0], [54000.0, 1.0], [56600.0, 1.0], [58400.0, 1.0], [60000.0, 149.0], [60200.0, 6.0], [120000.0, 107.0], [120400.0, 1.0]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 180400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 522.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 55652.0, "series": [{"data": [[0.0, 55652.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1895.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 522.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 632.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.62627121E12, "maxY": 1999.7, "series": [{"data": [[1.62627138E12, 2.0], [1.62627155E12, 3.0], [1.62627121E12, 1999.7], [1.62627206E12, 7.0], [1.62627172E12, 3.0], [1.62627189E12, 367.5], [1.62627146E12, 4.526315789473682], [1.62627163E12, 10.0], [1.62627129E12, 1157.6138613861385], [1.6262718E12, 8.510290986515262], [1.62627197E12, 113.50892857142864], [1.62627154E12, 4.964646464646459], [1.62627171E12, 3.0], [1.62627137E12, 4.345821325648413], [1.62627188E12, 379.0], [1.62627205E12, 12.022913256955796], [1.62627162E12, 8.622601279317697], [1.62627179E12, 6.240310077519383], [1.62627128E12, 1347.557894736842], [1.62627145E12, 7.0], [1.62627196E12, 178.0], [1.62627123E12, 1979.0], [1.62627174E12, 3.0], [1.62627191E12, 269.0306748466259], [1.6262714E12, 3.0], [1.62627157E12, 3.0], [1.62627131E12, 918.8059210526318], [1.62627208E12, 6.001680672268909], [1.62627182E12, 12.380847953216389], [1.62627148E12, 5.0], [1.62627165E12, 10.0], [1.62627122E12, 1991.5], [1.62627139E12, 2.13953488372093], [1.6262719E12, 356.0], [1.62627207E12, 7.0], [1.62627156E12, 3.0], [1.62627173E12, 3.0], [1.6262713E12, 1068.969696969697], [1.62627147E12, 4.297643097643095], [1.62627198E12, 57.0], [1.62627164E12, 10.0], [1.62627181E12, 9.0], [1.62627202E12, 26.7741935483871], [1.62627168E12, 5.39464882943143], [1.62627185E12, 512.6578124999997], [1.62627142E12, 4.911281489594746], [1.62627159E12, 3.0209580838323333], [1.6262721E12, 3.0], [1.62627176E12, 3.359523809523809], [1.6262715E12, 3.0], [1.62627167E12, 6.021290751829667], [1.62627133E12, 252.21993127147738], [1.62627184E12, 58.53435114503818], [1.62627158E12, 3.1179245283018897], [1.62627175E12, 3.0], [1.62627124E12, 1931.0561797752819], [1.62627141E12, 3.327354260089685], [1.62627192E12, 187.0], [1.62627209E12, 3.0], [1.62627166E12, 10.0], [1.62627183E12, 11.9047619047619], [1.62627132E12, 568.0988023952093], [1.62627149E12, 4.65432098765432], [1.6262717E12, 3.9798165137614654], [1.62627187E12, 790.1553637484592], [1.62627136E12, 4.991610738255034], [1.62627153E12, 6.0], [1.62627127E12, 1609.2887029288695], [1.62627204E12, 17.396910678307595], [1.62627178E12, 3.526717557251905], [1.62627144E12, 5.91475644699141], [1.62627161E12, 6.422398589065262], [1.62627135E12, 7.718562874251503], [1.62627186E12, 920.8702742772434], [1.62627203E12, 36.602631578947374], [1.62627152E12, 5.389261744966451], [1.62627169E12, 6.0], [1.62627126E12, 1805.4140127388537], [1.62627143E12, 5.426936619718316], [1.62627211E12, 2.5], [1.6262716E12, 3.8185792349726757], [1.62627177E12, 3.26197604790419], [1.62627134E12, 13.56186152099886], [1.62627151E12, 3.0]], "isOverall": false, "label": "bzm - Concurrency Thread Group-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62627211E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 21.0, "minX": 1.0, "maxY": 120776.0, "series": [{"data": [[2.0, 36.29982363315693], [3.0, 22.167847612036493], [4.0, 22.53768656716409], [5.0, 26.02625588101382], [6.0, 32.955434062292966], [7.0, 41.170860927152475], [8.0, 46.654478007419144], [9.0, 54.73818646232441], [10.0, 52.17636076403843], [11.0, 98.47692307692304], [12.0, 96.33333333333333], [13.0, 84.0], [14.0, 77.29999999999998], [15.0, 73.71880819366851], [16.0, 51.59933774834438], [17.0, 54.03333333333335], [18.0, 1300.5499425947175], [19.0, 137.0], [20.0, 199.6], [21.0, 2637.833333333333], [22.0, 3278.91071428571], [23.0, 18080.7], [24.0, 36108.0], [25.0, 25812.571428571428], [26.0, 25809.285714285717], [27.0, 45112.75], [28.0, 25807.000000000004], [29.0, 22586.125], [30.0, 4487.5], [31.0, 1302.261744966443], [33.0, 1142.3463561232172], [32.0, 60131.0], [35.0, 60159.33333333333], [34.0, 60142.66666666667], [37.0, 30135.833333333336], [36.0, 36121.8], [39.0, 22622.875000000004], [38.0, 60151.33333333333], [41.0, 36112.2], [40.0, 16488.454545454544], [43.0, 90143.0], [42.0, 60147.33333333333], [45.0, 22612.0], [44.0, 45148.75], [47.0, 45102.0], [46.0, 36111.2], [49.0, 60135.66666666667], [48.0, 60116.0], [51.0, 36070.2], [50.0, 30102.499999999996], [52.0, 36081.0], [53.0, 90114.0], [55.0, 36115.4], [54.0, 90071.5], [56.0, 60083.0], [57.0, 60225.5], [59.0, 100169.0], [58.0, 24197.4], [61.0, 11062.363636363636], [60.0, 60045.5], [63.0, 60065.5], [62.0, 60057.0], [67.0, 2253.2391304347816], [64.0, 20263.166666666664], [66.0, 40055.66666666667], [65.0, 60066.5], [69.0, 40060.333333333336], [71.0, 60047.5], [70.0, 120061.0], [68.0, 120061.0], [73.0, 40153.333333333336], [72.0, 40257.666666666664], [74.0, 60068.0], [75.0, 120057.0], [76.0, 40053.333333333336], [79.0, 30064.75], [78.0, 120063.0], [77.0, 120040.0], [82.0, 60391.5], [83.0, 120776.0], [81.0, 120066.0], [80.0, 120107.0], [87.0, 40239.333333333336], [86.0, 8333.066666666666], [85.0, 26244.4], [84.0, 24151.4], [91.0, 60215.0], [90.0, 60203.5], [89.0, 60236.5], [88.0, 11883.727272727272], [95.0, 60210.0], [94.0, 60209.0], [93.0, 60214.0], [92.0, 60199.0], [99.0, 60197.0], [98.0, 60220.5], [97.0, 60194.0], [96.0, 40251.0], [103.0, 40238.333333333336], [101.0, 60194.0], [100.0, 60208.0], [102.0, 20147.14285714286], [107.0, 40054.666666666664], [106.0, 60208.5], [105.0, 60193.5], [104.0, 24112.0], [111.0, 24078.0], [110.0, 60075.5], [109.0, 60055.5], [108.0, 60071.0], [114.0, 40094.333333333336], [113.0, 60103.0], [112.0, 60096.5], [115.0, 120062.0], [119.0, 40102.333333333336], [117.0, 40095.0], [116.0, 40117.333333333336], [118.0, 13378.555555555555], [123.0, 60101.0], [122.0, 60125.0], [121.0, 60113.0], [120.0, 60097.5], [127.0, 60107.5], [126.0, 60089.0], [125.0, 60105.0], [124.0, 60085.0], [135.0, 60158.5], [134.0, 60128.5], [133.0, 60128.5], [132.0, 60133.5], [131.0, 60115.0], [130.0, 60115.0], [129.0, 24082.6], [128.0, 60098.5], [143.0, 60098.5], [142.0, 40068.666666666664], [141.0, 60100.5], [140.0, 60073.5], [139.0, 60090.0], [138.0, 30158.0], [137.0, 60142.0], [136.0, 40094.666666666664], [151.0, 60098.0], [150.0, 60080.5], [149.0, 60094.5], [148.0, 60082.5], [147.0, 60084.0], [146.0, 60073.5], [145.0, 30054.0], [144.0, 60088.5], [159.0, 60078.5], [158.0, 60086.0], [157.0, 60080.5], [156.0, 60098.5], [155.0, 40065.333333333336], [154.0, 40072.333333333336], [153.0, 60080.0], [152.0, 60086.0], [167.0, 40499.666666666664], [165.0, 60398.0], [164.0, 60398.5], [163.0, 60388.0], [162.0, 60384.5], [161.0, 80281.66666666667], [160.0, 90.0], [166.0, 120086.0], [175.0, 60362.5], [174.0, 60401.0], [173.0, 40476.666666666664], [171.0, 40272.666666666664], [170.0, 60364.5], [169.0, 60374.0], [168.0, 60375.0], [172.0, 120036.0], [183.0, 60382.5], [182.0, 60371.5], [181.0, 60363.0], [180.0, 60376.0], [179.0, 40476.666666666664], [177.0, 40509.333333333336], [178.0, 120049.0], [176.0, 120089.0], [191.0, 30428.0], [189.0, 20298.0], [188.0, 20254.0], [187.0, 30610.0], [186.0, 40485.0], [184.0, 60379.0], [190.0, 60169.0], [185.0, 120087.0], [199.0, 30413.0], [198.0, 30466.0], [197.0, 30439.0], [196.0, 20317.666666666668], [195.0, 30502.5], [194.0, 30525.0], [193.0, 15264.75], [192.0, 15425.75], [207.0, 15353.25], [205.0, 30403.0], [204.0, 20311.333333333332], [203.0, 30396.0], [202.0, 30504.5], [201.0, 30473.5], [200.0, 30436.0], [206.0, 60182.0], [215.0, 30344.5], [214.0, 30368.5], [213.0, 20258.666666666668], [212.0, 20265.0], [211.0, 20147.0], [210.0, 645.0], [209.0, 30364.0], [208.0, 30342.0], [223.0, 30325.5], [222.0, 30335.5], [221.0, 30345.0], [220.0, 30334.0], [219.0, 30364.5], [218.0, 30328.0], [217.0, 30339.0], [216.0, 30340.5], [231.0, 12180.6], [230.0, 30343.5], [229.0, 20261.666666666668], [228.0, 15216.75], [227.0, 12202.4], [226.0, 30354.5], [225.0, 15291.25], [224.0, 30330.5], [238.0, 30325.0], [237.0, 15324.75], [235.0, 30331.0], [234.0, 30313.5], [233.0, 30325.5], [232.0, 30340.5], [236.0, 30048.0], [239.0, 60041.0], [243.0, 15046.75], [247.0, 60050.0], [246.0, 60057.0], [245.0, 60063.0], [244.0, 60045.0], [242.0, 60057.0], [241.0, 60058.0], [240.0, 60049.0], [255.0, 20330.0], [253.0, 30275.5], [252.0, 40191.666666666664], [251.0, 473.0], [250.0, 30244.5], [249.0, 30264.0], [248.0, 5983.90909090909], [254.0, 60046.0], [270.0, 20150.666666666668], [271.0, 20315.666666666668], [269.0, 20150.666666666668], [268.0, 30188.5], [267.0, 30181.5], [266.0, 30229.5], [265.0, 20196.0], [264.0, 30244.5], [263.0, 30231.0], [257.0, 30272.5], [256.0, 30264.5], [259.0, 30258.5], [258.0, 30269.5], [262.0, 30245.5], [261.0, 30264.5], [260.0, 30267.5], [275.0, 15428.0], [286.0, 20565.666666666668], [284.0, 15407.5], [285.0, 60042.0], [282.0, 20551.666666666668], [283.0, 30040.5], [280.0, 20297.333333333332], [281.0, 60044.0], [287.0, 20050.0], [279.0, 30421.5], [278.0, 30424.0], [277.0, 30422.0], [276.0, 30429.5], [273.0, 12347.8], [272.0, 60033.0], [274.0, 30037.5], [302.0, 30385.0], [303.0, 30408.5], [301.0, 30398.0], [300.0, 30423.0], [299.0, 40277.0], [298.0, 727.0], [297.0, 30428.0], [296.0, 30441.0], [295.0, 30431.5], [289.0, 15246.75], [288.0, 20560.333333333332], [291.0, 30427.5], [290.0, 30425.5], [294.0, 20301.333333333332], [293.0, 30407.0], [292.0, 15224.5], [318.0, 30374.0], [319.0, 30406.5], [317.0, 30397.0], [316.0, 30388.0], [315.0, 30391.5], [314.0, 30393.0], [313.0, 30406.5], [312.0, 30372.5], [311.0, 30375.0], [305.0, 30383.0], [304.0, 30402.0], [307.0, 706.0], [306.0, 30371.5], [310.0, 30390.0], [309.0, 30385.0], [308.0, 40274.666666666664], [334.0, 30351.0], [335.0, 30345.0], [333.0, 30366.0], [332.0, 30360.5], [331.0, 20251.666666666668], [330.0, 30355.5], [329.0, 30379.5], [328.0, 30357.5], [327.0, 30370.0], [321.0, 30397.0], [320.0, 20270.666666666668], [323.0, 30374.0], [322.0, 30370.5], [326.0, 30406.0], [325.0, 30371.0], [324.0, 30391.0], [350.0, 30314.0], [351.0, 30328.0], [349.0, 30317.0], [348.0, 30329.0], [347.0, 30327.5], [346.0, 30336.0], [345.0, 30327.5], [344.0, 30378.0], [343.0, 30370.5], [337.0, 30357.0], [336.0, 30350.5], [339.0, 30372.5], [338.0, 30366.0], [342.0, 40249.666666666664], [341.0, 659.0], [340.0, 30373.5], [366.0, 24927.0], [367.0, 16016.666666666666], [365.0, 24915.0], [364.0, 17069.333333333332], [363.0, 26075.0], [362.0, 26175.5], [361.0, 27144.5], [360.0, 18193.333333333332], [359.0, 27963.5], [353.0, 30306.5], [352.0, 30316.5], [355.0, 29529.0], [354.0, 30177.0], [358.0, 28256.0], [357.0, 28601.5], [356.0, 29281.0], [382.0, 17383.5], [383.0, 16748.0], [381.0, 17839.0], [380.0, 17986.5], [379.0, 18966.0], [378.0, 19074.5], [377.0, 19721.5], [376.0, 20300.0], [375.0, 20323.5], [369.0, 23477.5], [368.0, 23903.5], [371.0, 22538.0], [370.0, 22593.0], [374.0, 21094.5], [373.0, 21625.5], [372.0, 671.5722891566265], [397.0, 111.0], [396.0, 135.33333333333334], [387.0, 15542.5], [386.0, 15477.5], [385.0, 15859.5], [384.0, 16667.0], [395.0, 114.0], [394.0, 113.5], [393.0, 150.0], [392.0, 118.0], [399.0, 145.5], [391.0, 151.5], [390.0, 120.0], [389.0, 142.66666666666666], [388.0, 129.0], [414.0, 161.0], [415.0, 452.5], [413.0, 163.0], [412.0, 162.0], [411.0, 95.0], [410.0, 165.0], [409.0, 96.0], [408.0, 165.0], [407.0, 165.0], [401.0, 179.0], [400.0, 178.0], [403.0, 169.0], [402.0, 174.0], [406.0, 168.0], [405.0, 169.0], [404.0, 166.0], [429.0, 2146.9999999999995], [424.0, 889.6666666666667], [423.0, 994.8333333333333], [422.0, 1246.0], [420.0, 115.0], [425.0, 125.4], [426.0, 96.8], [427.0, 114.5], [428.0, 153.33333333333337], [419.0, 112.0], [418.0, 127.0], [417.0, 153.0], [416.0, 150.0], [430.0, 189.07142857142858], [431.0, 200.66666666666666], [444.0, 678.3076923076924], [447.0, 413.0], [446.0, 318.6666666666667], [445.0, 906.3870967741935], [443.0, 374.25], [441.0, 82.0], [442.0, 111.0], [440.0, 105.77777777777777], [432.0, 181.6], [439.0, 106.66666666666667], [438.0, 88.0], [433.0, 175.5384615384615], [435.0, 115.71428571428571], [434.0, 92.0], [436.0, 162.16666666666666], [437.0, 115.75], [462.0, 637.0], [463.0, 649.0], [461.0, 456.0], [460.0, 1228.0], [459.0, 657.5], [458.0, 636.5], [457.0, 641.0], [456.0, 664.5], [455.0, 471.33333333333337], [448.0, 297.6666666666667], [449.0, 56.0], [451.0, 215.39999999999998], [450.0, 641.0], [454.0, 732.0], [452.0, 540.25], [453.0, 95.0], [478.0, 376.5], [479.0, 1169.5], [477.0, 248.0], [476.0, 426.33333333333337], [475.0, 320.0], [474.0, 607.0], [473.0, 580.5], [472.0, 421.66666666666663], [470.0, 233.0], [471.0, 50.0], [465.0, 628.0], [464.0, 631.0], [467.0, 637.5], [466.0, 431.66666666666663], [469.0, 297.0], [468.0, 281.0], [494.0, 347.0], [495.0, 333.5], [493.0, 336.5], [492.0, 591.0], [491.0, 598.0], [490.0, 358.5], [489.0, 571.0], [488.0, 310.0], [487.0, 582.5], [481.0, 10924.0], [480.0, 184.0], [483.0, 255.33333333333331], [482.0, 1189.0], [486.0, 573.5], [485.0, 401.66666666666663], [484.0, 406.0], [499.0, 554.5], [510.0, 369.99999999999994], [508.0, 463.33333333333337], [509.0, 44.333333333333336], [506.0, 324.0], [507.0, 21.0], [505.0, 588.0], [504.0, 353.0], [511.0, 32.0], [503.0, 16117.0], [502.0, 328.5], [501.0, 602.3333333333333], [500.0, 27.0], [498.0, 359.5], [497.0, 575.0], [496.0, 350.5], [540.0, 571.0], [542.0, 544.5], [530.0, 569.6666666666667], [528.0, 332.5], [532.0, 576.5], [538.0, 565.5], [536.0, 573.6666666666667], [518.0, 737.6666666666667], [516.0, 49.25], [514.0, 586.0], [512.0, 383.6666666666667], [526.0, 451.99999999999994], [520.0, 360.0], [522.0, 48.8], [534.0, 553.0], [572.0, 529.5], [560.0, 216.33333333333331], [562.0, 356.33333333333337], [564.0, 5384.666666666666], [574.0, 478.5], [570.0, 547.0], [568.0, 545.5], [544.0, 717.0], [546.0, 39.0], [550.0, 5053.333333333334], [548.0, 50.0], [558.0, 209.0], [556.0, 311.5], [554.0, 193.57142857142858], [552.0, 5399.0], [566.0, 538.0], [578.0, 521.5], [592.0, 515.5], [594.0, 284.0], [596.0, 15473.0], [598.0, 57.8], [576.0, 470.0], [580.0, 529.5], [600.0, 48.0], [582.0, 42.0], [602.0, 45.875], [606.0, 46.0], [604.0, 47.0], [590.0, 500.5], [588.0, 510.5], [586.0, 517.5], [584.0, 548.0], [636.0, 399.0], [638.0, 398.5], [626.0, 532.3333333333334], [624.0, 415.5], [634.0, 395.0], [632.0, 286.66666666666663], [608.0, 842.7692307692307], [610.0, 74.9], [614.0, 65.0], [612.0, 75.0], [622.0, 417.0], [620.0, 419.5], [618.0, 783.0], [616.0, 657.3636363636364], [630.0, 364.5], [628.0, 65.57142857142857], [668.0, 421.0], [656.0, 328.3333333333333], [658.0, 288.0], [660.0, 397.5], [670.0, 383.0], [666.0, 725.0], [664.0, 391.0], [640.0, 210.5], [642.0, 503.0], [644.0, 156.42857142857144], [646.0, 513.0], [654.0, 327.6666666666667], [652.0, 377.0], [650.0, 416.5], [648.0, 406.0], [662.0, 284.5], [700.0, 113.2], [688.0, 322.5], [702.0, 99.0], [690.0, 265.0], [692.0, 144.6], [698.0, 189.0], [696.0, 206.5], [678.0, 398.0], [676.0, 398.0], [674.0, 389.5], [672.0, 380.0], [686.0, 555.0], [684.0, 603.0], [682.0, 663.0], [680.0, 275.6666666666667], [694.0, 158.33333333333331], [728.0, 145.0], [730.0, 121.66666666666667], [732.0, 79.3], [734.0, 87.0], [724.0, 121.0], [720.0, 161.0], [708.0, 132.0], [710.0, 87.0], [706.0, 173.5], [704.0, 169.0], [718.0, 226.0], [716.0, 166.5], [714.0, 122.5], [712.0, 94.66666666666667], [726.0, 151.5], [722.0, 158.0], [760.0, 62.5], [736.0, 88.5], [742.0, 63.666666666666664], [740.0, 97.0], [738.0, 113.0], [744.0, 85.25], [746.0, 100.0], [748.0, 75.25], [750.0, 84.25], [752.0, 52.0], [754.0, 107.2], [756.0, 73.375], [758.0, 54.0], [762.0, 40.5], [764.0, 65.0], [766.0, 65.0], [770.0, 37.0], [768.0, 76.75], [774.0, 53.333333333333336], [772.0, 54.0], [776.0, 66.4], [778.0, 54.5], [780.0, 53.0], [782.0, 4953.0], [792.0, 52.0], [798.0, 56.0], [786.0, 49.0], [784.0, 50.0], [790.0, 58.0], [788.0, 61.0], [796.0, 44.0], [794.0, 47.0], [828.0, 39.0], [800.0, 40.0], [804.0, 42.5], [802.0, 53.0], [826.0, 50.0], [824.0, 36.5], [814.0, 69.85714285714285], [812.0, 50.0], [810.0, 51.0], [808.0, 55.0], [816.0, 79.5], [818.0, 88.25], [820.0, 77.5], [822.0, 55.5], [830.0, 70.22222222222223], [856.0, 935.25], [848.0, 728.4], [832.0, 53.5], [846.0, 44.0], [844.0, 45.0], [842.0, 48.0], [836.0, 44.333333333333336], [838.0, 4097.4], [852.0, 614.6666666666667], [850.0, 120.0], [854.0, 530.5], [862.0, 35.0], [858.0, 28977.0], [888.0, 248.5], [894.0, 2022.2857142857147], [882.0, 497.33333333333337], [892.0, 295.66666666666663], [890.0, 490.33333333333337], [864.0, 1015.0], [866.0, 499.0], [868.0, 1124.214285714286], [870.0, 1091.5666666666666], [878.0, 470.0], [876.0, 339.0], [874.0, 535.0], [872.0, 329.66666666666663], [886.0, 455.5], [884.0, 449.0], [920.0, 287.5], [924.0, 172.2941176470588], [912.0, 297.1111111111111], [914.0, 327.22222222222223], [926.0, 145.00000000000003], [922.0, 270.5], [896.0, 758.452830188679], [900.0, 370.875], [898.0, 685.8444444444443], [902.0, 449.66666666666663], [910.0, 284.71428571428567], [908.0, 237.08333333333331], [904.0, 312.61538461538464], [906.0, 278.6], [918.0, 276.125], [916.0, 205.19999999999996], [930.0, 158.5], [942.0, 228.66666666666666], [928.0, 142.42857142857142], [944.0, 255.5], [952.0, 146.5], [954.0, 131.0], [956.0, 55.25], [958.0, 214.0], [948.0, 99.0], [946.0, 149.0], [950.0, 253.0], [932.0, 234.0], [934.0, 83.66666666666667], [940.0, 312.0], [938.0, 196.66666666666666], [936.0, 199.0], [986.0, 191.5], [988.0, 182.83333333333334], [976.0, 382.0], [978.0, 78.0], [990.0, 370.0], [984.0, 390.25], [966.0, 72.0], [960.0, 117.0], [962.0, 205.0], [964.0, 92.5], [974.0, 348.5], [972.0, 227.0], [968.0, 703.3499999999999], [970.0, 48.25], [982.0, 486.33333333333337], [980.0, 222.5], [1018.0, 442.33333333333337], [1022.0, 325.0], [1008.0, 373.5], [1010.0, 198.25], [1012.0, 208.25], [1020.0, 256.6666666666667], [1016.0, 354.0], [998.0, 388.5], [996.0, 333.6], [994.0, 228.0], [992.0, 176.0], [1006.0, 183.4], [1004.0, 257.0], [1002.0, 172.83333333333334], [1000.0, 265.0], [1014.0, 349.0], [1080.0, 176.0], [1084.0, 219.5], [1056.0, 485.0], [1060.0, 204.66666666666669], [1064.0, 178.0], [1068.0, 168.66666666666666], [1076.0, 210.0], [1072.0, 239.0], [1032.0, 568.0], [1036.0, 81.0], [1028.0, 312.5], [1024.0, 327.0], [1052.0, 251.0], [1048.0, 214.66666666666669], [1044.0, 167.0], [1040.0, 166.5], [1144.0, 274.6666666666667], [1148.0, 284.6666666666667], [1120.0, 385.5], [1128.0, 403.0], [1124.0, 59.0], [1132.0, 322.8], [1140.0, 274.0], [1136.0, 607.8235294117646], [1088.0, 224.5], [1092.0, 217.0], [1096.0, 208.0], [1100.0, 210.0], [1116.0, 789.0], [1108.0, 52.0], [1104.0, 79.0], [1112.0, 70.0], [1212.0, 1153.0], [1192.0, 242.0], [1184.0, 407.5], [1188.0, 260.6], [1196.0, 620.0], [1208.0, 1081.0], [1204.0, 1086.0], [1200.0, 657.0], [1164.0, 487.66666666666663], [1160.0, 421.0], [1180.0, 90.0], [1152.0, 112.0], [1176.0, 312.6666666666667], [1172.0, 482.33333333333337], [1168.0, 301.6666666666667], [1264.0, 1036.6666666666667], [1272.0, 1080.0], [1276.0, 1039.0], [1252.0, 1061.0], [1260.0, 1073.0], [1228.0, 1101.0], [1224.0, 1087.5], [1220.0, 1118.0], [1216.0, 1139.5], [1244.0, 1046.0], [1240.0, 1019.0], [1236.0, 1108.0], [1232.0, 1074.0], [1332.0, 985.5], [1336.0, 1009.0], [1340.0, 527.0], [1312.0, 950.0], [1316.0, 957.0], [1320.0, 956.0], [1328.0, 921.0], [1280.0, 1007.0], [1288.0, 1047.0], [1292.0, 964.0], [1308.0, 949.0], [1304.0, 995.0], [1300.0, 1019.0], [1296.0, 1048.0], [1400.0, 805.0], [1404.0, 819.0], [1376.0, 846.0], [1380.0, 827.0], [1384.0, 943.0], [1388.0, 840.0], [1396.0, 925.0], [1392.0, 1214.0], [1352.0, 1245.0], [1372.0, 915.0], [1368.0, 1103.75], [1364.0, 1334.0], [1464.0, 1035.0], [1460.0, 618.0], [1468.0, 551.0], [1440.0, 787.0], [1444.0, 670.0], [1448.0, 661.0], [1452.0, 1055.0], [1456.0, 1028.0], [1412.0, 807.5], [1416.0, 843.0], [1420.0, 703.0], [1436.0, 675.0], [1432.0, 653.0], [1428.0, 659.0], [1424.0, 813.0], [1524.0, 609.0], [1532.0, 796.5], [1504.0, 1045.0], [1512.0, 1032.0], [1516.0, 610.0], [1520.0, 579.0], [1472.0, 945.0], [1476.0, 955.0], [1480.0, 612.5], [1484.0, 963.0], [1500.0, 612.0], [1492.0, 637.0], [1488.0, 613.0], [1592.0, 430.0], [1596.0, 432.0], [1568.0, 769.5], [1572.0, 924.0], [1576.0, 808.0], [1580.0, 634.0], [1588.0, 494.0], [1584.0, 614.0], [1548.0, 563.0], [1544.0, 584.0], [1540.0, 563.0], [1536.0, 564.0], [1564.0, 533.0], [1560.0, 537.0], [1556.0, 560.0], [1552.0, 556.0], [1656.0, 476.0], [1636.0, 490.0], [1640.0, 1076.0], [1644.0, 1047.0], [1652.0, 726.0], [1648.0, 1050.0], [1612.0, 378.0], [1608.0, 400.0], [1604.0, 382.0], [1600.0, 404.0], [1620.0, 358.0], [1716.0, 525.0], [1724.0, 482.5], [1696.0, 774.0], [1700.0, 771.0], [1704.0, 812.0], [1712.0, 760.0], [1676.0, 966.0], [1672.0, 955.0], [1668.0, 1006.5], [1688.0, 924.0], [1684.0, 948.0], [1680.0, 916.0], [1784.0, 441.0], [1780.0, 505.0], [1788.0, 453.0], [1760.0, 589.5], [1764.0, 581.5], [1768.0, 581.0], [1772.0, 533.0], [1776.0, 457.0], [1732.0, 157.0], [1728.0, 170.0], [1736.0, 151.0], [1740.0, 108.0], [1756.0, 536.0], [1748.0, 614.0], [1744.0, 78.0], [1852.0, 324.0], [1848.0, 499.0], [1824.0, 582.0], [1828.0, 581.0], [1832.0, 541.0], [1836.0, 561.0], [1844.0, 504.0], [1840.0, 518.0], [1792.0, 430.0], [1796.0, 416.0], [1800.0, 475.0], [1804.0, 403.0], [1816.0, 314.0], [1812.0, 398.0], [1912.0, 705.5], [1908.0, 833.5], [1888.0, 853.5], [1896.0, 775.5], [1900.0, 454.0], [1916.0, 820.0], [1904.0, 718.0], [1868.0, 235.0], [1864.0, 245.0], [1860.0, 242.0], [1856.0, 270.0], [1884.0, 495.0], [1880.0, 159.0], [1876.0, 218.5], [1872.0, 215.0], [1976.0, 22433.0], [1972.0, 26070.0], [1980.0, 18647.0], [1952.0, 700.0], [1956.0, 504.0], [1960.0, 403.0], [1964.0, 239.0], [1968.0, 176.0], [1920.0, 809.0], [1928.0, 813.0], [1932.0, 669.0], [1948.0, 696.0], [1944.0, 748.0], [1940.0, 809.0], [1936.0, 802.0], [1988.0, 14562.0], [1996.0, 9935.0], [2000.0, 2714.0], [1984.0, 14731.0], [1992.0, 13939.0], [1081.0, 193.5], [1085.0, 166.33333333333334], [1057.0, 70.5], [1061.0, 242.5], [1065.0, 115.8], [1069.0, 159.0], [1077.0, 235.0], [1073.0, 88.28571428571429], [1025.0, 338.0], [1029.0, 360.5], [1033.0, 180.5], [1037.0, 377.66666666666663], [1053.0, 258.0], [1049.0, 260.5], [1045.0, 123.8], [1041.0, 75.0], [1145.0, 714.0], [1121.0, 404.5], [1125.0, 533.3333333333334], [1129.0, 229.25], [1133.0, 56.75], [1149.0, 412.5], [1141.0, 224.125], [1137.0, 516.3333333333334], [1089.0, 200.0], [1093.0, 178.5], [1097.0, 174.0], [1101.0, 155.0], [1117.0, 299.3333333333333], [1113.0, 69.0], [1109.0, 55.0], [1105.0, 83.0], [1205.0, 1073.0], [1213.0, 1094.0], [1185.0, 421.0], [1189.0, 288.25], [1193.0, 311.6666666666667], [1197.0, 695.5], [1201.0, 625.0], [1165.0, 388.0], [1153.0, 694.5], [1161.0, 58.75], [1157.0, 107.0], [1181.0, 489.0], [1173.0, 215.0], [1177.0, 88.0], [1169.0, 442.0], [1273.0, 1046.0], [1253.0, 1096.0], [1257.0, 1072.0], [1261.0, 956.0], [1277.0, 995.0], [1269.0, 1077.5], [1265.0, 1000.0], [1229.0, 1047.0], [1237.0, 1097.0], [1233.0, 1052.0], [1341.0, 1359.0], [1313.0, 1011.5], [1317.0, 937.0], [1321.0, 933.5], [1325.0, 952.5], [1337.0, 954.0], [1333.0, 998.0], [1285.0, 1044.5], [1289.0, 1020.0], [1301.0, 957.0], [1297.0, 1002.0], [1397.0, 1233.0], [1401.0, 793.0], [1377.0, 1251.0], [1385.0, 852.0], [1389.0, 811.5], [1393.0, 939.0], [1373.0, 1271.0], [1369.0, 997.0], [1365.0, 1201.0], [1465.0, 724.0], [1469.0, 541.0], [1441.0, 674.0], [1445.0, 657.0], [1449.0, 1056.0], [1453.0, 747.0], [1461.0, 1029.0], [1457.0, 1023.0], [1409.0, 859.5], [1413.0, 1157.0], [1417.0, 1144.0], [1421.0, 809.0], [1437.0, 1080.0], [1433.0, 1088.0], [1429.0, 653.0], [1425.0, 812.0], [1533.0, 579.0], [1505.0, 811.0], [1509.0, 608.0], [1513.0, 1056.0], [1517.0, 605.0], [1529.0, 574.0], [1525.0, 582.0], [1521.0, 812.5], [1473.0, 678.0], [1477.0, 542.0], [1481.0, 537.0], [1485.0, 965.0], [1501.0, 598.0], [1497.0, 1051.0], [1493.0, 631.0], [1489.0, 625.0], [1597.0, 412.0], [1569.0, 557.0], [1573.0, 847.0], [1577.0, 798.0], [1581.0, 647.0], [1593.0, 440.0], [1589.0, 517.0], [1585.0, 602.0], [1549.0, 570.0], [1545.0, 574.0], [1541.0, 576.0], [1537.0, 1015.0], [1565.0, 537.0], [1561.0, 998.0], [1557.0, 554.0], [1657.0, 1036.0], [1637.0, 811.8571428571428], [1641.0, 1015.0], [1645.0, 1066.0], [1661.0, 740.0], [1653.0, 1032.0], [1649.0, 1041.0], [1613.0, 393.0], [1609.0, 363.0], [1605.0, 410.0], [1601.0, 424.0], [1625.0, 527.0], [1621.0, 321.0], [1617.0, 350.5], [1721.0, 490.0], [1697.0, 764.0], [1701.0, 828.0], [1725.0, 438.0], [1717.0, 479.0], [1677.0, 948.0], [1673.0, 994.0], [1669.0, 1015.0], [1665.0, 963.0], [1693.0, 766.0], [1681.0, 908.0], [1785.0, 457.0], [1789.0, 485.0], [1761.0, 596.0], [1765.0, 545.0], [1769.0, 546.0], [1773.0, 521.0], [1781.0, 503.0], [1733.0, 157.0], [1737.0, 153.0], [1741.0, 93.0], [1757.0, 583.0], [1753.0, 593.0], [1749.0, 556.0], [1745.0, 75.0], [1845.0, 490.0], [1825.0, 567.0], [1829.0, 538.0], [1837.0, 529.0], [1853.0, 351.0], [1841.0, 517.0], [1793.0, 488.0], [1797.0, 449.0], [1801.0, 472.0], [1805.0, 470.0], [1821.0, 594.5], [1817.0, 609.0], [1813.0, 350.0], [1809.0, 444.5], [1869.0, 222.0], [1889.0, 878.0], [1901.0, 444.0], [1905.0, 839.0], [1865.0, 222.0], [1861.0, 231.0], [1857.0, 284.0], [1885.0, 471.0], [1881.0, 155.0], [1877.0, 207.0], [1873.0, 219.0], [1977.0, 21626.0], [1981.0, 18043.0], [1953.0, 512.0], [1957.0, 478.0], [1961.0, 297.0], [1965.0, 331.0], [1973.0, 23604.0], [1969.0, 27764.0], [1921.0, 813.0], [1925.0, 808.5], [1929.0, 680.0], [1933.0, 810.0], [1949.0, 692.0], [1945.0, 742.0], [1941.0, 746.0], [1937.0, 772.0], [1993.0, 10538.0], [1985.0, 14546.0], [1989.0, 14634.0], [1997.0, 10085.0], [537.0, 567.5], [541.0, 243.66666666666669], [531.0, 349.0], [543.0, 42.0], [529.0, 44.0], [539.0, 543.5], [519.0, 592.5], [517.0, 230.0], [515.0, 580.0], [513.0, 40.0], [527.0, 569.5], [525.0, 386.0], [523.0, 144.16666666666666], [521.0, 570.0], [533.0, 348.0], [535.0, 46.0], [573.0, 449.5], [575.0, 310.66666666666663], [561.0, 811.0], [563.0, 375.66666666666663], [565.0, 523.5], [571.0, 548.0], [569.0, 291.25], [559.0, 546.0], [547.0, 465.6], [545.0, 569.5], [551.0, 225.0], [549.0, 591.0], [557.0, 591.0], [555.0, 333.0], [553.0, 235.0], [567.0, 542.5], [577.0, 534.5], [579.0, 516.5], [599.0, 244.4], [597.0, 54.0], [595.0, 277.0], [591.0, 501.5], [583.0, 688.3333333333333], [601.0, 44.0], [605.0, 47.0], [603.0, 42.0], [593.0, 30.0], [607.0, 44.0], [581.0, 525.0], [589.0, 524.5], [587.0, 527.5], [585.0, 350.0], [635.0, 160.28571428571428], [637.0, 186.5], [639.0, 48.666666666666664], [625.0, 30.0], [629.0, 300.1666666666667], [627.0, 170.50000000000003], [633.0, 168.99999999999997], [611.0, 72.6], [609.0, 38.0], [613.0, 70.0], [615.0, 52.0], [623.0, 399.0], [621.0, 403.5], [619.0, 294.33333333333337], [617.0, 427.5], [631.0, 417.5], [669.0, 234.5], [671.0, 402.0], [657.0, 296.3333333333333], [659.0, 411.5], [661.0, 688.0], [667.0, 382.6666666666667], [665.0, 471.0], [655.0, 417.5], [641.0, 171.0], [643.0, 503.0], [645.0, 223.8], [647.0, 685.0], [653.0, 744.0], [651.0, 217.25], [649.0, 754.0], [663.0, 414.5], [701.0, 144.0], [697.0, 195.5], [703.0, 156.5], [689.0, 324.5], [691.0, 241.5], [693.0, 195.0], [699.0, 136.0], [679.0, 658.0], [677.0, 367.5], [675.0, 409.5], [673.0, 388.5], [687.0, 238.0], [685.0, 224.75], [683.0, 349.0], [681.0, 376.5], [695.0, 185.0], [709.0, 165.5], [731.0, 136.33333333333334], [721.0, 162.5], [735.0, 90.5], [733.0, 75.0], [711.0, 142.0], [729.0, 81.0], [707.0, 135.5], [705.0, 139.0], [719.0, 127.75], [717.0, 126.0], [715.0, 174.0], [713.0, 127.5], [727.0, 108.0], [725.0, 119.5], [723.0, 159.5], [763.0, 57.0], [741.0, 81.83333333333334], [767.0, 237.16666666666666], [765.0, 50.0], [737.0, 74.5], [751.0, 89.0], [745.0, 94.0], [747.0, 86.0], [749.0, 77.33333333333333], [753.0, 87.66666666666667], [755.0, 76.75], [759.0, 59.833333333333336], [757.0, 57.0], [761.0, 55.0], [743.0, 109.0], [797.0, 42.0], [771.0, 61.833333333333336], [787.0, 311.5], [769.0, 63.333333333333336], [783.0, 52.0], [781.0, 55.0], [773.0, 72.0], [775.0, 52.0], [795.0, 44.0], [793.0, 54.0], [777.0, 67.25], [779.0, 76.33333333333333], [791.0, 45.5], [789.0, 60.0], [799.0, 55.0], [785.0, 50.0], [829.0, 47.0], [817.0, 70.75], [815.0, 49.5], [819.0, 113.5], [821.0, 70.14285714285714], [823.0, 71.0], [831.0, 51.0], [825.0, 36.0], [807.0, 48.0], [805.0, 50.0], [803.0, 53.0], [801.0, 54.0], [813.0, 49.0], [811.0, 50.0], [809.0, 52.0], [857.0, 1243.7454545454548], [863.0, 528.5], [861.0, 383.66666666666663], [859.0, 42.0], [855.0, 1162.7142857142856], [833.0, 174.8], [835.0, 46.0], [837.0, 51.666666666666664], [839.0, 1169.1153846153848], [847.0, 914.3333333333334], [845.0, 45.0], [843.0, 47.0], [841.0, 41.0], [853.0, 868.0], [851.0, 41.0], [849.0, 41.5], [871.0, 1027.0], [893.0, 769.3333333333334], [883.0, 802.5324675324675], [881.0, 532.6], [895.0, 1078.3674698795182], [889.0, 240.0], [891.0, 420.0], [879.0, 524.0], [867.0, 879.7272727272729], [865.0, 37.5], [869.0, 26.0], [877.0, 469.66666666666663], [875.0, 519.0], [873.0, 923.0327868852459], [887.0, 227.5], [885.0, 460.5], [923.0, 201.2], [927.0, 172.25], [915.0, 280.3846153846154], [913.0, 1508.1904761904761], [925.0, 223.0], [921.0, 253.75], [911.0, 371.5], [897.0, 624.3181818181816], [903.0, 490.1], [901.0, 205.71428571428572], [899.0, 31.0], [909.0, 261.0], [907.0, 258.6666666666667], [905.0, 253.85714285714286], [919.0, 1827.7999999999997], [917.0, 214.0], [929.0, 166.57142857142858], [945.0, 227.0], [953.0, 82.5], [955.0, 97.0], [957.0, 76.66666666666667], [959.0, 57.2], [947.0, 69.16666666666666], [951.0, 159.0], [949.0, 253.0], [943.0, 317.5], [931.0, 144.4], [935.0, 221.8], [933.0, 116.28571428571428], [941.0, 313.5], [939.0, 108.55555555555554], [937.0, 198.25], [989.0, 184.85714285714286], [991.0, 262.0], [979.0, 679.0], [983.0, 115.3157894736842], [981.0, 74.0], [977.0, 378.5], [987.0, 252.0], [985.0, 290.3333333333333], [975.0, 399.5], [961.0, 127.5], [963.0, 81.0], [967.0, 275.0], [965.0, 280.3333333333333], [973.0, 267.3333333333333], [971.0, 259.57142857142856], [969.0, 377.75], [1021.0, 327.5], [1023.0, 359.0], [1009.0, 339.0], [1011.0, 260.0], [1013.0, 217.25], [1019.0, 364.5], [1017.0, 59.0], [999.0, 164.33333333333331], [997.0, 390.5], [995.0, 89.75], [993.0, 222.6], [1007.0, 262.0], [1005.0, 149.28571428571428], [1003.0, 192.8], [1001.0, 354.5], [1015.0, 336.0], [1086.0, 195.5], [1062.0, 157.25], [1058.0, 59.5], [1066.0, 233.5], [1070.0, 145.0], [1082.0, 198.5], [1078.0, 231.0], [1038.0, 171.0], [1074.0, 43.0], [1034.0, 146.4], [1030.0, 327.5], [1026.0, 194.0], [1050.0, 269.5], [1054.0, 65.0], [1046.0, 257.0], [1042.0, 362.66666666666663], [1150.0, 183.0], [1122.0, 416.5], [1126.0, 275.3333333333333], [1130.0, 306.3333333333333], [1134.0, 5410.8], [1146.0, 694.0], [1142.0, 402.5], [1138.0, 382.5], [1090.0, 186.5], [1094.0, 180.5], [1098.0, 188.0], [1102.0, 86.0], [1118.0, 419.0], [1110.0, 54.0], [1106.0, 82.0], [1206.0, 1073.0], [1210.0, 1091.0], [1186.0, 431.0], [1190.0, 1663.9444444444443], [1194.0, 511.33333333333337], [1198.0, 680.0], [1202.0, 5050.0], [1166.0, 419.5], [1162.0, 495.0], [1158.0, 73.0], [1154.0, 51.0], [1182.0, 76.0], [1178.0, 506.66666666666663], [1174.0, 385.0], [1170.0, 433.0], [1278.0, 971.0], [1250.0, 1023.0], [1254.0, 1010.0], [1258.0, 1062.0], [1274.0, 1058.0], [1270.0, 1027.0], [1266.0, 1091.0], [1230.0, 1032.0], [1226.0, 1132.0], [1222.0, 1090.0], [1218.0, 1053.5], [1246.0, 1076.0], [1238.0, 1083.0], [1338.0, 586.0], [1314.0, 967.0], [1318.0, 1025.0], [1342.0, 1247.0], [1330.0, 1008.0], [1286.0, 1059.0], [1290.0, 1038.0], [1294.0, 980.5], [1310.0, 945.0], [1306.0, 990.5], [1302.0, 1017.0], [1298.0, 1041.0], [1402.0, 746.0], [1378.0, 815.0], [1382.0, 828.5], [1390.0, 1232.0], [1406.0, 950.5], [1398.0, 1197.0], [1394.0, 788.0], [1354.0, 1214.0], [1374.0, 1254.5], [1370.0, 848.5], [1366.0, 1352.0], [1470.0, 545.0], [1442.0, 1074.0], [1446.0, 663.0], [1450.0, 1070.0], [1454.0, 1023.0], [1466.0, 1019.0], [1462.0, 813.5], [1458.0, 1023.0], [1410.0, 1168.0], [1414.0, 698.0], [1422.0, 1107.5], [1438.0, 642.0], [1434.0, 1085.0], [1430.0, 779.0], [1426.0, 1085.0], [1530.0, 614.0], [1526.0, 606.0], [1514.0, 622.0], [1518.0, 612.0], [1534.0, 573.0], [1502.0, 622.0], [1474.0, 537.0], [1478.0, 530.0], [1482.0, 538.0], [1486.0, 951.0], [1498.0, 604.0], [1490.0, 643.0], [1598.0, 389.0], [1570.0, 687.0], [1574.0, 845.0], [1578.0, 752.0], [1582.0, 313.0], [1594.0, 407.0], [1586.0, 585.0], [1550.0, 557.0], [1542.0, 582.0], [1538.0, 573.0], [1566.0, 528.0], [1558.0, 976.0], [1554.0, 771.0], [1650.0, 1023.0], [1654.0, 494.0], [1658.0, 443.0], [1662.0, 1044.0], [1634.0, 511.0], [1646.0, 1039.5], [1614.0, 348.0], [1610.0, 358.0], [1606.0, 392.0], [1602.0, 377.0], [1622.0, 1109.0], [1618.0, 380.0], [1718.0, 441.0], [1714.0, 666.5], [1698.0, 817.0], [1726.0, 417.0], [1722.0, 466.0], [1678.0, 908.0], [1670.0, 1028.0], [1666.0, 1029.0], [1694.0, 840.0], [1686.0, 905.0], [1790.0, 467.0], [1762.0, 583.0], [1766.0, 512.0], [1770.0, 533.0], [1774.0, 484.0], [1786.0, 466.0], [1782.0, 463.0], [1778.0, 481.0], [1758.0, 544.0], [1738.0, 134.0], [1742.0, 91.0], [1750.0, 617.0], [1746.0, 598.0], [1850.0, 498.0], [1842.0, 523.0], [1826.0, 583.0], [1830.0, 552.0], [1834.0, 540.5], [1838.0, 537.0], [1854.0, 339.0], [1846.0, 498.0], [1794.0, 494.0], [1798.0, 454.0], [1802.0, 407.0], [1818.0, 593.0], [1814.0, 376.0], [1918.0, 850.5], [1890.0, 866.0], [1898.0, 786.5], [1902.0, 723.0], [1914.0, 625.0], [1910.0, 774.0], [1906.0, 821.5], [1870.0, 217.0], [1866.0, 222.0], [1862.0, 244.0], [1858.0, 259.0], [1886.0, 755.0], [1882.0, 151.0], [1874.0, 228.0], [1982.0, 17475.0], [1954.0, 425.0], [1958.0, 473.0], [1962.0, 249.0], [1978.0, 19687.0], [1974.0, 23730.0], [1970.0, 27707.0], [1922.0, 821.0], [1930.0, 844.0], [1934.0, 796.0], [1950.0, 682.0], [1946.0, 709.0], [1942.0, 733.0], [1938.0, 763.0], [1986.0, 13518.0], [1998.0, 6809.0], [1994.0, 10258.0], [1990.0, 14432.0], [1083.0, 191.5], [1063.0, 194.33333333333334], [1087.0, 160.0], [1059.0, 229.55555555555554], [1067.0, 148.25], [1071.0, 250.0], [1079.0, 339.0], [1075.0, 214.75], [1055.0, 151.5], [1027.0, 256.6666666666667], [1031.0, 160.4], [1035.0, 290.5], [1039.0, 165.0], [1051.0, 251.5], [1047.0, 505.0], [1043.0, 202.66666666666669], [1147.0, 274.6666666666667], [1151.0, 254.66666666666669], [1123.0, 406.5], [1135.0, 712.0], [1127.0, 3780.1428571428573], [1131.0, 46.666666666666664], [1143.0, 219.75], [1139.0, 395.0], [1119.0, 418.5], [1115.0, 62.0], [1111.0, 47.0], [1107.0, 70.0], [1091.0, 213.0], [1095.0, 203.5], [1099.0, 196.5], [1207.0, 1067.0], [1211.0, 1126.0], [1187.0, 252.2], [1191.0, 208.28571428571428], [1195.0, 690.0], [1199.0, 561.0], [1203.0, 1121.0], [1167.0, 275.3333333333333], [1159.0, 397.0], [1163.0, 104.0], [1155.0, 252.25], [1183.0, 488.66666666666663], [1179.0, 529.3333333333334], [1175.0, 674.0], [1171.0, 370.0], [1275.0, 1006.0], [1279.0, 987.0], [1251.0, 1047.0], [1255.0, 1036.0], [1259.0, 1058.6666666666667], [1271.0, 986.0], [1267.0, 1082.0], [1231.0, 1051.0], [1247.0, 1058.0], [1239.0, 1116.0], [1235.0, 1070.5], [1339.0, 542.0], [1331.0, 954.0], [1343.0, 1232.0], [1315.0, 939.0], [1323.0, 965.0], [1327.0, 987.5], [1335.0, 937.0], [1311.0, 971.0], [1287.0, 1012.0], [1291.0, 1024.0], [1295.0, 1019.0], [1307.0, 963.0], [1303.0, 992.0], [1299.0, 1056.0], [1399.0, 930.0], [1407.0, 1167.0], [1379.0, 953.0], [1383.0, 826.0], [1387.0, 821.0], [1391.0, 1233.0], [1395.0, 1245.0], [1375.0, 829.0], [1367.0, 1354.0], [1363.0, 1244.0], [1467.0, 594.0], [1471.0, 685.0], [1443.0, 630.0], [1447.0, 1055.0], [1451.0, 635.0], [1455.0, 640.0], [1463.0, 1036.0], [1459.0, 1023.0], [1439.0, 1069.0], [1423.0, 789.0], [1435.0, 785.0], [1431.0, 682.0], [1427.0, 671.0], [1531.0, 584.0], [1523.0, 596.0], [1535.0, 556.0], [1511.0, 748.0], [1515.0, 581.0], [1519.0, 584.0], [1527.0, 590.5], [1475.0, 697.0], [1483.0, 557.0], [1487.0, 159.0], [1495.0, 646.0], [1491.0, 1056.0], [1595.0, 395.0], [1587.0, 558.0], [1599.0, 387.0], [1571.0, 933.0], [1575.0, 822.0], [1579.0, 693.0], [1583.0, 653.0], [1591.0, 444.0], [1551.0, 572.0], [1547.0, 546.0], [1543.0, 563.0], [1567.0, 1008.0], [1563.0, 543.5], [1559.0, 995.0], [1555.0, 567.0], [1659.0, 1039.0], [1639.0, 789.5], [1635.0, 1087.0], [1643.0, 484.5], [1647.0, 511.0], [1655.0, 1033.0], [1615.0, 347.0], [1611.0, 356.0], [1607.0, 354.0], [1603.0, 405.0], [1631.0, 1020.0], [1623.0, 554.0], [1619.0, 341.0], [1715.0, 494.0], [1727.0, 170.0], [1707.0, 769.0], [1719.0, 447.0], [1675.0, 986.0], [1671.0, 989.5], [1695.0, 825.0], [1687.0, 887.5], [1683.0, 890.0], [1787.0, 469.0], [1791.0, 459.0], [1763.0, 575.0], [1767.0, 507.0], [1771.0, 535.0], [1775.0, 515.0], [1783.0, 487.0], [1735.0, 158.0], [1739.0, 127.0], [1743.0, 78.0], [1755.0, 565.0], [1751.0, 610.0], [1747.0, 621.0], [1851.0, 475.0], [1855.0, 302.0], [1831.0, 559.0], [1835.0, 535.0], [1839.0, 526.0], [1843.0, 492.0], [1823.0, 585.5], [1795.0, 418.0], [1803.0, 393.0], [1807.0, 423.0], [1819.0, 581.0], [1815.0, 370.0], [1811.0, 375.5], [1871.0, 224.0], [1891.0, 869.0], [1915.0, 804.0], [1919.0, 696.0], [1899.0, 838.0], [1903.0, 708.0], [1867.0, 226.0], [1863.0, 235.0], [1859.0, 247.0], [1883.0, 150.5], [1879.0, 163.0], [1979.0, 18957.0], [1983.0, 14858.0], [1955.0, 529.0], [1959.0, 347.0], [1963.0, 355.0], [1967.0, 207.5], [1975.0, 23196.0], [1971.0, 26979.0], [1951.0, 713.0], [1923.0, 819.0], [1927.0, 743.0], [1931.0, 809.0], [1935.0, 779.0], [1947.0, 728.0], [1943.0, 612.0], [1939.0, 719.5], [1987.0, 17687.0], [1999.0, 6775.0], [1995.0, 10330.0], [1991.0, 14058.0], [1.0, 65.44999999999999]], "isOverall": false, "label": "Sunstar Search", "isController": false}, {"data": [[80.36116931568392, 726.4338086233622]], "isOverall": false, "label": "Sunstar Search-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 20.5, "minX": 1.62627121E12, "maxY": 1089748.4, "series": [{"data": [[1.62627138E12, 75206.1], [1.62627155E12, 250370.1], [1.62627121E12, 7875.1], [1.62627206E12, 780409.0], [1.62627172E12, 424960.2], [1.62627189E12, 8061.0], [1.62627146E12, 1060332.1], [1.62627163E12, 1073126.1], [1.62627129E12, 72128.7], [1.6262718E12, 1008130.8], [1.62627197E12, 77726.7], [1.62627154E12, 425011.3], [1.62627171E12, 602740.1], [1.62627137E12, 248332.5], [1.62627188E12, 7674.2], [1.62627205E12, 880599.9], [1.62627162E12, 1006427.8], [1.62627179E12, 830674.5], [1.62627128E12, 203826.6], [1.62627145E12, 1072255.5], [1.62627196E12, 11733.1], [1.62627123E12, 8637.1], [1.62627174E12, 72085.8], [1.62627191E12, 110762.3], [1.6262714E12, 300906.0], [1.62627157E12, 122438.1], [1.62627131E12, 217044.9], [1.62627208E12, 425361.4], [1.62627182E12, 979750.7], [1.62627148E12, 1073680.8], [1.62627165E12, 1069570.2], [1.62627122E12, 8799.4], [1.62627139E12, 123043.9], [1.6262719E12, 7208.6], [1.62627207E12, 601896.8], [1.62627156E12, 71559.9], [1.62627173E12, 248485.0], [1.6262713E12, 47641.5], [1.62627147E12, 1062534.7], [1.62627198E12, 608.6], [1.62627164E12, 1072533.3], [1.62627181E12, 667215.8], [1.62627202E12, 87470.1], [1.62627168E12, 1069588.1], [1.62627185E12, 441733.6], [1.62627142E12, 653164.1], [1.62627159E12, 478145.5], [1.6262721E12, 71262.5], [1.62627176E12, 300487.6], [1.6262715E12, 1071487.0], [1.62627167E12, 1075435.3], [1.62627133E12, 208093.7], [1.62627184E12, 94349.5], [1.62627158E12, 303064.0], [1.62627175E12, 122467.4], [1.62627124E12, 63748.4], [1.62627141E12, 478750.4], [1.62627192E12, 608.6], [1.62627209E12, 249873.5], [1.62627166E12, 1073246.1], [1.62627183E12, 451271.9], [1.62627132E12, 239484.9], [1.62627149E12, 927357.6], [1.6262717E12, 779993.1], [1.62627187E12, 466800.8], [1.62627136E12, 426205.5], [1.62627153E12, 604559.2], [1.62627127E12, 170793.4], [1.62627204E12, 1064466.8], [1.62627178E12, 655955.4], [1.62627144E12, 998919.3], [1.62627161E12, 811483.2], [1.62627135E12, 597687.1], [1.62627186E12, 768982.5], [1.62627203E12, 1089748.4], [1.62627152E12, 746254.1], [1.62627169E12, 959457.0], [1.62627126E12, 111957.1], [1.62627143E12, 812825.7], [1.62627211E12, 1473.7], [1.6262716E12, 654291.8], [1.62627177E12, 477810.3], [1.62627134E12, 629972.9], [1.62627151E12, 956978.3]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62627138E12, 2205.9], [1.62627155E12, 7357.4], [1.62627121E12, 209.5], [1.62627206E12, 22933.3], [1.62627172E12, 12485.5], [1.62627189E12, 251.3], [1.62627146E12, 31149.8], [1.62627163E12, 31529.3], [1.62627129E12, 2122.3], [1.6262718E12, 29616.7], [1.62627197E12, 2338.6], [1.62627154E12, 12486.2], [1.62627171E12, 17721.1], [1.62627137E12, 7295.3], [1.62627188E12, 229.4], [1.62627205E12, 25685.3], [1.62627162E12, 29575.5], [1.62627179E12, 24402.8], [1.62627128E12, 5994.2], [1.62627145E12, 31512.0], [1.62627196E12, 354.7], [1.62627123E12, 274.5], [1.62627174E12, 2123.9], [1.62627191E12, 3411.1], [1.6262714E12, 8851.5], [1.62627157E12, 3594.0], [1.62627131E12, 6392.9], [1.62627208E12, 12508.6], [1.62627182E12, 28754.2], [1.62627148E12, 31552.2], [1.62627165E12, 31423.8], [1.62627122E12, 248.6], [1.62627139E12, 3614.6], [1.6262719E12, 229.9], [1.62627207E12, 17676.9], [1.62627156E12, 2101.6], [1.62627173E12, 7293.2], [1.6262713E12, 1388.2], [1.62627147E12, 31213.5], [1.62627198E12, 20.5], [1.62627164E12, 31509.4], [1.62627181E12, 19635.0], [1.62627202E12, 2602.0], [1.62627168E12, 31424.3], [1.62627185E12, 13467.9], [1.62627142E12, 19192.6], [1.62627159E12, 14039.6], [1.6262721E12, 2104.0], [1.62627176E12, 8828.3], [1.6262715E12, 31488.6], [1.62627167E12, 31592.1], [1.62627133E12, 6118.3], [1.62627184E12, 2787.5], [1.62627158E12, 8914.1], [1.62627175E12, 3594.3], [1.62627124E12, 1869.5], [1.62627141E12, 14061.1], [1.62627192E12, 20.5], [1.62627209E12, 7333.7], [1.62627166E12, 31553.4], [1.62627183E12, 13230.4], [1.62627132E12, 7016.9], [1.62627149E12, 27241.5], [1.6262717E12, 22910.1], [1.62627187E12, 17047.3], [1.62627136E12, 12528.6], [1.62627153E12, 17761.4], [1.62627127E12, 5022.1], [1.62627204E12, 31298.2], [1.62627178E12, 19275.2], [1.62627144E12, 29342.2], [1.62627161E12, 23836.0], [1.62627135E12, 17549.9], [1.62627186E12, 28362.3], [1.62627203E12, 31951.6], [1.62627152E12, 21923.6], [1.62627169E12, 28189.4], [1.62627126E12, 3301.3], [1.62627143E12, 23877.9], [1.62627211E12, 41.8], [1.6262716E12, 19234.3], [1.62627177E12, 14042.1], [1.62627134E12, 18519.1], [1.62627151E12, 28125.3]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62627211E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 14.110612855007453, "minX": 1.62627121E12, "maxY": 120334.0, "series": [{"data": [[1.62627138E12, 44.72380952380952], [1.62627155E12, 42.620000000000005], [1.62627121E12, 3529.6], [1.62627206E12, 45.48395967002748], [1.62627172E12, 18.621212121212125], [1.62627189E12, 47459.0], [1.62627146E12, 17.64507422402155], [1.62627163E12, 49.48200000000007], [1.62627129E12, 749.5544554455446], [1.6262718E12, 49.24840312278215], [1.62627197E12, 120099.00892857139], [1.62627154E12, 44.19191919191921], [1.62627171E12, 19.182680901542117], [1.62627137E12, 45.510086455331425], [1.62627188E12, 37140.18181818182], [1.62627205E12, 503.774959083471], [1.62627162E12, 48.909026297085944], [1.62627179E12, 43.199827734711434], [1.62627128E12, 967.733333333333], [1.62627145E12, 26.43962641761171], [1.62627196E12, 120069.35294117649], [1.62627123E12, 19348.69230769231], [1.62627174E12, 25.732673267326724], [1.62627191E12, 60065.65030674848], [1.6262714E12, 23.39192399049881], [1.62627157E12, 43.14035087719297], [1.62627131E12, 721.5756578947368], [1.62627208E12, 44.39663865546216], [1.62627182E12, 72.220029239766], [1.62627148E12, 15.533644237175237], [1.62627165E12, 49.62876254180594], [1.62627122E12, 12831.333333333334], [1.62627139E12, 43.54069767441861], [1.6262719E12, 57464.818181818184], [1.62627207E12, 44.770511296076116], [1.62627156E12, 43.849999999999994], [1.62627173E12, 24.942363112391927], [1.6262713E12, 405.46969696969717], [1.62627147E12, 16.325925925925937], [1.62627198E12, 120334.0], [1.62627164E12, 50.23615743829218], [1.62627181E12, 48.511777301927204], [1.62627202E12, 56669.951612903285], [1.62627168E12, 23.635451505016718], [1.62627185E12, 257.8359374999997], [1.62627142E12, 25.91018619934284], [1.62627159E12, 19.15419161676648], [1.6262721E12, 43.02999999999999], [1.62627176E12, 23.607142857142865], [1.6262715E12, 15.212283044058754], [1.62627167E12, 26.418496340652002], [1.62627133E12, 512.7525773195875], [1.62627184E12, 609.1374045801529], [1.62627158E12, 20.474056603773573], [1.62627175E12, 24.467836257309937], [1.62627124E12, 1866.8988764044946], [1.62627141E12, 22.49327354260091], [1.62627192E12, 60509.0], [1.62627209E12, 42.851002865329484], [1.62627166E12, 49.3044636908727], [1.62627183E12, 89.35079365079375], [1.62627132E12, 819.7814371257482], [1.62627149E12, 21.139660493827147], [1.6262717E12, 20.640366972477082], [1.62627187E12, 379.28606658446347], [1.62627136E12, 45.69798657718125], [1.62627153E12, 44.85088757396448], [1.62627127E12, 685.4225941422599], [1.62627204E12, 657.7092008059103], [1.62627178E12, 22.549618320610694], [1.62627144E12, 27.896848137535773], [1.62627161E12, 44.075837742504476], [1.62627135E12, 49.98682634730545], [1.62627186E12, 803.6960711638246], [1.62627203E12, 1129.3374999999999], [1.62627152E12, 42.15244487056572], [1.62627169E12, 22.09768829231915], [1.62627126E12, 405.49681528662444], [1.62627143E12, 30.228873239436638], [1.62627211E12, 50.0], [1.6262716E12, 19.97377049180325], [1.62627177E12, 22.561377245508968], [1.62627134E12, 87.80590238365498], [1.62627151E12, 14.110612855007453]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62627211E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 13.91928251121077, "minX": 1.62627121E12, "maxY": 120334.0, "series": [{"data": [[1.62627138E12, 44.552380952380936], [1.62627155E12, 42.462857142857104], [1.62627121E12, 3528.3], [1.62627206E12, 45.26672777268557], [1.62627172E12, 18.493265993265993], [1.62627189E12, 47458.833333333336], [1.62627146E12, 17.414304993252347], [1.62627163E12, 49.25000000000002], [1.62627129E12, 749.2673267326736], [1.6262718E12, 49.05748757984386], [1.62627197E12, 120098.90178571425], [1.62627154E12, 44.04545454545456], [1.62627171E12, 19.01542111506522], [1.62627137E12, 45.342939481268004], [1.62627188E12, 37140.090909090904], [1.62627205E12, 503.5319148936174], [1.62627162E12, 48.71712864250176], [1.62627179E12, 43.000861326442674], [1.62627128E12, 965.256140350878], [1.62627145E12, 26.25750500333556], [1.62627196E12, 120069.23529411765], [1.62627123E12, 19348.15384615384], [1.62627174E12, 25.544554455445542], [1.62627191E12, 60065.51533742329], [1.6262714E12, 23.192399049881246], [1.62627157E12, 42.99415204678361], [1.62627131E12, 720.9967105263154], [1.62627208E12, 44.25378151260504], [1.62627182E12, 72.01754385964912], [1.62627148E12, 15.312458361092588], [1.62627165E12, 49.38795986622067], [1.62627122E12, 12830.833333333332], [1.62627139E12, 43.38372093023259], [1.6262719E12, 57464.545454545456], [1.62627207E12, 44.57074910820457], [1.62627156E12, 43.76999999999999], [1.62627173E12, 24.792507204610935], [1.6262713E12, 405.07575757575756], [1.62627147E12, 16.07878787878787], [1.62627198E12, 120334.0], [1.62627164E12, 50.02334889926627], [1.62627181E12, 48.305139186295534], [1.62627202E12, 56669.717741935456], [1.62627168E12, 23.430769230769233], [1.62627185E12, 257.6218750000001], [1.62627142E12, 25.674698795180703], [1.62627159E12, 18.982035928143688], [1.6262721E12, 42.88000000000001], [1.62627176E12, 23.433333333333334], [1.6262715E12, 14.875166889185556], [1.62627167E12, 26.23419827012644], [1.62627133E12, 512.4364261168383], [1.62627184E12, 608.9618320610689], [1.62627158E12, 20.311320754717002], [1.62627175E12, 24.327485380116975], [1.62627124E12, 1865.4606741573036], [1.62627141E12, 22.281016442451442], [1.62627192E12, 60509.0], [1.62627209E12, 42.696275071633224], [1.62627166E12, 49.10926049300465], [1.62627183E12, 89.14444444444442], [1.62627132E12, 819.4311377245514], [1.62627149E12, 20.824074074074105], [1.6262717E12, 20.457798165137604], [1.62627187E12, 379.06905055487056], [1.62627136E12, 45.47315436241609], [1.62627153E12, 44.68994082840241], [1.62627127E12, 683.5815899581593], [1.62627204E12, 657.4835460040298], [1.62627178E12, 22.379498364231182], [1.62627144E12, 27.678366762177678], [1.62627161E12, 43.9118165784833], [1.62627135E12, 49.801197604790445], [1.62627186E12, 791.2179392142314], [1.62627203E12, 1129.153289473685], [1.62627152E12, 41.97123681687444], [1.62627169E12, 21.892617449664417], [1.62627126E12, 404.3312101910829], [1.62627143E12, 30.003521126760575], [1.62627211E12, 50.0], [1.6262716E12, 19.83169398907104], [1.62627177E12, 22.41616766467067], [1.62627134E12, 87.4994324631102], [1.62627151E12, 13.91928251121077]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62627211E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 12.665171898355762, "minX": 1.62627121E12, "maxY": 932.4877192982457, "series": [{"data": [[1.62627138E12, 34.219047619047636], [1.62627155E12, 33.32285714285716], [1.62627121E12, 340.3], [1.62627206E12, 35.72685609532533], [1.62627172E12, 15.372053872053867], [1.62627189E12, 46.75000000000001], [1.62627146E12, 15.092442645074229], [1.62627163E12, 39.110000000000014], [1.62627129E12, 684.3960396039603], [1.6262718E12, 38.72320794889995], [1.62627197E12, 72.69642857142857], [1.62627154E12, 34.62626262626264], [1.62627171E12, 15.98339264531439], [1.62627137E12, 35.495677233429376], [1.62627188E12, 41.81818181818182], [1.62627205E12, 48.87561374795411], [1.62627162E12, 38.67093105899081], [1.62627179E12, 33.91817398794144], [1.62627128E12, 932.4877192982457], [1.62627145E12, 22.390927284856588], [1.62627196E12, 42.1764705882353], [1.62627123E12, 421.3846153846154], [1.62627174E12, 20.95049504950495], [1.62627191E12, 43.435582822085884], [1.6262714E12, 18.60570071258907], [1.62627157E12, 33.69590643274854], [1.62627131E12, 700.4374999999997], [1.62627208E12, 34.65042016806722], [1.62627182E12, 23.590643274853797], [1.62627148E12, 13.981345769487001], [1.62627165E12, 39.146488294314445], [1.62627122E12, 102.16666666666667], [1.62627139E12, 34.139534883720934], [1.6262719E12, 51.45454545454546], [1.62627207E12, 35.2520808561237], [1.62627156E12, 34.09], [1.62627173E12, 19.910662824207492], [1.6262713E12, 390.5909090909091], [1.62627147E12, 14.534006734006734], [1.62627198E12, 303.0], [1.62627164E12, 39.60040026684454], [1.62627181E12, 38.22055674518195], [1.62627202E12, 39.86290322580644], [1.62627168E12, 19.76856187290969], [1.62627185E12, 61.2859375], [1.62627142E12, 21.671412924424967], [1.62627159E12, 15.859281437125745], [1.6262721E12, 33.72999999999998], [1.62627176E12, 18.864285714285717], [1.6262715E12, 13.465954606141521], [1.62627167E12, 21.946107784431106], [1.62627133E12, 493.0412371134017], [1.62627184E12, 39.91603053435114], [1.62627158E12, 16.77830188679244], [1.62627175E12, 19.923976608187136], [1.62627124E12, 617.6629213483146], [1.62627141E12, 18.457399103138986], [1.62627192E12, 495.0], [1.62627209E12, 33.60744985673353], [1.62627166E12, 38.89340439706864], [1.62627183E12, 21.314285714285734], [1.62627132E12, 798.1886227544912], [1.62627149E12, 18.95601851851852], [1.6262717E12, 17.23577981651375], [1.62627187E12, 70.10850801479657], [1.62627136E12, 35.818791946308735], [1.62627153E12, 34.89585798816566], [1.62627127E12, 639.2217573221756], [1.62627204E12, 42.723304231027505], [1.62627178E12, 18.53544165757905], [1.62627144E12, 23.588825214899686], [1.62627161E12, 34.80246913580252], [1.62627135E12, 39.68383233532935], [1.62627186E12, 603.4484803558194], [1.62627203E12, 51.77039473684228], [1.62627152E12, 33.25215723873441], [1.62627169E12, 18.48471290082034], [1.62627126E12, 388.2292993630574], [1.62627143E12, 26.033450704225356], [1.62627211E12, 38.0], [1.6262716E12, 16.661202185792344], [1.62627177E12, 18.398203592814358], [1.62627134E12, 76.34392735527804], [1.62627151E12, 12.665171898355762]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62627211E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.62627121E12, "maxY": 180422.0, "series": [{"data": [[1.62627138E12, 114.0], [1.62627155E12, 93.0], [1.62627121E12, 6907.0], [1.62627206E12, 105.0], [1.62627172E12, 57.0], [1.62627189E12, 51779.0], [1.62627146E12, 104.0], [1.62627163E12, 114.0], [1.62627129E12, 5050.0], [1.6262718E12, 156.0], [1.62627197E12, 120776.0], [1.62627154E12, 236.0], [1.62627171E12, 56.0], [1.62627137E12, 215.0], [1.62627188E12, 41804.0], [1.62627205E12, 180224.0], [1.62627162E12, 214.0], [1.62627179E12, 125.0], [1.62627128E12, 1624.0], [1.62627145E12, 102.0], [1.62627196E12, 120118.0], [1.62627123E12, 23730.0], [1.62627174E12, 38.0], [1.62627191E12, 60368.0], [1.6262714E12, 65.0], [1.62627157E12, 95.0], [1.62627131E12, 1099.0], [1.62627208E12, 192.0], [1.62627182E12, 9212.0], [1.62627148E12, 100.0], [1.62627165E12, 159.0], [1.62627122E12, 17687.0], [1.62627139E12, 96.0], [1.6262719E12, 60067.0], [1.62627207E12, 205.0], [1.62627156E12, 95.0], [1.62627173E12, 112.0], [1.6262713E12, 545.0], [1.62627147E12, 91.0], [1.62627198E12, 120334.0], [1.62627164E12, 284.0], [1.62627181E12, 139.0], [1.62627202E12, 180106.0], [1.62627168E12, 88.0], [1.62627185E12, 15079.0], [1.62627142E12, 100.0], [1.62627159E12, 95.0], [1.6262721E12, 61.0], [1.62627176E12, 95.0], [1.6262715E12, 102.0], [1.62627167E12, 168.0], [1.62627133E12, 836.0], [1.62627184E12, 10413.0], [1.62627158E12, 63.0], [1.62627175E12, 36.0], [1.62627124E12, 27764.0], [1.62627141E12, 148.0], [1.62627192E12, 60509.0], [1.62627209E12, 106.0], [1.62627166E12, 199.0], [1.62627183E12, 7850.0], [1.62627132E12, 1277.0], [1.62627149E12, 583.0], [1.6262717E12, 102.0], [1.62627187E12, 31574.0], [1.62627136E12, 88.0], [1.62627153E12, 148.0], [1.62627127E12, 1109.0], [1.62627204E12, 180422.0], [1.62627178E12, 84.0], [1.62627144E12, 92.0], [1.62627161E12, 152.0], [1.62627135E12, 125.0], [1.62627186E12, 26547.0], [1.62627203E12, 180153.0], [1.62627152E12, 208.0], [1.62627169E12, 70.0], [1.62627126E12, 621.0], [1.62627143E12, 175.0], [1.62627211E12, 55.0], [1.6262716E12, 68.0], [1.62627177E12, 74.0], [1.62627134E12, 374.0], [1.62627151E12, 142.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62627138E12, 38.0], [1.62627155E12, 37.0], [1.62627121E12, 97.0], [1.62627206E12, 37.0], [1.62627172E12, 12.0], [1.62627189E12, 42905.0], [1.62627146E12, 10.0], [1.62627163E12, 38.0], [1.62627129E12, 561.0], [1.6262718E12, 39.0], [1.62627197E12, 120038.0], [1.62627154E12, 37.0], [1.62627171E12, 12.0], [1.62627137E12, 38.0], [1.62627188E12, 33049.0], [1.62627205E12, 38.0], [1.62627162E12, 38.0], [1.62627179E12, 19.0], [1.62627128E12, 159.0], [1.62627145E12, 14.0], [1.62627196E12, 120036.0], [1.62627123E12, 14546.0], [1.62627174E12, 19.0], [1.62627191E12, 60025.0], [1.6262714E12, 13.0], [1.62627157E12, 37.0], [1.62627131E12, 328.0], [1.62627208E12, 37.0], [1.62627182E12, 13.0], [1.62627148E12, 10.0], [1.62627165E12, 39.0], [1.62627122E12, 9935.0], [1.62627139E12, 38.0], [1.6262719E12, 53749.0], [1.62627207E12, 38.0], [1.62627156E12, 38.0], [1.62627173E12, 13.0], [1.6262713E12, 265.0], [1.62627147E12, 10.0], [1.62627198E12, 120334.0], [1.62627164E12, 39.0], [1.62627181E12, 37.0], [1.62627202E12, 39.0], [1.62627168E12, 13.0], [1.62627185E12, 14.0], [1.62627142E12, 13.0], [1.62627159E12, 12.0], [1.6262721E12, 38.0], [1.62627176E12, 18.0], [1.6262715E12, 10.0], [1.62627167E12, 13.0], [1.62627133E12, 54.0], [1.62627184E12, 13.0], [1.62627158E12, 12.0], [1.62627175E12, 19.0], [1.62627124E12, 175.0], [1.62627141E12, 13.0], [1.62627192E12, 60509.0], [1.62627209E12, 37.0], [1.62627166E12, 39.0], [1.62627183E12, 13.0], [1.62627132E12, 137.0], [1.62627149E12, 10.0], [1.6262717E12, 13.0], [1.62627187E12, 15.0], [1.62627136E12, 38.0], [1.62627153E12, 38.0], [1.62627127E12, 313.0], [1.62627204E12, 39.0], [1.62627178E12, 18.0], [1.62627144E12, 13.0], [1.62627161E12, 14.0], [1.62627135E12, 38.0], [1.62627186E12, 19.0], [1.62627203E12, 39.0], [1.62627152E12, 10.0], [1.62627169E12, 13.0], [1.62627126E12, 75.0], [1.62627143E12, 13.0], [1.62627211E12, 45.0], [1.6262716E12, 13.0], [1.62627177E12, 18.0], [1.62627134E12, 40.0], [1.62627151E12, 10.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62627138E12, 50.400000000000006], [1.62627155E12, 46.0], [1.62627121E12, 6898.8], [1.62627206E12, 51.0], [1.62627172E12, 23.0], [1.62627189E12, 51721.7], [1.62627146E12, 26.0], [1.62627163E12, 57.0], [1.62627129E12, 763.0], [1.6262718E12, 57.0], [1.62627197E12, 120129.8], [1.62627154E12, 48.0], [1.62627171E12, 24.0], [1.62627137E12, 49.0], [1.62627188E12, 41506.8], [1.62627205E12, 82.0], [1.62627162E12, 55.0], [1.62627179E12, 50.0], [1.62627128E12, 1167.0], [1.62627145E12, 37.0], [1.62627196E12, 120094.8], [1.62627123E12, 23679.6], [1.62627174E12, 28.799999999999997], [1.62627191E12, 60145.4], [1.6262714E12, 34.400000000000034], [1.62627157E12, 46.80000000000001], [1.62627131E12, 1016.5], [1.62627208E12, 48.0], [1.62627182E12, 34.0], [1.62627148E12, 20.0], [1.62627165E12, 57.0], [1.62627122E12, 16771.100000000002], [1.62627139E12, 47.0], [1.6262719E12, 60066.8], [1.62627207E12, 49.0], [1.62627156E12, 47.0], [1.62627173E12, 28.0], [1.6262713E12, 505.90000000000003], [1.62627147E12, 24.0], [1.62627198E12, 120334.0], [1.62627164E12, 58.0], [1.62627181E12, 55.0], [1.62627202E12, 180082.5], [1.62627168E12, 30.0], [1.62627185E12, 140.4000000000001], [1.62627142E12, 39.0], [1.62627159E12, 24.0], [1.6262721E12, 48.0], [1.62627176E12, 27.900000000000034], [1.6262715E12, 19.0], [1.62627167E12, 44.0], [1.62627133E12, 771.4000000000001], [1.62627184E12, 83.79999999999998], [1.62627158E12, 26.5], [1.62627175E12, 28.0], [1.62627124E12, 857.0], [1.62627141E12, 30.0], [1.62627192E12, 60509.0], [1.62627209E12, 46.0], [1.62627166E12, 57.0], [1.62627183E12, 35.0], [1.62627132E12, 1201.5], [1.62627149E12, 30.299999999999955], [1.6262717E12, 26.0], [1.62627187E12, 149.80000000000007], [1.62627136E12, 52.0], [1.62627153E12, 49.39999999999998], [1.62627127E12, 1030.0], [1.62627204E12, 64.0], [1.62627178E12, 27.0], [1.62627144E12, 42.0], [1.62627161E12, 52.0], [1.62627135E12, 62.0], [1.62627186E12, 1343.3999999999999], [1.62627203E12, 101.90000000000009], [1.62627152E12, 50.0], [1.62627169E12, 28.0], [1.62627126E12, 585.0], [1.62627143E12, 51.0], [1.62627211E12, 55.0], [1.6262716E12, 25.0], [1.62627177E12, 27.0], [1.62627134E12, 299.60000000000014], [1.62627151E12, 17.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62627138E12, 111.4799999999999], [1.62627155E12, 78.94000000000005], [1.62627121E12, 6907.0], [1.62627206E12, 72.0], [1.62627172E12, 33.049999999999955], [1.62627189E12, 51779.0], [1.62627146E12, 50.0], [1.62627163E12, 75.98000000000002], [1.62627129E12, 4964.780000000017], [1.6262718E12, 95.70000000000027], [1.62627197E12, 120772.62], [1.62627154E12, 82.29999999999973], [1.62627171E12, 31.559999999999945], [1.62627137E12, 102.07999999999993], [1.62627188E12, 41804.0], [1.62627205E12, 423.8499999999999], [1.62627162E12, 83.84000000000015], [1.62627179E12, 68.37999999999988], [1.62627128E12, 1379.0199999999982], [1.62627145E12, 56.0], [1.62627196E12, 120118.0], [1.62627123E12, 23730.0], [1.62627174E12, 37.980000000000004], [1.62627191E12, 60353.28], [1.6262714E12, 54.679999999999836], [1.62627157E12, 82.76000000000002], [1.62627131E12, 1067.8], [1.62627208E12, 90.0], [1.62627182E12, 179.30999999999995], [1.62627148E12, 53.0], [1.62627165E12, 77.03999999999996], [1.62627122E12, 17687.0], [1.62627139E12, 85.05000000000015], [1.6262719E12, 60067.0], [1.62627207E12, 66.58000000000004], [1.62627156E12, 94.89999999999995], [1.62627173E12, 64.0], [1.6262713E12, 545.0], [1.62627147E12, 47.1400000000001], [1.62627198E12, 120334.0], [1.62627164E12, 81.0], [1.62627181E12, 72.0], [1.62627202E12, 180104.5], [1.62627168E12, 42.0], [1.62627185E12, 10678.520000000015], [1.62627142E12, 76.16000000000008], [1.62627159E12, 31.929999999999836], [1.6262721E12, 61.0], [1.62627176E12, 46.74000000000012], [1.6262715E12, 43.02999999999997], [1.62627167E12, 66.96000000000004], [1.62627133E12, 828.0799999999999], [1.62627184E12, 10376.52], [1.62627158E12, 45.75], [1.62627175E12, 34.56], [1.62627124E12, 27764.0], [1.62627141E12, 52.299999999999955], [1.62627192E12, 60509.0], [1.62627209E12, 90.5], [1.62627166E12, 79.0], [1.62627183E12, 4633.879999999997], [1.62627132E12, 1267.25], [1.62627149E12, 113.05999999999995], [1.6262717E12, 36.179999999999836], [1.62627187E12, 30790.080000000024], [1.62627136E12, 74.02999999999997], [1.62627153E12, 73.0], [1.62627127E12, 1082.6], [1.62627204E12, 105.0], [1.62627178E12, 36.0], [1.62627144E12, 63.02999999999997], [1.62627161E12, 73.30000000000018], [1.62627135E12, 89.63999999999999], [1.62627186E12, 18051.569999999992], [1.62627203E12, 202.0599999999995], [1.62627152E12, 77.11999999999989], [1.62627169E12, 39.57999999999993], [1.62627126E12, 618.68], [1.62627143E12, 100.62999999999988], [1.62627211E12, 55.0], [1.6262716E12, 31.840000000000032], [1.62627177E12, 40.309999999999945], [1.62627134E12, 363.17999999999995], [1.62627151E12, 28.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62627138E12, 53.0], [1.62627155E12, 49.0], [1.62627121E12, 6907.0], [1.62627206E12, 55.0], [1.62627172E12, 24.0], [1.62627189E12, 51779.0], [1.62627146E12, 31.0], [1.62627163E12, 61.0], [1.62627129E12, 779.0], [1.6262718E12, 62.0], [1.62627197E12, 120171.35], [1.62627154E12, 50.0], [1.62627171E12, 25.0], [1.62627137E12, 58.0], [1.62627188E12, 41804.0], [1.62627205E12, 99.0], [1.62627162E12, 61.0], [1.62627179E12, 52.0], [1.62627128E12, 1244.7], [1.62627145E12, 45.0], [1.62627196E12, 120118.0], [1.62627123E12, 23730.0], [1.62627174E12, 30.0], [1.62627191E12, 60231.2], [1.6262714E12, 41.0], [1.62627157E12, 52.20000000000002], [1.62627131E12, 1031.0], [1.62627208E12, 51.19999999999993], [1.62627182E12, 54.09999999999991], [1.62627148E12, 27.0], [1.62627165E12, 62.0], [1.62627122E12, 17687.0], [1.62627139E12, 50.349999999999994], [1.6262719E12, 60067.0], [1.62627207E12, 52.0], [1.62627156E12, 53.94999999999999], [1.62627173E12, 33.19999999999993], [1.6262713E12, 518.65], [1.62627147E12, 32.0], [1.62627198E12, 120334.0], [1.62627164E12, 62.0], [1.62627181E12, 60.0], [1.62627202E12, 180091.0], [1.62627168E12, 33.0], [1.62627185E12, 209.0], [1.62627142E12, 47.0], [1.62627159E12, 25.0], [1.6262721E12, 50.94999999999999], [1.62627176E12, 30.94999999999999], [1.6262715E12, 22.0], [1.62627167E12, 50.0], [1.62627133E12, 801.8], [1.62627184E12, 5459.4], [1.62627158E12, 40.0], [1.62627175E12, 29.0], [1.62627124E12, 13474.0], [1.62627141E12, 36.5], [1.62627192E12, 60509.0], [1.62627209E12, 48.0], [1.62627166E12, 61.0], [1.62627183E12, 48.0], [1.62627132E12, 1239.5], [1.62627149E12, 37.0], [1.6262717E12, 28.0], [1.62627187E12, 182.69999999999993], [1.62627136E12, 58.0], [1.62627153E12, 53.0], [1.62627127E12, 1047.0], [1.62627204E12, 78.0], [1.62627178E12, 28.0], [1.62627144E12, 48.0], [1.62627161E12, 55.0], [1.62627135E12, 70.0], [1.62627186E12, 1515.9499999999998], [1.62627203E12, 122.0], [1.62627152E12, 52.799999999999955], [1.62627169E12, 30.0], [1.62627126E12, 596.2], [1.62627143E12, 60.0], [1.62627211E12, 55.0], [1.6262716E12, 27.0], [1.62627177E12, 28.0], [1.62627134E12, 346.0], [1.62627151E12, 20.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62627211E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 18.0, "minX": 1.0, "maxY": 180069.0, "series": [{"data": [[2.0, 37952.0], [3.0, 10726.5], [4.0, 45.5], [5.0, 41.0], [6.0, 42.0], [7.0, 75.0], [8.0, 42.5], [9.0, 28.0], [10.0, 46.5], [11.0, 41.0], [12.0, 41.5], [13.0, 44.0], [14.0, 101.0], [15.0, 40.0], [16.0, 24.0], [17.0, 50.0], [18.0, 41.0], [19.0, 78.0], [21.0, 41.0], [22.0, 24.0], [23.0, 40.5], [24.0, 42.0], [25.0, 180069.0], [26.0, 40.5], [27.0, 42.0], [28.0, 42.0], [29.0, 308.0], [30.0, 25.0], [31.0, 41.0], [33.0, 41.0], [32.0, 42.0], [34.0, 38.0], [36.0, 26.0], [37.0, 37.0], [38.0, 26.0], [39.0, 41.0], [40.0, 23.5], [41.0, 40.0], [43.0, 23.0], [42.0, 23.0], [44.0, 44.0], [45.0, 41.0], [47.0, 20.0], [46.0, 22.0], [48.0, 23.0], [49.0, 40.0], [51.0, 23.0], [50.0, 41.0], [52.0, 47.0], [53.0, 23.0], [55.0, 38.0], [54.0, 38.0], [56.0, 25.0], [57.0, 34.5], [59.0, 43.0], [58.0, 24.0], [60.0, 23.5], [61.0, 24.0], [63.0, 23.0], [62.0, 44.0], [67.0, 46.0], [66.0, 43.0], [65.0, 38.5], [64.0, 22.0], [68.0, 42.0], [69.0, 20.0], [70.0, 22.0], [71.0, 19.0], [75.0, 23.0], [72.0, 45.0], [74.0, 20.0], [73.0, 43.5], [79.0, 40.0], [78.0, 24.0], [77.0, 44.0], [76.0, 43.0], [83.0, 43.0], [82.0, 33.0], [80.0, 19.0], [81.0, 42.0], [85.0, 45.0], [86.0, 24.0], [87.0, 43.0], [84.0, 37.0], [88.0, 24.0], [90.0, 22.0], [91.0, 44.0], [92.0, 43.0], [93.0, 42.0], [95.0, 23.0], [94.0, 22.0], [98.0, 43.0], [96.0, 43.0], [99.0, 39.0], [100.0, 25.0], [102.0, 27.0], [101.0, 44.0], [103.0, 44.0], [105.0, 38.5], [106.0, 44.0], [107.0, 38.0], [110.0, 47.0], [109.0, 45.0], [108.0, 44.0], [111.0, 50.0], [114.0, 695.0], [113.0, 44.0], [115.0, 38.0], [112.0, 20.0], [119.0, 32.0], [116.0, 40.0], [117.0, 44.5], [118.0, 39.0], [121.0, 46.0], [123.0, 28.0], [120.0, 39.0], [122.0, 44.0], [127.0, 25.0], [126.0, 39.0], [124.0, 49.0], [125.0, 45.0], [134.0, 47.0], [130.0, 45.0], [131.0, 21.0], [135.0, 18.0], [133.0, 45.0], [132.0, 22.0], [128.0, 45.0], [137.0, 34.0], [138.0, 29.0], [140.0, 22.0], [142.0, 40.5], [141.0, 45.0], [143.0, 22.0], [136.0, 40.0], [139.0, 47.0], [149.0, 44.0], [145.0, 40.5], [146.0, 25.5], [151.0, 26.0], [150.0, 26.0], [147.0, 48.0], [144.0, 45.0], [148.0, 46.0], [154.0, 299.5], [153.0, 28.0], [152.0, 48.0], [159.0, 76.0], [158.0, 75.0], [155.0, 51.0], [182.0, 1088.0], [227.0, 323.5], [256.0, 942.0], [1.0, 28966.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[138.0, 61.5], [137.0, 55.0], [147.0, 55.0], [144.0, 57.0], [148.0, 682.0], [146.0, 63.0], [39.0, 71.5], [159.0, 74.0], [153.0, 44.0], [182.0, 1196.5], [52.0, 1431.0], [227.0, 308.0], [256.0, 835.0], [94.0, 72.0], [111.0, 98.0], [29.0, 312.0], [119.0, 946.0], [30.0, 140.0], [124.0, 34.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 256.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 17.0, "minX": 1.0, "maxY": 180069.0, "series": [{"data": [[2.0, 37952.0], [3.0, 10725.5], [4.0, 45.5], [5.0, 41.0], [6.0, 42.0], [7.0, 74.5], [8.0, 42.5], [9.0, 28.0], [10.0, 46.5], [11.0, 41.0], [12.0, 41.5], [13.0, 43.0], [14.0, 101.0], [15.0, 40.0], [16.0, 24.0], [17.0, 50.0], [18.0, 41.0], [19.0, 77.5], [21.0, 41.0], [22.0, 24.0], [23.0, 40.0], [24.0, 41.0], [25.0, 180069.0], [26.0, 40.0], [27.0, 42.0], [28.0, 42.0], [29.0, 307.5], [30.0, 25.0], [31.0, 41.0], [33.0, 41.0], [32.0, 42.0], [34.0, 38.0], [36.0, 26.0], [37.0, 36.0], [38.0, 26.0], [39.0, 41.0], [40.0, 23.0], [41.0, 39.0], [43.0, 23.0], [42.0, 22.5], [44.0, 43.5], [45.0, 41.0], [47.0, 20.0], [46.0, 22.0], [48.0, 23.0], [49.0, 40.0], [51.0, 23.0], [50.0, 40.0], [52.0, 47.0], [53.0, 23.0], [55.0, 38.0], [54.0, 38.0], [56.0, 24.0], [57.0, 34.5], [59.0, 43.0], [58.0, 23.0], [60.0, 23.0], [61.0, 24.0], [63.0, 23.0], [62.0, 43.5], [67.0, 45.0], [66.0, 43.0], [65.0, 38.5], [64.0, 22.0], [68.0, 42.0], [69.0, 20.0], [70.0, 22.0], [71.0, 19.0], [75.0, 23.0], [72.0, 45.0], [74.0, 20.0], [73.0, 43.0], [79.0, 40.0], [78.0, 24.0], [77.0, 44.0], [76.0, 43.0], [83.0, 42.0], [82.0, 32.5], [80.0, 19.0], [81.0, 42.0], [85.0, 44.5], [86.0, 24.0], [87.0, 43.0], [84.0, 37.0], [88.0, 23.0], [90.0, 22.0], [91.0, 44.0], [92.0, 43.0], [93.0, 41.0], [95.0, 22.0], [94.0, 22.0], [98.0, 43.0], [96.0, 43.0], [99.0, 39.0], [100.0, 25.0], [102.0, 26.5], [101.0, 44.0], [103.0, 44.0], [105.0, 38.0], [106.0, 44.0], [107.0, 38.0], [110.0, 46.5], [109.0, 45.0], [108.0, 44.0], [111.0, 49.5], [114.0, 695.0], [113.0, 44.0], [115.0, 38.0], [112.0, 20.0], [119.0, 31.0], [116.0, 40.0], [117.0, 44.0], [118.0, 39.0], [121.0, 46.0], [123.0, 27.0], [120.0, 39.0], [122.0, 44.0], [127.0, 24.0], [126.0, 39.0], [124.0, 49.0], [125.0, 44.0], [134.0, 47.0], [130.0, 45.0], [131.0, 21.0], [135.0, 17.0], [133.0, 44.0], [132.0, 22.0], [128.0, 45.0], [137.0, 34.0], [138.0, 28.5], [140.0, 22.0], [142.0, 40.5], [141.0, 45.0], [143.0, 22.0], [136.0, 40.0], [139.0, 47.0], [149.0, 43.0], [145.0, 40.0], [146.0, 25.0], [151.0, 26.0], [150.0, 26.0], [147.0, 47.0], [144.0, 44.0], [148.0, 46.0], [154.0, 298.5], [153.0, 28.0], [152.0, 48.0], [159.0, 75.0], [158.0, 75.0], [155.0, 51.0], [182.0, 1087.0], [227.0, 312.5], [256.0, 941.0], [1.0, 28966.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[138.0, 61.5], [137.0, 55.0], [147.0, 55.0], [144.0, 57.0], [148.0, 682.0], [146.0, 63.0], [39.0, 71.5], [159.0, 74.0], [153.0, 44.0], [182.0, 1196.5], [52.0, 1431.0], [227.0, 308.0], [256.0, 835.0], [94.0, 72.0], [111.0, 98.0], [29.0, 312.0], [119.0, 946.0], [30.0, 140.0], [124.0, 34.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 256.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.6262712E12, "maxY": 150.0, "series": [{"data": [[1.62627138E12, 10.4], [1.62627155E12, 34.9], [1.62627121E12, 3.4], [1.62627206E12, 108.9], [1.62627172E12, 59.4], [1.62627146E12, 148.1], [1.62627163E12, 150.0], [1.62627129E12, 10.0], [1.6262718E12, 141.0], [1.62627154E12, 59.3], [1.62627171E12, 84.2], [1.6262712E12, 0.5], [1.62627137E12, 34.6], [1.62627205E12, 121.8], [1.62627162E12, 140.8], [1.62627179E12, 116.5], [1.62627128E12, 28.6], [1.62627145E12, 150.0], [1.62627174E12, 10.1], [1.6262714E12, 42.0], [1.62627157E12, 17.2], [1.62627131E12, 30.4], [1.62627208E12, 59.3], [1.62627182E12, 136.4], [1.62627148E12, 150.0], [1.62627165E12, 149.6], [1.62627139E12, 17.4], [1.62627207E12, 84.1], [1.62627156E12, 9.9], [1.62627173E12, 34.6], [1.6262713E12, 6.6], [1.62627147E12, 148.6], [1.62627164E12, 149.9], [1.62627181E12, 93.6], [1.62627202E12, 10.5], [1.62627168E12, 149.6], [1.62627185E12, 91.8], [1.62627142E12, 91.7], [1.62627159E12, 66.9], [1.6262721E12, 9.9], [1.62627176E12, 42.1], [1.6262715E12, 149.6], [1.62627167E12, 149.9], [1.62627133E12, 34.4], [1.62627184E12, 25.0], [1.62627158E12, 42.3], [1.62627175E12, 17.1], [1.62627124E12, 8.5], [1.62627141E12, 66.9], [1.62627209E12, 34.8], [1.62627166E12, 150.0], [1.62627183E12, 63.5], [1.62627132E12, 33.4], [1.62627149E12, 129.7], [1.6262717E12, 109.0], [1.62627187E12, 78.7], [1.62627136E12, 59.4], [1.62627153E12, 84.3], [1.62627127E12, 23.9], [1.62627204E12, 148.4], [1.62627178E12, 91.7], [1.62627144E12, 139.4], [1.62627161E12, 113.7], [1.62627135E12, 83.4], [1.62627186E12, 135.0], [1.62627203E12, 149.8], [1.62627152E12, 104.6], [1.62627169E12, 133.9], [1.62627126E12, 15.7], [1.62627143E12, 113.5], [1.62627211E12, 0.2], [1.6262716E12, 91.7], [1.62627177E12, 66.9], [1.62627134E12, 83.3], [1.62627151E12, 133.9]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62627211E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62627121E12, "maxY": 152.0, "series": [{"data": [[1.62627138E12, 10.5], [1.62627155E12, 35.0], [1.62627121E12, 1.0], [1.62627206E12, 109.1], [1.62627172E12, 59.4], [1.62627189E12, 1.2], [1.62627146E12, 148.2], [1.62627163E12, 150.0], [1.62627129E12, 10.1], [1.6262718E12, 140.9], [1.62627197E12, 11.2], [1.62627154E12, 59.4], [1.62627171E12, 84.3], [1.62627137E12, 34.7], [1.62627188E12, 1.1], [1.62627205E12, 122.2], [1.62627162E12, 140.7], [1.62627179E12, 116.1], [1.62627128E12, 28.5], [1.62627145E12, 149.9], [1.62627196E12, 1.7], [1.62627123E12, 1.3], [1.62627174E12, 10.1], [1.62627191E12, 16.3], [1.6262714E12, 42.1], [1.62627157E12, 17.1], [1.62627131E12, 30.4], [1.62627208E12, 59.5], [1.62627182E12, 136.8], [1.62627148E12, 150.1], [1.62627165E12, 149.5], [1.62627122E12, 1.2], [1.62627139E12, 17.2], [1.6262719E12, 1.1], [1.62627207E12, 84.1], [1.62627156E12, 10.0], [1.62627173E12, 34.7], [1.6262713E12, 6.6], [1.62627147E12, 148.5], [1.62627198E12, 0.1], [1.62627164E12, 149.9], [1.62627181E12, 93.4], [1.62627202E12, 12.4], [1.62627168E12, 149.5], [1.62627185E12, 58.7], [1.62627142E12, 91.3], [1.62627159E12, 66.8], [1.6262721E12, 10.0], [1.62627176E12, 42.0], [1.6262715E12, 149.8], [1.62627167E12, 150.3], [1.62627133E12, 29.1], [1.62627184E12, 13.1], [1.62627158E12, 42.4], [1.62627175E12, 17.1], [1.62627124E12, 8.9], [1.62627141E12, 66.9], [1.62627192E12, 0.1], [1.62627209E12, 34.9], [1.62627166E12, 150.1], [1.62627183E12, 63.0], [1.62627132E12, 33.4], [1.62627149E12, 129.6], [1.6262717E12, 109.0], [1.62627187E12, 60.1], [1.62627136E12, 59.6], [1.62627153E12, 84.5], [1.62627127E12, 23.9], [1.62627204E12, 148.9], [1.62627178E12, 91.7], [1.62627144E12, 139.6], [1.62627161E12, 113.4], [1.62627135E12, 83.5], [1.62627186E12, 98.0], [1.62627203E12, 152.0], [1.62627152E12, 104.3], [1.62627169E12, 134.1], [1.62627126E12, 15.7], [1.62627143E12, 113.6], [1.62627211E12, 0.2], [1.6262716E12, 91.5], [1.62627177E12, 66.8], [1.62627134E12, 88.1], [1.62627151E12, 133.8]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.62627186E12, 36.9], [1.62627187E12, 21.0], [1.62627185E12, 5.3]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62627211E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62627121E12, "maxY": 152.0, "series": [{"data": [[1.62627138E12, 10.5], [1.62627155E12, 35.0], [1.62627121E12, 1.0], [1.62627206E12, 109.1], [1.62627172E12, 59.4], [1.62627189E12, 1.2], [1.62627146E12, 148.2], [1.62627163E12, 150.0], [1.62627129E12, 10.1], [1.6262718E12, 140.9], [1.62627197E12, 11.2], [1.62627154E12, 59.4], [1.62627171E12, 84.3], [1.62627137E12, 34.7], [1.62627188E12, 1.1], [1.62627205E12, 122.2], [1.62627162E12, 140.7], [1.62627179E12, 116.1], [1.62627128E12, 28.5], [1.62627145E12, 149.9], [1.62627196E12, 1.7], [1.62627123E12, 1.3], [1.62627174E12, 10.1], [1.62627191E12, 16.3], [1.6262714E12, 42.1], [1.62627157E12, 17.1], [1.62627131E12, 30.4], [1.62627208E12, 59.5], [1.62627182E12, 136.8], [1.62627148E12, 150.1], [1.62627165E12, 149.5], [1.62627122E12, 1.2], [1.62627139E12, 17.2], [1.6262719E12, 1.1], [1.62627207E12, 84.1], [1.62627156E12, 10.0], [1.62627173E12, 34.7], [1.6262713E12, 6.6], [1.62627147E12, 148.5], [1.62627198E12, 0.1], [1.62627164E12, 149.9], [1.62627181E12, 93.4], [1.62627202E12, 12.4], [1.62627168E12, 149.5], [1.62627185E12, 58.7], [1.62627142E12, 91.3], [1.62627159E12, 66.8], [1.6262721E12, 10.0], [1.62627176E12, 42.0], [1.6262715E12, 149.8], [1.62627167E12, 150.3], [1.62627133E12, 29.1], [1.62627184E12, 13.1], [1.62627158E12, 42.4], [1.62627175E12, 17.1], [1.62627124E12, 8.9], [1.62627141E12, 66.9], [1.62627192E12, 0.1], [1.62627209E12, 34.9], [1.62627166E12, 150.1], [1.62627183E12, 63.0], [1.62627132E12, 33.4], [1.62627149E12, 129.6], [1.6262717E12, 109.0], [1.62627187E12, 60.1], [1.62627136E12, 59.6], [1.62627153E12, 84.5], [1.62627127E12, 23.9], [1.62627204E12, 148.9], [1.62627178E12, 91.7], [1.62627144E12, 139.6], [1.62627161E12, 113.4], [1.62627135E12, 83.5], [1.62627186E12, 98.0], [1.62627203E12, 152.0], [1.62627152E12, 104.3], [1.62627169E12, 134.1], [1.62627126E12, 15.7], [1.62627143E12, 113.6], [1.62627211E12, 0.2], [1.6262716E12, 91.5], [1.62627177E12, 66.8], [1.62627134E12, 88.1], [1.62627151E12, 133.8]], "isOverall": false, "label": "Sunstar Search-success", "isController": false}, {"data": [[1.62627186E12, 36.9], [1.62627187E12, 21.0], [1.62627185E12, 5.3]], "isOverall": false, "label": "Sunstar Search-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62627211E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62627121E12, "maxY": 152.0, "series": [{"data": [[1.62627138E12, 10.5], [1.62627155E12, 35.0], [1.62627121E12, 1.0], [1.62627206E12, 109.1], [1.62627172E12, 59.4], [1.62627189E12, 1.2], [1.62627146E12, 148.2], [1.62627163E12, 150.0], [1.62627129E12, 10.1], [1.6262718E12, 140.9], [1.62627197E12, 11.2], [1.62627154E12, 59.4], [1.62627171E12, 84.3], [1.62627137E12, 34.7], [1.62627188E12, 1.1], [1.62627205E12, 122.2], [1.62627162E12, 140.7], [1.62627179E12, 116.1], [1.62627128E12, 28.5], [1.62627145E12, 149.9], [1.62627196E12, 1.7], [1.62627123E12, 1.3], [1.62627174E12, 10.1], [1.62627191E12, 16.3], [1.6262714E12, 42.1], [1.62627157E12, 17.1], [1.62627131E12, 30.4], [1.62627208E12, 59.5], [1.62627182E12, 136.8], [1.62627148E12, 150.1], [1.62627165E12, 149.5], [1.62627122E12, 1.2], [1.62627139E12, 17.2], [1.6262719E12, 1.1], [1.62627207E12, 84.1], [1.62627156E12, 10.0], [1.62627173E12, 34.7], [1.6262713E12, 6.6], [1.62627147E12, 148.5], [1.62627198E12, 0.1], [1.62627164E12, 149.9], [1.62627181E12, 93.4], [1.62627202E12, 12.4], [1.62627168E12, 149.5], [1.62627185E12, 58.7], [1.62627142E12, 91.3], [1.62627159E12, 66.8], [1.6262721E12, 10.0], [1.62627176E12, 42.0], [1.6262715E12, 149.8], [1.62627167E12, 150.3], [1.62627133E12, 29.1], [1.62627184E12, 13.1], [1.62627158E12, 42.4], [1.62627175E12, 17.1], [1.62627124E12, 8.9], [1.62627141E12, 66.9], [1.62627192E12, 0.1], [1.62627209E12, 34.9], [1.62627166E12, 150.1], [1.62627183E12, 63.0], [1.62627132E12, 33.4], [1.62627149E12, 129.6], [1.6262717E12, 109.0], [1.62627187E12, 60.1], [1.62627136E12, 59.6], [1.62627153E12, 84.5], [1.62627127E12, 23.9], [1.62627204E12, 148.9], [1.62627178E12, 91.7], [1.62627144E12, 139.6], [1.62627161E12, 113.4], [1.62627135E12, 83.5], [1.62627186E12, 98.0], [1.62627203E12, 152.0], [1.62627152E12, 104.3], [1.62627169E12, 134.1], [1.62627126E12, 15.7], [1.62627143E12, 113.6], [1.62627211E12, 0.2], [1.6262716E12, 91.5], [1.62627177E12, 66.8], [1.62627134E12, 88.1], [1.62627151E12, 133.8]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.62627186E12, 36.9], [1.62627187E12, 21.0], [1.62627185E12, 5.3]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62627211E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

