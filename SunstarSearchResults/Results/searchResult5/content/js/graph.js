/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "maxY": 180256.0, "series": [{"data": [[0.0, 10.0], [0.1, 10.0], [0.2, 10.0], [0.3, 10.0], [0.4, 10.0], [0.5, 11.0], [0.6, 11.0], [0.7, 11.0], [0.8, 11.0], [0.9, 11.0], [1.0, 11.0], [1.1, 11.0], [1.2, 11.0], [1.3, 11.0], [1.4, 11.0], [1.5, 11.0], [1.6, 11.0], [1.7, 11.0], [1.8, 11.0], [1.9, 11.0], [2.0, 11.0], [2.1, 11.0], [2.2, 12.0], [2.3, 12.0], [2.4, 12.0], [2.5, 12.0], [2.6, 12.0], [2.7, 12.0], [2.8, 12.0], [2.9, 12.0], [3.0, 12.0], [3.1, 12.0], [3.2, 12.0], [3.3, 12.0], [3.4, 12.0], [3.5, 12.0], [3.6, 12.0], [3.7, 12.0], [3.8, 12.0], [3.9, 12.0], [4.0, 12.0], [4.1, 13.0], [4.2, 13.0], [4.3, 13.0], [4.4, 13.0], [4.5, 13.0], [4.6, 13.0], [4.7, 13.0], [4.8, 13.0], [4.9, 13.0], [5.0, 13.0], [5.1, 13.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 13.0], [5.6, 13.0], [5.7, 13.0], [5.8, 13.0], [5.9, 13.0], [6.0, 13.0], [6.1, 13.0], [6.2, 13.0], [6.3, 13.0], [6.4, 13.0], [6.5, 13.0], [6.6, 13.0], [6.7, 13.0], [6.8, 13.0], [6.9, 13.0], [7.0, 13.0], [7.1, 13.0], [7.2, 13.0], [7.3, 13.0], [7.4, 14.0], [7.5, 14.0], [7.6, 14.0], [7.7, 14.0], [7.8, 14.0], [7.9, 14.0], [8.0, 14.0], [8.1, 14.0], [8.2, 14.0], [8.3, 14.0], [8.4, 14.0], [8.5, 14.0], [8.6, 14.0], [8.7, 14.0], [8.8, 14.0], [8.9, 14.0], [9.0, 14.0], [9.1, 14.0], [9.2, 14.0], [9.3, 14.0], [9.4, 14.0], [9.5, 14.0], [9.6, 14.0], [9.7, 14.0], [9.8, 14.0], [9.9, 14.0], [10.0, 14.0], [10.1, 14.0], [10.2, 14.0], [10.3, 14.0], [10.4, 14.0], [10.5, 14.0], [10.6, 14.0], [10.7, 14.0], [10.8, 14.0], [10.9, 14.0], [11.0, 14.0], [11.1, 14.0], [11.2, 14.0], [11.3, 15.0], [11.4, 15.0], [11.5, 15.0], [11.6, 15.0], [11.7, 15.0], [11.8, 15.0], [11.9, 15.0], [12.0, 15.0], [12.1, 15.0], [12.2, 15.0], [12.3, 15.0], [12.4, 15.0], [12.5, 15.0], [12.6, 15.0], [12.7, 15.0], [12.8, 15.0], [12.9, 15.0], [13.0, 15.0], [13.1, 15.0], [13.2, 15.0], [13.3, 15.0], [13.4, 15.0], [13.5, 15.0], [13.6, 15.0], [13.7, 16.0], [13.8, 16.0], [13.9, 16.0], [14.0, 16.0], [14.1, 16.0], [14.2, 16.0], [14.3, 16.0], [14.4, 16.0], [14.5, 16.0], [14.6, 16.0], [14.7, 16.0], [14.8, 16.0], [14.9, 16.0], [15.0, 16.0], [15.1, 16.0], [15.2, 16.0], [15.3, 16.0], [15.4, 17.0], [15.5, 17.0], [15.6, 17.0], [15.7, 17.0], [15.8, 17.0], [15.9, 17.0], [16.0, 17.0], [16.1, 17.0], [16.2, 17.0], [16.3, 17.0], [16.4, 17.0], [16.5, 17.0], [16.6, 17.0], [16.7, 17.0], [16.8, 17.0], [16.9, 18.0], [17.0, 18.0], [17.1, 18.0], [17.2, 18.0], [17.3, 18.0], [17.4, 18.0], [17.5, 18.0], [17.6, 18.0], [17.7, 18.0], [17.8, 18.0], [17.9, 18.0], [18.0, 18.0], [18.1, 18.0], [18.2, 18.0], [18.3, 18.0], [18.4, 18.0], [18.5, 18.0], [18.6, 18.0], [18.7, 18.0], [18.8, 18.0], [18.9, 18.0], [19.0, 18.0], [19.1, 18.0], [19.2, 18.0], [19.3, 18.0], [19.4, 18.0], [19.5, 18.0], [19.6, 18.0], [19.7, 18.0], [19.8, 19.0], [19.9, 19.0], [20.0, 19.0], [20.1, 19.0], [20.2, 19.0], [20.3, 19.0], [20.4, 19.0], [20.5, 19.0], [20.6, 19.0], [20.7, 19.0], [20.8, 19.0], [20.9, 19.0], [21.0, 19.0], [21.1, 19.0], [21.2, 19.0], [21.3, 19.0], [21.4, 19.0], [21.5, 19.0], [21.6, 19.0], [21.7, 19.0], [21.8, 19.0], [21.9, 19.0], [22.0, 19.0], [22.1, 19.0], [22.2, 19.0], [22.3, 19.0], [22.4, 19.0], [22.5, 19.0], [22.6, 19.0], [22.7, 19.0], [22.8, 19.0], [22.9, 19.0], [23.0, 19.0], [23.1, 19.0], [23.2, 19.0], [23.3, 19.0], [23.4, 19.0], [23.5, 19.0], [23.6, 19.0], [23.7, 19.0], [23.8, 19.0], [23.9, 19.0], [24.0, 19.0], [24.1, 19.0], [24.2, 19.0], [24.3, 19.0], [24.4, 19.0], [24.5, 19.0], [24.6, 19.0], [24.7, 20.0], [24.8, 20.0], [24.9, 20.0], [25.0, 20.0], [25.1, 20.0], [25.2, 20.0], [25.3, 20.0], [25.4, 20.0], [25.5, 20.0], [25.6, 20.0], [25.7, 20.0], [25.8, 20.0], [25.9, 20.0], [26.0, 20.0], [26.1, 20.0], [26.2, 20.0], [26.3, 20.0], [26.4, 20.0], [26.5, 20.0], [26.6, 20.0], [26.7, 20.0], [26.8, 20.0], [26.9, 20.0], [27.0, 20.0], [27.1, 20.0], [27.2, 20.0], [27.3, 20.0], [27.4, 20.0], [27.5, 20.0], [27.6, 20.0], [27.7, 20.0], [27.8, 20.0], [27.9, 20.0], [28.0, 20.0], [28.1, 20.0], [28.2, 20.0], [28.3, 20.0], [28.4, 20.0], [28.5, 20.0], [28.6, 20.0], [28.7, 20.0], [28.8, 20.0], [28.9, 20.0], [29.0, 20.0], [29.1, 20.0], [29.2, 20.0], [29.3, 20.0], [29.4, 20.0], [29.5, 20.0], [29.6, 20.0], [29.7, 20.0], [29.8, 20.0], [29.9, 21.0], [30.0, 21.0], [30.1, 21.0], [30.2, 21.0], [30.3, 21.0], [30.4, 21.0], [30.5, 21.0], [30.6, 21.0], [30.7, 21.0], [30.8, 21.0], [30.9, 21.0], [31.0, 21.0], [31.1, 21.0], [31.2, 21.0], [31.3, 21.0], [31.4, 21.0], [31.5, 21.0], [31.6, 21.0], [31.7, 21.0], [31.8, 21.0], [31.9, 21.0], [32.0, 21.0], [32.1, 21.0], [32.2, 21.0], [32.3, 21.0], [32.4, 21.0], [32.5, 21.0], [32.6, 21.0], [32.7, 21.0], [32.8, 21.0], [32.9, 21.0], [33.0, 21.0], [33.1, 21.0], [33.2, 21.0], [33.3, 21.0], [33.4, 21.0], [33.5, 21.0], [33.6, 21.0], [33.7, 21.0], [33.8, 21.0], [33.9, 21.0], [34.0, 21.0], [34.1, 21.0], [34.2, 21.0], [34.3, 21.0], [34.4, 21.0], [34.5, 21.0], [34.6, 21.0], [34.7, 21.0], [34.8, 21.0], [34.9, 21.0], [35.0, 21.0], [35.1, 21.0], [35.2, 21.0], [35.3, 21.0], [35.4, 21.0], [35.5, 21.0], [35.6, 21.0], [35.7, 21.0], [35.8, 22.0], [35.9, 22.0], [36.0, 22.0], [36.1, 22.0], [36.2, 22.0], [36.3, 22.0], [36.4, 22.0], [36.5, 22.0], [36.6, 22.0], [36.7, 22.0], [36.8, 22.0], [36.9, 22.0], [37.0, 22.0], [37.1, 22.0], [37.2, 22.0], [37.3, 22.0], [37.4, 22.0], [37.5, 22.0], [37.6, 22.0], [37.7, 22.0], [37.8, 22.0], [37.9, 22.0], [38.0, 22.0], [38.1, 22.0], [38.2, 22.0], [38.3, 22.0], [38.4, 22.0], [38.5, 22.0], [38.6, 22.0], [38.7, 22.0], [38.8, 22.0], [38.9, 22.0], [39.0, 22.0], [39.1, 22.0], [39.2, 22.0], [39.3, 22.0], [39.4, 22.0], [39.5, 22.0], [39.6, 22.0], [39.7, 22.0], [39.8, 22.0], [39.9, 22.0], [40.0, 22.0], [40.1, 22.0], [40.2, 22.0], [40.3, 22.0], [40.4, 22.0], [40.5, 22.0], [40.6, 22.0], [40.7, 22.0], [40.8, 22.0], [40.9, 22.0], [41.0, 22.0], [41.1, 22.0], [41.2, 22.0], [41.3, 22.0], [41.4, 22.0], [41.5, 22.0], [41.6, 22.0], [41.7, 22.0], [41.8, 22.0], [41.9, 22.0], [42.0, 23.0], [42.1, 23.0], [42.2, 23.0], [42.3, 23.0], [42.4, 23.0], [42.5, 23.0], [42.6, 23.0], [42.7, 23.0], [42.8, 23.0], [42.9, 23.0], [43.0, 23.0], [43.1, 23.0], [43.2, 23.0], [43.3, 23.0], [43.4, 23.0], [43.5, 23.0], [43.6, 23.0], [43.7, 23.0], [43.8, 23.0], [43.9, 23.0], [44.0, 23.0], [44.1, 23.0], [44.2, 23.0], [44.3, 23.0], [44.4, 23.0], [44.5, 23.0], [44.6, 23.0], [44.7, 23.0], [44.8, 23.0], [44.9, 23.0], [45.0, 23.0], [45.1, 23.0], [45.2, 23.0], [45.3, 23.0], [45.4, 23.0], [45.5, 23.0], [45.6, 23.0], [45.7, 23.0], [45.8, 23.0], [45.9, 23.0], [46.0, 23.0], [46.1, 23.0], [46.2, 23.0], [46.3, 23.0], [46.4, 23.0], [46.5, 23.0], [46.6, 23.0], [46.7, 23.0], [46.8, 23.0], [46.9, 23.0], [47.0, 23.0], [47.1, 23.0], [47.2, 23.0], [47.3, 23.0], [47.4, 23.0], [47.5, 23.0], [47.6, 23.0], [47.7, 23.0], [47.8, 23.0], [47.9, 23.0], [48.0, 23.0], [48.1, 23.0], [48.2, 24.0], [48.3, 24.0], [48.4, 24.0], [48.5, 24.0], [48.6, 24.0], [48.7, 24.0], [48.8, 24.0], [48.9, 24.0], [49.0, 24.0], [49.1, 24.0], [49.2, 24.0], [49.3, 24.0], [49.4, 24.0], [49.5, 24.0], [49.6, 24.0], [49.7, 24.0], [49.8, 24.0], [49.9, 24.0], [50.0, 24.0], [50.1, 24.0], [50.2, 24.0], [50.3, 24.0], [50.4, 24.0], [50.5, 24.0], [50.6, 24.0], [50.7, 24.0], [50.8, 24.0], [50.9, 24.0], [51.0, 24.0], [51.1, 24.0], [51.2, 24.0], [51.3, 24.0], [51.4, 24.0], [51.5, 24.0], [51.6, 24.0], [51.7, 24.0], [51.8, 24.0], [51.9, 24.0], [52.0, 24.0], [52.1, 24.0], [52.2, 24.0], [52.3, 24.0], [52.4, 24.0], [52.5, 24.0], [52.6, 24.0], [52.7, 24.0], [52.8, 24.0], [52.9, 24.0], [53.0, 24.0], [53.1, 24.0], [53.2, 24.0], [53.3, 24.0], [53.4, 24.0], [53.5, 24.0], [53.6, 24.0], [53.7, 24.0], [53.8, 24.0], [53.9, 25.0], [54.0, 25.0], [54.1, 25.0], [54.2, 25.0], [54.3, 25.0], [54.4, 25.0], [54.5, 25.0], [54.6, 25.0], [54.7, 25.0], [54.8, 25.0], [54.9, 25.0], [55.0, 25.0], [55.1, 25.0], [55.2, 25.0], [55.3, 25.0], [55.4, 25.0], [55.5, 25.0], [55.6, 25.0], [55.7, 25.0], [55.8, 25.0], [55.9, 25.0], [56.0, 25.0], [56.1, 25.0], [56.2, 25.0], [56.3, 25.0], [56.4, 25.0], [56.5, 25.0], [56.6, 25.0], [56.7, 25.0], [56.8, 25.0], [56.9, 25.0], [57.0, 25.0], [57.1, 25.0], [57.2, 25.0], [57.3, 25.0], [57.4, 25.0], [57.5, 25.0], [57.6, 25.0], [57.7, 25.0], [57.8, 25.0], [57.9, 25.0], [58.0, 25.0], [58.1, 25.0], [58.2, 25.0], [58.3, 25.0], [58.4, 25.0], [58.5, 26.0], [58.6, 26.0], [58.7, 26.0], [58.8, 26.0], [58.9, 26.0], [59.0, 26.0], [59.1, 26.0], [59.2, 26.0], [59.3, 26.0], [59.4, 26.0], [59.5, 26.0], [59.6, 26.0], [59.7, 26.0], [59.8, 26.0], [59.9, 26.0], [60.0, 26.0], [60.1, 26.0], [60.2, 26.0], [60.3, 26.0], [60.4, 26.0], [60.5, 26.0], [60.6, 26.0], [60.7, 26.0], [60.8, 26.0], [60.9, 26.0], [61.0, 26.0], [61.1, 26.0], [61.2, 26.0], [61.3, 26.0], [61.4, 26.0], [61.5, 26.0], [61.6, 26.0], [61.7, 26.0], [61.8, 26.0], [61.9, 26.0], [62.0, 27.0], [62.1, 27.0], [62.2, 27.0], [62.3, 27.0], [62.4, 27.0], [62.5, 27.0], [62.6, 27.0], [62.7, 27.0], [62.8, 27.0], [62.9, 27.0], [63.0, 27.0], [63.1, 27.0], [63.2, 27.0], [63.3, 27.0], [63.4, 27.0], [63.5, 27.0], [63.6, 27.0], [63.7, 27.0], [63.8, 27.0], [63.9, 27.0], [64.0, 27.0], [64.1, 27.0], [64.2, 27.0], [64.3, 27.0], [64.4, 27.0], [64.5, 27.0], [64.6, 27.0], [64.7, 28.0], [64.8, 28.0], [64.9, 28.0], [65.0, 28.0], [65.1, 28.0], [65.2, 28.0], [65.3, 28.0], [65.4, 28.0], [65.5, 28.0], [65.6, 28.0], [65.7, 28.0], [65.8, 28.0], [65.9, 28.0], [66.0, 28.0], [66.1, 28.0], [66.2, 28.0], [66.3, 28.0], [66.4, 28.0], [66.5, 28.0], [66.6, 28.0], [66.7, 28.0], [66.8, 28.0], [66.9, 28.0], [67.0, 28.0], [67.1, 29.0], [67.2, 29.0], [67.3, 29.0], [67.4, 29.0], [67.5, 29.0], [67.6, 29.0], [67.7, 29.0], [67.8, 29.0], [67.9, 29.0], [68.0, 29.0], [68.1, 29.0], [68.2, 29.0], [68.3, 29.0], [68.4, 29.0], [68.5, 29.0], [68.6, 29.0], [68.7, 29.0], [68.8, 30.0], [68.9, 30.0], [69.0, 30.0], [69.1, 30.0], [69.2, 30.0], [69.3, 30.0], [69.4, 30.0], [69.5, 30.0], [69.6, 30.0], [69.7, 30.0], [69.8, 30.0], [69.9, 30.0], [70.0, 30.0], [70.1, 30.0], [70.2, 30.0], [70.3, 31.0], [70.4, 31.0], [70.5, 31.0], [70.6, 31.0], [70.7, 31.0], [70.8, 31.0], [70.9, 31.0], [71.0, 31.0], [71.1, 31.0], [71.2, 31.0], [71.3, 31.0], [71.4, 31.0], [71.5, 32.0], [71.6, 32.0], [71.7, 32.0], [71.8, 32.0], [71.9, 32.0], [72.0, 32.0], [72.1, 32.0], [72.2, 32.0], [72.3, 32.0], [72.4, 32.0], [72.5, 33.0], [72.6, 33.0], [72.7, 33.0], [72.8, 33.0], [72.9, 33.0], [73.0, 33.0], [73.1, 33.0], [73.2, 33.0], [73.3, 34.0], [73.4, 34.0], [73.5, 34.0], [73.6, 34.0], [73.7, 34.0], [73.8, 34.0], [73.9, 34.0], [74.0, 35.0], [74.1, 35.0], [74.2, 35.0], [74.3, 35.0], [74.4, 35.0], [74.5, 35.0], [74.6, 36.0], [74.7, 36.0], [74.8, 36.0], [74.9, 36.0], [75.0, 36.0], [75.1, 37.0], [75.2, 37.0], [75.3, 37.0], [75.4, 37.0], [75.5, 37.0], [75.6, 38.0], [75.7, 38.0], [75.8, 38.0], [75.9, 38.0], [76.0, 39.0], [76.1, 39.0], [76.2, 39.0], [76.3, 39.0], [76.4, 40.0], [76.5, 40.0], [76.6, 40.0], [76.7, 40.0], [76.8, 40.0], [76.9, 41.0], [77.0, 41.0], [77.1, 41.0], [77.2, 41.0], [77.3, 42.0], [77.4, 42.0], [77.5, 42.0], [77.6, 42.0], [77.7, 42.0], [77.8, 43.0], [77.9, 43.0], [78.0, 43.0], [78.1, 43.0], [78.2, 43.0], [78.3, 43.0], [78.4, 44.0], [78.5, 44.0], [78.6, 44.0], [78.7, 44.0], [78.8, 44.0], [78.9, 44.0], [79.0, 44.0], [79.1, 45.0], [79.2, 45.0], [79.3, 45.0], [79.4, 45.0], [79.5, 45.0], [79.6, 45.0], [79.7, 45.0], [79.8, 45.0], [79.9, 46.0], [80.0, 46.0], [80.1, 46.0], [80.2, 46.0], [80.3, 46.0], [80.4, 46.0], [80.5, 46.0], [80.6, 46.0], [80.7, 46.0], [80.8, 47.0], [80.9, 47.0], [81.0, 47.0], [81.1, 47.0], [81.2, 47.0], [81.3, 47.0], [81.4, 47.0], [81.5, 47.0], [81.6, 47.0], [81.7, 48.0], [81.8, 48.0], [81.9, 48.0], [82.0, 48.0], [82.1, 48.0], [82.2, 48.0], [82.3, 48.0], [82.4, 48.0], [82.5, 49.0], [82.6, 49.0], [82.7, 49.0], [82.8, 49.0], [82.9, 49.0], [83.0, 49.0], [83.1, 49.0], [83.2, 49.0], [83.3, 49.0], [83.4, 50.0], [83.5, 50.0], [83.6, 50.0], [83.7, 50.0], [83.8, 50.0], [83.9, 50.0], [84.0, 50.0], [84.1, 50.0], [84.2, 51.0], [84.3, 51.0], [84.4, 51.0], [84.5, 51.0], [84.6, 51.0], [84.7, 51.0], [84.8, 51.0], [84.9, 51.0], [85.0, 52.0], [85.1, 52.0], [85.2, 52.0], [85.3, 52.0], [85.4, 52.0], [85.5, 52.0], [85.6, 52.0], [85.7, 53.0], [85.8, 53.0], [85.9, 53.0], [86.0, 53.0], [86.1, 53.0], [86.2, 53.0], [86.3, 53.0], [86.4, 54.0], [86.5, 54.0], [86.6, 54.0], [86.7, 54.0], [86.8, 54.0], [86.9, 55.0], [87.0, 55.0], [87.1, 55.0], [87.2, 55.0], [87.3, 55.0], [87.4, 55.0], [87.5, 55.0], [87.6, 56.0], [87.7, 56.0], [87.8, 56.0], [87.9, 56.0], [88.0, 56.0], [88.1, 57.0], [88.2, 57.0], [88.3, 57.0], [88.4, 57.0], [88.5, 57.0], [88.6, 57.0], [88.7, 58.0], [88.8, 58.0], [88.9, 58.0], [89.0, 58.0], [89.1, 59.0], [89.2, 59.0], [89.3, 59.0], [89.4, 59.0], [89.5, 59.0], [89.6, 60.0], [89.7, 60.0], [89.8, 60.0], [89.9, 60.0], [90.0, 61.0], [90.1, 61.0], [90.2, 61.0], [90.3, 61.0], [90.4, 62.0], [90.5, 62.0], [90.6, 62.0], [90.7, 63.0], [90.8, 63.0], [90.9, 63.0], [91.0, 64.0], [91.1, 64.0], [91.2, 64.0], [91.3, 65.0], [91.4, 65.0], [91.5, 66.0], [91.6, 66.0], [91.7, 66.0], [91.8, 67.0], [91.9, 67.0], [92.0, 68.0], [92.1, 68.0], [92.2, 69.0], [92.3, 69.0], [92.4, 70.0], [92.5, 70.0], [92.6, 71.0], [92.7, 71.0], [92.8, 72.0], [92.9, 72.0], [93.0, 73.0], [93.1, 73.0], [93.2, 74.0], [93.3, 75.0], [93.4, 75.0], [93.5, 76.0], [93.6, 76.0], [93.7, 77.0], [93.8, 78.0], [93.9, 79.0], [94.0, 80.0], [94.1, 81.0], [94.2, 82.0], [94.3, 83.0], [94.4, 83.0], [94.5, 84.0], [94.6, 85.0], [94.7, 86.0], [94.8, 88.0], [94.9, 89.0], [95.0, 90.0], [95.1, 92.0], [95.2, 94.0], [95.3, 96.0], [95.4, 98.0], [95.5, 100.0], [95.6, 103.0], [95.7, 106.0], [95.8, 110.0], [95.9, 114.0], [96.0, 120.0], [96.1, 126.0], [96.2, 135.0], [96.3, 148.0], [96.4, 159.0], [96.5, 173.0], [96.6, 186.0], [96.7, 200.0], [96.8, 212.0], [96.9, 227.0], [97.0, 245.0], [97.1, 267.0], [97.2, 352.0], [97.3, 398.0], [97.4, 441.0], [97.5, 500.0], [97.6, 616.0], [97.7, 660.0], [97.8, 685.0], [97.9, 725.0], [98.0, 804.0], [98.1, 859.0], [98.2, 942.0], [98.3, 996.0], [98.4, 1050.0], [98.5, 1126.0], [98.6, 1210.0], [98.7, 1255.0], [98.8, 1339.0], [98.9, 1419.0], [99.0, 1485.0], [99.1, 1663.0], [99.2, 1884.0], [99.3, 5241.0], [99.4, 26532.0], [99.5, 60036.0], [99.6, 60056.0], [99.7, 60120.0], [99.8, 120062.0], [99.9, 120229.0]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 71187.0, "series": [{"data": [[0.0, 71187.0], [180000.0, 37.0], [180100.0, 10.0], [120700.0, 1.0], [180200.0, 8.0], [100.0, 916.0], [33300.0, 2.0], [36900.0, 1.0], [40700.0, 1.0], [41100.0, 1.0], [41900.0, 2.0], [44700.0, 1.0], [45100.0, 1.0], [46100.0, 1.0], [49900.0, 1.0], [51100.0, 1.0], [200.0, 341.0], [52300.0, 1.0], [56700.0, 1.0], [57100.0, 1.0], [57300.0, 1.0], [60100.0, 33.0], [300.0, 110.0], [400.0, 145.0], [120200.0, 15.0], [500.0, 61.0], [600.0, 189.0], [700.0, 118.0], [800.0, 118.0], [900.0, 119.0], [1000.0, 118.0], [1100.0, 87.0], [1200.0, 130.0], [1300.0, 83.0], [1400.0, 107.0], [1500.0, 44.0], [1600.0, 35.0], [1700.0, 18.0], [1800.0, 57.0], [1900.0, 55.0], [2000.0, 1.0], [2200.0, 1.0], [5000.0, 2.0], [5200.0, 1.0], [6000.0, 3.0], [6200.0, 1.0], [6500.0, 1.0], [6700.0, 1.0], [6900.0, 1.0], [6800.0, 1.0], [7000.0, 1.0], [7300.0, 2.0], [120100.0, 24.0], [120500.0, 2.0], [8100.0, 1.0], [9400.0, 1.0], [9500.0, 1.0], [9600.0, 1.0], [10200.0, 1.0], [9900.0, 1.0], [10100.0, 1.0], [11200.0, 1.0], [12000.0, 2.0], [12200.0, 1.0], [12500.0, 2.0], [12900.0, 1.0], [13000.0, 1.0], [12800.0, 1.0], [13400.0, 1.0], [13700.0, 1.0], [13800.0, 1.0], [13900.0, 1.0], [15200.0, 1.0], [15300.0, 1.0], [15800.0, 1.0], [16000.0, 1.0], [16200.0, 1.0], [17400.0, 1.0], [17100.0, 1.0], [16900.0, 1.0], [17800.0, 1.0], [18100.0, 1.0], [18300.0, 1.0], [18600.0, 1.0], [18500.0, 1.0], [18800.0, 1.0], [19200.0, 1.0], [19400.0, 1.0], [20200.0, 1.0], [19900.0, 1.0], [20100.0, 1.0], [21200.0, 1.0], [21900.0, 1.0], [21600.0, 1.0], [22300.0, 1.0], [22400.0, 1.0], [22700.0, 1.0], [22800.0, 1.0], [23100.0, 1.0], [23500.0, 1.0], [24000.0, 1.0], [24400.0, 2.0], [24300.0, 2.0], [24600.0, 1.0], [24900.0, 1.0], [25100.0, 1.0], [24800.0, 1.0], [25800.0, 2.0], [25700.0, 1.0], [25900.0, 1.0], [25600.0, 1.0], [26500.0, 1.0], [27200.0, 1.0], [26700.0, 1.0], [27500.0, 2.0], [26900.0, 1.0], [28100.0, 1.0], [27800.0, 1.0], [28200.0, 1.0], [28500.0, 1.0], [28900.0, 2.0], [29600.0, 2.0], [31200.0, 1.0], [31900.0, 1.0], [32800.0, 1.0], [36400.0, 2.0], [37200.0, 1.0], [37400.0, 1.0], [40600.0, 1.0], [45600.0, 1.0], [46400.0, 1.0], [51000.0, 1.0], [51600.0, 1.0], [55400.0, 1.0], [56800.0, 1.0], [59800.0, 2.0], [60000.0, 170.0], [60200.0, 1.0], [120000.0, 97.0], [120400.0, 4.0]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 180200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 348.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 72353.0, "series": [{"data": [[0.0, 72353.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1130.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 733.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 348.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.62703566E12, "maxY": 1602.4864864864865, "series": [{"data": [[1.62703593E12, 4.194129419613079], [1.62703576E12, 9.670690811535863], [1.62703627E12, 131.95933734939766], [1.6270361E12, 6.0], [1.62703644E12, 99.40046296296296], [1.62703567E12, 1572.913043478261], [1.62703585E12, 2.994485294117647], [1.62703568E12, 1534.8688524590164], [1.62703619E12, 3.0], [1.62703602E12, 3.0], [1.62703653E12, 75.0], [1.62703636E12, 218.5], [1.62703577E12, 6.4528163862472585], [1.62703611E12, 6.0], [1.62703594E12, 5.794529686457636], [1.62703645E12, 142.50817527795934], [1.62703628E12, 268.01269035532994], [1.62703569E12, 1467.5606060606056], [1.62703603E12, 3.0], [1.62703586E12, 3.1246786632390733], [1.6270362E12, 3.0], [1.62703654E12, 75.0], [1.62703625E12, 5.0], [1.62703608E12, 6.0], [1.62703642E12, 82.0], [1.62703599E12, 3.0], [1.62703582E12, 2.0], [1.62703617E12, 3.0], [1.627036E12, 3.0], [1.62703651E12, 75.0], [1.62703634E12, 349.5], [1.62703591E12, 4.4665708123652035], [1.62703574E12, 11.7409638554217], [1.62703609E12, 6.0], [1.62703592E12, 4.0], [1.62703643E12, 85.16437414030253], [1.62703626E12, 8.533057851239667], [1.62703583E12, 2.0], [1.62703566E12, 1602.4864864864865], [1.62703601E12, 3.0], [1.62703584E12, 2.0], [1.62703635E12, 292.01980198019817], [1.62703618E12, 3.0], [1.62703652E12, 75.0], [1.62703575E12, 11.301874163319955], [1.6270364E12, 112.03341902313618], [1.62703597E12, 3.0], [1.6270358E12, 2.0], [1.62703631E12, 373.5], [1.62703614E12, 4.5840197693574956], [1.62703649E12, 75.0], [1.62703632E12, 364.5], [1.62703589E12, 5.0], [1.62703572E12, 782.0818505338087], [1.62703623E12, 3.7189605389797924], [1.62703606E12, 4.812111801242233], [1.62703641E12, 82.0], [1.62703624E12, 4.993803253292022], [1.62703581E12, 2.0], [1.62703615E12, 3.0], [1.62703598E12, 3.0], [1.62703633E12, 359.0], [1.62703616E12, 3.0], [1.6270365E12, 75.0], [1.62703573E12, 79.57687861271677], [1.62703607E12, 5.802160702228214], [1.6270359E12, 6.174672489082971], [1.62703595E12, 6.0], [1.62703578E12, 4.890264026402638], [1.62703629E12, 353.0], [1.62703612E12, 6.0], [1.62703646E12, 74.0], [1.62703587E12, 3.58123791102515], [1.6270357E12, 1369.2803030303028], [1.62703621E12, 3.0], [1.62703604E12, 2.9936948297604022], [1.62703655E12, 75.0], [1.62703579E12, 2.3423236514522876], [1.62703613E12, 6.0], [1.62703596E12, 5.459637561779241], [1.62703647E12, 74.24732620320859], [1.6270363E12, 613.2579113924055], [1.62703648E12, 75.0], [1.62703571E12, 1198.293388429751], [1.62703605E12, 3.906909788867566], [1.62703588E12, 3.5007776049766743], [1.62703639E12, 180.0], [1.62703622E12, 3.0]], "isOverall": false, "label": "bzm - Concurrency Thread Group-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62703655E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 13.786701777485188, "minX": 1.0, "maxY": 120089.0, "series": [{"data": [[2.0, 13.786701777485188], [3.0, 20.066438175586573], [4.0, 19.55029105184788], [5.0, 21.940262047523806], [6.0, 26.77597121343378], [7.0, 45.32558139534882], [8.0, 40.186170212765944], [9.0, 47.872761545711576], [10.0, 58.497797356828194], [11.0, 52.5997732426304], [12.0, 58.20796460176985], [13.0, 57.29703915950336], [14.0, 54.807476635514035], [15.0, 56.0], [16.0, 60.0], [17.0, 87.0], [19.0, 62.333333333333336], [20.0, 69.0], [22.0, 511.5526315789474], [26.0, 5091.0], [29.0, 1208.0], [30.0, 5063.0], [31.0, 53.75], [32.0, 69.0], [34.0, 80.0], [35.0, 85.0], [37.0, 80.0], [38.0, 92.625], [39.0, 86.25], [40.0, 90.0], [41.0, 94.0], [42.0, 104.0], [43.0, 103.0], [44.0, 97.6], [45.0, 96.0], [46.0, 108.5], [47.0, 103.0], [49.0, 118.0], [51.0, 457.75], [50.0, 304.0], [52.0, 139.0], [53.0, 128.33333333333334], [54.0, 484.66666666666663], [55.0, 124.0], [57.0, 330.28571428571433], [56.0, 662.75], [61.0, 348.6666666666667], [60.0, 332.4285714285714], [63.0, 808.0], [62.0, 314.75], [66.0, 722.0], [65.0, 399.0], [64.0, 154.0], [67.0, 158.0], [71.0, 510.5], [70.0, 478.5], [69.0, 426.6], [68.0, 423.6], [75.0, 468.7299956590934], [72.0, 352.25], [73.0, 169.0], [74.0, 1347.2404876246753], [79.0, 189.53956834532374], [78.0, 271.80000000000007], [77.0, 452.8571428571428], [76.0, 144.75], [83.0, 40276.33333333333], [82.0, 345.3417915010695], [81.0, 751.0], [80.0, 470.0], [87.0, 546.6666666666666], [86.0, 269.0], [85.0, 60.52348993288592], [84.0, 353.3333333333333], [89.0, 217.40000000000006], [90.0, 69.66666666666666], [91.0, 65.97319932998317], [88.0, 77.0], [95.0, 251.75], [94.0, 1158.392857142857], [92.0, 290.0], [93.0, 53.58879781420764], [97.0, 21166.879120879126], [96.0, 20191.333333333336], [98.0, 514.9344827586212], [99.0, 30080.499999999996], [103.0, 20523.5], [102.0, 12217.6], [101.0, 20307.0], [100.0, 17405.714285714286], [107.0, 13721.333333333334], [106.0, 12353.3], [105.0, 15414.25], [104.0, 12107.2], [111.0, 13599.333333333332], [110.0, 48354.6], [109.0, 22149.0], [108.0, 20302.833333333332], [114.0, 20216.666666666668], [113.0, 27953.66666666667], [112.0, 531.3333333333334], [115.0, 11908.272727272728], [119.0, 17339.142857142855], [118.0, 15285.750000000002], [117.0, 12304.1], [116.0, 13527.0], [123.0, 12190.100000000002], [122.0, 20231.083333333336], [120.0, 20140.0], [121.0, 34446.28571428571], [127.0, 20270.666666666668], [126.0, 14706.333333333334], [125.0, 17391.428571428576], [124.0, 7688.000000000001], [135.0, 13585.666666666666], [134.0, 15205.999999999996], [133.0, 12233.5], [132.0, 26905.88888888889], [129.0, 17405.85714285714], [128.0, 17428.857142857145], [130.0, 13530.333333333334], [131.0, 14089.388888888887], [143.0, 1593.6145833333333], [142.0, 8715.142857142855], [141.0, 17322.714285714286], [140.0, 13475.777777777777], [139.0, 8703.642857142857], [138.0, 17311.857142857145], [137.0, 17323.428571428572], [136.0, 12163.4], [150.0, 24319.4], [149.0, 30370.0], [148.0, 4378.4956287827945], [147.0, 17309.428571428572], [146.0, 24140.6], [145.0, 10150.083333333334], [144.0, 15255.625000000002], [151.0, 21894.0], [159.0, 9011.866666666667], [158.0, 20270.5], [156.0, 12105.300000000001], [155.0, 17378.285714285714], [154.0, 15322.5], [152.0, 15222.625], [153.0, 13433.666666666666], [157.0, 30068.75], [167.0, 20287.333333333336], [166.0, 40462.0], [165.0, 20095.10416666667], [164.0, 7614.687500000001], [163.0, 17460.57142857143], [162.0, 13445.555555555555], [161.0, 30216.25], [160.0, 17224.571428571428], [175.0, 24178.8], [174.0, 15132.125], [173.0, 40251.666666666664], [172.0, 17284.285714285714], [171.0, 17436.714285714286], [170.0, 24399.0], [168.0, 15218.875], [169.0, 40070.0], [183.0, 40261.333333333336], [182.0, 40462.333333333336], [181.0, 40271.0], [180.0, 17306.285714285714], [179.0, 60659.0], [178.0, 40440.333333333336], [177.0, 30367.0], [176.0, 40472.333333333336], [191.0, 40476.333333333336], [190.0, 30218.0], [189.0, 13524.111111111111], [184.0, 24062.2], [185.0, 24053.4], [186.0, 60068.0], [188.0, 120089.0], [187.0, 120073.0], [199.0, 8809.57142857143], [198.0, 4908.538461538461], [197.0, 5844.545454545455], [196.0, 4692.285714285714], [195.0, 20274.5], [194.0, 1512.2926829268295], [193.0, 24329.2], [192.0, 30368.0], [207.0, 8832.0], [206.0, 12311.0], [205.0, 12359.8], [204.0, 2686.4814814814818], [201.0, 12312.2], [200.0, 15394.0], [202.0, 6078.3], [203.0, 4485.071428571428], [213.0, 6225.599999999999], [212.0, 10239.666666666666], [211.0, 9832.5], [210.0, 2545.653846153846], [209.0, 3257.95], [208.0, 12319.8], [215.0, 20140.666666666668], [214.0, 10143.666666666666], [217.0, 4753.538461538462], [219.0, 7602.125], [220.0, 6754.0], [223.0, 30124.0], [222.0, 6755.555555555556], [221.0, 12106.0], [218.0, 6140.2], [216.0, 20129.0], [229.0, 12130.4], [225.0, 8635.57142857143], [230.0, 12058.2], [228.0, 7567.5], [227.0, 6088.4], [226.0, 15095.75], [224.0, 30140.0], [231.0, 30024.5], [239.0, 30234.0], [237.0, 8723.285714285714], [235.0, 12123.2], [234.0, 20168.333333333332], [236.0, 5500.545454545454], [238.0, 15047.0], [232.0, 20045.333333333332], [233.0, 30059.0], [246.0, 15231.25], [244.0, 12132.0], [243.0, 20163.0], [247.0, 30048.5], [245.0, 30039.5], [242.0, 12048.0], [241.0, 15043.75], [240.0, 15043.25], [255.0, 10109.333333333334], [254.0, 6085.400000000001], [253.0, 2062.1176470588234], [252.0, 15218.0], [251.0, 15134.0], [250.0, 30219.0], [249.0, 15132.75], [248.0, 15137.0], [269.0, 10075.333333333332], [271.0, 6726.111111111111], [270.0, 30051.5], [268.0, 20087.0], [259.0, 5117.75], [258.0, 10119.5], [257.0, 20169.333333333332], [256.0, 20160.0], [267.0, 20075.666666666668], [266.0, 102.6], [265.0, 20115.0], [264.0, 10077.333333333332], [263.0, 8651.57142857143], [262.0, 15094.25], [261.0, 7589.875], [260.0, 15134.75], [286.0, 6063.2], [287.0, 1074.0], [285.0, 20090.666666666668], [284.0, 12076.4], [283.0, 15136.75], [282.0, 20096.0], [281.0, 10096.166666666668], [280.0, 20043.666666666668], [279.0, 15164.25], [278.0, 20042.0], [273.0, 12146.6], [272.0, 12061.4], [275.0, 15096.0], [274.0, 15085.0], [277.0, 15083.25], [276.0, 12106.6], [300.0, 30174.0], [302.0, 30154.5], [303.0, 30197.5], [296.0, 60033.0], [301.0, 20151.666666666668], [298.0, 30169.0], [299.0, 60077.0], [297.0, 20264.333333333332], [295.0, 30200.0], [289.0, 12073.0], [288.0, 30112.5], [291.0, 20094.666666666668], [290.0, 30115.0], [294.0, 30199.0], [292.0, 20153.333333333332], [293.0, 60039.0], [318.0, 20232.333333333332], [319.0, 12085.8], [317.0, 20113.333333333332], [316.0, 20116.0], [315.0, 30173.0], [314.0, 30187.0], [313.0, 30184.5], [312.0, 30148.5], [311.0, 20238.0], [310.0, 60030.0], [304.0, 30187.5], [305.0, 60029.0], [307.0, 30190.0], [306.0, 20208.0], [309.0, 30143.0], [308.0, 15116.25], [334.0, 30114.5], [335.0, 30110.5], [333.0, 30113.5], [332.0, 30117.5], [331.0, 30106.0], [330.0, 20135.333333333332], [328.0, 15076.0], [329.0, 30055.5], [327.0, 20180.0], [326.0, 60065.0], [320.0, 20119.666666666668], [321.0, 60041.0], [323.0, 30187.5], [322.0, 20228.333333333332], [325.0, 30177.0], [324.0, 20220.666666666668], [349.0, 30061.0], [348.0, 12078.4], [339.0, 20099.666666666668], [338.0, 30102.5], [337.0, 30112.0], [336.0, 30116.5], [347.0, 20072.666666666668], [346.0, 12066.2], [345.0, 30073.0], [344.0, 30072.5], [350.0, 20067.0], [351.0, 20058.0], [343.0, 30078.0], [342.0, 24068.4], [341.0, 69.0], [340.0, 10070.666666666668], [367.0, 12527.25], [353.0, 275.29564315352684], [363.0, 26695.0], [352.0, 30090.5], [358.0, 28695.5], [357.0, 59805.0], [356.0, 60116.0], [359.0, 28607.0], [360.0, 28436.0], [361.0, 28389.0], [362.0, 18513.666666666668], [366.0, 16043.400000000001], [365.0, 51188.0], [364.0, 51681.0], [355.0, 60063.0], [354.0, 60074.0], [380.0, 699.0], [379.0, 7929.0], [378.0, 18772.5], [377.0, 8448.2], [376.0, 10626.0], [381.0, 118.14285714285714], [382.0, 248.0], [375.0, 2976.3333333333335], [373.0, 21660.0], [372.0, 44792.0], [374.0, 14061.333333333334], [369.0, 23102.0], [368.0, 46441.0], [370.0, 22855.5], [371.0, 11333.75], [384.0, 151.75], [399.0, 364.4], [394.0, 445.66666666666663], [395.0, 222.0], [392.0, 136.0], [393.0, 115.5], [388.0, 554.0], [386.0, 286.6666666666667], [385.0, 108.0], [387.0, 152.14285714285714], [396.0, 150.5], [397.0, 91.5], [398.0, 155.25], [389.0, 151.66666666666666], [390.0, 147.25], [391.0, 116.75], [401.0, 142.0], [410.0, 690.0], [411.0, 106.0], [405.0, 539.0], [404.0, 335.0], [400.0, 127.25], [402.0, 123.14285714285714], [403.0, 126.4], [406.0, 134.2], [407.0, 174.0], [408.0, 98.33333333333333], [414.0, 12375.0], [415.0, 89.2], [412.0, 123.5], [413.0, 119.33333333333333], [409.0, 86.66666666666667], [418.0, 323.5], [429.0, 353.66666666666663], [430.0, 837.6666666666667], [431.0, 67.0], [428.0, 295.2], [419.0, 77.0], [427.0, 962.0], [426.0, 81.0], [425.0, 84.0], [424.0, 1410.0], [423.0, 303.44444444444446], [421.0, 239.99999999999997], [422.0, 106.0], [420.0, 381.33333333333337], [417.0, 87.0], [416.0, 112.0], [434.0, 752.0], [447.0, 743.0], [436.0, 291.4], [433.0, 509.33333333333337], [432.0, 927.0], [440.0, 528.5], [441.0, 107.0], [443.0, 106.0], [442.0, 107.0], [445.0, 673.5], [444.0, 105.0], [435.0, 114.0], [437.0, 26.0], [439.0, 109.0], [438.0, 108.0], [446.0, 96.0], [462.0, 89.0], [454.0, 298.5], [449.0, 93.0], [448.0, 94.0], [451.0, 86.0], [450.0, 91.0], [452.0, 50.5], [453.0, 52.66666666666667], [457.0, 24.0], [458.0, 46.33333333333333], [459.0, 87.5], [463.0, 86.0], [456.0, 92.0], [461.0, 95.0], [460.0, 95.0], [477.0, 63.0], [471.0, 302.0], [466.0, 46.666666666666664], [465.0, 74.0], [464.0, 76.0], [476.0, 36413.0], [467.0, 73.0], [469.0, 59.0], [468.0, 73.0], [470.0, 66.0], [472.0, 71.0], [474.0, 59.8], [473.0, 89.0], [475.0, 82.5], [478.0, 73.5], [479.0, 55.4], [483.0, 72.0], [492.0, 482.66666666666663], [493.0, 131.5], [494.0, 93.0], [495.0, 78.75], [481.0, 348.75], [482.0, 84.0], [485.0, 57.0], [484.0, 82.0], [486.0, 56.5], [487.0, 74.25], [480.0, 86.0], [488.0, 68.5], [489.0, 18242.0], [490.0, 79.0], [491.0, 115.0], [498.0, 84.83333333333333], [510.0, 956.5], [501.0, 504.33333333333337], [503.0, 122.0], [502.0, 133.0], [496.0, 85.66666666666667], [497.0, 76.0], [499.0, 58.0], [500.0, 87.5], [511.0, 80.5], [504.0, 106.0], [507.0, 120.0], [505.0, 101.0], [509.0, 130.0], [508.0, 112.0], [517.0, 139.0], [538.0, 56.0], [519.0, 347.5], [539.0, 844.0], [540.0, 103.0], [541.0, 42.0], [542.0, 101.0], [528.0, 116.0], [526.0, 607.0], [527.0, 123.0], [518.0, 137.0], [516.0, 120.0], [515.0, 145.0], [514.0, 121.0], [513.0, 110.0], [512.0, 98.0], [521.0, 90.0], [520.0, 128.0], [524.0, 102.0], [522.0, 127.0], [525.0, 43.0], [529.0, 22.0], [534.0, 93.33333333333333], [532.0, 116.5], [531.0, 113.0], [530.0, 103.0], [535.0, 99.0], [536.0, 59.0], [537.0, 100.0], [571.0, 965.0], [574.0, 763.0], [573.0, 48.25], [572.0, 87.0], [570.0, 1168.5], [569.0, 90.0], [568.0, 862.0], [565.0, 974.0], [564.0, 95.0], [567.0, 97.0], [566.0, 95.0], [563.0, 971.0], [575.0, 1259.6666666666665], [560.0, 97.0], [562.0, 96.0], [561.0, 96.0], [552.0, 795.5], [555.0, 97.5], [553.0, 94.0], [557.0, 93.5], [556.0, 93.0], [559.0, 102.0], [545.0, 92.0], [544.0, 105.5], [558.0, 102.0], [547.0, 46.66666666666667], [550.0, 52.5], [549.0, 100.5], [551.0, 99.5], [603.0, 657.0], [596.0, 412.66666666666663], [607.0, 204.57142857142856], [606.0, 80.5], [604.0, 61.75], [605.0, 80.25], [593.0, 985.5], [592.0, 389.33333333333337], [595.0, 766.0], [594.0, 296.75], [602.0, 922.0], [601.0, 1663.0], [600.0, 665.6666666666667], [583.0, 90.0], [582.0, 1142.0], [580.0, 1610.5681818181824], [579.0, 97.0], [581.0, 91.5], [576.0, 431.5], [577.0, 90.0], [578.0, 54.5], [591.0, 408.0], [590.0, 945.5], [589.0, 644.0], [588.0, 988.0], [587.0, 957.0], [586.0, 507.0], [584.0, 1289.3333333333335], [585.0, 93.0], [599.0, 961.0], [598.0, 358.59999999999997], [597.0, 812.0], [636.0, 421.0], [639.0, 507.5], [624.0, 284.0], [626.0, 244.6], [625.0, 352.33333333333337], [628.0, 294.5], [629.0, 69.0], [627.0, 550.0], [638.0, 397.0], [637.0, 529.0], [635.0, 509.0], [634.0, 646.3333333333333], [633.0, 502.0], [632.0, 496.5], [623.0, 288.75], [609.0, 249.0], [610.0, 77.0], [611.0, 60.2], [612.0, 67.66666666666667], [613.0, 75.66666666666667], [614.0, 58.0], [615.0, 67.0], [608.0, 273.5], [622.0, 525.5], [621.0, 604.75], [620.0, 57.888888888888886], [619.0, 1038.6666666666667], [618.0, 908.5714285714284], [616.0, 57.333333333333336], [617.0, 54.5], [631.0, 307.5], [630.0, 488.5], [664.0, 541.5], [668.0, 534.5], [671.0, 972.0], [669.0, 69.0], [670.0, 73.0], [657.0, 171.66666666666666], [656.0, 1015.0], [667.0, 528.0], [666.0, 389.0], [665.0, 518.5], [655.0, 995.0], [641.0, 578.3333333333334], [640.0, 379.66666666666663], [643.0, 481.0], [642.0, 477.5], [645.0, 1655.5714285714287], [644.0, 504.5], [647.0, 199.82758620689657], [646.0, 330.6], [654.0, 556.0], [653.0, 285.25], [652.0, 426.19999999999993], [651.0, 391.66666666666663], [650.0, 84.6], [649.0, 159.8], [648.0, 209.25], [663.0, 545.25], [661.0, 525.75], [659.0, 529.0], [660.0, 61.5], [658.0, 528.0], [700.0, 539.5], [703.0, 542.5], [688.0, 264.4], [690.0, 250.74999999999997], [689.0, 330.6666666666667], [692.0, 513.0], [693.0, 79.33333333333334], [691.0, 290.5], [702.0, 303.5], [701.0, 350.0], [699.0, 534.0], [698.0, 389.0], [697.0, 235.40000000000003], [696.0, 364.6666666666667], [687.0, 234.4], [674.0, 233.8], [675.0, 100.0], [673.0, 64.0], [672.0, 242.8], [677.0, 575.0], [676.0, 213.0], [679.0, 355.66666666666663], [678.0, 499.75], [686.0, 243.8], [685.0, 566.5], [684.0, 343.0], [683.0, 360.66666666666663], [682.0, 520.0], [681.0, 532.5], [680.0, 355.33333333333337], [695.0, 395.0], [694.0, 625.3333333333334], [732.0, 379.5], [735.0, 261.6666666666667], [720.0, 256.5], [722.0, 251.74999999999997], [721.0, 440.0], [725.0, 236.25], [724.0, 77.6], [723.0, 225.5], [734.0, 201.5], [733.0, 219.25], [731.0, 217.2], [730.0, 369.5], [729.0, 269.0], [728.0, 791.0], [719.0, 218.8], [704.0, 374.0], [706.0, 512.5], [707.0, 169.5], [705.0, 341.6666666666667], [709.0, 8257.25], [708.0, 605.6666666666666], [711.0, 276.5], [710.0, 386.6666666666667], [718.0, 834.0], [717.0, 197.16666666666669], [716.0, 343.33333333333337], [715.0, 319.3333333333333], [714.0, 404.2], [712.0, 375.3333333333333], [713.0, 115.0], [727.0, 206.4], [726.0, 296.5], [764.0, 448.0], [767.0, 181.33333333333331], [752.0, 212.66666666666669], [753.0, 53.0], [755.0, 284.0], [754.0, 148.75], [757.0, 154.25], [756.0, 294.5], [766.0, 430.0], [765.0, 136.5], [763.0, 144.75], [762.0, 263.0], [761.0, 283.0], [760.0, 242.0], [751.0, 268.5], [737.0, 183.0], [736.0, 287.3333333333333], [739.0, 260.0], [738.0, 361.0], [741.0, 663.0], [740.0, 223.75], [743.0, 252.66666666666669], [742.0, 156.16666666666666], [750.0, 229.66666666666669], [749.0, 172.5], [748.0, 224.33333333333331], [747.0, 184.5], [746.0, 248.66666666666669], [745.0, 230.33333333333331], [744.0, 330.5], [759.0, 243.0], [758.0, 337.0], [769.0, 186.0], [795.0, 1096.0], [790.0, 1011.5], [768.0, 202.0], [772.0, 30.5], [771.0, 40.0], [770.0, 35.0], [773.0, 47.55555555555556], [775.0, 27.0], [774.0, 29.0], [782.0, 15.0], [783.0, 387.48666666666685], [781.0, 22.0], [780.0, 22.0], [779.0, 24.0], [778.0, 27.0], [777.0, 30.0], [776.0, 25.0], [828.0, 1095.0], [824.0, 1079.0], [823.0, 1096.0], [822.0, 1046.0], [820.0, 1046.0], [819.0, 1105.0], [815.0, 1048.0], [810.0, 1089.0], [807.0, 1058.0], [805.0, 1076.0], [800.0, 1050.0], [860.0, 1035.0], [849.0, 1063.0], [833.0, 1059.0], [893.0, 1305.5], [894.0, 1317.5], [883.0, 967.0], [882.0, 990.4444444444443], [885.0, 1018.0], [884.0, 983.0], [892.0, 991.0], [891.0, 1705.0], [890.0, 1698.0], [889.0, 1617.0], [888.0, 942.0], [871.0, 1077.0], [870.0, 1067.0], [869.0, 1015.0], [878.0, 1054.0], [877.0, 1072.5], [876.0, 1028.0], [875.0, 1044.0], [874.0, 1027.0], [873.0, 1018.0], [887.0, 1639.0], [886.0, 1650.0], [924.0, 1541.0], [927.0, 1493.0], [913.0, 1160.0], [912.0, 1573.0], [915.0, 1508.0], [914.0, 1520.0], [917.0, 1287.0], [916.0, 1303.0], [926.0, 1284.0], [925.0, 1392.0], [923.0, 1504.0], [922.0, 1287.0], [921.0, 1511.0], [920.0, 1521.0], [911.0, 1381.6222222222218], [896.0, 1252.5], [898.0, 1653.5], [897.0, 1357.0], [901.0, 922.0], [900.0, 1663.0], [903.0, 936.0], [902.0, 978.0], [910.0, 1529.0], [909.0, 1677.0], [908.0, 1482.0], [907.0, 1500.0], [906.0, 1653.0], [905.0, 1693.0], [904.0, 1702.0], [919.0, 1528.0], [918.0, 1314.0], [956.0, 1130.5], [948.0, 1435.0], [958.0, 1216.0], [945.0, 1473.0], [944.0, 1251.0], [954.0, 1435.5], [952.0, 1452.0], [943.0, 1441.0], [929.0, 1522.0], [928.0, 1535.0], [931.0, 1517.0], [930.0, 1516.0], [933.0, 1477.0], [932.0, 1497.0], [935.0, 1462.0], [934.0, 1424.0], [942.0, 1438.0], [941.0, 1513.0], [940.0, 1496.0], [939.0, 1494.0], [938.0, 1518.0], [937.0, 1509.0], [936.0, 1463.0], [951.0, 1402.0], [950.0, 1452.0], [949.0, 1202.0], [947.0, 1434.0], [946.0, 1494.0], [986.0, 1362.0], [990.0, 1110.0], [991.0, 1100.0], [976.0, 937.0], [980.0, 1375.0], [977.0, 931.0], [989.0, 897.0], [988.0, 1116.0], [987.0, 1067.0], [984.0, 1004.5], [967.0, 960.0], [966.0, 811.0], [965.0, 1120.0], [964.0, 1287.0], [962.0, 1139.0], [961.0, 1427.0], [960.0, 1276.5], [975.0, 781.0], [974.0, 1101.0], [973.0, 673.0], [972.0, 1156.0], [971.0, 676.0], [969.0, 1427.0], [968.0, 917.0], [982.0, 1385.0], [981.0, 1109.5], [1017.0, 444.0], [1021.0, 485.0], [1023.0, 374.0], [1009.0, 637.0], [1008.0, 646.0], [1011.0, 630.0], [1010.0, 549.0], [1013.0, 623.0], [1012.0, 532.0], [1020.0, 410.0], [1019.0, 441.0], [1018.0, 504.0], [1016.0, 501.0], [999.0, 1263.0], [998.0, 1213.0], [997.0, 1058.0], [996.0, 1170.0], [995.0, 1062.0], [994.0, 1280.0], [993.0, 1298.0], [992.0, 1093.0], [1007.0, 602.0], [1006.0, 566.0], [1005.0, 710.0], [1004.0, 779.0], [1003.0, 731.0], [1002.0, 820.0], [1001.0, 822.0], [1000.0, 1237.1716417910447], [1015.0, 515.0], [1014.0, 613.0], [1028.0, 377.0], [1086.0, 732.0], [1084.0, 711.0], [1082.0, 729.0], [1038.0, 375.0], [1036.0, 362.0], [1034.0, 355.0], [1032.0, 387.0], [1026.0, 381.0], [1024.0, 364.0], [1054.0, 274.0], [1052.0, 275.0], [1050.0, 281.0], [1048.0, 313.0], [1046.0, 342.0], [1044.0, 331.0], [1042.0, 363.0], [1040.0, 346.0], [1058.0, 204.0], [1056.0, 224.0], [1148.0, 591.0], [1142.0, 595.0], [1120.0, 736.5], [1122.0, 694.5], [1124.0, 677.7142857142857], [1128.0, 647.0], [1130.0, 685.0], [1132.0, 718.0], [1134.0, 614.0], [1150.0, 594.0], [1146.0, 597.3333333333334], [1144.0, 592.0], [1138.0, 641.0], [1136.0, 676.0], [1102.0, 718.0], [1100.0, 726.0], [1098.0, 680.0], [1096.0, 669.0], [1094.0, 732.0], [1092.0, 677.0], [1090.0, 765.5], [1088.0, 741.0], [1118.0, 679.0], [1116.0, 701.0], [1112.0, 716.0], [1110.0, 681.0], [1108.0, 707.0], [1104.0, 746.0], [1156.0, 1170.0], [1164.0, 1201.0], [1214.0, 960.5], [1176.0, 1226.0], [1152.0, 566.0], [1154.0, 1212.0], [1158.0, 1247.0], [1160.0, 1179.0], [1276.0, 960.0], [1248.0, 885.0], [1250.0, 1038.0], [1252.0, 1026.0], [1254.0, 992.0], [1256.0, 974.0], [1258.0, 977.0], [1260.0, 1020.5], [1262.0, 970.0], [1278.0, 946.0], [1274.0, 854.5], [1272.0, 971.5], [1270.0, 1000.0], [1268.0, 866.0], [1266.0, 942.0], [1264.0, 967.0], [1222.0, 729.0], [1220.0, 1186.0], [1224.0, 754.0], [1228.0, 751.0], [1230.0, 1194.0], [1246.0, 1126.0], [1244.0, 935.0], [1240.0, 1046.0], [1238.0, 1183.5], [1236.0, 1181.0], [1234.0, 1128.0], [1336.0, 26532.0], [1332.0, 252.0], [1340.0, 24340.0], [1314.0, 263.5], [1312.0, 269.0], [1316.0, 260.5], [1318.0, 265.0], [1320.0, 243.0], [1324.0, 237.0], [1326.0, 229.0], [1342.0, 233.0], [1338.0, 25696.0], [1334.0, 244.0], [1330.0, 259.0], [1328.0, 237.0], [1294.0, 920.0], [1292.0, 930.0], [1290.0, 935.0], [1288.0, 832.0], [1286.0, 958.0], [1284.0, 953.0], [1282.0, 958.0], [1280.0, 1016.0], [1308.0, 267.0], [1306.0, 285.5], [1300.0, 59.0], [1298.0, 98.0], [1394.0, 668.0], [1378.0, 720.0], [1380.0, 706.0], [1384.0, 671.0], [1406.0, 638.0], [1402.0, 685.0], [1398.0, 649.0], [1396.0, 684.5], [1392.0, 673.0], [1344.0, 247.0], [1356.0, 237.0], [1358.0, 217.0], [1374.0, 677.0], [1372.0, 692.0], [1370.0, 216.0], [1368.0, 217.66666666666666], [1366.0, 211.0], [1364.0, 217.5], [1362.0, 229.5], [1360.0, 220.0], [1466.0, 421.0], [1446.0, 500.0], [1440.0, 521.0], [1442.0, 496.0], [1444.0, 475.0], [1448.0, 450.0], [1452.0, 464.0], [1470.0, 432.0], [1468.0, 420.0], [1464.0, 435.0], [1462.0, 449.0], [1460.0, 466.0], [1458.0, 441.0], [1408.0, 611.0], [1410.0, 446.0], [1412.0, 407.0], [1414.0, 398.0], [1416.0, 399.0], [1420.0, 439.5], [1418.0, 442.0], [1422.0, 415.5], [1436.0, 28935.0], [1434.0, 29683.0], [1432.0, 25991.0], [1430.0, 27513.0], [1428.0, 289.0], [1426.0, 317.0], [1424.0, 416.0], [1482.0, 379.0], [1506.0, 18392.0], [1486.0, 382.0], [1484.0, 378.0], [1480.0, 380.0], [1478.0, 417.0], [1476.0, 388.0], [1474.0, 426.0], [1472.0, 387.0], [1502.0, 22799.0], [1500.0, 23101.0], [1498.0, 24054.0], [1496.0, 24641.0], [1494.0, 27251.0], [1492.0, 355.0], [1490.0, 346.0], [1488.0, 373.0], [1508.0, 17876.0], [1504.0, 21222.0], [1596.0, 182.0], [1570.0, 182.66666666666666], [1572.0, 167.0], [1574.0, 180.0], [1576.0, 146.0], [1578.0, 142.0], [1580.0, 17408.0], [1582.0, 16029.0], [1598.0, 173.5], [1592.0, 200.5], [1586.0, 201.0], [1584.0, 12523.0], [1538.0, 701.0625], [1540.0, 492.0], [1542.0, 653.0], [1544.0, 619.0], [1546.0, 595.0], [1548.0, 428.0], [1550.0, 579.0], [1564.0, 12550.0], [1562.0, 13438.0], [1560.0, 371.0], [1558.0, 432.0], [1556.0, 451.0], [1554.0, 448.0], [1552.0, 539.0], [1608.0, 86.0], [1612.0, 214.0], [1620.0, 6713.0], [1600.0, 12087.0], [1604.0, 66.0], [1606.0, 93.0], [1618.0, 7039.0], [1616.0, 7340.0], [1614.0, 193.0], [1610.0, 236.0], [1037.0, 359.0], [1055.0, 255.0], [1085.0, 711.0], [1083.0, 679.0], [1039.0, 352.0], [1035.0, 361.0], [1033.0, 361.0], [1031.0, 372.5], [1029.0, 377.5], [1027.0, 376.0], [1053.0, 266.0], [1051.0, 252.0], [1049.0, 291.0], [1047.0, 309.0], [1045.0, 341.0], [1043.0, 346.0], [1041.0, 374.0], [1059.0, 185.0], [1057.0, 223.0], [1143.0, 684.0], [1127.0, 694.0], [1147.0, 605.0], [1151.0, 586.0], [1123.0, 655.0], [1125.0, 654.0], [1131.0, 666.0], [1133.0, 627.0], [1135.0, 682.0], [1141.0, 629.0], [1139.0, 684.0], [1137.0, 669.0], [1103.0, 665.0], [1101.0, 701.0], [1099.0, 693.0], [1097.0, 726.0], [1095.0, 723.0], [1093.0, 730.0], [1091.0, 673.0], [1117.0, 659.0], [1115.0, 667.5], [1113.0, 661.0], [1111.0, 677.0], [1109.0, 744.0], [1107.0, 714.0], [1105.0, 741.0], [1211.0, 1067.0], [1201.0, 949.0], [1195.0, 1224.0], [1185.0, 1153.0], [1153.0, 1190.0], [1155.0, 1165.0], [1157.0, 1233.0], [1159.0, 1230.0], [1277.0, 1011.0], [1279.0, 950.0], [1249.0, 887.0], [1251.0, 1029.0], [1253.0, 1042.0], [1255.0, 880.0], [1257.0, 969.0], [1259.0, 950.0], [1261.0, 961.0], [1263.0, 985.0], [1275.0, 997.0], [1269.0, 1008.0], [1267.0, 936.0], [1265.0, 979.0], [1247.0, 700.6938775510204], [1223.0, 1163.0], [1227.0, 926.0], [1225.0, 1150.0], [1229.0, 1203.0], [1231.0, 1056.0], [1245.0, 1178.0], [1243.0, 1113.0], [1241.0, 1110.0], [1239.0, 1197.0], [1237.0, 1190.0], [1233.0, 1138.5], [1337.0, 25868.0], [1343.0, 247.0], [1315.0, 254.0], [1319.0, 271.5], [1321.0, 264.0], [1323.0, 236.0], [1325.0, 256.0], [1341.0, 238.0], [1339.0, 25153.0], [1335.0, 251.0], [1333.0, 242.0], [1331.0, 236.0], [1295.0, 816.0], [1293.0, 920.0], [1291.0, 943.0], [1289.0, 939.0], [1287.0, 928.0], [1285.0, 958.0], [1283.0, 963.0], [1311.0, 262.5], [1307.0, 286.5], [1303.0, 262.0], [1301.0, 57.0], [1299.0, 89.0], [1297.0, 98.5], [1407.0, 576.0], [1403.0, 656.0], [1377.0, 695.0], [1379.0, 671.0], [1381.0, 687.0], [1391.0, 674.0], [1405.0, 612.0], [1393.0, 660.0], [1375.0, 719.0], [1347.0, 210.0], [1351.0, 236.33333333333334], [1349.0, 238.0], [1355.0, 227.0], [1353.0, 223.5], [1357.0, 210.0], [1359.0, 220.0], [1373.0, 736.0], [1371.0, 687.0], [1369.0, 213.0], [1367.0, 220.0], [1463.0, 469.0], [1467.0, 434.0], [1471.0, 430.0], [1441.0, 479.0], [1443.0, 489.0], [1445.0, 465.0], [1447.0, 495.0], [1449.0, 492.0], [1451.0, 474.0], [1455.0, 461.0], [1453.0, 454.0], [1469.0, 445.0], [1465.0, 459.0], [1461.0, 445.0], [1439.0, 503.0], [1409.0, 493.0], [1411.0, 449.0], [1413.0, 421.0], [1415.0, 421.0], [1423.0, 379.0], [1435.0, 29609.0], [1433.0, 25785.0], [1431.0, 26721.0], [1429.0, 27544.0], [1427.0, 306.0], [1425.0, 412.0], [1479.0, 385.0], [1483.0, 417.0], [1511.0, 771.0], [1529.0, 758.0], [1521.0, 770.0], [1487.0, 390.0], [1485.0, 385.0], [1481.0, 371.0], [1477.0, 391.5], [1475.0, 407.0], [1503.0, 21905.0], [1501.0, 22810.0], [1499.0, 25885.0], [1497.0, 24452.0], [1495.0, 24931.0], [1493.0, 28187.0], [1491.0, 368.0], [1489.0, 350.0], [1519.0, 596.0], [1515.0, 592.0], [1513.0, 793.0], [1509.0, 17196.0], [1507.0, 18172.0], [1505.0, 18669.0], [1595.0, 182.5], [1589.0, 198.0], [1575.0, 168.66666666666666], [1599.0, 12212.0], [1571.0, 167.0], [1573.0, 166.0], [1579.0, 9471.0], [1581.0, 16273.0], [1583.0, 15848.0], [1597.0, 174.0], [1593.0, 198.5], [1587.0, 195.0], [1585.0, 12961.0], [1565.0, 12008.0], [1537.0, 630.0], [1539.0, 488.0], [1541.0, 492.0], [1543.0, 491.0], [1545.0, 594.0], [1547.0, 556.0], [1549.0, 585.0], [1551.0, 565.0], [1563.0, 13019.0], [1561.0, 13901.0], [1559.0, 390.5], [1557.0, 435.0], [1555.0, 460.0], [1607.0, 85.0], [1603.0, 70.5], [1601.0, 11234.0], [1605.0, 36.0], [1609.0, 79.0], [1619.0, 6985.0], [1617.0, 6582.0], [1615.0, 174.0], [1613.0, 211.0], [1611.0, 230.0], [1.0, 20.347826086956527]], "isOverall": false, "label": "Sunstar Search", "isController": false}, {"data": [[65.6031060565422, 619.959591760096]], "isOverall": false, "label": "Sunstar Search-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1620.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 104.8, "minX": 1.62703566E12, "maxY": 2261684.5, "series": [{"data": [[1.62703593E12, 1072414.2], [1.62703576E12, 1066348.6], [1.62703627E12, 469799.9], [1.6270361E12, 1073025.0], [1.62703644E12, 1793684.0], [1.62703567E12, 16871.5], [1.62703585E12, 389199.7], [1.62703568E12, 44522.4], [1.62703619E12, 50869.5], [1.62703602E12, 213408.9], [1.62703653E12, 698849.1], [1.62703636E12, 34533.0], [1.62703577E12, 977969.7], [1.62703611E12, 1072815.1], [1.62703594E12, 1072448.8], [1.62703645E12, 2261684.5], [1.62703628E12, 830610.7], [1.62703569E12, 47456.3], [1.62703603E12, 388984.8], [1.62703586E12, 556576.2], [1.6270362E12, 209484.9], [1.62703654E12, 281334.8], [1.62703625E12, 1060118.5], [1.62703608E12, 1072820.3], [1.62703642E12, 1836842.9], [1.62703599E12, 336617.5], [1.62703582E12, 158802.5], [1.62703617E12, 337803.4], [1.627036E12, 158351.1], [1.62703651E12, 1349567.3], [1.62703634E12, 11489.8], [1.62703591E12, 995623.2], [1.62703574E12, 1068608.0], [1.62703609E12, 1073464.3], [1.62703592E12, 1072231.1], [1.62703643E12, 2050997.4], [1.62703626E12, 174927.7], [1.62703583E12, 56622.5], [1.62703566E12, 25388.3], [1.62703601E12, 51295.3], [1.62703584E12, 212962.5], [1.62703635E12, 78792.1], [1.62703618E12, 158099.3], [1.62703652E12, 975741.2], [1.62703575E12, 1068785.6], [1.6270364E12, 357322.4], [1.62703597E12, 692467.8], [1.6270358E12, 515204.4], [1.62703631E12, 8756.7], [1.62703614E12, 868219.8], [1.62703649E12, 2170428.4], [1.62703632E12, 4271.8], [1.62703589E12, 1060141.2], [1.62703572E12, 603334.5], [1.62703623E12, 743169.0], [1.62703606E12, 921400.5], [1.62703641E12, 1541658.5], [1.62703624E12, 923621.5], [1.62703581E12, 337689.2], [1.62703615E12, 694070.5], [1.62703598E12, 515872.5], [1.62703633E12, 3452.0], [1.62703616E12, 514871.0], [1.6270365E12, 1794141.1], [1.62703573E12, 618531.5], [1.62703607E12, 1059301.2], [1.6270359E12, 982047.7], [1.62703595E12, 1034066.8], [1.62703578E12, 866733.9], [1.62703629E12, 990230.9], [1.62703612E12, 1073242.3], [1.62703646E12, 2087255.4], [1.62703587E12, 739646.2], [1.6270357E12, 93630.9], [1.62703621E12, 389163.6], [1.62703604E12, 567576.9], [1.62703655E12, 11963.3], [1.62703579E12, 689578.8], [1.62703613E12, 1036407.8], [1.62703596E12, 868089.0], [1.62703647E12, 2220246.3], [1.6270363E12, 650006.0], [1.62703648E12, 2160488.5], [1.62703571E12, 173199.1], [1.62703605E12, 745152.7], [1.62703588E12, 920159.9], [1.62703639E12, 25443.1], [1.62703622E12, 567372.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62703593E12, 31507.7], [1.62703576E12, 31342.7], [1.62703627E12, 13986.0], [1.6270361E12, 31530.0], [1.62703644E12, 27237.2], [1.62703567E12, 480.0], [1.62703585E12, 11434.0], [1.62703568E12, 1278.1], [1.62703619E12, 1492.1], [1.62703602E12, 6262.2], [1.62703653E12, 9856.3], [1.62703636E12, 959.6], [1.62703577E12, 28732.3], [1.62703611E12, 31529.8], [1.62703594E12, 31510.3], [1.62703645E12, 32132.1], [1.62703628E12, 24901.6], [1.62703569E12, 1389.8], [1.62703603E12, 11435.7], [1.62703586E12, 16354.5], [1.6270362E12, 6158.1], [1.62703654E12, 4436.6], [1.62703625E12, 31151.5], [1.62703608E12, 31531.0], [1.62703642E12, 26780.5], [1.62703599E12, 9901.5], [1.62703582E12, 4666.2], [1.62703617E12, 9921.4], [1.627036E12, 4645.1], [1.62703651E12, 20202.1], [1.62703634E12, 288.4], [1.62703591E12, 29237.3], [1.62703574E12, 31401.6], [1.62703609E12, 31528.2], [1.62703592E12, 31508.7], [1.62703643E12, 30561.0], [1.62703626E12, 5082.2], [1.62703583E12, 1660.4], [1.62703566E12, 777.8], [1.62703601E12, 1514.2], [1.62703584E12, 6264.5], [1.62703635E12, 2088.6], [1.62703618E12, 4645.1], [1.62703652E12, 15069.9], [1.62703575E12, 31405.4], [1.6270364E12, 8129.7], [1.62703597E12, 20348.2], [1.6270358E12, 15134.8], [1.62703631E12, 250.2], [1.62703614E12, 25518.8], [1.62703649E12, 30460.7], [1.62703632E12, 125.4], [1.62703589E12, 31151.3], [1.62703572E12, 17723.3], [1.62703623E12, 21840.1], [1.62703606E12, 27073.6], [1.62703641E12, 21883.1], [1.62703624E12, 27136.4], [1.62703581E12, 9920.6], [1.62703615E12, 20388.4], [1.62703598E12, 15155.1], [1.62703633E12, 104.8], [1.62703616E12, 15135.4], [1.6270365E12, 25517.9], [1.62703573E12, 18181.6], [1.62703607E12, 31131.1], [1.6270359E12, 28885.5], [1.62703595E12, 30372.2], [1.62703578E12, 25477.7], [1.62703629E12, 29360.3], [1.62703612E12, 31531.3], [1.62703646E12, 31546.2], [1.62703587E12, 21733.9], [1.6270357E12, 2779.9], [1.62703621E12, 11434.8], [1.62703604E12, 16668.1], [1.62703655E12, 336.0], [1.62703579E12, 20262.5], [1.62703613E12, 30457.6], [1.62703596E12, 25518.7], [1.62703647E12, 31441.2], [1.6270363E12, 26578.4], [1.62703648E12, 31509.0], [1.62703571E12, 5083.6], [1.62703605E12, 21903.5], [1.62703588E12, 27030.6], [1.62703639E12, 638.6], [1.62703622E12, 16669.7]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62703655E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 11.878378378378377, "minX": 1.62703566E12, "maxY": 120108.7741935484, "series": [{"data": [[1.62703593E12, 18.690460306871252], [1.62703576E12, 50.296445338698796], [1.62703627E12, 214.88403614457857], [1.6270361E12, 25.68266666666659], [1.62703644E12, 68.38040123456797], [1.62703567E12, 6178.652173913045], [1.62703585E12, 20.042279411764707], [1.62703568E12, 3820.622950819672], [1.62703619E12, 20.08450704225352], [1.62703602E12, 20.389261744966426], [1.62703653E12, 1044.1449893390193], [1.62703636E12, 60110.10869565217], [1.62703577E12, 36.115581565471764], [1.62703611E12, 25.412666666666716], [1.62703594E12, 24.701134089392916], [1.62703645E12, 4180.421190320477], [1.62703628E12, 232.233502538071], [1.62703569E12, 4421.106060606062], [1.62703603E12, 18.770220588235336], [1.62703586E12, 20.889460154241657], [1.6270362E12, 20.075085324232084], [1.62703654E12, 2583.5165876777255], [1.62703625E12, 25.21390013495282], [1.62703608E12, 25.113333333333333], [1.62703642E12, 145.54788069073766], [1.62703599E12, 19.45222929936306], [1.62703582E12, 11.878378378378377], [1.62703617E12, 19.461864406779664], [1.627036E12, 20.945701357466056], [1.62703651E12, 273.35587929240364], [1.62703634E12, 60063.357142857145], [1.62703591E12, 18.89072609633359], [1.62703574E12, 59.52141900937078], [1.62703609E12, 25.370666666666644], [1.62703592E12, 15.919946631087367], [1.62703643E12, 57.42572214580469], [1.62703626E12, 165.23553719008262], [1.62703583E12, 12.708860759493673], [1.62703566E12, 2702.1621621621616], [1.62703601E12, 22.013888888888886], [1.62703584E12, 15.439597315436245], [1.62703635E12, 60048.029702970285], [1.62703618E12, 20.38009049773754], [1.62703652E12, 692.2635983263604], [1.62703575E12, 52.32931726907628], [1.6270364E12, 32160.455012853454], [1.62703597E12, 21.320247933884303], [1.6270358E12, 12.368055555555554], [1.62703631E12, 42441.0], [1.62703614E12, 22.74382207578253], [1.62703649E12, 358.91028295376174], [1.62703632E12, 51936.0], [1.62703589E12, 16.21929824561399], [1.62703572E12, 1198.869513641757], [1.62703623E12, 21.77189605389798], [1.62703606E12, 22.19099378881988], [1.62703641E12, 510.53698366954853], [1.62703624E12, 23.18512780790086], [1.62703581E12, 12.30084745762712], [1.62703615E12, 21.28247422680412], [1.62703598E12, 19.72954230235783], [1.62703633E12, 57584.2], [1.62703616E12, 19.916666666666682], [1.6270365E12, 272.2775947281711], [1.62703573E12, 337.73294797687913], [1.62703607E12, 24.676569885212697], [1.6270359E12, 19.459970887918487], [1.62703595E12, 23.941868512110723], [1.62703578E12, 22.904290429042874], [1.62703629E12, 208.5025089605735], [1.62703612E12, 25.113333333333337], [1.62703646E12, 1365.2938041305788], [1.62703587E12, 19.837524177949707], [1.6270357E12, 2349.3106060606065], [1.62703621E12, 19.277573529411754], [1.62703604E12, 19.704918032786868], [1.62703655E12, 3541.705882352941], [1.62703579E12, 14.481327800829877], [1.62703613E12, 24.519668737060048], [1.62703596E12, 22.71087314662274], [1.62703647E12, 1070.513368983956], [1.6270363E12, 382.2618670886073], [1.62703648E12, 348.2515010006674], [1.62703571E12, 801.487603305785], [1.62703605E12, 21.263915547024972], [1.62703588E12, 18.09642301710731], [1.62703639E12, 120108.7741935484], [1.62703622E12, 19.721311475409813]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62703655E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 11.689189189189188, "minX": 1.62703566E12, "maxY": 120108.51612903224, "series": [{"data": [[1.62703593E12, 18.421614409606384], [1.62703576E12, 49.97987927565392], [1.62703627E12, 214.6189759036146], [1.6270361E12, 25.45933333333335], [1.62703644E12, 67.7422839506173], [1.62703567E12, 6177.95652173913], [1.62703585E12, 19.863970588235297], [1.62703568E12, 3819.3278688524592], [1.62703619E12, 19.873239436619713], [1.62703602E12, 20.238255033557028], [1.62703653E12, 1043.9381663112995], [1.62703636E12, 60109.97826086957], [1.62703577E12, 35.77615215801016], [1.62703611E12, 25.193333333333335], [1.62703594E12, 24.492328218812535], [1.62703645E12, 4179.920209287114], [1.62703628E12, 231.1142131979696], [1.62703569E12, 4420.257575757578], [1.62703603E12, 18.610294117647076], [1.62703586E12, 20.714652956298238], [1.6270362E12, 19.901023890784984], [1.62703654E12, 2583.2796208530804], [1.62703625E12, 25.00539811066124], [1.62703608E12, 24.88933333333335], [1.62703642E12, 145.0321821036106], [1.62703599E12, 19.26963906581742], [1.62703582E12, 11.689189189189188], [1.62703617E12, 19.266949152542338], [1.627036E12, 20.76470588235295], [1.62703651E12, 273.12382934443275], [1.62703634E12, 60063.28571428571], [1.62703591E12, 18.61538461538461], [1.62703574E12, 59.07161981258371], [1.62703609E12, 25.15466666666666], [1.62703592E12, 15.587058038692442], [1.62703643E12, 56.99862448418156], [1.62703626E12, 164.9793388429752], [1.62703583E12, 12.518987341772151], [1.62703566E12, 2701.6216216216217], [1.62703601E12, 21.833333333333325], [1.62703584E12, 15.261744966442949], [1.62703635E12, 60047.861386138604], [1.62703618E12, 20.153846153846153], [1.62703652E12, 692.0543933054391], [1.62703575E12, 51.94578313253008], [1.6270364E12, 32160.1516709512], [1.62703597E12, 21.112603305785118], [1.6270358E12, 12.166666666666671], [1.62703631E12, 42440.833333333336], [1.62703614E12, 22.569192751235583], [1.62703649E12, 358.6287094547956], [1.62703632E12, 51935.666666666664], [1.62703589E12, 15.957489878542503], [1.62703572E12, 1195.2597864768666], [1.62703623E12, 21.55341674687202], [1.62703606E12, 21.98757763975154], [1.62703641E12, 510.03458213256454], [1.62703624E12, 22.985282726568535], [1.62703581E12, 12.105932203389832], [1.62703615E12, 21.118556701030954], [1.62703598E12, 19.52843273231624], [1.62703633E12, 57584.0], [1.62703616E12, 19.716666666666683], [1.6270365E12, 272.03130148270213], [1.62703573E12, 337.03583815028907], [1.62703607E12, 24.45239702903443], [1.6270359E12, 18.937409024745275], [1.62703595E12, 23.71072664359862], [1.62703578E12, 22.622112211221143], [1.62703629E12, 208.23655913978487], [1.62703612E12, 24.88800000000003], [1.62703646E12, 1364.89273817455], [1.62703587E12, 19.62862669245648], [1.6270357E12, 2348.750000000001], [1.62703621E12, 19.11764705882349], [1.62703604E12, 19.530895334174016], [1.62703655E12, 22.58823529411765], [1.62703579E12, 14.250000000000016], [1.62703613E12, 24.33678398895787], [1.62703596E12, 22.489291598023016], [1.62703647E12, 1070.227272727272], [1.6270363E12, 381.8117088607596], [1.62703648E12, 347.93729152768526], [1.62703571E12, 799.1570247933893], [1.62703605E12, 21.08157389635317], [1.62703588E12, 17.812597200622115], [1.62703639E12, 120108.51612903224], [1.62703622E12, 19.514501891551053]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62703655E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 10.720720720720724, "minX": 1.62703566E12, "maxY": 1130.4614472123367, "series": [{"data": [[1.62703593E12, 16.11674449633088], [1.62703576E12, 46.377598926894635], [1.62703627E12, 90.2033132530121], [1.6270361E12, 21.584666666666674], [1.62703644E12, 55.65200617283958], [1.62703567E12, 139.08695652173913], [1.62703585E12, 16.136029411764685], [1.62703568E12, 503.98360655737724], [1.62703619E12, 16.929577464788732], [1.62703602E12, 17.241610738255034], [1.62703653E12, 16.042643923240938], [1.62703636E12, 85.9782608695652], [1.62703577E12, 32.92099487929775], [1.62703611E12, 21.381999999999977], [1.62703594E12, 20.643762508338853], [1.62703645E12, 47.57750163505562], [1.62703628E12, 85.60152284263974], [1.62703569E12, 378.71212121212125], [1.62703603E12, 15.560661764705888], [1.62703586E12, 17.09383033419023], [1.6270362E12, 16.68600682593856], [1.62703654E12, 18.720379146919434], [1.62703625E12, 21.228744939271284], [1.62703608E12, 21.118], [1.62703642E12, 39.644427001569845], [1.62703599E12, 16.188959660297243], [1.62703582E12, 10.720720720720724], [1.62703617E12, 16.14830508474577], [1.627036E12, 17.619909502262438], [1.62703651E12, 19.14047866805411], [1.62703634E12, 32.57142857142858], [1.62703591E12, 16.94751976994971], [1.62703574E12, 54.873493975903585], [1.62703609E12, 21.381333333333316], [1.62703592E12, 14.04202801867912], [1.62703643E12, 45.35832187070148], [1.62703626E12, 26.561983471074402], [1.62703583E12, 11.291139240506329], [1.62703566E12, 181.10810810810813], [1.62703601E12, 18.638888888888896], [1.62703584E12, 12.744966442953025], [1.62703635E12, 21.851485148514854], [1.62703618E12, 16.796380090497745], [1.62703652E12, 17.79358437935843], [1.62703575E12, 48.07429718875497], [1.6270364E12, 58.16195372750646], [1.62703597E12, 17.739669421487623], [1.6270358E12, 11.077777777777788], [1.62703631E12, 150.33333333333334], [1.62703614E12, 19.155683690280036], [1.62703649E12, 22.68599033816426], [1.62703632E12, 80.33333333333333], [1.62703589E12, 14.461538461538453], [1.62703572E12, 1130.4614472123367], [1.62703623E12, 18.003849855630403], [1.62703606E12, 18.53105590062113], [1.62703641E12, 37.85014409221896], [1.62703624E12, 19.362509682416704], [1.62703581E12, 11.069915254237277], [1.62703615E12, 17.961855670103084], [1.62703598E12, 16.39112343966713], [1.62703633E12, 29.8], [1.62703616E12, 16.623611111111114], [1.6270365E12, 20.444810543657297], [1.62703573E12, 327.93872832369954], [1.62703607E12, 20.76569885212691], [1.6270359E12, 16.958515283842804], [1.62703595E12, 20.051211072664337], [1.62703578E12, 20.47359735973596], [1.62703629E12, 24.62150537634405], [1.62703612E12, 21.208666666666677], [1.62703646E12, 36.369087275149866], [1.62703587E12, 16.863636363636342], [1.6270357E12, 380.3106060606061], [1.62703621E12, 15.976102941176475], [1.62703604E12, 16.373266078184113], [1.62703655E12, 19.11764705882353], [1.62703579E12, 12.981327800829883], [1.62703613E12, 20.690131124913787], [1.62703596E12, 18.93986820428333], [1.62703647E12, 22.54344919786101], [1.6270363E12, 72.92246835443034], [1.62703648E12, 22.84322881921281], [1.62703571E12, 767.2231404958674], [1.62703605E12, 17.708253358925127], [1.62703588E12, 16.341368584758943], [1.62703639E12, 73.6774193548387], [1.62703622E12, 16.38083228247165]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62703655E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.62703566E12, "maxY": 180256.0, "series": [{"data": [[1.62703593E12, 77.0], [1.62703576E12, 138.0], [1.62703627E12, 10275.0], [1.6270361E12, 138.0], [1.62703644E12, 831.0], [1.62703567E12, 17408.0], [1.62703585E12, 52.0], [1.62703568E12, 23101.0], [1.62703619E12, 30.0], [1.62703602E12, 54.0], [1.62703653E12, 60105.0], [1.62703636E12, 60220.0], [1.62703577E12, 141.0], [1.62703611E12, 67.0], [1.62703594E12, 97.0], [1.62703645E12, 180240.0], [1.62703628E12, 19452.0], [1.62703569E12, 29683.0], [1.62703603E12, 50.0], [1.62703586E12, 53.0], [1.6270362E12, 84.0], [1.62703654E12, 120092.0], [1.62703625E12, 77.0], [1.62703608E12, 60.0], [1.62703642E12, 120026.0], [1.62703599E12, 32.0], [1.62703582E12, 28.0], [1.62703617E12, 58.0], [1.627036E12, 32.0], [1.62703651E12, 60097.0], [1.62703634E12, 60116.0], [1.62703591E12, 553.0], [1.62703574E12, 140.0], [1.62703609E12, 148.0], [1.62703592E12, 124.0], [1.62703643E12, 160.0], [1.62703626E12, 7350.0], [1.62703583E12, 34.0], [1.62703566E12, 12961.0], [1.62703601E12, 38.0], [1.62703584E12, 60.0], [1.62703635E12, 60098.0], [1.62703618E12, 54.0], [1.62703652E12, 60097.0], [1.62703575E12, 161.0], [1.6270364E12, 120706.0], [1.62703597E12, 41.0], [1.6270358E12, 33.0], [1.62703631E12, 46441.0], [1.62703614E12, 72.0], [1.62703649E12, 60087.0], [1.62703632E12, 55448.0], [1.62703589E12, 134.0], [1.62703572E12, 2248.0], [1.62703623E12, 62.0], [1.62703606E12, 53.0], [1.62703641E12, 120137.0], [1.62703624E12, 65.0], [1.62703581E12, 57.0], [1.62703615E12, 95.0], [1.62703598E12, 42.0], [1.62703633E12, 59805.0], [1.62703616E12, 43.0], [1.6270365E12, 60120.0], [1.62703573E12, 1516.0], [1.62703607E12, 58.0], [1.6270359E12, 579.0], [1.62703595E12, 61.0], [1.62703578E12, 191.0], [1.62703629E12, 26973.0], [1.62703612E12, 65.0], [1.62703646E12, 180256.0], [1.62703587E12, 83.0], [1.6270357E12, 27544.0], [1.62703621E12, 40.0], [1.62703604E12, 76.0], [1.62703655E12, 32.0], [1.62703579E12, 149.0], [1.62703613E12, 68.0], [1.62703596E12, 75.0], [1.62703647E12, 180087.0], [1.6270363E12, 36988.0], [1.62703648E12, 180036.0], [1.62703571E12, 1247.0], [1.62703605E12, 114.0], [1.62703588E12, 100.0], [1.62703639E12, 120291.0], [1.62703622E12, 74.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62703593E12, 10.0], [1.62703576E12, 15.0], [1.62703627E12, 18.0], [1.6270361E12, 19.0], [1.62703644E12, 39.0], [1.62703567E12, 139.0], [1.62703585E12, 13.0], [1.62703568E12, 356.0], [1.62703619E12, 14.0], [1.62703602E12, 12.0], [1.62703653E12, 11.0], [1.62703636E12, 60023.0], [1.62703577E12, 11.0], [1.62703611E12, 19.0], [1.62703594E12, 14.0], [1.62703645E12, 39.0], [1.62703628E12, 18.0], [1.62703569E12, 346.0], [1.62703603E12, 13.0], [1.62703586E12, 13.0], [1.6270362E12, 13.0], [1.62703654E12, 13.0], [1.62703625E12, 18.0], [1.62703608E12, 14.0], [1.62703642E12, 39.0], [1.62703599E12, 17.0], [1.62703582E12, 10.0], [1.62703617E12, 13.0], [1.627036E12, 17.0], [1.62703651E12, 18.0], [1.62703634E12, 60036.0], [1.62703591E12, 10.0], [1.62703574E12, 16.0], [1.62703609E12, 18.0], [1.62703592E12, 10.0], [1.62703643E12, 40.0], [1.62703626E12, 18.0], [1.62703583E12, 10.0], [1.62703566E12, 36.0], [1.62703601E12, 18.0], [1.62703584E12, 10.0], [1.62703635E12, 60026.0], [1.62703618E12, 13.0], [1.62703652E12, 12.0], [1.62703575E12, 15.0], [1.6270364E12, 39.0], [1.62703597E12, 17.0], [1.6270358E12, 10.0], [1.62703631E12, 37264.0], [1.62703614E12, 18.0], [1.62703649E12, 19.0], [1.62703632E12, 49907.0], [1.62703589E12, 11.0], [1.62703572E12, 185.0], [1.62703623E12, 13.0], [1.62703606E12, 13.0], [1.62703641E12, 38.0], [1.62703624E12, 18.0], [1.62703581E12, 10.0], [1.62703615E12, 18.0], [1.62703598E12, 17.0], [1.62703633E12, 56731.0], [1.62703616E12, 18.0], [1.6270365E12, 19.0], [1.62703573E12, 15.0], [1.62703607E12, 14.0], [1.6270359E12, 10.0], [1.62703595E12, 14.0], [1.62703578E12, 10.0], [1.62703629E12, 11.0], [1.62703612E12, 18.0], [1.62703646E12, 20.0], [1.62703587E12, 10.0], [1.6270357E12, 210.0], [1.62703621E12, 13.0], [1.62703604E12, 13.0], [1.62703655E12, 16.0], [1.62703579E12, 10.0], [1.62703613E12, 19.0], [1.62703596E12, 13.0], [1.62703647E12, 19.0], [1.6270363E12, 10.0], [1.62703648E12, 20.0], [1.62703571E12, 57.0], [1.62703605E12, 13.0], [1.62703588E12, 10.0], [1.62703639E12, 120052.0], [1.62703622E12, 13.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62703593E12, 28.0], [1.62703576E12, 69.0], [1.62703627E12, 195.5], [1.6270361E12, 31.0], [1.62703644E12, 88.0], [1.62703567E12, 16175.4], [1.62703585E12, 25.0], [1.62703568E12, 18613.600000000002], [1.62703619E12, 25.0], [1.62703602E12, 23.0], [1.62703653E12, 27.0], [1.62703636E12, 60171.8], [1.62703577E12, 63.0], [1.62703611E12, 30.0], [1.62703594E12, 31.0], [1.62703645E12, 79.0], [1.62703628E12, 227.0], [1.62703569E12, 25217.200000000004], [1.62703603E12, 24.0], [1.62703586E12, 26.0], [1.6270362E12, 25.0], [1.62703654E12, 31.0], [1.62703625E12, 30.0], [1.62703608E12, 32.0], [1.62703642E12, 60.0], [1.62703599E12, 21.0], [1.62703582E12, 13.0], [1.62703617E12, 22.0], [1.627036E12, 24.0], [1.62703651E12, 27.0], [1.62703634E12, 60111.0], [1.62703591E12, 24.0], [1.62703574E12, 81.0], [1.62703609E12, 31.0], [1.62703592E12, 20.0], [1.62703643E12, 77.0], [1.62703626E12, 59.10000000000005], [1.62703583E12, 16.0], [1.62703566E12, 12112.0], [1.62703601E12, 24.700000000000003], [1.62703584E12, 24.0], [1.62703635E12, 60073.8], [1.62703618E12, 25.0], [1.62703652E12, 26.0], [1.62703575E12, 79.0], [1.6270364E12, 120092.0], [1.62703597E12, 24.0], [1.6270358E12, 16.0], [1.62703631E12, 46357.0], [1.62703614E12, 26.0], [1.62703649E12, 34.0], [1.62703632E12, 55448.0], [1.62703589E12, 22.0], [1.62703572E12, 1868.2], [1.62703623E12, 26.0], [1.62703606E12, 28.0], [1.62703641E12, 56.0], [1.62703624E12, 26.0], [1.62703581E12, 15.0], [1.62703615E12, 23.0], [1.62703598E12, 21.0], [1.62703633E12, 59805.0], [1.62703616E12, 21.0], [1.6270365E12, 30.0], [1.62703573E12, 1229.4], [1.62703607E12, 31.799999999999955], [1.6270359E12, 26.0], [1.62703595E12, 31.0], [1.62703578E12, 40.0], [1.62703629E12, 44.40000000000009], [1.62703612E12, 30.0], [1.62703646E12, 62.0], [1.62703587E12, 28.0], [1.6270357E12, 715.4000000000001], [1.62703621E12, 24.0], [1.62703604E12, 25.0], [1.62703655E12, 31.3], [1.62703579E12, 20.0], [1.62703613E12, 29.0], [1.62703596E12, 28.0], [1.62703647E12, 34.0], [1.6270363E12, 154.60000000000014], [1.62703648E12, 35.0], [1.62703571E12, 1161.2], [1.62703605E12, 26.0], [1.62703588E12, 31.0], [1.62703639E12, 120230.4], [1.62703622E12, 25.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62703593E12, 43.0], [1.62703576E12, 96.0], [1.62703627E12, 6805.100000000048], [1.6270361E12, 46.0], [1.62703644E12, 281.2399999999998], [1.62703567E12, 17408.0], [1.62703585E12, 32.0], [1.62703568E12, 23101.0], [1.62703619E12, 30.0], [1.62703602E12, 32.039999999999964], [1.62703653E12, 60040.6], [1.62703636E12, 60220.0], [1.62703577E12, 93.27999999999975], [1.62703611E12, 47.0], [1.62703594E12, 43.0], [1.62703645E12, 180082.0], [1.62703628E12, 981.4400000000023], [1.62703569E12, 29683.0], [1.62703603E12, 29.0], [1.62703586E12, 35.210000000000036], [1.6270362E12, 39.0], [1.62703654E12, 120077.76], [1.62703625E12, 42.0], [1.62703608E12, 44.0], [1.62703642E12, 88.25], [1.62703599E12, 28.279999999999973], [1.62703582E12, 27.0], [1.62703617E12, 26.0], [1.627036E12, 28.78], [1.62703651E12, 43.75999999999999], [1.62703634E12, 60116.0], [1.62703591E12, 100.35999999999876], [1.62703574E12, 114.0], [1.62703609E12, 44.0], [1.62703592E12, 35.0], [1.62703643E12, 106.35000000000014], [1.62703626E12, 6621.7099999999955], [1.62703583E12, 34.0], [1.62703566E12, 12961.0], [1.62703601E12, 38.0], [1.62703584E12, 53.01999999999998], [1.62703635E12, 60097.94], [1.62703618E12, 40.58000000000001], [1.62703652E12, 60044.56], [1.62703575E12, 112.0], [1.6270364E12, 120468.5], [1.62703597E12, 34.0], [1.6270358E12, 28.0], [1.62703631E12, 46441.0], [1.62703614E12, 40.84999999999991], [1.62703649E12, 67.0], [1.62703632E12, 55448.0], [1.62703589E12, 40.0], [1.62703572E12, 1968.56], [1.62703623E12, 37.59999999999991], [1.62703606E12, 37.1099999999999], [1.62703641E12, 97.0], [1.62703624E12, 37.07999999999993], [1.62703581E12, 27.34999999999991], [1.62703615E12, 36.0], [1.62703598E12, 28.779999999999973], [1.62703633E12, 59805.0], [1.62703616E12, 32.789999999999964], [1.6270365E12, 51.69999999999982], [1.62703573E12, 1474.68], [1.62703607E12, 45.0], [1.6270359E12, 78.5], [1.62703595E12, 44.539999999999964], [1.62703578E12, 59.86999999999989], [1.62703629E12, 95.03999999999996], [1.62703612E12, 42.0], [1.62703646E12, 108.98000000000002], [1.62703587E12, 49.65000000000009], [1.6270357E12, 27533.77], [1.62703621E12, 32.549999999999955], [1.62703604E12, 33.059999999999945], [1.62703655E12, 32.0], [1.62703579E12, 33.40000000000009], [1.62703613E12, 41.0], [1.62703596E12, 39.0], [1.62703647E12, 66.05999999999995], [1.6270363E12, 28891.639999999974], [1.62703648E12, 61.0], [1.62703571E12, 1231.71], [1.62703605E12, 33.569999999999936], [1.62703588E12, 52.0], [1.62703639E12, 120291.0], [1.62703622E12, 32.179999999999836]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62703593E12, 32.0], [1.62703576E12, 75.39999999999986], [1.62703627E12, 223.75], [1.6270361E12, 35.0], [1.62703644E12, 105.0], [1.62703567E12, 17180.999999999996], [1.62703585E12, 26.0], [1.62703568E12, 22709.6], [1.62703619E12, 26.39999999999999], [1.62703602E12, 24.05000000000001], [1.62703653E12, 30.0], [1.62703636E12, 60181.55], [1.62703577E12, 73.59999999999991], [1.62703611E12, 34.950000000000045], [1.62703594E12, 35.0], [1.62703645E12, 93.0], [1.62703628E12, 420.5499999999997], [1.62703569E12, 28673.199999999997], [1.62703603E12, 24.0], [1.62703586E12, 29.0], [1.6270362E12, 26.0], [1.62703654E12, 37.39999999999998], [1.62703625E12, 33.0], [1.62703608E12, 35.0], [1.62703642E12, 64.0], [1.62703599E12, 22.0], [1.62703582E12, 15.0], [1.62703617E12, 23.0], [1.627036E12, 24.0], [1.62703651E12, 30.0], [1.62703634E12, 60116.0], [1.62703591E12, 31.0], [1.62703574E12, 89.0], [1.62703609E12, 34.0], [1.62703592E12, 24.0], [1.62703643E12, 87.0], [1.62703626E12, 81.39999999999998], [1.62703583E12, 20.0], [1.62703566E12, 12566.800000000001], [1.62703601E12, 28.69999999999999], [1.62703584E12, 25.05000000000001], [1.62703635E12, 60077.0], [1.62703618E12, 27.0], [1.62703652E12, 30.100000000000023], [1.62703575E12, 88.0], [1.6270364E12, 120186.0], [1.62703597E12, 25.549999999999955], [1.6270358E12, 20.0], [1.62703631E12, 46441.0], [1.62703614E12, 28.0], [1.62703649E12, 40.0], [1.62703632E12, 55448.0], [1.62703589E12, 28.0], [1.62703572E12, 1916.1999999999998], [1.62703623E12, 28.0], [1.62703606E12, 30.0], [1.62703641E12, 60.89999999999998], [1.62703624E12, 28.0], [1.62703581E12, 16.0], [1.62703615E12, 25.0], [1.62703598E12, 22.899999999999977], [1.62703633E12, 59805.0], [1.62703616E12, 22.0], [1.6270365E12, 33.0], [1.62703573E12, 1423.3999999999999], [1.62703607E12, 35.0], [1.6270359E12, 41.0], [1.62703595E12, 34.0], [1.62703578E12, 46.34999999999991], [1.62703629E12, 60.200000000000045], [1.62703612E12, 33.0], [1.62703646E12, 71.0], [1.62703587E12, 34.0], [1.6270357E12, 25814.05], [1.62703621E12, 25.0], [1.62703604E12, 26.0], [1.62703655E12, 32.0], [1.62703579E12, 25.0], [1.62703613E12, 32.0], [1.62703596E12, 31.0], [1.62703647E12, 39.149999999999864], [1.6270363E12, 205.0999999999999], [1.62703648E12, 40.0], [1.62703571E12, 1193.7], [1.62703605E12, 28.0], [1.62703588E12, 38.0], [1.62703639E12, 120270.0], [1.62703622E12, 26.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62703655E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 11.0, "minX": 1.0, "maxY": 120061.0, "series": [{"data": [[2.0, 25740.5], [3.0, 27513.0], [4.0, 51.5], [5.0, 25.0], [6.0, 23.5], [8.0, 60039.5], [9.0, 19.0], [10.0, 21.0], [11.0, 30029.0], [12.0, 120061.0], [13.0, 23.0], [14.0, 91.0], [15.0, 24.0], [16.0, 97.0], [17.0, 23.0], [18.0, 21.0], [20.0, 23.5], [21.0, 13.5], [22.0, 21.0], [23.0, 19.0], [24.0, 22.0], [25.0, 21.0], [26.0, 18.5], [27.0, 18.0], [28.0, 20.0], [29.0, 22.0], [30.0, 11.0], [31.0, 19.0], [33.0, 18.0], [32.0, 19.5], [34.0, 103.5], [36.0, 19.0], [37.0, 20.0], [38.0, 22.0], [39.0, 19.0], [41.0, 17.5], [40.0, 19.0], [43.0, 107.0], [42.0, 58.5], [45.0, 19.0], [44.0, 19.0], [46.0, 21.0], [49.0, 19.0], [48.0, 18.0], [51.0, 20.0], [50.0, 19.0], [53.0, 19.0], [55.0, 19.0], [54.0, 17.0], [57.0, 196.0], [56.0, 20.0], [59.0, 15.0], [58.0, 19.0], [60.0, 11.0], [61.0, 19.0], [63.0, 19.0], [62.0, 18.0], [65.0, 18.0], [64.0, 16.5], [66.0, 19.0], [67.0, 110.0], [68.0, 210.5], [70.0, 19.0], [69.0, 19.0], [71.0, 20.0], [75.0, 19.0], [74.0, 18.0], [73.0, 19.0], [72.0, 22.0], [79.0, 19.0], [76.0, 19.0], [77.0, 22.0], [78.0, 20.0], [80.0, 60.0], [83.0, 20.0], [81.0, 19.0], [85.0, 20.0], [87.0, 21.0], [84.0, 21.5], [86.0, 20.0], [90.0, 20.0], [88.0, 20.0], [91.0, 21.0], [89.0, 23.0], [93.0, 21.0], [95.0, 21.0], [94.0, 20.0], [92.0, 43.5], [98.0, 21.0], [96.0, 21.0], [97.0, 41.0], [99.0, 21.0], [102.0, 39.0], [100.0, 15.0], [101.0, 26.0], [103.0, 22.0], [107.0, 21.0], [105.0, 19.0], [106.0, 22.0], [104.0, 26.0], [109.0, 22.0], [111.0, 23.0], [110.0, 21.0], [108.0, 24.0], [115.0, 26.0], [113.0, 20.0], [112.0, 22.0], [114.0, 25.0], [118.0, 25.0], [117.0, 22.0], [116.0, 24.0], [119.0, 22.0], [120.0, 23.0], [122.0, 22.0], [123.0, 21.0], [121.0, 25.0], [126.0, 24.0], [125.0, 22.0], [124.0, 38.0], [127.0, 23.0], [132.0, 23.0], [129.0, 27.0], [128.0, 22.0], [131.0, 22.0], [135.0, 25.0], [133.0, 26.0], [130.0, 25.0], [134.0, 23.0], [143.0, 40.0], [136.0, 35.5], [142.0, 28.0], [140.0, 26.0], [137.0, 36.0], [141.0, 26.0], [138.0, 23.0], [139.0, 36.5], [148.0, 36.0], [150.0, 24.0], [147.0, 40.0], [149.0, 23.0], [151.0, 25.0], [146.0, 27.0], [145.0, 25.0], [144.0, 26.0], [153.0, 33.0], [155.0, 40.5], [152.0, 37.0], [154.0, 63.0], [159.0, 56.0], [156.0, 27.0], [165.0, 1280.0], [164.0, 1845.5], [167.0, 106.0], [161.0, 56.0], [160.0, 57.0], [177.0, 1105.0], [181.0, 59.0], [216.0, 860.5], [1.0, 23101.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[133.0, 64.0], [135.0, 107.0], [1.0, 59823.0], [141.0, 54.0], [137.0, 87.0], [150.0, 43.0], [159.0, 18.0], [181.0, 67.0], [121.0, 47.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 216.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 120060.5, "series": [{"data": [[2.0, 25740.5], [3.0, 27513.0], [4.0, 51.5], [5.0, 25.0], [6.0, 22.5], [8.0, 60039.0], [9.0, 19.0], [10.0, 21.0], [11.0, 30029.0], [12.0, 120060.5], [13.0, 23.0], [14.0, 90.5], [15.0, 23.0], [16.0, 96.0], [17.0, 23.0], [18.0, 21.0], [20.0, 23.0], [21.0, 13.5], [22.0, 21.0], [23.0, 18.0], [24.0, 22.0], [25.0, 20.0], [26.0, 18.5], [27.0, 18.0], [28.0, 20.0], [29.0, 22.0], [30.0, 11.0], [31.0, 19.0], [33.0, 18.0], [32.0, 19.5], [34.0, 103.0], [36.0, 19.0], [37.0, 19.0], [38.0, 22.0], [39.0, 18.5], [41.0, 17.0], [40.0, 18.0], [43.0, 107.0], [42.0, 58.0], [45.0, 19.0], [44.0, 19.0], [46.0, 21.0], [49.0, 18.0], [48.0, 18.0], [51.0, 19.0], [50.0, 18.5], [53.0, 19.0], [55.0, 18.0], [54.0, 16.5], [57.0, 196.0], [56.0, 20.0], [59.0, 15.0], [58.0, 19.0], [60.0, 11.0], [61.0, 19.0], [63.0, 19.0], [62.0, 18.0], [65.0, 18.0], [64.0, 16.0], [66.0, 19.0], [67.0, 110.0], [68.0, 210.0], [70.0, 19.0], [69.0, 19.0], [71.0, 20.0], [75.0, 19.0], [74.0, 17.5], [73.0, 19.0], [72.0, 22.0], [79.0, 19.0], [76.0, 19.0], [77.0, 22.0], [78.0, 20.0], [80.0, 60.0], [83.0, 20.0], [81.0, 19.0], [85.0, 19.0], [87.0, 21.0], [84.0, 21.0], [86.0, 20.0], [90.0, 20.0], [88.0, 20.0], [91.0, 20.5], [89.0, 22.0], [93.0, 21.0], [95.0, 21.0], [94.0, 20.0], [92.0, 43.5], [98.0, 21.0], [96.0, 21.0], [97.0, 41.0], [99.0, 21.0], [102.0, 39.0], [100.0, 15.0], [101.0, 26.0], [103.0, 21.0], [107.0, 20.5], [105.0, 19.0], [106.0, 22.0], [104.0, 26.0], [109.0, 21.0], [111.0, 23.0], [110.0, 20.0], [108.0, 24.0], [115.0, 26.0], [113.0, 20.0], [112.0, 22.0], [114.0, 25.0], [118.0, 25.0], [117.0, 22.0], [116.0, 24.0], [119.0, 22.0], [120.0, 23.0], [122.0, 22.0], [123.0, 21.0], [121.0, 24.5], [126.0, 24.0], [125.0, 21.0], [124.0, 37.5], [127.0, 22.0], [132.0, 23.0], [129.0, 27.0], [128.0, 22.0], [131.0, 22.0], [135.0, 25.0], [133.0, 25.0], [130.0, 24.0], [134.0, 23.0], [143.0, 39.5], [136.0, 35.0], [142.0, 28.0], [140.0, 25.0], [137.0, 35.0], [141.0, 26.0], [138.0, 23.0], [139.0, 36.5], [148.0, 35.0], [150.0, 24.0], [147.0, 40.0], [149.0, 23.0], [151.0, 24.0], [146.0, 26.0], [145.0, 25.0], [144.0, 26.0], [153.0, 33.0], [155.0, 40.0], [152.0, 37.0], [154.0, 62.0], [159.0, 56.0], [156.0, 26.0], [165.0, 1280.0], [164.0, 1844.5], [167.0, 106.0], [161.0, 55.0], [160.0, 55.5], [177.0, 1105.0], [181.0, 59.0], [216.0, 859.5], [1.0, 23101.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[133.0, 64.0], [135.0, 107.0], [1.0, 0.0], [141.0, 54.0], [137.0, 87.0], [150.0, 43.0], [159.0, 18.0], [181.0, 67.0], [121.0, 47.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 216.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.4, "minX": 1.62703565E12, "maxY": 150.0, "series": [{"data": [[1.62703593E12, 149.9], [1.62703576E12, 149.3], [1.62703627E12, 77.1], [1.6270361E12, 150.0], [1.62703644E12, 130.4], [1.62703567E12, 7.4], [1.62703585E12, 54.5], [1.62703619E12, 7.1], [1.62703602E12, 29.8], [1.62703653E12, 46.1], [1.62703577E12, 136.2], [1.62703611E12, 149.9], [1.62703594E12, 149.8], [1.62703645E12, 149.1], [1.62703628E12, 129.7], [1.62703569E12, 5.6], [1.62703603E12, 54.6], [1.62703586E12, 77.8], [1.6270362E12, 29.4], [1.62703654E12, 20.5], [1.62703625E12, 148.4], [1.62703608E12, 150.0], [1.62703642E12, 128.3], [1.62703565E12, 1.4], [1.62703599E12, 47.1], [1.62703582E12, 22.2], [1.62703617E12, 47.1], [1.627036E12, 22.1], [1.62703651E12, 95.7], [1.62703591E12, 139.2], [1.62703574E12, 149.6], [1.62703609E12, 150.0], [1.62703592E12, 149.9], [1.62703643E12, 146.4], [1.62703626E12, 25.9], [1.62703583E12, 7.9], [1.62703566E12, 5.3], [1.62703601E12, 7.1], [1.62703584E12, 29.9], [1.62703618E12, 22.1], [1.62703652E12, 70.7], [1.62703575E12, 149.1], [1.6270364E12, 28.9], [1.62703597E12, 96.7], [1.6270358E12, 72.0], [1.62703614E12, 121.5], [1.62703649E12, 144.0], [1.62703589E12, 148.2], [1.62703572E12, 80.6], [1.62703623E12, 104.1], [1.62703606E12, 128.8], [1.62703641E12, 104.1], [1.62703624E12, 129.0], [1.62703581E12, 47.1], [1.62703615E12, 96.9], [1.62703598E12, 72.0], [1.62703616E12, 71.9], [1.6270365E12, 120.8], [1.62703573E12, 87.3], [1.62703607E12, 148.3], [1.6270359E12, 137.4], [1.62703595E12, 144.6], [1.62703578E12, 120.9], [1.62703629E12, 149.7], [1.62703612E12, 150.0], [1.62703646E12, 149.5], [1.62703587E12, 103.5], [1.6270357E12, 12.2], [1.62703621E12, 54.5], [1.62703604E12, 79.3], [1.62703655E12, 1.6], [1.62703579E12, 96.4], [1.62703613E12, 144.8], [1.62703596E12, 121.4], [1.62703647E12, 149.4], [1.6270363E12, 129.7], [1.62703648E12, 149.8], [1.62703571E12, 27.9], [1.62703605E12, 104.2], [1.62703588E12, 128.5], [1.62703622E12, 79.3]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62703655E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62703566E12, "maxY": 152.9, "series": [{"data": [[1.62703655E12, 0.1]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.62703593E12, 149.9], [1.62703576E12, 149.1], [1.62703627E12, 66.4], [1.6270361E12, 150.0], [1.62703644E12, 129.6], [1.62703567E12, 2.3], [1.62703585E12, 54.4], [1.62703568E12, 6.1], [1.62703619E12, 7.1], [1.62703602E12, 29.8], [1.62703653E12, 46.9], [1.62703636E12, 4.6], [1.62703577E12, 136.7], [1.62703611E12, 150.0], [1.62703594E12, 149.9], [1.62703645E12, 152.9], [1.62703628E12, 118.2], [1.62703569E12, 6.6], [1.62703603E12, 54.4], [1.62703586E12, 77.8], [1.6270362E12, 29.3], [1.62703654E12, 21.1], [1.62703625E12, 148.2], [1.62703608E12, 150.0], [1.62703642E12, 127.4], [1.62703599E12, 47.1], [1.62703582E12, 22.2], [1.62703617E12, 47.2], [1.627036E12, 22.1], [1.62703651E12, 96.1], [1.62703634E12, 1.4], [1.62703591E12, 139.1], [1.62703574E12, 149.4], [1.62703609E12, 150.0], [1.62703592E12, 149.9], [1.62703643E12, 145.4], [1.62703626E12, 24.2], [1.62703583E12, 7.9], [1.62703566E12, 3.7], [1.62703601E12, 7.2], [1.62703584E12, 29.8], [1.62703635E12, 10.1], [1.62703618E12, 22.1], [1.62703652E12, 71.7], [1.62703575E12, 149.4], [1.6270364E12, 38.9], [1.62703597E12, 96.8], [1.6270358E12, 72.0], [1.62703631E12, 1.2], [1.62703614E12, 121.4], [1.62703649E12, 144.9], [1.62703632E12, 0.6], [1.62703589E12, 148.2], [1.62703572E12, 84.3], [1.62703623E12, 103.9], [1.62703606E12, 128.8], [1.62703641E12, 104.1], [1.62703624E12, 129.1], [1.62703581E12, 47.2], [1.62703615E12, 97.0], [1.62703598E12, 72.1], [1.62703633E12, 0.5], [1.62703616E12, 72.0], [1.6270365E12, 121.4], [1.62703573E12, 86.5], [1.62703607E12, 148.1], [1.6270359E12, 137.4], [1.62703595E12, 144.5], [1.62703578E12, 121.2], [1.62703629E12, 139.5], [1.62703612E12, 150.0], [1.62703646E12, 150.1], [1.62703587E12, 103.4], [1.6270357E12, 13.2], [1.62703621E12, 54.4], [1.62703604E12, 79.3], [1.62703655E12, 1.6], [1.62703579E12, 96.4], [1.62703613E12, 144.9], [1.62703596E12, 121.4], [1.62703647E12, 149.6], [1.6270363E12, 91.7], [1.62703648E12, 149.9], [1.62703571E12, 24.2], [1.62703605E12, 104.2], [1.62703588E12, 128.6], [1.62703639E12, 3.1], [1.62703622E12, 79.3]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6270363E12, 34.7]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62703655E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62703566E12, "maxY": 152.9, "series": [{"data": [[1.62703593E12, 149.9], [1.62703576E12, 149.1], [1.62703627E12, 66.4], [1.6270361E12, 150.0], [1.62703644E12, 129.6], [1.62703567E12, 2.3], [1.62703585E12, 54.4], [1.62703568E12, 6.1], [1.62703619E12, 7.1], [1.62703602E12, 29.8], [1.62703653E12, 46.9], [1.62703636E12, 4.6], [1.62703577E12, 136.7], [1.62703611E12, 150.0], [1.62703594E12, 149.9], [1.62703645E12, 152.9], [1.62703628E12, 118.2], [1.62703569E12, 6.6], [1.62703603E12, 54.4], [1.62703586E12, 77.8], [1.6270362E12, 29.3], [1.62703654E12, 21.1], [1.62703625E12, 148.2], [1.62703608E12, 150.0], [1.62703642E12, 127.4], [1.62703599E12, 47.1], [1.62703582E12, 22.2], [1.62703617E12, 47.2], [1.627036E12, 22.1], [1.62703651E12, 96.1], [1.62703634E12, 1.4], [1.62703591E12, 139.1], [1.62703574E12, 149.4], [1.62703609E12, 150.0], [1.62703592E12, 149.9], [1.62703643E12, 145.4], [1.62703626E12, 24.2], [1.62703583E12, 7.9], [1.62703566E12, 3.7], [1.62703601E12, 7.2], [1.62703584E12, 29.8], [1.62703635E12, 10.1], [1.62703618E12, 22.1], [1.62703652E12, 71.7], [1.62703575E12, 149.4], [1.6270364E12, 38.9], [1.62703597E12, 96.8], [1.6270358E12, 72.0], [1.62703631E12, 1.2], [1.62703614E12, 121.4], [1.62703649E12, 144.9], [1.62703632E12, 0.6], [1.62703589E12, 148.2], [1.62703572E12, 84.3], [1.62703623E12, 103.9], [1.62703606E12, 128.8], [1.62703641E12, 104.1], [1.62703624E12, 129.1], [1.62703581E12, 47.2], [1.62703615E12, 97.0], [1.62703598E12, 72.1], [1.62703633E12, 0.5], [1.62703616E12, 72.0], [1.6270365E12, 121.4], [1.62703573E12, 86.5], [1.62703607E12, 148.1], [1.6270359E12, 137.4], [1.62703595E12, 144.5], [1.62703578E12, 121.2], [1.62703629E12, 139.5], [1.62703612E12, 150.0], [1.62703646E12, 150.1], [1.62703587E12, 103.4], [1.6270357E12, 13.2], [1.62703621E12, 54.4], [1.62703604E12, 79.3], [1.62703655E12, 1.6], [1.62703579E12, 96.4], [1.62703613E12, 144.9], [1.62703596E12, 121.4], [1.62703647E12, 149.6], [1.6270363E12, 91.7], [1.62703648E12, 149.9], [1.62703571E12, 24.2], [1.62703605E12, 104.2], [1.62703588E12, 128.6], [1.62703639E12, 3.1], [1.62703622E12, 79.3]], "isOverall": false, "label": "Sunstar Search-success", "isController": false}, {"data": [[1.6270363E12, 34.7], [1.62703655E12, 0.1]], "isOverall": false, "label": "Sunstar Search-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62703655E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62703566E12, "maxY": 152.9, "series": [{"data": [[1.62703593E12, 149.9], [1.62703576E12, 149.1], [1.62703627E12, 66.4], [1.6270361E12, 150.0], [1.62703644E12, 129.6], [1.62703567E12, 2.3], [1.62703585E12, 54.4], [1.62703568E12, 6.1], [1.62703619E12, 7.1], [1.62703602E12, 29.8], [1.62703653E12, 46.9], [1.62703636E12, 4.6], [1.62703577E12, 136.7], [1.62703611E12, 150.0], [1.62703594E12, 149.9], [1.62703645E12, 152.9], [1.62703628E12, 118.2], [1.62703569E12, 6.6], [1.62703603E12, 54.4], [1.62703586E12, 77.8], [1.6270362E12, 29.3], [1.62703654E12, 21.1], [1.62703625E12, 148.2], [1.62703608E12, 150.0], [1.62703642E12, 127.4], [1.62703599E12, 47.1], [1.62703582E12, 22.2], [1.62703617E12, 47.2], [1.627036E12, 22.1], [1.62703651E12, 96.1], [1.62703634E12, 1.4], [1.62703591E12, 139.1], [1.62703574E12, 149.4], [1.62703609E12, 150.0], [1.62703592E12, 149.9], [1.62703643E12, 145.4], [1.62703626E12, 24.2], [1.62703583E12, 7.9], [1.62703566E12, 3.7], [1.62703601E12, 7.2], [1.62703584E12, 29.8], [1.62703635E12, 10.1], [1.62703618E12, 22.1], [1.62703652E12, 71.7], [1.62703575E12, 149.4], [1.6270364E12, 38.9], [1.62703597E12, 96.8], [1.6270358E12, 72.0], [1.62703631E12, 1.2], [1.62703614E12, 121.4], [1.62703649E12, 144.9], [1.62703632E12, 0.6], [1.62703589E12, 148.2], [1.62703572E12, 84.3], [1.62703623E12, 103.9], [1.62703606E12, 128.8], [1.62703641E12, 104.1], [1.62703624E12, 129.1], [1.62703581E12, 47.2], [1.62703615E12, 97.0], [1.62703598E12, 72.1], [1.62703633E12, 0.5], [1.62703616E12, 72.0], [1.6270365E12, 121.4], [1.62703573E12, 86.5], [1.62703607E12, 148.1], [1.6270359E12, 137.4], [1.62703595E12, 144.5], [1.62703578E12, 121.2], [1.62703629E12, 139.5], [1.62703612E12, 150.0], [1.62703646E12, 150.1], [1.62703587E12, 103.4], [1.6270357E12, 13.2], [1.62703621E12, 54.4], [1.62703604E12, 79.3], [1.62703655E12, 1.6], [1.62703579E12, 96.4], [1.62703613E12, 144.9], [1.62703596E12, 121.4], [1.62703647E12, 149.6], [1.6270363E12, 91.7], [1.62703648E12, 149.9], [1.62703571E12, 24.2], [1.62703605E12, 104.2], [1.62703588E12, 128.6], [1.62703639E12, 3.1], [1.62703622E12, 79.3]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6270363E12, 34.7], [1.62703655E12, 0.1]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62703655E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

