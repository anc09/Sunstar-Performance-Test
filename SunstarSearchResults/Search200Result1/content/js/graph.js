/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "maxY": 186496.0, "series": [{"data": [[0.0, 10.0], [0.1, 11.0], [0.2, 12.0], [0.3, 12.0], [0.4, 12.0], [0.5, 12.0], [0.6, 12.0], [0.7, 12.0], [0.8, 12.0], [0.9, 13.0], [1.0, 13.0], [1.1, 13.0], [1.2, 13.0], [1.3, 13.0], [1.4, 13.0], [1.5, 13.0], [1.6, 14.0], [1.7, 14.0], [1.8, 14.0], [1.9, 14.0], [2.0, 14.0], [2.1, 15.0], [2.2, 15.0], [2.3, 15.0], [2.4, 15.0], [2.5, 15.0], [2.6, 15.0], [2.7, 15.0], [2.8, 16.0], [2.9, 16.0], [3.0, 16.0], [3.1, 16.0], [3.2, 16.0], [3.3, 16.0], [3.4, 16.0], [3.5, 17.0], [3.6, 17.0], [3.7, 17.0], [3.8, 17.0], [3.9, 17.0], [4.0, 18.0], [4.1, 18.0], [4.2, 18.0], [4.3, 19.0], [4.4, 19.0], [4.5, 19.0], [4.6, 20.0], [4.7, 20.0], [4.8, 20.0], [4.9, 21.0], [5.0, 21.0], [5.1, 21.0], [5.2, 22.0], [5.3, 22.0], [5.4, 22.0], [5.5, 22.0], [5.6, 23.0], [5.7, 23.0], [5.8, 23.0], [5.9, 23.0], [6.0, 23.0], [6.1, 24.0], [6.2, 24.0], [6.3, 24.0], [6.4, 24.0], [6.5, 24.0], [6.6, 24.0], [6.7, 25.0], [6.8, 25.0], [6.9, 25.0], [7.0, 25.0], [7.1, 25.0], [7.2, 25.0], [7.3, 25.0], [7.4, 25.0], [7.5, 26.0], [7.6, 26.0], [7.7, 26.0], [7.8, 26.0], [7.9, 26.0], [8.0, 26.0], [8.1, 26.0], [8.2, 27.0], [8.3, 27.0], [8.4, 27.0], [8.5, 27.0], [8.6, 27.0], [8.7, 27.0], [8.8, 28.0], [8.9, 28.0], [9.0, 28.0], [9.1, 28.0], [9.2, 28.0], [9.3, 28.0], [9.4, 29.0], [9.5, 29.0], [9.6, 29.0], [9.7, 29.0], [9.8, 29.0], [9.9, 29.0], [10.0, 30.0], [10.1, 30.0], [10.2, 30.0], [10.3, 30.0], [10.4, 30.0], [10.5, 31.0], [10.6, 31.0], [10.7, 31.0], [10.8, 31.0], [10.9, 32.0], [11.0, 32.0], [11.1, 32.0], [11.2, 32.0], [11.3, 33.0], [11.4, 33.0], [11.5, 33.0], [11.6, 33.0], [11.7, 34.0], [11.8, 34.0], [11.9, 34.0], [12.0, 34.0], [12.1, 35.0], [12.2, 35.0], [12.3, 35.0], [12.4, 36.0], [12.5, 36.0], [12.6, 36.0], [12.7, 37.0], [12.8, 37.0], [12.9, 37.0], [13.0, 37.0], [13.1, 38.0], [13.2, 38.0], [13.3, 39.0], [13.4, 39.0], [13.5, 39.0], [13.6, 40.0], [13.7, 40.0], [13.8, 40.0], [13.9, 41.0], [14.0, 41.0], [14.1, 42.0], [14.2, 42.0], [14.3, 43.0], [14.4, 43.0], [14.5, 43.0], [14.6, 44.0], [14.7, 44.0], [14.8, 45.0], [14.9, 45.0], [15.0, 45.0], [15.1, 46.0], [15.2, 46.0], [15.3, 46.0], [15.4, 47.0], [15.5, 47.0], [15.6, 47.0], [15.7, 48.0], [15.8, 48.0], [15.9, 48.0], [16.0, 48.0], [16.1, 49.0], [16.2, 49.0], [16.3, 49.0], [16.4, 49.0], [16.5, 49.0], [16.6, 50.0], [16.7, 50.0], [16.8, 50.0], [16.9, 50.0], [17.0, 50.0], [17.1, 51.0], [17.2, 51.0], [17.3, 51.0], [17.4, 51.0], [17.5, 52.0], [17.6, 52.0], [17.7, 52.0], [17.8, 52.0], [17.9, 52.0], [18.0, 53.0], [18.1, 53.0], [18.2, 53.0], [18.3, 53.0], [18.4, 54.0], [18.5, 54.0], [18.6, 54.0], [18.7, 54.0], [18.8, 54.0], [18.9, 55.0], [19.0, 55.0], [19.1, 55.0], [19.2, 55.0], [19.3, 56.0], [19.4, 56.0], [19.5, 56.0], [19.6, 56.0], [19.7, 57.0], [19.8, 57.0], [19.9, 57.0], [20.0, 57.0], [20.1, 57.0], [20.2, 58.0], [20.3, 58.0], [20.4, 58.0], [20.5, 58.0], [20.6, 59.0], [20.7, 59.0], [20.8, 59.0], [20.9, 60.0], [21.0, 60.0], [21.1, 60.0], [21.2, 60.0], [21.3, 61.0], [21.4, 61.0], [21.5, 61.0], [21.6, 62.0], [21.7, 62.0], [21.8, 62.0], [21.9, 63.0], [22.0, 63.0], [22.1, 63.0], [22.2, 63.0], [22.3, 64.0], [22.4, 64.0], [22.5, 64.0], [22.6, 65.0], [22.7, 65.0], [22.8, 65.0], [22.9, 66.0], [23.0, 66.0], [23.1, 66.0], [23.2, 67.0], [23.3, 67.0], [23.4, 67.0], [23.5, 68.0], [23.6, 68.0], [23.7, 68.0], [23.8, 69.0], [23.9, 69.0], [24.0, 70.0], [24.1, 70.0], [24.2, 70.0], [24.3, 71.0], [24.4, 71.0], [24.5, 71.0], [24.6, 72.0], [24.7, 72.0], [24.8, 72.0], [24.9, 73.0], [25.0, 73.0], [25.1, 74.0], [25.2, 74.0], [25.3, 74.0], [25.4, 75.0], [25.5, 75.0], [25.6, 76.0], [25.7, 76.0], [25.8, 76.0], [25.9, 77.0], [26.0, 77.0], [26.1, 78.0], [26.2, 78.0], [26.3, 79.0], [26.4, 79.0], [26.5, 80.0], [26.6, 80.0], [26.7, 80.0], [26.8, 81.0], [26.9, 81.0], [27.0, 82.0], [27.1, 83.0], [27.2, 83.0], [27.3, 84.0], [27.4, 84.0], [27.5, 85.0], [27.6, 85.0], [27.7, 86.0], [27.8, 87.0], [27.9, 87.0], [28.0, 88.0], [28.1, 88.0], [28.2, 89.0], [28.3, 89.0], [28.4, 90.0], [28.5, 91.0], [28.6, 91.0], [28.7, 92.0], [28.8, 93.0], [28.9, 93.0], [29.0, 94.0], [29.1, 95.0], [29.2, 96.0], [29.3, 96.0], [29.4, 97.0], [29.5, 98.0], [29.6, 99.0], [29.7, 100.0], [29.8, 100.0], [29.9, 101.0], [30.0, 102.0], [30.1, 103.0], [30.2, 104.0], [30.3, 105.0], [30.4, 105.0], [30.5, 106.0], [30.6, 107.0], [30.7, 108.0], [30.8, 109.0], [30.9, 110.0], [31.0, 112.0], [31.1, 112.0], [31.2, 113.0], [31.3, 114.0], [31.4, 115.0], [31.5, 116.0], [31.6, 117.0], [31.7, 118.0], [31.8, 119.0], [31.9, 120.0], [32.0, 122.0], [32.1, 123.0], [32.2, 124.0], [32.3, 125.0], [32.4, 127.0], [32.5, 128.0], [32.6, 129.0], [32.7, 130.0], [32.8, 131.0], [32.9, 133.0], [33.0, 135.0], [33.1, 136.0], [33.2, 138.0], [33.3, 140.0], [33.4, 141.0], [33.5, 142.0], [33.6, 144.0], [33.7, 145.0], [33.8, 147.0], [33.9, 148.0], [34.0, 150.0], [34.1, 152.0], [34.2, 153.0], [34.3, 155.0], [34.4, 157.0], [34.5, 159.0], [34.6, 161.0], [34.7, 163.0], [34.8, 166.0], [34.9, 169.0], [35.0, 171.0], [35.1, 174.0], [35.2, 176.0], [35.3, 178.0], [35.4, 181.0], [35.5, 183.0], [35.6, 185.0], [35.7, 188.0], [35.8, 191.0], [35.9, 194.0], [36.0, 197.0], [36.1, 200.0], [36.2, 204.0], [36.3, 207.0], [36.4, 209.0], [36.5, 212.0], [36.6, 215.0], [36.7, 218.0], [36.8, 220.0], [36.9, 222.0], [37.0, 225.0], [37.1, 228.0], [37.2, 231.0], [37.3, 234.0], [37.4, 236.0], [37.5, 241.0], [37.6, 244.0], [37.7, 248.0], [37.8, 252.0], [37.9, 255.0], [38.0, 259.0], [38.1, 262.0], [38.2, 266.0], [38.3, 268.0], [38.4, 272.0], [38.5, 276.0], [38.6, 279.0], [38.7, 284.0], [38.8, 289.0], [38.9, 293.0], [39.0, 298.0], [39.1, 301.0], [39.2, 305.0], [39.3, 308.0], [39.4, 312.0], [39.5, 315.0], [39.6, 319.0], [39.7, 323.0], [39.8, 327.0], [39.9, 331.0], [40.0, 338.0], [40.1, 343.0], [40.2, 347.0], [40.3, 352.0], [40.4, 357.0], [40.5, 361.0], [40.6, 367.0], [40.7, 372.0], [40.8, 377.0], [40.9, 383.0], [41.0, 387.0], [41.1, 391.0], [41.2, 395.0], [41.3, 399.0], [41.4, 404.0], [41.5, 408.0], [41.6, 411.0], [41.7, 416.0], [41.8, 421.0], [41.9, 427.0], [42.0, 431.0], [42.1, 437.0], [42.2, 443.0], [42.3, 447.0], [42.4, 451.0], [42.5, 455.0], [42.6, 459.0], [42.7, 463.0], [42.8, 467.0], [42.9, 472.0], [43.0, 476.0], [43.1, 479.0], [43.2, 482.0], [43.3, 486.0], [43.4, 491.0], [43.5, 495.0], [43.6, 500.0], [43.7, 505.0], [43.8, 511.0], [43.9, 517.0], [44.0, 520.0], [44.1, 525.0], [44.2, 529.0], [44.3, 534.0], [44.4, 539.0], [44.5, 543.0], [44.6, 548.0], [44.7, 553.0], [44.8, 561.0], [44.9, 567.0], [45.0, 571.0], [45.1, 575.0], [45.2, 580.0], [45.3, 586.0], [45.4, 591.0], [45.5, 596.0], [45.6, 600.0], [45.7, 606.0], [45.8, 612.0], [45.9, 617.0], [46.0, 623.0], [46.1, 629.0], [46.2, 635.0], [46.3, 643.0], [46.4, 649.0], [46.5, 656.0], [46.6, 661.0], [46.7, 666.0], [46.8, 673.0], [46.9, 681.0], [47.0, 690.0], [47.1, 695.0], [47.2, 702.0], [47.3, 710.0], [47.4, 719.0], [47.5, 727.0], [47.6, 735.0], [47.7, 743.0], [47.8, 752.0], [47.9, 761.0], [48.0, 769.0], [48.1, 779.0], [48.2, 788.0], [48.3, 796.0], [48.4, 804.0], [48.5, 811.0], [48.6, 820.0], [48.7, 827.0], [48.8, 835.0], [48.9, 843.0], [49.0, 850.0], [49.1, 857.0], [49.2, 864.0], [49.3, 868.0], [49.4, 875.0], [49.5, 882.0], [49.6, 888.0], [49.7, 895.0], [49.8, 902.0], [49.9, 910.0], [50.0, 916.0], [50.1, 923.0], [50.2, 932.0], [50.3, 937.0], [50.4, 943.0], [50.5, 948.0], [50.6, 953.0], [50.7, 956.0], [50.8, 961.0], [50.9, 964.0], [51.0, 970.0], [51.1, 976.0], [51.2, 982.0], [51.3, 989.0], [51.4, 996.0], [51.5, 1002.0], [51.6, 1010.0], [51.7, 1015.0], [51.8, 1021.0], [51.9, 1028.0], [52.0, 1035.0], [52.1, 1043.0], [52.2, 1048.0], [52.3, 1054.0], [52.4, 1059.0], [52.5, 1064.0], [52.6, 1070.0], [52.7, 1075.0], [52.8, 1080.0], [52.9, 1086.0], [53.0, 1095.0], [53.1, 1101.0], [53.2, 1107.0], [53.3, 1115.0], [53.4, 1121.0], [53.5, 1127.0], [53.6, 1133.0], [53.7, 1140.0], [53.8, 1147.0], [53.9, 1153.0], [54.0, 1159.0], [54.1, 1167.0], [54.2, 1171.0], [54.3, 1177.0], [54.4, 1184.0], [54.5, 1190.0], [54.6, 1197.0], [54.7, 1203.0], [54.8, 1209.0], [54.9, 1215.0], [55.0, 1220.0], [55.1, 1225.0], [55.2, 1231.0], [55.3, 1236.0], [55.4, 1241.0], [55.5, 1249.0], [55.6, 1256.0], [55.7, 1261.0], [55.8, 1269.0], [55.9, 1275.0], [56.0, 1280.0], [56.1, 1285.0], [56.2, 1292.0], [56.3, 1297.0], [56.4, 1304.0], [56.5, 1309.0], [56.6, 1317.0], [56.7, 1322.0], [56.8, 1327.0], [56.9, 1332.0], [57.0, 1337.0], [57.1, 1343.0], [57.2, 1348.0], [57.3, 1353.0], [57.4, 1358.0], [57.5, 1365.0], [57.6, 1370.0], [57.7, 1375.0], [57.8, 1381.0], [57.9, 1387.0], [58.0, 1393.0], [58.1, 1397.0], [58.2, 1402.0], [58.3, 1409.0], [58.4, 1415.0], [58.5, 1422.0], [58.6, 1429.0], [58.7, 1435.0], [58.8, 1441.0], [58.9, 1447.0], [59.0, 1455.0], [59.1, 1461.0], [59.2, 1468.0], [59.3, 1476.0], [59.4, 1482.0], [59.5, 1489.0], [59.6, 1495.0], [59.7, 1501.0], [59.8, 1507.0], [59.9, 1514.0], [60.0, 1522.0], [60.1, 1530.0], [60.2, 1535.0], [60.3, 1545.0], [60.4, 1551.0], [60.5, 1560.0], [60.6, 1569.0], [60.7, 1575.0], [60.8, 1581.0], [60.9, 1589.0], [61.0, 1597.0], [61.1, 1603.0], [61.2, 1608.0], [61.3, 1615.0], [61.4, 1623.0], [61.5, 1629.0], [61.6, 1635.0], [61.7, 1641.0], [61.8, 1647.0], [61.9, 1653.0], [62.0, 1661.0], [62.1, 1666.0], [62.2, 1672.0], [62.3, 1679.0], [62.4, 1686.0], [62.5, 1692.0], [62.6, 1698.0], [62.7, 1706.0], [62.8, 1713.0], [62.9, 1718.0], [63.0, 1724.0], [63.1, 1730.0], [63.2, 1735.0], [63.3, 1742.0], [63.4, 1751.0], [63.5, 1759.0], [63.6, 1765.0], [63.7, 1773.0], [63.8, 1780.0], [63.9, 1788.0], [64.0, 1795.0], [64.1, 1802.0], [64.2, 1809.0], [64.3, 1816.0], [64.4, 1825.0], [64.5, 1831.0], [64.6, 1839.0], [64.7, 1846.0], [64.8, 1854.0], [64.9, 1861.0], [65.0, 1866.0], [65.1, 1875.0], [65.2, 1881.0], [65.3, 1888.0], [65.4, 1896.0], [65.5, 1902.0], [65.6, 1909.0], [65.7, 1917.0], [65.8, 1924.0], [65.9, 1932.0], [66.0, 1940.0], [66.1, 1947.0], [66.2, 1955.0], [66.3, 1964.0], [66.4, 1970.0], [66.5, 1979.0], [66.6, 1987.0], [66.7, 1995.0], [66.8, 2003.0], [66.9, 2011.0], [67.0, 2018.0], [67.1, 2024.0], [67.2, 2034.0], [67.3, 2041.0], [67.4, 2049.0], [67.5, 2056.0], [67.6, 2067.0], [67.7, 2076.0], [67.8, 2084.0], [67.9, 2091.0], [68.0, 2101.0], [68.1, 2109.0], [68.2, 2115.0], [68.3, 2125.0], [68.4, 2136.0], [68.5, 2145.0], [68.6, 2155.0], [68.7, 2164.0], [68.8, 2173.0], [68.9, 2182.0], [69.0, 2193.0], [69.1, 2205.0], [69.2, 2216.0], [69.3, 2230.0], [69.4, 2241.0], [69.5, 2252.0], [69.6, 2261.0], [69.7, 2267.0], [69.8, 2274.0], [69.9, 2283.0], [70.0, 2290.0], [70.1, 2298.0], [70.2, 2308.0], [70.3, 2317.0], [70.4, 2328.0], [70.5, 2339.0], [70.6, 2348.0], [70.7, 2357.0], [70.8, 2367.0], [70.9, 2383.0], [71.0, 2393.0], [71.1, 2402.0], [71.2, 2410.0], [71.3, 2419.0], [71.4, 2428.0], [71.5, 2436.0], [71.6, 2447.0], [71.7, 2455.0], [71.8, 2466.0], [71.9, 2477.0], [72.0, 2485.0], [72.1, 2494.0], [72.2, 2505.0], [72.3, 2514.0], [72.4, 2522.0], [72.5, 2531.0], [72.6, 2546.0], [72.7, 2558.0], [72.8, 2570.0], [72.9, 2580.0], [73.0, 2591.0], [73.1, 2601.0], [73.2, 2610.0], [73.3, 2618.0], [73.4, 2631.0], [73.5, 2640.0], [73.6, 2650.0], [73.7, 2662.0], [73.8, 2673.0], [73.9, 2684.0], [74.0, 2692.0], [74.1, 2702.0], [74.2, 2711.0], [74.3, 2723.0], [74.4, 2736.0], [74.5, 2743.0], [74.6, 2751.0], [74.7, 2760.0], [74.8, 2768.0], [74.9, 2779.0], [75.0, 2788.0], [75.1, 2796.0], [75.2, 2804.0], [75.3, 2812.0], [75.4, 2823.0], [75.5, 2832.0], [75.6, 2841.0], [75.7, 2854.0], [75.8, 2869.0], [75.9, 2883.0], [76.0, 2899.0], [76.1, 2912.0], [76.2, 2927.0], [76.3, 2943.0], [76.4, 2958.0], [76.5, 2974.0], [76.6, 2991.0], [76.7, 3005.0], [76.8, 3025.0], [76.9, 3037.0], [77.0, 3051.0], [77.1, 3062.0], [77.2, 3073.0], [77.3, 3084.0], [77.4, 3096.0], [77.5, 3104.0], [77.6, 3113.0], [77.7, 3125.0], [77.8, 3137.0], [77.9, 3148.0], [78.0, 3160.0], [78.1, 3173.0], [78.2, 3191.0], [78.3, 3206.0], [78.4, 3221.0], [78.5, 3235.0], [78.6, 3247.0], [78.7, 3258.0], [78.8, 3278.0], [78.9, 3291.0], [79.0, 3308.0], [79.1, 3319.0], [79.2, 3334.0], [79.3, 3345.0], [79.4, 3359.0], [79.5, 3373.0], [79.6, 3392.0], [79.7, 3406.0], [79.8, 3419.0], [79.9, 3433.0], [80.0, 3448.0], [80.1, 3461.0], [80.2, 3472.0], [80.3, 3486.0], [80.4, 3503.0], [80.5, 3518.0], [80.6, 3531.0], [80.7, 3547.0], [80.8, 3559.0], [80.9, 3575.0], [81.0, 3594.0], [81.1, 3614.0], [81.2, 3632.0], [81.3, 3648.0], [81.4, 3668.0], [81.5, 3684.0], [81.6, 3701.0], [81.7, 3720.0], [81.8, 3741.0], [81.9, 3758.0], [82.0, 3775.0], [82.1, 3787.0], [82.2, 3803.0], [82.3, 3822.0], [82.4, 3839.0], [82.5, 3857.0], [82.6, 3877.0], [82.7, 3890.0], [82.8, 3908.0], [82.9, 3923.0], [83.0, 3939.0], [83.1, 3954.0], [83.2, 3971.0], [83.3, 3989.0], [83.4, 4003.0], [83.5, 4019.0], [83.6, 4038.0], [83.7, 4059.0], [83.8, 4075.0], [83.9, 4092.0], [84.0, 4109.0], [84.1, 4125.0], [84.2, 4141.0], [84.3, 4156.0], [84.4, 4172.0], [84.5, 4191.0], [84.6, 4219.0], [84.7, 4241.0], [84.8, 4268.0], [84.9, 4287.0], [85.0, 4309.0], [85.1, 4329.0], [85.2, 4349.0], [85.3, 4372.0], [85.4, 4394.0], [85.5, 4412.0], [85.6, 4432.0], [85.7, 4450.0], [85.8, 4470.0], [85.9, 4492.0], [86.0, 4516.0], [86.1, 4547.0], [86.2, 4577.0], [86.3, 4597.0], [86.4, 4617.0], [86.5, 4646.0], [86.6, 4667.0], [86.7, 4693.0], [86.8, 4721.0], [86.9, 4756.0], [87.0, 4785.0], [87.1, 4810.0], [87.2, 4839.0], [87.3, 4860.0], [87.4, 4891.0], [87.5, 4920.0], [87.6, 4943.0], [87.7, 4989.0], [87.8, 5018.0], [87.9, 5046.0], [88.0, 5068.0], [88.1, 5095.0], [88.2, 5126.0], [88.3, 5156.0], [88.4, 5200.0], [88.5, 5232.0], [88.6, 5260.0], [88.7, 5291.0], [88.8, 5318.0], [88.9, 5335.0], [89.0, 5359.0], [89.1, 5380.0], [89.2, 5411.0], [89.3, 5450.0], [89.4, 5477.0], [89.5, 5516.0], [89.6, 5539.0], [89.7, 5581.0], [89.8, 5613.0], [89.9, 5648.0], [90.0, 5678.0], [90.1, 5710.0], [90.2, 5743.0], [90.3, 5770.0], [90.4, 5793.0], [90.5, 5820.0], [90.6, 5846.0], [90.7, 5872.0], [90.8, 5899.0], [90.9, 5919.0], [91.0, 5943.0], [91.1, 5976.0], [91.2, 5999.0], [91.3, 6033.0], [91.4, 6060.0], [91.5, 6086.0], [91.6, 6109.0], [91.7, 6146.0], [91.8, 6176.0], [91.9, 6218.0], [92.0, 6260.0], [92.1, 6293.0], [92.2, 6318.0], [92.3, 6366.0], [92.4, 6407.0], [92.5, 6438.0], [92.6, 6474.0], [92.7, 6504.0], [92.8, 6537.0], [92.9, 6569.0], [93.0, 6604.0], [93.1, 6644.0], [93.2, 6689.0], [93.3, 6728.0], [93.4, 6760.0], [93.5, 6793.0], [93.6, 6823.0], [93.7, 6852.0], [93.8, 6880.0], [93.9, 6911.0], [94.0, 6944.0], [94.1, 6971.0], [94.2, 6998.0], [94.3, 7033.0], [94.4, 7067.0], [94.5, 7100.0], [94.6, 7134.0], [94.7, 7176.0], [94.8, 7227.0], [94.9, 7277.0], [95.0, 7309.0], [95.1, 7347.0], [95.2, 7377.0], [95.3, 7413.0], [95.4, 7461.0], [95.5, 7502.0], [95.6, 7581.0], [95.7, 7629.0], [95.8, 7675.0], [95.9, 7736.0], [96.0, 7788.0], [96.1, 7838.0], [96.2, 7896.0], [96.3, 7937.0], [96.4, 7981.0], [96.5, 8045.0], [96.6, 8097.0], [96.7, 8171.0], [96.8, 8238.0], [96.9, 8303.0], [97.0, 8354.0], [97.1, 8418.0], [97.2, 8471.0], [97.3, 8537.0], [97.4, 8594.0], [97.5, 8645.0], [97.6, 8688.0], [97.7, 8753.0], [97.8, 8834.0], [97.9, 8905.0], [98.0, 8978.0], [98.1, 9068.0], [98.2, 9217.0], [98.3, 9307.0], [98.4, 9424.0], [98.5, 9526.0], [98.6, 9676.0], [98.7, 9855.0], [98.8, 10049.0], [98.9, 10521.0], [99.0, 10869.0], [99.1, 11251.0], [99.2, 11885.0], [99.3, 12244.0], [99.4, 13830.0], [99.5, 60041.0], [99.6, 60115.0], [99.7, 60208.0], [99.8, 60792.0], [99.9, 180070.0]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 11465.0, "series": [{"data": [[0.0, 11465.0], [180000.0, 26.0], [186400.0, 1.0], [180100.0, 13.0], [185700.0, 1.0], [121100.0, 1.0], [182600.0, 1.0], [100.0, 2469.0], [182700.0, 1.0], [200.0, 1142.0], [60100.0, 44.0], [60300.0, 16.0], [60700.0, 1.0], [62100.0, 1.0], [62300.0, 2.0], [64900.0, 1.0], [300.0, 871.0], [400.0, 885.0], [120200.0, 1.0], [120600.0, 1.0], [500.0, 767.0], [600.0, 611.0], [700.0, 457.0], [800.0, 546.0], [900.0, 651.0], [1000.0, 631.0], [1100.0, 602.0], [1200.0, 654.0], [1300.0, 703.0], [1400.0, 588.0], [1500.0, 519.0], [1600.0, 617.0], [1700.0, 556.0], [1800.0, 537.0], [1900.0, 506.0], [2000.0, 471.0], [2100.0, 416.0], [2200.0, 411.0], [2300.0, 366.0], [2400.0, 420.0], [2500.0, 358.0], [2600.0, 383.0], [2700.0, 412.0], [2800.0, 331.0], [180500.0, 1.0], [2900.0, 257.0], [3000.0, 300.0], [3100.0, 312.0], [3200.0, 267.0], [3300.0, 272.0], [3400.0, 280.0], [3500.0, 251.0], [3700.0, 228.0], [3600.0, 219.0], [3800.0, 221.0], [3900.0, 241.0], [4000.0, 220.0], [4100.0, 228.0], [4200.0, 156.0], [4300.0, 194.0], [67700.0, 1.0], [4400.0, 191.0], [4600.0, 159.0], [4500.0, 147.0], [4800.0, 145.0], [4700.0, 122.0], [4900.0, 122.0], [5100.0, 113.0], [5000.0, 142.0], [5300.0, 163.0], [5200.0, 132.0], [5500.0, 119.0], [5600.0, 126.0], [5400.0, 111.0], [5700.0, 130.0], [5800.0, 146.0], [5900.0, 155.0], [6000.0, 140.0], [6100.0, 114.0], [6300.0, 97.0], [6200.0, 101.0], [6400.0, 120.0], [6500.0, 118.0], [6600.0, 93.0], [6700.0, 108.0], [6800.0, 136.0], [6900.0, 132.0], [7000.0, 114.0], [7100.0, 96.0], [7300.0, 109.0], [7200.0, 90.0], [7400.0, 91.0], [120100.0, 10.0], [7600.0, 75.0], [7500.0, 57.0], [7700.0, 70.0], [7800.0, 73.0], [7900.0, 83.0], [8000.0, 68.0], [8100.0, 59.0], [8600.0, 85.0], [8400.0, 69.0], [8300.0, 70.0], [8500.0, 61.0], [8700.0, 52.0], [8200.0, 52.0], [9200.0, 42.0], [8800.0, 50.0], [8900.0, 49.0], [9000.0, 41.0], [9100.0, 22.0], [9300.0, 35.0], [9700.0, 20.0], [9600.0, 29.0], [9400.0, 37.0], [9500.0, 29.0], [9800.0, 19.0], [9900.0, 24.0], [10100.0, 10.0], [10200.0, 8.0], [10000.0, 7.0], [10500.0, 13.0], [10600.0, 8.0], [10700.0, 12.0], [10400.0, 8.0], [10300.0, 7.0], [11000.0, 7.0], [10800.0, 12.0], [10900.0, 12.0], [11100.0, 10.0], [11200.0, 9.0], [181400.0, 1.0], [11400.0, 2.0], [11300.0, 13.0], [11500.0, 5.0], [11700.0, 9.0], [11600.0, 5.0], [11900.0, 11.0], [12100.0, 11.0], [12000.0, 14.0], [12200.0, 6.0], [11800.0, 3.0], [12300.0, 2.0], [12600.0, 3.0], [12400.0, 4.0], [12700.0, 2.0], [13100.0, 5.0], [12800.0, 3.0], [12900.0, 5.0], [13000.0, 3.0], [13200.0, 2.0], [13300.0, 1.0], [13800.0, 2.0], [13500.0, 2.0], [13400.0, 1.0], [13900.0, 2.0], [14100.0, 1.0], [14000.0, 1.0], [14300.0, 1.0], [14700.0, 2.0], [14800.0, 2.0], [14400.0, 2.0], [14600.0, 1.0], [14900.0, 3.0], [15000.0, 2.0], [15200.0, 1.0], [15300.0, 1.0], [15700.0, 1.0], [15900.0, 2.0], [16100.0, 2.0], [16000.0, 1.0], [16400.0, 1.0], [17300.0, 1.0], [17500.0, 1.0], [20400.0, 1.0], [182300.0, 1.0], [186300.0, 1.0], [60000.0, 36.0], [60200.0, 22.0], [60400.0, 5.0], [60800.0, 1.0], [61400.0, 1.0], [63400.0, 1.0], [61800.0, 1.0], [62400.0, 1.0], [120000.0, 6.0], [122400.0, 1.0]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 186400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 6209.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 16839.0, "series": [{"data": [[0.0, 16839.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 6209.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 15563.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.62921014E12, "maxY": 1000.0, "series": [{"data": [[1.62921084E12, 14.102601156069364], [1.62921067E12, 39.632075471698165], [1.6292111E12, 3.5], [1.62921093E12, 1000.0], [1.62921076E12, 21.055031446540905], [1.62921026E12, 7.623188405797101], [1.62921085E12, 18.36320191158901], [1.62921068E12, 111.36231884057982], [1.62921051E12, 22.0], [1.62921111E12, 2.0], [1.62921094E12, 998.2255828607434], [1.62921077E12, 18.0], [1.62921103E12, 7.0], [1.62921086E12, 48.12746858168756], [1.62921069E12, 199.7602230483274], [1.62921027E12, 4.088888888888891], [1.62921112E12, 1.0], [1.62921095E12, 469.6903719912473], [1.62921078E12, 18.0], [1.62921044E12, 4.0], [1.62921087E12, 190.03430656934322], [1.6292107E12, 249.52433173406422], [1.62921096E12, 10.0], [1.62921079E12, 18.0], [1.62921062E12, 139.0], [1.62921045E12, 7.0], [1.62921088E12, 393.33639947437564], [1.62921071E12, 376.0607697501691], [1.6292108E12, 18.0], [1.62921063E12, 76.31135531135526], [1.6292102E12, 19.0], [1.62921106E12, 6.0], [1.62921089E12, 513.9093425605537], [1.62921072E12, 470.9429296131902], [1.62921081E12, 10.339534883720928], [1.62921064E12, 24.485436893203893], [1.6292109E12, 745.591007976795], [1.62921073E12, 533.3210300429178], [1.62921014E12, 20.0], [1.62921065E12, 24.0], [1.62921108E12, 5.0], [1.62921091E12, 996.7179269328808], [1.62921074E12, 810.9261992619927], [1.62921057E12, 335.9370629370629], [1.629211E12, 8.5], [1.62921083E12, 20.823747680890527], [1.62921066E12, 25.027818448023435], [1.62921092E12, 1000.0], [1.62921075E12, 142.18206896551726], [1.62921058E12, 472.38214783821485]], "isOverall": false, "label": "bzm - Concurrency Thread Group-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62921112E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 60.27457627118643, "minX": 1.0, "maxY": 186496.0, "series": [{"data": [[2.0, 186496.0], [3.0, 185734.0], [4.0, 5454.007462686567], [5.0, 37394.06896551725], [6.0, 120821.33333333333], [7.0, 180067.5], [8.0, 14347.5], [9.0, 2329.2677595628406], [10.0, 120045.0], [11.0, 1404.3664122137402], [12.0, 699.0520446096655], [13.0, 676.1290322580644], [14.0, 837.3389261744965], [15.0, 204.6759517177344], [16.0, 578.751497005988], [17.0, 394.7173076923079], [18.0, 332.8125257519573], [19.0, 696.421052631578], [20.0, 403.23033707865176], [21.0, 129.66666666666666], [22.0, 114.6903669724771], [23.0, 427.12359550561797], [24.0, 66.5104682146935], [25.0, 88.68987341772154], [26.0, 109.66666666666667], [27.0, 97.62091503267973], [28.0, 99.28834355828221], [29.0, 104.23170731707314], [30.0, 107.39350912778914], [31.0, 60.27457627118643], [32.0, 6820.8888888888905], [33.0, 181.2], [35.0, 131.65714285714287], [34.0, 111.14611872146112], [37.0, 206.75], [36.0, 174.45454545454547], [39.0, 153.07407407407408], [38.0, 184.42857142857142], [41.0, 188.00523560209425], [40.0, 164.9090909090909], [43.0, 164.61538461538458], [42.0, 171.33333333333334], [45.0, 224.64971751412418], [44.0, 167.22727272727272], [47.0, 224.87499999999997], [46.0, 173.0], [49.0, 188.77094972067036], [48.0, 187.91666666666669], [51.0, 196.47058823529412], [50.0, 196.16666666666666], [53.0, 271.44099378882004], [52.0, 234.09677419354838], [55.0, 244.875], [54.0, 228.20238095238102], [57.0, 229.25], [56.0, 221.23076923076923], [59.0, 195.375], [58.0, 189.6], [61.0, 245.0], [60.0, 249.55865921787708], [63.0, 2285.233333333333], [62.0, 21813.374999999996], [67.0, 15247.5], [66.0, 10241.5], [65.0, 5248.0], [64.0, 4012.3125], [71.0, 7716.75], [70.0, 6944.777777777778], [69.0, 723.8121212121206], [68.0, 671.920731707317], [75.0, 3321.35], [74.0, 4293.533333333335], [73.0, 3173.52380952381], [72.0, 1158.4266666666672], [79.0, 4884.384615384615], [78.0, 4415.0666666666675], [77.0, 5254.583333333334], [76.0, 645.8884120171682], [83.0, 2146.656249999999], [82.0, 4227.483870967741], [80.0, 5284.166666666666], [81.0, 161.54545454545456], [87.0, 5346.25], [86.0, 827.9127516778519], [85.0, 3504.8947368421054], [84.0, 2257.393939393939], [91.0, 6361.500000000001], [90.0, 2040.189189189189], [89.0, 3063.799999999999], [88.0, 391.6296296296296], [95.0, 7497.705882352943], [94.0, 4939.46153846154], [92.0, 4119.437499999999], [93.0, 429.92307692307685], [99.0, 11311.545454545454], [97.0, 1674.9374999999998], [96.0, 1630.6], [98.0, 387.875], [103.0, 3609.6315789473674], [101.0, 3086.043478260869], [100.0, 5957.000000000001], [102.0, 477.99999999999994], [107.0, 3402.0952380952385], [106.0, 6797.36842105263], [104.0, 3263.7209302325577], [105.0, 517.8780487804878], [108.0, 2262.8529411764703], [111.0, 4076.235294117647], [110.0, 9012.285714285716], [109.0, 4778.142857142857], [115.0, 2546.4444444444443], [114.0, 4037.1111111111118], [113.0, 1952.1960784313728], [112.0, 1923.8222222222219], [118.0, 17527.428571428576], [117.0, 5869.272727272726], [116.0, 1673.7307692307697], [119.0, 5871.090909090908], [123.0, 4228.764705882355], [122.0, 6714.999999999999], [121.0, 2439.5999999999995], [120.0, 7503.647058823529], [125.0, 12443.399999999996], [127.0, 4887.42857142857], [126.0, 9066.499999999998], [124.0, 5521.458333333333], [132.0, 5995.181818181818], [135.0, 18503.499999999996], [134.0, 18502.3], [133.0, 12512.600000000004], [131.0, 2815.9636363636378], [130.0, 5842.739130434784], [129.0, 5701.208333333334], [128.0, 5474.04], [143.0, 802.9354838709678], [142.0, 557.8548387096774], [140.0, 229.33333333333334], [139.0, 7729.038461538461], [138.0, 13679.0], [137.0, 11827.823529411764], [136.0, 6104.843749999999], [141.0, 379.0], [151.0, 591.8181818181818], [150.0, 654.0937499999999], [149.0, 567.5806451612905], [148.0, 449.2307692307692], [146.0, 440.57142857142856], [145.0, 361.8333333333333], [144.0, 479.2], [147.0, 470.9285714285714], [159.0, 894.9411764705882], [158.0, 594.0769230769229], [157.0, 612.9268292682926], [156.0, 577.3529411764707], [155.0, 607.3333333333334], [154.0, 536.9999999999999], [153.0, 350.75], [152.0, 643.3076923076924], [167.0, 681.0526315789473], [165.0, 1080.25], [164.0, 663.2], [163.0, 216.0], [162.0, 230.33333333333331], [161.0, 243.33333333333331], [160.0, 1112.8333333333333], [166.0, 1104.2972972972975], [175.0, 920.0333333333333], [174.0, 798.260162601626], [173.0, 543.0666666666667], [172.0, 540.125], [170.0, 743.1111111111112], [169.0, 605.7692307692307], [168.0, 689.5], [171.0, 956.3333333333328], [183.0, 441.74999999999994], [182.0, 366.25], [181.0, 357.25], [180.0, 378.5], [179.0, 388.5], [178.0, 196.66666666666669], [177.0, 949.2173913043479], [176.0, 930.7333333333333], [191.0, 1146.9729729729731], [190.0, 776.1874999999999], [189.0, 466.0], [188.0, 285.4], [187.0, 577.0], [186.0, 400.0], [185.0, 210.33333333333331], [184.0, 372.5], [199.0, 831.0967741935484], [198.0, 638.8823529411766], [197.0, 10177.333333333334], [195.0, 952.3275862068963], [194.0, 911.1928934010152], [193.0, 915.483870967742], [192.0, 924.675], [196.0, 902.5957446808508], [206.0, 18562.469879518067], [205.0, 828.2857142857143], [204.0, 1128.7460317460311], [203.0, 907.6250000000001], [201.0, 7987.240000000002], [200.0, 917.0909090909089], [202.0, 9923.35], [207.0, 1136.7352941176468], [214.0, 1281.1948051948052], [213.0, 1133.1666666666674], [212.0, 447.2], [211.0, 1040.2702702702702], [209.0, 1094.9523809523807], [208.0, 1190.8888888888891], [210.0, 824.5238095238095], [215.0, 1422.7058823529414], [223.0, 621.9722222222222], [222.0, 507.4], [221.0, 1255.6923076923088], [220.0, 204.33333333333334], [219.0, 1200.3999999999999], [218.0, 434.4], [217.0, 864.8571428571429], [216.0, 2037.0645161290327], [231.0, 1092.3333333333333], [230.0, 1122.3000000000002], [229.0, 860.9166666666666], [228.0, 1260.4054054054056], [227.0, 1380.4848484848485], [226.0, 1119.923076923077], [225.0, 943.4285714285714], [224.0, 1046.5858585858591], [239.0, 1114.125], [238.0, 788.8333333333333], [237.0, 1462.2184873949584], [236.0, 1193.621621621622], [235.0, 1051.6000000000001], [234.0, 209.66666666666666], [233.0, 1340.2467532467535], [232.0, 941.0238095238093], [247.0, 183.33333333333334], [246.0, 239.8], [244.0, 436.19999999999993], [242.0, 919.047619047619], [240.0, 1190.8571428571431], [241.0, 1212.6315789473688], [243.0, 1039.75], [245.0, 289.0], [253.0, 1028.695652173913], [255.0, 1505.8143712574845], [254.0, 554.0], [252.0, 1106.315789473684], [251.0, 1356.2180451127817], [250.0, 1047.1212121212116], [249.0, 236.0], [248.0, 564.75], [258.0, 958.8461538461538], [262.0, 893.9999999999999], [260.0, 1222.2045454545453], [263.0, 902.6666666666666], [257.0, 972.0], [256.0, 1096.5], [261.0, 549.0], [259.0, 1420.8901734104054], [268.0, 1895.0677966101694], [270.0, 251.0], [269.0, 2367.9491525423737], [266.0, 185.6], [267.0, 387.0], [264.0, 767.375], [265.0, 1918.8451612903223], [271.0, 340.5], [286.0, 863.5], [281.0, 712.0], [274.0, 1685.095238095238], [273.0, 1085.0], [272.0, 1704.1052631578948], [275.0, 1299.9090909090908], [279.0, 766.7142857142858], [278.0, 1873.227848101265], [276.0, 1365.2526315789473], [277.0, 1788.0], [282.0, 531.75], [287.0, 1213.5], [285.0, 1005.3333333333333], [284.0, 692.6666666666666], [283.0, 553.75], [280.0, 988.8333333333333], [303.0, 487.0], [292.0, 745.75], [294.0, 856.5], [293.0, 945.9], [298.0, 953.4], [297.0, 1105.0], [296.0, 1307.6818181818182], [302.0, 746.6666666666667], [301.0, 644.0], [300.0, 636.8], [291.0, 820.3333333333334], [290.0, 889.3333333333334], [289.0, 520.0], [288.0, 846.0], [295.0, 2304.7727272727275], [299.0, 551.0], [305.0, 656.75], [311.0, 823.25], [307.0, 276.6666666666667], [317.0, 492.0], [318.0, 601.75], [319.0, 845.6666666666666], [316.0, 1184.9746835443043], [306.0, 715.0], [310.0, 598.8], [309.0, 222.0], [308.0, 997.4166666666667], [304.0, 630.4285714285714], [313.0, 167.8], [315.0, 318.6666666666667], [314.0, 393.6666666666667], [312.0, 237.6], [333.0, 1035.0], [334.0, 1026.6666666666667], [335.0, 721.0], [332.0, 1805.7972972972984], [323.0, 844.6666666666666], [322.0, 646.6], [321.0, 728.6666666666666], [320.0, 802.0], [331.0, 1696.9636363636364], [330.0, 1482.9230769230771], [329.0, 953.75], [328.0, 1628.256544502617], [327.0, 1216.0], [326.0, 1092.3333333333333], [325.0, 1226.4137931034472], [324.0, 835.5], [350.0, 1058.0], [351.0, 1021.0], [349.0, 1111.0], [348.0, 724.6666666666666], [347.0, 880.5], [346.0, 753.5], [345.0, 927.4], [344.0, 852.6666666666666], [343.0, 1549.3333333333333], [336.0, 720.5], [339.0, 1534.1340782122911], [338.0, 1220.4], [337.0, 1223.75], [342.0, 1010.6666666666666], [341.0, 921.3333333333334], [340.0, 857.6666666666666], [366.0, 1300.7142857142858], [367.0, 677.5], [365.0, 1524.6666666666667], [364.0, 1486.046511627907], [363.0, 900.5], [362.0, 940.75], [361.0, 960.0], [360.0, 1250.8194444444446], [359.0, 1547.4025974025976], [354.0, 890.0], [353.0, 2611.333333333333], [355.0, 1454.5], [352.0, 917.0555555555557], [358.0, 1045.3815789473679], [357.0, 884.0], [356.0, 1389.4], [382.0, 340.5], [383.0, 882.75], [381.0, 1443.3200000000002], [380.0, 908.5], [378.0, 985.6666666666666], [379.0, 1064.6250000000002], [377.0, 654.5], [376.0, 1120.8333333333335], [375.0, 976.1111111111111], [369.0, 1056.0], [368.0, 1186.9090909090908], [371.0, 745.3333333333334], [370.0, 522.0], [374.0, 676.0], [373.0, 586.0], [372.0, 981.5], [384.0, 2014.5], [388.0, 1693.9399293286222], [390.0, 368.0], [394.0, 532.0], [392.0, 720.0], [395.0, 648.0], [391.0, 695.0], [389.0, 2023.875], [399.0, 1217.0], [398.0, 607.5], [396.0, 1067.0], [387.0, 1225.0], [386.0, 2446.0], [385.0, 486.0], [414.0, 745.0], [415.0, 1399.2], [403.0, 2590.333333333333], [401.0, 1452.0], [400.0, 1806.0], [407.0, 2391.5], [405.0, 1445.0], [404.0, 2417.0], [413.0, 1032.0], [412.0, 2382.0], [411.0, 2383.0], [410.0, 1461.0], [409.0, 1456.0], [408.0, 1442.0], [430.0, 365.0], [431.0, 984.0], [429.0, 1622.7666666666667], [428.0, 2901.2377622377617], [426.0, 744.5], [427.0, 727.0], [425.0, 513.5], [424.0, 313.0], [423.0, 392.5], [417.0, 1956.8983050847462], [416.0, 1968.8450704225359], [419.0, 804.0], [418.0, 2876.4574132492116], [422.0, 521.0], [421.0, 347.5], [420.0, 632.0], [446.0, 1938.9108910891105], [447.0, 2190.098976109216], [445.0, 1149.7142857142858], [444.0, 1676.2500000000002], [443.0, 1861.930434782608], [442.0, 1231.8333333333333], [441.0, 1673.8947368421052], [440.0, 1146.8], [439.0, 2474.8530259365984], [433.0, 552.5], [432.0, 482.3333333333333], [435.0, 428.5], [434.0, 626.5], [438.0, 1875.8095238095239], [437.0, 1021.5], [436.0, 746.0], [450.0, 256.25], [454.0, 527.5], [452.0, 366.3076923076923], [451.0, 287.20000000000005], [461.0, 1284.6666666666665], [460.0, 1188.6666666666665], [453.0, 218.5], [449.0, 408.0], [448.0, 307.2142857142857], [455.0, 800.25], [463.0, 631.2], [457.0, 914.0], [456.0, 922.3333333333334], [459.0, 1133.5], [458.0, 674.6666666666667], [462.0, 985.3333333333333], [478.0, 1191.0], [466.0, 1682.4], [467.0, 892.6666666666666], [468.0, 1947.0], [469.0, 1173.0], [471.0, 2534.6], [465.0, 1030.5], [464.0, 1052.0], [470.0, 1346.0], [479.0, 1070.6666666666667], [477.0, 1928.0], [476.0, 1121.0], [475.0, 1874.7777777777778], [474.0, 1026.0], [473.0, 2029.591549295775], [472.0, 2338.851685393256], [494.0, 1475.0], [495.0, 1138.3333333333333], [493.0, 1938.3749999999998], [492.0, 1069.3333333333333], [491.0, 2949.3834422657947], [490.0, 1645.0], [489.0, 1801.6666666666667], [488.0, 1863.3333333333333], [487.0, 2068.3333333333335], [481.0, 2044.0], [480.0, 2100.0], [483.0, 1246.3333333333333], [482.0, 2304.2523364485983], [486.0, 1677.25], [485.0, 1561.6666666666667], [484.0, 2424.5329512893977], [510.0, 1484.3333333333335], [511.0, 1824.5], [508.0, 1659.0], [509.0, 3036.0], [499.0, 690.0], [498.0, 1365.2], [497.0, 2495.139705882353], [496.0, 2260.7278911564626], [507.0, 1681.0], [506.0, 759.5], [505.0, 2265.3571428571427], [504.0, 2276.137096774194], [503.0, 2206.4940476190477], [502.0, 1090.6666666666667], [501.0, 1505.4444444444443], [500.0, 1384.5], [519.0, 1548.75], [542.0, 2236.5], [543.0, 2311.5], [541.0, 1537.6666666666665], [540.0, 3711.017730496452], [539.0, 4076.5769230769233], [537.0, 2612.0], [536.0, 2702.3333333333335], [518.0, 2879.5], [517.0, 1724.3333333333333], [516.0, 1804.5], [515.0, 1224.6666666666667], [513.0, 1657.0], [514.0, 1896.5], [512.0, 1356.6666666666667], [535.0, 1902.0], [534.0, 1611.0], [533.0, 2605.3333333333335], [528.0, 2580.2428571428572], [529.0, 1164.0], [531.0, 4286.228758169937], [532.0, 2092.5], [527.0, 1817.8043478260868], [526.0, 2546.461538461538], [525.0, 3068.8456790123473], [524.0, 4118.291139240501], [523.0, 1093.3333333333333], [522.0, 1569.6666666666667], [521.0, 2172.0], [520.0, 2027.0], [569.0, 1890.8333333333335], [573.0, 1608.25], [559.0, 3409.047619047619], [558.0, 3793.714285714286], [557.0, 2254.0], [555.0, 2208.5], [556.0, 3027.25], [554.0, 2461.0], [553.0, 2524.1], [552.0, 1315.6666666666665], [568.0, 1823.0], [551.0, 3803.0], [550.0, 2335.2999999999997], [549.0, 2799.8333333333335], [548.0, 1779.0], [546.0, 2415.75], [547.0, 3937.0], [545.0, 2526.6055045871553], [544.0, 4202.999999999999], [562.0, 4388.449438202246], [560.0, 4002.3866666666663], [561.0, 2523.0], [563.0, 2108.0], [564.0, 2518.3333333333335], [567.0, 1549.6666666666667], [566.0, 2324.0], [565.0, 2088.25], [575.0, 1934.6666666666667], [574.0, 1959.6666666666667], [572.0, 1910.5], [571.0, 1853.6666666666665], [570.0, 889.0], [583.0, 1916.5], [603.0, 2181.2], [591.0, 4209.464646464647], [590.0, 1610.5], [589.0, 1956.3333333333333], [588.0, 2169.0], [587.0, 1743.3333333333333], [586.0, 2528.0], [585.0, 2472.5], [584.0, 2369.0], [604.0, 2788.75], [607.0, 2986.0], [606.0, 2286.0], [593.0, 1762.3333333333333], [592.0, 2249.75], [595.0, 2093.0], [594.0, 2332.3333333333335], [597.0, 1910.25], [596.0, 531.0], [602.0, 3601.0], [601.0, 1999.0], [600.0, 2476.6666666666665], [582.0, 2121.0], [581.0, 2190.0], [580.0, 2442.6666666666665], [579.0, 1900.3333333333333], [578.0, 3988.868421052631], [577.0, 2321.0], [576.0, 1966.6666666666667], [599.0, 2763.25], [598.0, 2291.0], [636.0, 1829.0], [639.0, 2249.0], [624.0, 2990.583333333334], [626.0, 2369.0], [625.0, 2459.1666666666665], [628.0, 3336.9375], [627.0, 2768.75], [638.0, 2167.5], [637.0, 2379.0], [635.0, 2403.0], [634.0, 1908.3333333333333], [633.0, 1718.0], [632.0, 2995.214285714286], [623.0, 2411.0], [609.0, 3792.0], [608.0, 4206.5], [611.0, 980.875], [610.0, 3955.0], [613.0, 2150.6666666666665], [612.0, 2285.5], [615.0, 2132.3333333333335], [614.0, 2125.0], [622.0, 2478.5], [620.0, 4091.4684684684703], [621.0, 3675.0], [619.0, 2304.5], [618.0, 2904.6666666666665], [617.0, 2022.5], [616.0, 1531.0], [631.0, 1896.0], [630.0, 2759.0], [629.0, 3201.75], [669.0, 1453.5], [662.0, 410.5], [661.0, 2177.75], [660.0, 2753.0], [659.0, 1384.0], [658.0, 2416.0], [657.0, 1330.5], [656.0, 1942.3333333333333], [663.0, 2640.666666666667], [671.0, 1742.3333333333333], [670.0, 1484.5], [668.0, 1703.6666666666667], [667.0, 735.0], [666.0, 1603.0], [665.0, 1791.0], [664.0, 2649.5], [647.0, 2106.6666666666665], [646.0, 2192.6666666666665], [645.0, 2102.0], [644.0, 2015.0], [643.0, 2611.6666666666665], [642.0, 2096.75], [640.0, 2239.3333333333335], [641.0, 3387.5], [655.0, 3033.75], [654.0, 2436.5], [653.0, 5047.14563106796], [652.0, 3598.25], [651.0, 3111.2], [650.0, 2663.0], [649.0, 3231.0], [648.0, 2298.6666666666665], [697.0, 1595.5], [701.0, 1256.75], [695.0, 1381.1666666666667], [694.0, 2376.5], [703.0, 1743.9375], [702.0, 793.875], [700.0, 2008.0], [699.0, 2227.0], [698.0, 1811.25], [687.0, 1836.6666666666667], [673.0, 614.0], [672.0, 1428.5], [677.0, 3631.8226600985217], [676.0, 2261.0], [675.0, 999.0], [674.0, 654.0], [679.0, 1507.0], [696.0, 2823.0], [678.0, 1509.5], [686.0, 3497.695652173913], [685.0, 2096.0], [684.0, 1131.3333333333333], [681.0, 1403.5], [680.0, 2214.0], [683.0, 4447.116751269035], [693.0, 2408.0], [692.0, 1607.25], [691.0, 3219.0], [690.0, 2544.3333333333335], [689.0, 2225.0], [688.0, 1837.0], [730.0, 2138.8571428571427], [704.0, 1571.1818181818182], [713.0, 1479.75], [712.0, 2734.0], [714.0, 1542.25], [716.0, 1879.8], [715.0, 3374.3333333333335], [717.0, 3280.2], [719.0, 2355.5], [718.0, 1947.5], [735.0, 1946.0], [720.0, 1356.0], [722.0, 1953.6666666666667], [721.0, 2331.75], [724.0, 2462.2], [723.0, 2052.5], [727.0, 1739.3333333333333], [726.0, 3518.0], [725.0, 1849.0], [734.0, 1874.5], [733.0, 3437.5], [732.0, 2209.5], [731.0, 2039.0], [729.0, 1409.3333333333335], [728.0, 4123.0], [711.0, 3226.5], [710.0, 2237.0], [709.0, 2857.666666666667], [708.0, 1147.5], [707.0, 2059.3333333333335], [706.0, 2165.3333333333335], [705.0, 3021.0], [760.0, 1546.3333333333333], [737.0, 1204.25], [736.0, 2375.25], [738.0, 1818.3333333333333], [740.0, 2425.0], [739.0, 3109.6], [742.0, 1672.0], [743.0, 3002.0], [741.0, 2144.5], [751.0, 2599.666666666667], [750.0, 1688.0], [749.0, 2362.6666666666665], [748.0, 2614.0], [747.0, 943.6666666666667], [746.0, 2057.75], [745.0, 912.6666666666666], [744.0, 1247.6], [759.0, 1542.75], [758.0, 928.0], [757.0, 2321.6], [756.0, 1635.4], [755.0, 1891.0], [754.0, 1797.75], [767.0, 2026.6666666666665], [753.0, 2827.5], [752.0, 2363.5], [766.0, 2027.6666666666665], [765.0, 1435.75], [764.0, 1896.25], [763.0, 1128.2], [762.0, 2453.3333333333335], [761.0, 2053.25], [796.0, 2814.5], [768.0, 2033.25], [770.0, 22078.333333333336], [769.0, 5228.0], [774.0, 2716.0], [773.0, 3966.0], [772.0, 3704.0], [775.0, 3249.0], [771.0, 3128.5], [783.0, 3015.5], [781.0, 3040.5], [782.0, 3865.0], [780.0, 3164.0], [779.0, 2745.5], [778.0, 2456.0], [777.0, 2765.0], [776.0, 3845.0], [799.0, 2002.5], [784.0, 2238.0], [788.0, 3965.0], [787.0, 3885.0], [786.0, 3788.0], [785.0, 3940.0], [791.0, 2051.0], [790.0, 3646.0], [789.0, 2689.0], [798.0, 2103.5], [797.0, 2407.0], [795.0, 2898.5], [794.0, 2716.0], [793.0, 2504.5], [792.0, 2873.0], [824.0, 2446.0], [828.0, 2450.0], [831.0, 2051.5], [817.0, 2019.0], [816.0, 2905.534482758621], [821.0, 2063.0], [819.0, 2543.4545454545455], [830.0, 3000.5], [829.0, 1881.0], [827.0, 2459.0], [826.0, 2220.0], [825.0, 1624.0], [815.0, 2826.9], [801.0, 1102.5], [800.0, 2768.0], [803.0, 2841.5], [802.0, 2963.0], [805.0, 2940.5], [804.0, 2965.6000000000004], [807.0, 2924.5], [806.0, 2954.5], [814.0, 2142.0], [813.0, 1167.0], [812.0, 2323.0], [811.0, 2776.0], [810.0, 2890.0], [809.0, 2714.5], [808.0, 2897.5], [823.0, 1604.0], [822.0, 2628.5], [856.0, 2763.5], [860.0, 3329.454545454545], [862.0, 3465.6666666666665], [861.0, 3703.9375], [848.0, 3436.5], [863.0, 3277.0], [850.0, 2718.5], [849.0, 2920.0], [859.0, 3602.0], [858.0, 3004.0], [857.0, 2364.0], [847.0, 3691.0], [832.0, 1234.0], [834.0, 1981.0], [833.0, 1582.0], [837.0, 2967.8860759493664], [836.0, 2066.0714285714284], [839.0, 1535.0], [838.0, 2765.7142857142853], [846.0, 1916.0], [845.0, 2778.0], [844.0, 3471.0], [843.0, 2199.0], [842.0, 2841.0], [840.0, 1542.0], [855.0, 3165.5], [854.0, 2589.0], [853.0, 2598.6666666666665], [852.0, 2767.0], [851.0, 2396.0], [867.0, 3115.0], [868.0, 6363.629629629629], [869.0, 4696.796630565584], [870.0, 6380.0], [871.0, 4187.0], [889.0, 4340.0], [888.0, 2880.0], [890.0, 4041.8888888888887], [895.0, 3254.0], [881.0, 2653.0], [880.0, 4225.0], [883.0, 3832.0], [882.0, 4844.0], [894.0, 4354.0], [893.0, 4366.0], [892.0, 2426.0], [891.0, 4309.0], [866.0, 3198.0], [865.0, 2920.0], [864.0, 2590.0], [872.0, 4158.5], [874.0, 3764.0], [873.0, 4097.0], [876.0, 3729.0], [875.0, 3284.0], [878.0, 3875.0], [877.0, 4261.0], [879.0, 4136.0], [884.0, 3385.4], [885.0, 2923.0], [886.0, 3481.571428571429], [887.0, 2601.0], [922.0, 6420.4722222222235], [897.0, 4670.688715953307], [896.0, 3732.0], [898.0, 3377.0], [911.0, 3610.0], [910.0, 3969.0], [909.0, 2194.0], [908.0, 3460.0], [907.0, 3694.0], [906.0, 3368.0], [905.0, 3682.0], [904.0, 3561.0], [899.0, 4682.5], [900.0, 4247.333333333333], [901.0, 3281.0], [903.0, 3469.0], [902.0, 3367.0], [921.0, 4253.0], [920.0, 2577.0], [927.0, 2627.0], [913.0, 4279.0], [912.0, 2347.0], [915.0, 2572.0], [914.0, 2719.0], [917.0, 2545.0], [916.0, 2344.0], [919.0, 3949.0], [918.0, 2342.0], [926.0, 2693.0], [925.0, 3885.0], [924.0, 3944.0], [923.0, 3956.0], [953.0, 3724.0], [958.0, 3563.0], [956.0, 5063.0], [959.0, 2751.0], [945.0, 2491.0], [944.0, 3326.0], [947.0, 3575.0], [946.0, 3401.0], [949.0, 3748.0], [948.0, 3681.0], [955.0, 3496.0], [954.0, 3161.0], [952.0, 3487.0], [935.0, 2542.0], [934.0, 2117.0], [933.0, 3290.0], [932.0, 3872.0], [931.0, 2655.0], [930.0, 3372.0], [929.0, 3502.0], [928.0, 2533.0], [943.0, 3440.0], [942.0, 2107.0], [941.0, 2188.0], [940.0, 3886.0], [939.0, 3887.0], [938.0, 2487.0], [937.0, 3345.0], [936.0, 2738.0], [951.0, 3210.0], [950.0, 3122.0], [988.0, 8189.875000000001], [977.0, 5123.0], [976.0, 7323.25], [990.0, 8727.0], [989.0, 3376.0], [991.0, 2154.0], [987.0, 10146.0], [978.0, 11051.0], [979.0, 5784.5], [980.0, 7967.6], [981.0, 7151.0], [982.0, 7569.0], [983.0, 2791.5], [984.0, 6578.0], [975.0, 2922.0], [961.0, 3507.0], [960.0, 2127.0], [963.0, 3103.0], [962.0, 3683.0], [965.0, 5535.0], [964.0, 3801.0], [967.0, 3548.0], [966.0, 3074.0], [974.0, 2923.0], [973.0, 3522.0], [972.0, 4072.0], [971.0, 2939.0], [970.0, 3184.0], [969.0, 3564.0], [968.0, 3101.0], [985.0, 3164.0], [986.0, 7143.0], [1000.0, 6070.072178477692], [999.0, 2137.0], [998.0, 2230.5], [996.0, 2524.0], [995.0, 1284.0], [994.0, 2870.3333333333335], [992.0, 3039.0], [1.0, 182648.0]], "isOverall": false, "label": "Sunstar Search", "isController": false}, {"data": [[345.92367460050303, 2336.6890523425914]], "isOverall": false, "label": "Sunstar Search-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 20.5, "minX": 1.62921014E12, "maxY": 4783048.4, "series": [{"data": [[1.62921084E12, 3954453.6], [1.62921067E12, 4543041.8], [1.6292111E12, 5714.6], [1.62921093E12, 4671632.9], [1.62921076E12, 3634485.6], [1.62921026E12, 197153.7], [1.62921085E12, 4783048.4], [1.62921068E12, 4534470.3], [1.62921051E12, 22858.4], [1.62921111E12, 2857.3], [1.62921094E12, 4534463.9], [1.62921077E12, 2737293.4], [1.62921103E12, 2857.3], [1.62921086E12, 4774478.9], [1.62921069E12, 4611623.4], [1.62921027E12, 385734.3], [1.62921112E12, 2857.3], [1.62921095E12, 2611536.4], [1.62921078E12, 1771526.0], [1.62921044E12, 2857.3], [1.62921087E12, 3914450.8], [1.6292107E12, 4168742.3], [1.62921096E12, 2857.3], [1.62921079E12, 837188.9], [1.62921062E12, 2857.3], [1.62921045E12, 11429.2], [1.62921088E12, 4348744.8], [1.62921071E12, 4231607.5], [1.6292108E12, 260014.3], [1.62921063E12, 780041.1], [1.6292102E12, 2857.3], [1.62921106E12, 2857.3], [1.62921089E12, 4128741.7], [1.62921072E12, 4505897.1], [1.62921081E12, 614319.5], [1.62921064E12, 2060100.3], [1.6292109E12, 3940172.1], [1.62921073E12, 3328716.7], [1.62921014E12, 2857.3], [1.62921065E12, 2985846.1], [1.62921108E12, 2857.3], [1.62921091E12, 3362996.1], [1.62921074E12, 3871571.1], [1.62921057E12, 408593.9], [1.629211E12, 5714.6], [1.62921083E12, 1540070.3], [1.62921066E12, 3903029.4], [1.62921092E12, 3120127.6], [1.62921075E12, 4143042.4], [1.62921058E12, 2048684.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62921084E12, 29088.0], [1.62921067E12, 33421.6], [1.6292111E12, 41.2], [1.62921093E12, 34388.0], [1.62921076E12, 26736.5], [1.62921026E12, 1448.8], [1.62921085E12, 35186.7], [1.62921068E12, 33354.7], [1.62921051E12, 166.8], [1.62921111E12, 20.5], [1.62921094E12, 33335.3], [1.62921077E12, 20139.7], [1.62921103E12, 20.6], [1.62921086E12, 35125.5], [1.62921069E12, 33931.0], [1.62921027E12, 2839.2], [1.62921112E12, 22.3], [1.62921095E12, 19217.9], [1.62921078E12, 13033.6], [1.62921044E12, 20.6], [1.62921087E12, 28801.2], [1.6292107E12, 30667.2], [1.62921096E12, 20.7], [1.62921079E12, 6158.9], [1.62921062E12, 20.5], [1.62921045E12, 83.7], [1.62921088E12, 31987.0], [1.62921071E12, 31128.2], [1.6292108E12, 1912.9], [1.62921063E12, 5749.3], [1.6292102E12, 21.2], [1.62921106E12, 21.5], [1.62921089E12, 30373.1], [1.62921072E12, 33151.9], [1.62921081E12, 4519.9], [1.62921064E12, 15154.8], [1.6292109E12, 28983.3], [1.62921073E12, 24478.7], [1.62921014E12, 21.3], [1.62921065E12, 21963.0], [1.62921108E12, 22.3], [1.62921091E12, 24746.5], [1.62921074E12, 28493.6], [1.62921057E12, 3000.4], [1.629211E12, 41.9], [1.62921083E12, 11332.3], [1.62921066E12, 28714.3], [1.62921092E12, 22946.9], [1.62921075E12, 30477.4], [1.62921058E12, 15070.3]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62921112E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 15.390697674418597, "minX": 1.62921014E12, "maxY": 186496.0, "series": [{"data": [[1.62921084E12, 117.55708092485541], [1.62921067E12, 138.04088050314465], [1.6292111E12, 186054.0], [1.62921093E12, 6397.280122324151], [1.62921076E12, 36.16352201257865], [1.62921026E12, 47037.17391304347], [1.62921085E12, 54.768219832736044], [1.62921068E12, 542.7284183994955], [1.62921051E12, 15090.75], [1.62921111E12, 186496.0], [1.62921094E12, 4715.317580340265], [1.62921077E12, 218.42379958246352], [1.62921103E12, 180052.0], [1.62921086E12, 268.5535607420707], [1.62921069E12, 2206.5235439900835], [1.62921027E12, 33.962962962962955], [1.62921112E12, 182648.0], [1.62921095E12, 1747.356673960613], [1.62921078E12, 18.88225806451615], [1.62921044E12, 180145.0], [1.62921087E12, 1113.6248175182473], [1.6292107E12, 1479.7080191912275], [1.62921096E12, 180024.0], [1.62921079E12, 449.1569965870306], [1.62921062E12, 180149.0], [1.62921045E12, 135052.25], [1.62921088E12, 1907.7122207621553], [1.62921071E12, 1941.6164753544879], [1.6292108E12, 2789.9670329670325], [1.62921063E12, 33759.7728937729], [1.6292102E12, 120205.0], [1.62921106E12, 182311.0], [1.62921089E12, 2788.1916955017327], [1.62921072E12, 2432.0957514267625], [1.62921081E12, 15.390697674418597], [1.62921064E12, 71.24965325936202], [1.6292109E12, 3891.5656272661395], [1.62921073E12, 3376.2832618025745], [1.62921014E12, 60115.0], [1.62921065E12, 59.936842105263125], [1.62921108E12, 182713.0], [1.62921091E12, 6393.665250637206], [1.62921074E12, 4320.1416974169715], [1.62921057E12, 548.0349650349651], [1.629211E12, 92416.5], [1.62921083E12, 259.23005565862724], [1.62921066E12, 78.47218155197658], [1.62921092E12, 7088.093406593408], [1.62921075E12, 592.023448275864], [1.62921058E12, 441.9191073919102]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62921112E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 15.311627906976744, "minX": 1.62921014E12, "maxY": 186495.0, "series": [{"data": [[1.62921084E12, 117.13511560693645], [1.62921067E12, 137.0088050314466], [1.6292111E12, 186054.0], [1.62921093E12, 6355.239143730887], [1.62921076E12, 35.96855345911944], [1.62921026E12, 47036.49275362317], [1.62921085E12, 54.24970131421747], [1.62921068E12, 537.2715816005049], [1.62921051E12, 15090.25], [1.62921111E12, 186495.0], [1.62921094E12, 4703.082545683674], [1.62921077E12, 218.28810020876864], [1.62921103E12, 180052.0], [1.62921086E12, 266.87312986235816], [1.62921069E12, 2201.3977695167287], [1.62921027E12, 33.42962962962961], [1.62921112E12, 182647.0], [1.62921095E12, 1740.0317286652096], [1.62921078E12, 18.74677419354841], [1.62921044E12, 180144.0], [1.62921087E12, 1097.1481751824824], [1.6292107E12, 1452.1761480466066], [1.62921096E12, 180024.0], [1.62921079E12, 449.0238907849829], [1.62921062E12, 180148.0], [1.62921045E12, 135051.75], [1.62921088E12, 1888.5519053876471], [1.62921071E12, 1911.1404456448356], [1.6292108E12, 2789.8681318681306], [1.62921063E12, 33759.135531135544], [1.6292102E12, 120202.0], [1.62921106E12, 182311.0], [1.62921089E12, 2768.008996539794], [1.62921072E12, 2415.339885859224], [1.62921081E12, 15.311627906976744], [1.62921064E12, 70.10124826629692], [1.6292109E12, 3879.880348078312], [1.62921073E12, 3343.768240343343], [1.62921014E12, 60109.0], [1.62921065E12, 58.85358851674636], [1.62921108E12, 182713.0], [1.62921091E12, 6353.385726423099], [1.62921074E12, 4304.834686346853], [1.62921057E12, 547.7972027972031], [1.629211E12, 92416.0], [1.62921083E12, 258.87012987013], [1.62921066E12, 77.49048316251825], [1.62921092E12, 7062.500000000002], [1.62921075E12, 589.9165517241373], [1.62921058E12, 436.2259414225938]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62921112E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 12.195348837209297, "minX": 1.62921014E12, "maxY": 6968.471611721607, "series": [{"data": [[1.62921084E12, 24.524566473988457], [1.62921067E12, 121.73522012578614], [1.6292111E12, 6029.5], [1.62921093E12, 6170.921100917431], [1.62921076E12, 31.312893081761], [1.62921026E12, 49.94202898550726], [1.62921085E12, 47.3327359617682], [1.62921068E12, 510.4417139256455], [1.62921051E12, 70.00000000000001], [1.62921111E12, 6464.0], [1.62921094E12, 4566.263390044109], [1.62921077E12, 26.650313152400866], [1.62921103E12, 30.0], [1.62921086E12, 221.8731298623577], [1.62921069E12, 1054.4714993804212], [1.62921027E12, 25.718518518518522], [1.62921112E12, 2612.0], [1.62921095E12, 1693.4617067833717], [1.62921078E12, 15.564516129032247], [1.62921044E12, 55.0], [1.62921087E12, 975.0029197080279], [1.6292107E12, 1352.0246744345443], [1.62921096E12, 13.0], [1.62921079E12, 36.47781569965869], [1.62921062E12, 77.0], [1.62921045E12, 26.75], [1.62921088E12, 1766.1557161629419], [1.62921071E12, 1816.9155975692101], [1.6292108E12, 147.43956043956038], [1.62921063E12, 113.36996336996334], [1.6292102E12, 113.0], [1.62921106E12, 2297.0], [1.62921089E12, 2587.515570934257], [1.62921072E12, 2288.3360811667712], [1.62921081E12, 12.195348837209297], [1.62921064E12, 55.88765603328706], [1.6292109E12, 3791.829586657], [1.62921073E12, 3182.4309012875574], [1.62921014E12, 74.0], [1.62921065E12, 46.121531100478414], [1.62921108E12, 2690.0], [1.62921091E12, 6213.138487680547], [1.62921074E12, 4226.008118081182], [1.62921057E12, 107.96503496503499], [1.629211E12, 2394.5], [1.62921083E12, 29.927643784786646], [1.62921066E12, 63.76939970717427], [1.62921092E12, 6968.471611721607], [1.62921075E12, 577.2682758620685], [1.62921058E12, 415.06555090655513]], "isOverall": false, "label": "Sunstar Search", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62921112E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.62921014E12, "maxY": 186496.0, "series": [{"data": [[1.62921084E12, 60047.0], [1.62921067E12, 386.0], [1.6292111E12, 186374.0], [1.62921093E12, 60792.0], [1.62921076E12, 184.0], [1.62921026E12, 180531.0], [1.62921085E12, 147.0], [1.62921068E12, 3198.0], [1.62921051E12, 60112.0], [1.62921111E12, 186496.0], [1.62921094E12, 61877.0], [1.62921077E12, 62386.0], [1.62921103E12, 180052.0], [1.62921086E12, 60019.0], [1.62921069E12, 180123.0], [1.62921027E12, 90.0], [1.62921112E12, 182648.0], [1.62921095E12, 5566.0], [1.62921078E12, 117.0], [1.62921044E12, 180145.0], [1.62921087E12, 60073.0], [1.6292107E12, 60840.0], [1.62921096E12, 180024.0], [1.62921079E12, 64994.0], [1.62921062E12, 180149.0], [1.62921045E12, 180044.0], [1.62921088E12, 120030.0], [1.62921071E12, 60067.0], [1.6292108E12, 120673.0], [1.62921063E12, 180150.0], [1.6292102E12, 120205.0], [1.62921106E12, 182311.0], [1.62921089E12, 181420.0], [1.62921072E12, 60122.0], [1.62921081E12, 54.0], [1.62921064E12, 213.0], [1.6292109E12, 60041.0], [1.62921073E12, 60296.0], [1.62921014E12, 60115.0], [1.62921065E12, 176.0], [1.62921108E12, 182713.0], [1.62921091E12, 13125.0], [1.62921074E12, 10540.0], [1.62921057E12, 60096.0], [1.629211E12, 122430.0], [1.62921083E12, 121171.0], [1.62921066E12, 218.0], [1.62921092E12, 16479.0], [1.62921075E12, 5138.0], [1.62921058E12, 1456.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62921084E12, 20.0], [1.62921067E12, 46.0], [1.6292111E12, 185734.0], [1.62921093E12, 223.0], [1.62921076E12, 11.0], [1.62921026E12, 29.0], [1.62921085E12, 22.0], [1.62921068E12, 57.0], [1.62921051E12, 50.0], [1.62921111E12, 186496.0], [1.62921094E12, 888.0], [1.62921077E12, 11.0], [1.62921103E12, 180052.0], [1.62921086E12, 42.0], [1.62921069E12, 249.0], [1.62921027E12, 22.0], [1.62921112E12, 182648.0], [1.62921095E12, 44.0], [1.62921078E12, 10.0], [1.62921044E12, 180145.0], [1.62921087E12, 183.0], [1.6292107E12, 266.0], [1.62921096E12, 180024.0], [1.62921079E12, 11.0], [1.62921062E12, 180149.0], [1.62921045E12, 87.0], [1.62921088E12, 190.0], [1.62921071E12, 344.0], [1.6292108E12, 12.0], [1.62921063E12, 44.0], [1.6292102E12, 120205.0], [1.62921106E12, 182311.0], [1.62921089E12, 58.0], [1.62921072E12, 635.0], [1.62921081E12, 11.0], [1.62921064E12, 42.0], [1.6292109E12, 436.0], [1.62921073E12, 408.0], [1.62921014E12, 60115.0], [1.62921065E12, 40.0], [1.62921108E12, 182713.0], [1.62921091E12, 1023.0], [1.62921074E12, 303.0], [1.62921057E12, 28.0], [1.629211E12, 62403.0], [1.62921083E12, 20.0], [1.62921066E12, 44.0], [1.62921092E12, 794.0], [1.62921075E12, 18.0], [1.62921058E12, 20.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62921084E12, 42.0], [1.62921067E12, 229.0], [1.6292111E12, 186374.0], [1.62921093E12, 9341.4], [1.62921076E12, 60.0], [1.62921026E12, 180115.0], [1.62921085E12, 82.0], [1.62921068E12, 703.0], [1.62921051E12, 60112.0], [1.62921111E12, 186496.0], [1.62921094E12, 7906.400000000001], [1.62921077E12, 45.0], [1.62921103E12, 180052.0], [1.62921086E12, 393.79999999999995], [1.62921069E12, 1562.0], [1.62921027E12, 52.0], [1.62921112E12, 182648.0], [1.62921095E12, 3967.5], [1.62921078E12, 30.0], [1.62921044E12, 180145.0], [1.62921087E12, 1802.8000000000002], [1.6292107E12, 2011.0], [1.62921096E12, 180024.0], [1.62921079E12, 22.0], [1.62921062E12, 180149.0], [1.62921045E12, 180044.0], [1.62921088E12, 2741.7], [1.62921071E12, 3211.0], [1.6292108E12, 33.0], [1.62921063E12, 60378.2], [1.6292102E12, 120205.0], [1.62921106E12, 182311.0], [1.62921089E12, 4044.4000000000005], [1.62921072E12, 3171.0], [1.62921081E12, 21.400000000000006], [1.62921064E12, 111.60000000000014], [1.6292109E12, 5928.0], [1.62921073E12, 5053.8], [1.62921014E12, 60115.0], [1.62921065E12, 76.0], [1.62921108E12, 182713.0], [1.62921091E12, 9154.2], [1.62921074E12, 7658.0], [1.62921057E12, 255.99999999999991], [1.629211E12, 122430.0], [1.62921083E12, 65.0], [1.62921066E12, 107.0], [1.62921092E12, 9834.500000000002], [1.62921075E12, 2564.0], [1.62921058E12, 781.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62921084E12, 71.0], [1.62921067E12, 287.0899999999999], [1.6292111E12, 186374.0], [1.62921093E12, 13129.039999999992], [1.62921076E12, 118.80999999999995], [1.62921026E12, 180531.0], [1.62921085E12, 107.0], [1.62921068E12, 2791.7999999999984], [1.62921051E12, 60112.0], [1.62921111E12, 186496.0], [1.62921094E12, 10003.999999999995], [1.62921077E12, 91.40999999999997], [1.62921103E12, 180052.0], [1.62921086E12, 549.56], [1.62921069E12, 2120.6499999999974], [1.62921027E12, 87.83999999999992], [1.62921112E12, 182648.0], [1.62921095E12, 5154.0], [1.62921078E12, 81.52999999999975], [1.62921044E12, 180145.0], [1.62921087E12, 2368.87], [1.6292107E12, 2891.4000000000065], [1.62921096E12, 180024.0], [1.62921079E12, 3791.8800000001393], [1.62921062E12, 180149.0], [1.62921045E12, 180044.0], [1.62921088E12, 3993.77], [1.62921071E12, 4251.500000000002], [1.6292108E12, 120673.0], [1.62921063E12, 180078.9], [1.6292102E12, 120205.0], [1.62921106E12, 182311.0], [1.62921089E12, 5365.899999999999], [1.62921072E12, 4144.66], [1.62921081E12, 53.0], [1.62921064E12, 173.23999999999978], [1.6292109E12, 7860.800000000003], [1.62921073E12, 6229.36], [1.62921014E12, 60115.0], [1.62921065E12, 108.69999999999982], [1.62921108E12, 182713.0], [1.62921091E12, 11449.740000000002], [1.62921074E12, 9485.640000000018], [1.62921057E12, 33866.28000000014], [1.629211E12, 122430.0], [1.62921083E12, 114.0], [1.62921066E12, 151.0], [1.62921092E12, 14782.96], [1.62921075E12, 3893.5000000000005], [1.62921058E12, 1270.8400000000006]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62921084E12, 48.0], [1.62921067E12, 248.0], [1.6292111E12, 186374.0], [1.62921093E12, 9981.799999999983], [1.62921076E12, 74.34999999999991], [1.62921026E12, 180137.0], [1.62921085E12, 90.0], [1.62921068E12, 793.7999999999997], [1.62921051E12, 60112.0], [1.62921111E12, 186496.0], [1.62921094E12, 8681.0], [1.62921077E12, 63.0], [1.62921103E12, 180052.0], [1.62921086E12, 444.0], [1.62921069E12, 1723.75], [1.62921027E12, 57.799999999999955], [1.62921112E12, 182648.0], [1.62921095E12, 4396.5], [1.62921078E12, 40.0], [1.62921044E12, 180145.0], [1.62921087E12, 1964.2500000000002], [1.6292107E12, 2339.0], [1.62921096E12, 180024.0], [1.62921079E12, 25.0], [1.62921062E12, 180149.0], [1.62921045E12, 180044.0], [1.62921088E12, 3228.649999999999], [1.62921071E12, 3711.499999999999], [1.6292108E12, 58.39999999999969], [1.62921063E12, 120106.9], [1.6292102E12, 120205.0], [1.62921106E12, 182311.0], [1.62921089E12, 4643.0], [1.62921072E12, 3512.999999999999], [1.62921081E12, 26.0], [1.62921064E12, 127.89999999999998], [1.6292109E12, 6788.0], [1.62921073E12, 5487.000000000001], [1.62921014E12, 60115.0], [1.62921065E12, 87.0], [1.62921108E12, 182713.0], [1.62921091E12, 10209.599999999997], [1.62921074E12, 8363.6], [1.62921057E12, 302.4], [1.629211E12, 122430.0], [1.62921083E12, 83.0], [1.62921066E12, 119.0], [1.62921092E12, 11984.199999999999], [1.62921075E12, 3092.9], [1.62921058E12, 889.2]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62921112E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 13.0, "minX": 1.0, "maxY": 180075.0, "series": [{"data": [[2.0, 33334.5], [3.0, 2800.5], [4.0, 180039.0], [5.0, 180075.0], [6.0, 41.5], [7.0, 167.0], [8.0, 120133.0], [9.0, 17.0], [10.0, 2675.0], [11.0, 24.0], [13.0, 3221.0], [14.0, 5056.0], [15.0, 24.0], [16.0, 120107.5], [17.0, 17.0], [18.0, 26.5], [19.0, 20.0], [20.0, 65.0], [23.0, 1085.0], [24.0, 44.5], [26.0, 2450.5], [27.0, 22.0], [28.0, 129.0], [31.0, 25.0], [33.0, 3572.5], [32.0, 13.0], [34.0, 17.0], [35.0, 1449.0], [37.0, 13.0], [38.0, 256.0], [40.0, 16.0], [41.0, 13.0], [45.0, 98.0], [44.0, 7194.0], [46.0, 15.0], [48.0, 4546.5], [49.0, 3904.0], [50.0, 51.5], [51.0, 4994.5], [52.0, 74.0], [53.0, 273.0], [55.0, 1557.0], [54.0, 1292.0], [56.0, 15.0], [58.0, 101.0], [59.0, 359.5], [61.0, 15.0], [60.0, 2846.5], [63.0, 66.0], [64.0, 52.0], [67.0, 72.0], [65.0, 429.0], [66.0, 4155.0], [69.0, 46.0], [71.0, 67.0], [70.0, 1099.0], [75.0, 86.0], [74.0, 795.0], [79.0, 285.5], [77.0, 33.0], [78.0, 8283.0], [83.0, 75.0], [81.0, 5970.0], [82.0, 3152.5], [85.0, 51.0], [87.0, 613.5], [88.0, 341.5], [89.0, 60.0], [91.0, 1406.0], [92.0, 2678.5], [95.0, 61.0], [93.0, 402.5], [96.0, 400.5], [97.0, 426.0], [100.0, 139.0], [101.0, 50.0], [102.0, 1870.5], [106.0, 52.0], [104.0, 15.0], [109.0, 66.0], [108.0, 1293.0], [111.0, 1379.0], [113.0, 58.0], [114.0, 1292.5], [112.0, 34.0], [115.0, 520.0], [117.0, 41.5], [118.0, 57.0], [119.0, 567.0], [116.0, 25.0], [123.0, 67.0], [122.0, 1592.5], [121.0, 375.0], [120.0, 26.0], [127.0, 583.0], [124.0, 57.0], [126.0, 308.0], [125.0, 26.0], [130.0, 66.5], [135.0, 720.5], [128.0, 364.5], [132.0, 241.0], [133.0, 4107.0], [134.0, 33.5], [131.0, 26.0], [136.0, 62.0], [137.0, 58.0], [139.0, 63.0], [140.0, 1401.0], [141.0, 55.0], [138.0, 29.0], [150.0, 794.0], [146.0, 77.0], [144.0, 110.0], [148.0, 94.0], [145.0, 103.0], [149.0, 115.0], [151.0, 537.0], [147.0, 3752.0], [154.0, 993.5], [157.0, 179.0], [159.0, 298.0], [156.0, 369.0], [152.0, 1274.5], [153.0, 42.0], [158.0, 1163.0], [164.0, 87.0], [160.0, 140.5], [163.0, 207.5], [161.0, 349.0], [167.0, 320.0], [165.0, 696.0], [166.0, 533.5], [162.0, 117.5], [173.0, 308.0], [172.0, 279.0], [171.0, 215.5], [170.0, 480.0], [168.0, 55.0], [175.0, 165.0], [169.0, 267.0], [181.0, 1219.0], [182.0, 71.5], [180.0, 420.5], [179.0, 1663.0], [190.0, 1901.0], [185.0, 2928.0], [189.0, 5963.0], [192.0, 1047.5], [193.0, 1719.0], [195.0, 4329.0], [196.0, 1379.5], [197.0, 6805.0], [204.0, 1200.0], [205.0, 3806.5], [207.0, 1740.0], [202.0, 1922.0], [206.0, 5781.0], [210.0, 1716.5], [214.0, 7830.0], [212.0, 6452.5], [218.0, 2072.0], [221.0, 7359.0], [227.0, 3854.0], [234.0, 1996.5], [245.0, 6752.0], [281.0, 2423.0], [276.0, 2441.5], [283.0, 2402.0], [278.0, 5951.5], [274.0, 595.5], [294.0, 4325.5], [293.0, 6820.0], [307.0, 1947.0], [335.0, 2429.0], [330.0, 7384.5], [343.0, 1516.0], [342.0, 2699.5], [370.0, 3420.5], [373.0, 4472.0], [443.0, 2685.0], [432.0, 6507.5], [450.0, 3884.5], [853.0, 4434.0], [1.0, 151227.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 853.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 13.0, "minX": 1.0, "maxY": 180074.0, "series": [{"data": [[2.0, 33036.5], [3.0, 2800.5], [4.0, 180039.0], [5.0, 180074.0], [6.0, 41.5], [7.0, 167.0], [8.0, 120133.0], [9.0, 17.0], [10.0, 2675.0], [11.0, 24.0], [13.0, 3221.0], [14.0, 5056.0], [15.0, 24.0], [16.0, 120107.5], [17.0, 16.5], [18.0, 26.5], [19.0, 20.0], [20.0, 62.0], [23.0, 1067.0], [24.0, 43.5], [26.0, 2450.5], [27.0, 22.0], [28.0, 128.5], [31.0, 24.5], [33.0, 3520.0], [32.0, 13.0], [34.0, 17.0], [35.0, 1279.0], [37.0, 13.0], [38.0, 256.0], [40.0, 16.0], [41.0, 13.0], [45.0, 96.0], [44.0, 7194.0], [46.0, 15.0], [48.0, 4545.5], [49.0, 3740.0], [50.0, 51.0], [51.0, 4960.5], [52.0, 73.5], [53.0, 273.0], [55.0, 1536.0], [54.0, 1288.0], [56.0, 15.0], [58.0, 101.0], [59.0, 359.5], [61.0, 15.0], [60.0, 2804.5], [63.0, 65.0], [64.0, 52.0], [67.0, 72.0], [65.0, 423.0], [66.0, 4155.0], [69.0, 46.0], [71.0, 67.0], [70.0, 1098.0], [75.0, 85.0], [74.0, 786.5], [79.0, 285.5], [77.0, 32.0], [78.0, 7681.5], [83.0, 73.0], [81.0, 5970.0], [82.0, 3152.5], [85.0, 50.0], [87.0, 613.5], [88.0, 341.0], [89.0, 59.0], [91.0, 1403.0], [92.0, 2678.5], [95.0, 60.0], [93.0, 285.5], [96.0, 400.5], [97.0, 425.5], [100.0, 136.5], [101.0, 50.0], [102.0, 1781.0], [106.0, 51.0], [104.0, 15.0], [109.0, 65.0], [108.0, 1286.5], [111.0, 1379.0], [113.0, 57.0], [114.0, 1277.5], [112.0, 34.0], [115.0, 520.0], [117.0, 40.5], [118.0, 56.0], [119.0, 567.0], [116.0, 25.0], [123.0, 66.0], [122.0, 1584.5], [121.0, 375.0], [120.0, 25.0], [127.0, 567.0], [124.0, 56.0], [126.0, 308.0], [125.0, 25.0], [130.0, 65.5], [135.0, 720.0], [128.0, 364.0], [132.0, 241.0], [133.0, 4062.0], [134.0, 33.0], [131.0, 26.0], [136.0, 59.0], [137.0, 57.0], [139.0, 63.0], [140.0, 1395.5], [141.0, 53.0], [138.0, 28.5], [150.0, 786.0], [146.0, 76.0], [144.0, 109.0], [148.0, 93.0], [145.0, 101.0], [149.0, 115.0], [151.0, 537.0], [147.0, 3752.0], [154.0, 993.5], [157.0, 179.0], [159.0, 298.0], [156.0, 361.0], [152.0, 959.5], [153.0, 41.0], [158.0, 1160.5], [164.0, 86.0], [160.0, 139.0], [163.0, 207.0], [161.0, 348.0], [167.0, 320.0], [165.0, 692.5], [166.0, 526.5], [162.0, 117.5], [173.0, 307.0], [172.0, 279.0], [171.0, 215.0], [170.0, 476.0], [168.0, 54.0], [175.0, 164.0], [169.0, 267.0], [181.0, 1215.0], [182.0, 71.0], [180.0, 416.5], [179.0, 1640.0], [190.0, 1870.0], [185.0, 2924.0], [189.0, 5963.0], [192.0, 1047.5], [193.0, 1692.0], [195.0, 4251.0], [196.0, 1379.5], [197.0, 6745.0], [204.0, 1179.0], [205.0, 3783.5], [207.0, 1712.0], [202.0, 1856.5], [206.0, 5332.5], [210.0, 1640.5], [214.0, 7829.5], [212.0, 6452.5], [218.0, 2064.0], [221.0, 7345.0], [227.0, 3832.0], [234.0, 1994.0], [245.0, 6752.0], [281.0, 2423.0], [276.0, 2397.5], [283.0, 2402.0], [278.0, 5945.0], [274.0, 592.0], [294.0, 4298.5], [293.0, 6820.0], [307.0, 1928.0], [335.0, 2426.0], [330.0, 7337.5], [343.0, 1516.0], [342.0, 2698.5], [370.0, 3417.5], [373.0, 4472.0], [443.0, 2685.0], [432.0, 6500.5], [450.0, 3884.5], [853.0, 4434.0], [1.0, 151227.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 853.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62921008E12, "maxY": 172.4, "series": [{"data": [[1.62921008E12, 2.0], [1.62921071E12, 163.5], [1.62921084E12, 138.6], [1.62921067E12, 162.0], [1.6292108E12, 9.2], [1.62921063E12, 15.0], [1.62921093E12, 139.6], [1.62921076E12, 126.8], [1.62921089E12, 157.5], [1.62921072E12, 166.9], [1.62921026E12, 5.2], [1.62921085E12, 168.4], [1.62921068E12, 169.4], [1.62921051E12, 3.2], [1.62921081E12, 21.4], [1.62921064E12, 72.1], [1.62921094E12, 122.9], [1.62921077E12, 95.5], [1.6292109E12, 167.6], [1.62921073E12, 138.0], [1.62921086E12, 172.4], [1.62921069E12, 167.0], [1.62921027E12, 13.8], [1.62921065E12, 104.9], [1.62921095E12, 52.1], [1.62921078E12, 62.2], [1.62921044E12, 0.1], [1.62921091E12, 132.0], [1.62921074E12, 107.8], [1.62921057E12, 25.3], [1.62921087E12, 161.5], [1.6292107E12, 140.5], [1.62921083E12, 54.1], [1.62921066E12, 137.6], [1.62921079E12, 28.9], [1.62921045E12, 0.8], [1.62921092E12, 109.2], [1.62921075E12, 111.6], [1.62921058E12, 71.4], [1.62921088E12, 163.1]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62921095E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62921014E12, "maxY": 167.4, "series": [{"data": [[1.62921084E12, 138.4], [1.62921067E12, 159.0], [1.6292111E12, 0.2], [1.62921093E12, 163.5], [1.62921076E12, 127.2], [1.62921026E12, 6.9], [1.62921085E12, 167.4], [1.62921068E12, 158.7], [1.62921051E12, 0.8], [1.62921111E12, 0.1], [1.62921094E12, 158.7], [1.62921077E12, 95.8], [1.62921103E12, 0.1], [1.62921086E12, 167.1], [1.62921069E12, 161.4], [1.62921027E12, 13.5], [1.62921112E12, 0.1], [1.62921095E12, 91.4], [1.62921078E12, 62.0], [1.62921044E12, 0.1], [1.62921087E12, 137.0], [1.6292107E12, 145.9], [1.62921096E12, 0.1], [1.62921079E12, 29.3], [1.62921062E12, 0.1], [1.62921045E12, 0.4], [1.62921088E12, 152.2], [1.62921071E12, 148.1], [1.6292108E12, 9.1], [1.62921063E12, 27.3], [1.6292102E12, 0.1], [1.62921106E12, 0.1], [1.62921089E12, 144.5], [1.62921072E12, 157.7], [1.62921081E12, 21.5], [1.62921064E12, 72.1], [1.6292109E12, 137.9], [1.62921073E12, 116.5], [1.62921014E12, 0.1], [1.62921065E12, 104.5], [1.62921108E12, 0.1], [1.62921091E12, 117.7], [1.62921074E12, 135.5], [1.62921057E12, 14.3], [1.629211E12, 0.2], [1.62921083E12, 53.9], [1.62921066E12, 136.6], [1.62921092E12, 109.2], [1.62921075E12, 145.0], [1.62921058E12, 71.7]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.62921112E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62921014E12, "maxY": 167.4, "series": [{"data": [[1.62921084E12, 138.4], [1.62921067E12, 159.0], [1.6292111E12, 0.2], [1.62921093E12, 163.5], [1.62921076E12, 127.2], [1.62921026E12, 6.9], [1.62921085E12, 167.4], [1.62921068E12, 158.7], [1.62921051E12, 0.8], [1.62921111E12, 0.1], [1.62921094E12, 158.7], [1.62921077E12, 95.8], [1.62921103E12, 0.1], [1.62921086E12, 167.1], [1.62921069E12, 161.4], [1.62921027E12, 13.5], [1.62921112E12, 0.1], [1.62921095E12, 91.4], [1.62921078E12, 62.0], [1.62921044E12, 0.1], [1.62921087E12, 137.0], [1.6292107E12, 145.9], [1.62921096E12, 0.1], [1.62921079E12, 29.3], [1.62921062E12, 0.1], [1.62921045E12, 0.4], [1.62921088E12, 152.2], [1.62921071E12, 148.1], [1.6292108E12, 9.1], [1.62921063E12, 27.3], [1.6292102E12, 0.1], [1.62921106E12, 0.1], [1.62921089E12, 144.5], [1.62921072E12, 157.7], [1.62921081E12, 21.5], [1.62921064E12, 72.1], [1.6292109E12, 137.9], [1.62921073E12, 116.5], [1.62921014E12, 0.1], [1.62921065E12, 104.5], [1.62921108E12, 0.1], [1.62921091E12, 117.7], [1.62921074E12, 135.5], [1.62921057E12, 14.3], [1.629211E12, 0.2], [1.62921083E12, 53.9], [1.62921066E12, 136.6], [1.62921092E12, 109.2], [1.62921075E12, 145.0], [1.62921058E12, 71.7]], "isOverall": false, "label": "Sunstar Search-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62921112E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62921014E12, "maxY": 167.4, "series": [{"data": [[1.62921084E12, 138.4], [1.62921067E12, 159.0], [1.6292111E12, 0.2], [1.62921093E12, 163.5], [1.62921076E12, 127.2], [1.62921026E12, 6.9], [1.62921085E12, 167.4], [1.62921068E12, 158.7], [1.62921051E12, 0.8], [1.62921111E12, 0.1], [1.62921094E12, 158.7], [1.62921077E12, 95.8], [1.62921103E12, 0.1], [1.62921086E12, 167.1], [1.62921069E12, 161.4], [1.62921027E12, 13.5], [1.62921112E12, 0.1], [1.62921095E12, 91.4], [1.62921078E12, 62.0], [1.62921044E12, 0.1], [1.62921087E12, 137.0], [1.6292107E12, 145.9], [1.62921096E12, 0.1], [1.62921079E12, 29.3], [1.62921062E12, 0.1], [1.62921045E12, 0.4], [1.62921088E12, 152.2], [1.62921071E12, 148.1], [1.6292108E12, 9.1], [1.62921063E12, 27.3], [1.6292102E12, 0.1], [1.62921106E12, 0.1], [1.62921089E12, 144.5], [1.62921072E12, 157.7], [1.62921081E12, 21.5], [1.62921064E12, 72.1], [1.6292109E12, 137.9], [1.62921073E12, 116.5], [1.62921014E12, 0.1], [1.62921065E12, 104.5], [1.62921108E12, 0.1], [1.62921091E12, 117.7], [1.62921074E12, 135.5], [1.62921057E12, 14.3], [1.629211E12, 0.2], [1.62921083E12, 53.9], [1.62921066E12, 136.6], [1.62921092E12, 109.2], [1.62921075E12, 145.0], [1.62921058E12, 71.7]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.62921112E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

